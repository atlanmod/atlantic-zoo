[Expression|+resolveBoxing:Boolean; +resolveUnboxing:Boolean],
[ImportDeclaration|+onDemand:Boolean; +static:Boolean],
[MethodRefParameter|+varargs:Boolean],
[Modifier|+abstract:Boolean; +final:Boolean; +native:Boolean; +none:Boolean; +private:Boolean; +protected:Boolean; +public:Boolean; +static:Boolean; +strictfp:Boolean; +synchronized:Boolean; +transient:Boolean; +volatile:Boolean],
[TagElement|+tagName:String; +nested:Boolean],
[TextElement|+text:String],
[VariableDeclaration|+extraDimensions:Integer],
[AbstractTypeDeclaration|+localTypeDeclaration:Boolean; +memberTypeDeclaration:Boolean; +packageMemberTypeDeclaration:Boolean],
[MethodDeclaration|+extraDimensions:Integer; +constructor:Boolean; +varargs:Boolean],
[TypeDeclaration|+interface:Boolean],
[Assignment|+operator:AssignementOperatorKind],
[BooleanLiteral|+booleanValue:Boolean],
[CharacterLiteral|+charValue:Character; +escapedValue:String],
[InfixExpression|+operator:InfixExpressionOperatorKind],
[Name|+fullyQualifiedName:String],
[NumberLiteral|+token:String],
[PostfixExpression|+operator:PostfixExpresssionOperatorKind],
[PrefixExpression|+operator:PrefixExpresssionOperatorKind],
[StringLiteral|+escapedValue:String; +literalValue:String],
[SwitchCase|+default:Boolean],
[ArrayType|+dimensions:Integer],
[PrimitiveType|+code:String],
[WildcardType|+upperBound:Boolean],
[SingleVariableDeclaration|+varargs:Boolean],
[SimpleName|+identifier:String; +declaration:Boolean],
[AST]++1-root 1>[ASTNode],
[AnonymousClassDeclaration]++1-bodyDeclarations *>[BodyDeclaration],
[BodyDeclaration]++1-modifiers *>[ExtendedModifier],
[BodyDeclaration]++1-javadoc 1>[Javadoc],
[CatchClause]++1-body 1>[Block],
[CatchClause]++1-exception 1>[SingleVariableDeclaration],
[Comment]1-alternateRoot 1>[ASTNode],
[CompilationUnit]++1-comments *>[Comment],
[CompilationUnit]++1-package 1>[PackageDeclaration],
[CompilationUnit]++1-imports *>[ImportDeclaration],
[CompilationUnit]++1-types *>[AbstractTypeDeclaration],
[ImportDeclaration]++1-name 1>[Name],
[MemberRef]++1-name 1>[SimpleName],
[MemberRef]++1-qualifier 1>[Name],
[MemberValuePair]++1-name 1>[SimpleName],
[MemberValuePair]++1-value 1>[Expression],
[MethodRef]++1-name 1>[SimpleName],
[MethodRef]++1-qualifier 1>[Name],
[MethodRef]++1-parameters *>[MethodRefParameter],
[MethodRefParameter]++1-name 1>[SimpleName],
[MethodRefParameter]++1-type 1>[Type],
[PackageDeclaration]++1-annotations *>[Annotation],
[PackageDeclaration]++1-javadoc 1>[Javadoc],
[PackageDeclaration]++1-name 1>[Name],
[TagElement]++1-fragments *>[ASTNode],
[TypeParameter]++1-name 1>[SimpleName],
[TypeParameter]++1-typeBounds *>[Type],
[VariableDeclaration]++1-initializer 1>[Expression],
[VariableDeclaration]++1-name 1>[SimpleName],
[AbstractTypeDeclaration]++1-bodyDeclarations *>[BodyDeclaration],
[AbstractTypeDeclaration]++1-name 1>[SimpleName],
[AnnotationTypeMemberDeclaration]++1-default 1>[Expression],
[AnnotationTypeMemberDeclaration]++1-name 1>[SimpleName],
[AnnotationTypeMemberDeclaration]++1-type 1>[Type],
[EnumConstantDeclaration]++1-arguments *>[Expression],
[EnumConstantDeclaration]++1-anonymousClassDeclaration 1>[AnonymousClassDeclaration],
[EnumConstantDeclaration]++1-name 1>[SimpleName],
[FieldDeclaration]++1-fragments *>[VariableDeclarationFragment],
[FieldDeclaration]++1-type 1>[Type],
[Initializer]++1-body 1>[Block],
[MethodDeclaration]++1-body 1>[Block],
[MethodDeclaration]++1-name 1>[SimpleName],
[MethodDeclaration]++1-returnType 1>[Type],
[MethodDeclaration]++1-parameters *>[SingleVariableDeclaration],
[MethodDeclaration]++1-thrownExceptions *>[Name],
[MethodDeclaration]++1-typeParameters *>[TypeParameter],
[EnumDeclaration]++1-superInterfaceTypes *>[Type],
[EnumDeclaration]++1-enumConstants *>[EnumConstantDeclaration],
[TypeDeclaration]++1-superclassType 1>[Type],
[TypeDeclaration]++1-superInterfaceTypes *>[Type],
[TypeDeclaration]++1-typeParameters *>[TypeParameter],
[Javadoc]++1-tags *>[TagElement],
[Annotation]++1-typeName 1>[Name],
[ArrayAccess]++1-array 1>[Expression],
[ArrayAccess]++1-index 1>[Expression],
[ArrayCreation]++1-dimensions *>[Expression],
[ArrayCreation]++1-initializer 1>[ArrayInitializer],
[ArrayCreation]++1-type 1>[ArrayType],
[ArrayInitializer]++1-expressions *>[Expression],
[Assignment]++1-leftHandSide 1>[Expression],
[Assignment]++1-rightHandSide 1>[Expression],
[CastExpression]++1-expression 1>[Expression],
[CastExpression]++1-type 1>[Type],
[ClassInstanceCreation]++1-arguments *>[Expression],
[ClassInstanceCreation]++1-anonymousClassDeclaration 1>[AnonymousClassDeclaration],
[ClassInstanceCreation]++1-expression 1>[Expression],
[ClassInstanceCreation]++1-type 1>[Type],
[ClassInstanceCreation]++1-typeArguments *>[Type],
[ConditionalExpression]++1-elseExpression 1>[Expression],
[ConditionalExpression]++1-expression 1>[Expression],
[ConditionalExpression]++1-thenExpression 1>[Expression],
[FieldAccess]++1-expression 1>[Expression],
[FieldAccess]++1-name 1>[SimpleName],
[InfixExpression]++1-extendedOperands *>[Expression],
[InfixExpression]++1-leftOperand 1>[Expression],
[InfixExpression]++1-rightOperand 1>[Expression],
[InstanceofExpression]++1-leftOperand 1>[Expression],
[InstanceofExpression]++1-rightOperand 1>[Type],
[MethodInvocation]++1-arguments *>[Expression],
[MethodInvocation]++1-expression 1>[Expression],
[MethodInvocation]++1-name 1>[SimpleName],
[MethodInvocation]++1-typeArguments *>[Type],
[ParenthesizedExpression]++1-expression 1>[Expression],
[PostfixExpression]++1-operand 1>[Expression],
[PrefixExpression]++1-operand 1>[Expression],
[SuperFieldAccess]++1-name 1>[SimpleName],
[SuperFieldAccess]++1-qualifier 1>[Name],
[SuperMethodInvocation]++1-arguments *>[Expression],
[SuperMethodInvocation]++1-name 1>[Name],
[SuperMethodInvocation]++1-qualifier 1>[Name],
[SuperMethodInvocation]++1-typeArguments *>[Type],
[ThisExpression]++1-qualifier 1>[Name],
[TypeLiteral]++1-type 1>[Type],
[VariableDeclarationExpression]++1-fragments *>[VariableDeclarationFragment],
[VariableDeclarationExpression]++1-modifiers *>[ExtendedModifier],
[VariableDeclarationExpression]++1-type 1>[Type],
[AssertStatement]++1-expression 1>[Expression],
[AssertStatement]++1-message 1>[Expression],
[Block]++1-statements *>[Statement],
[BreakStatement]++1-label 1>[SimpleName],
[ConstructorInvocation]++1-arguments *>[Expression],
[ConstructorInvocation]++1-typeArguments *>[Type],
[ContinueStatement]++1-label 1>[SimpleName],
[DoStatement]++1-body 1>[Statement],
[DoStatement]++1-expression 1>[Expression],
[EnhancedForStatement]++1-body 1>[Statement],
[EnhancedForStatement]++1-expression 1>[Expression],
[EnhancedForStatement]++1-parameter 1>[SingleVariableDeclaration],
[ExpressionStatement]++1-expression 1>[Expression],
[ForStatement]++1-body 1>[Statement],
[ForStatement]++1-expression 1>[Expression],
[ForStatement]++1-initializers *>[Expression],
[ForStatement]++1-updaters *>[Expression],
[IfStatement]++1-elseStatement 1>[Statement],
[IfStatement]++1-expression 1>[Expression],
[IfStatement]++1-thenStatement 1>[Statement],
[LabeledStatement]++1-body 1>[Statement],
[LabeledStatement]++1-label 1>[SimpleName],
[ReturnStatement]++1-expression 1>[Expression],
[SuperConstructorInvocation]++1-arguments *>[Expression],
[SuperConstructorInvocation]++1-expression 1>[Expression],
[SuperConstructorInvocation]++1-typeArguments *>[Type],
[SwitchCase]++1-expression 1>[Expression],
[SwitchStatement]++1-expression 1>[Expression],
[SwitchStatement]++1-statements *>[Statement],
[SynchronizedStatement]++1-body 1>[Block],
[SynchronizedStatement]++1-expression 1>[Expression],
[ThrowStatement]++1-expression 1>[Expression],
[TryStatement]++1-catchClauses *>[CatchClause],
[TryStatement]++1-body 1>[Block],
[TryStatement]++1-finally 1>[Block],
[TypeDeclarationStatement]++1-declaration 1>[AbstractTypeDeclaration],
[VariableDeclarationStatement]++1-fragments *>[VariableDeclarationFragment],
[VariableDeclarationStatement]++1-modifiers *>[ExtendedModifier],
[VariableDeclarationStatement]++1-type 1>[Type],
[WhileStatement]++1-body 1>[Statement],
[WhileStatement]++1-expression 1>[Expression],
[ArrayType]++1-componentType 1>[Type],
[ArrayType]++1-elementType 1>[Type],
[ParameterizedType]++1-type 1>[Type],
[ParameterizedType]++1-typeArguments *>[Type],
[QualifiedType]++1-name 1>[SimpleName],
[QualifiedType]++1-qualifier 1>[Type],
[SimpleType]++1-name 1>[Name],
[WildcardType]++1-bound 1>[Type],
[SingleVariableDeclaration]++1-type 1>[Type],
[SingleVariableDeclaration]++1-modifiers *>[ExtendedModifier],
[QualifiedName]++1-name 1>[SimpleName],
[QualifiedName]++1-qualifier 1>[Name],
[NormalAnnotation]++1-values *>[MemberValuePair],
[SingleMemberAnnotation]++1-value 1>[Expression],
[enumeration;AssignementOperatorKind|RIGHT_SHIFT_SIGNED_ASSIGN; BIT_XOR_ASSIGN; TIMES_ASSIGN; LEFT_SHIFT_ASSIGN; MINUS_ASSIGN; BIT_OR_ASSIGN; PLUS_ASSIGN; ASSIGN; RIGHT_SHIFT_UNSIGNED_ASSIGN; REMAINDER_ASSIGN; DIVIDE_ASSIGN; BIT_AND_ASSIGN],
[enumeration;InfixExpressionOperatorKind|GREATER_EQUALS; OR; RIGHT_SHIFT_SIGNED; MINUS; XOR; LESS_EQUALS; EQUALS; NOT_EQUALS; AND; PLUS; GREATER; CONDITIONAL_OR; REMAINDER; LESS; LEFT_SHIFT; RIGHT_SHIFT_UNSIGNED; CONDITIONAL_AND; TIMES; DIVIDE],
[enumeration;PostfixExpresssionOperatorKind|INCREMENT; DECREMENT],
[enumeration;PrefixExpresssionOperatorKind|MINUS; NOT; DECREMENT; COMPLEMENT; INCREMENT; PLUS],
[ASTNode]^[AnonymousClassDeclaration],
[ASTNode]^[BodyDeclaration],
[ASTNode]^[CatchClause],
[ASTNode]^[Comment],
[ASTNode]^[CompilationUnit],
[ASTNode]^[Expression],
[ASTNode]^[ImportDeclaration],
[ASTNode]^[MemberRef],
[ASTNode]^[MemberValuePair],
[ASTNode]^[MethodRef],
[ASTNode]^[MethodRefParameter],
[ASTNode]^[Modifier],
[ExtendedModifier]^[Modifier],
[ASTNode]^[PackageDeclaration],
[ASTNode]^[Statement],
[ASTNode]^[TagElement],
[ASTNode]^[TextElement],
[ASTNode]^[Type],
[ASTNode]^[TypeParameter],
[ASTNode]^[VariableDeclaration],
[BodyDeclaration]^[AbstractTypeDeclaration],
[BodyDeclaration]^[AnnotationTypeMemberDeclaration],
[BodyDeclaration]^[EnumConstantDeclaration],
[BodyDeclaration]^[FieldDeclaration],
[BodyDeclaration]^[Initializer],
[BodyDeclaration]^[MethodDeclaration],
[AbstractTypeDeclaration]^[AnnotationTypeDeclaration],
[AbstractTypeDeclaration]^[EnumDeclaration],
[AbstractTypeDeclaration]^[TypeDeclaration],
[Comment]^[BlockComment],
[Comment]^[Javadoc],
[Comment]^[LineComment],
[Expression]^[Annotation],
[ExtendedModifier]^[Annotation],
[Expression]^[ArrayAccess],
[Expression]^[ArrayCreation],
[Expression]^[ArrayInitializer],
[Expression]^[Assignment],
[Expression]^[BooleanLiteral],
[Expression]^[CastExpression],
[Expression]^[CharacterLiteral],
[Expression]^[ClassInstanceCreation],
[Expression]^[ConditionalExpression],
[Expression]^[FieldAccess],
[Expression]^[InfixExpression],
[Expression]^[InstanceofExpression],
[Expression]^[MethodInvocation],
[Expression]^[Name],
[Expression]^[NullLiteral],
[Expression]^[NumberLiteral],
[Expression]^[ParenthesizedExpression],
[Expression]^[PostfixExpression],
[Expression]^[PrefixExpression],
[Expression]^[StringLiteral],
[Expression]^[SuperFieldAccess],
[Expression]^[SuperMethodInvocation],
[Expression]^[ThisExpression],
[Expression]^[TypeLiteral],
[Expression]^[VariableDeclarationExpression],
[Statement]^[AssertStatement],
[Statement]^[Block],
[Statement]^[BreakStatement],
[Statement]^[ConstructorInvocation],
[Statement]^[ContinueStatement],
[Statement]^[DoStatement],
[Statement]^[EmptyStatement],
[Statement]^[EnhancedForStatement],
[Statement]^[ExpressionStatement],
[Statement]^[ForStatement],
[Statement]^[IfStatement],
[Statement]^[LabeledStatement],
[Statement]^[ReturnStatement],
[Statement]^[SuperConstructorInvocation],
[Statement]^[SwitchCase],
[Statement]^[SwitchStatement],
[Statement]^[SynchronizedStatement],
[Statement]^[ThrowStatement],
[Statement]^[TryStatement],
[Statement]^[TypeDeclarationStatement],
[Statement]^[VariableDeclarationStatement],
[Statement]^[WhileStatement],
[Type]^[ArrayType],
[Type]^[ParameterizedType],
[Type]^[PrimitiveType],
[Type]^[QualifiedType],
[Type]^[SimpleType],
[Type]^[WildcardType],
[VariableDeclaration]^[SingleVariableDeclaration],
[VariableDeclaration]^[VariableDeclarationFragment],
[Name]^[QualifiedName],
[Name]^[SimpleName],
[Annotation]^[MarkerAnnotation],
[Annotation]^[NormalAnnotation],
[Annotation]^[SingleMemberAnnotation]
