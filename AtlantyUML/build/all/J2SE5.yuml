[AbstractTypeDeclaration|+originalFileContent:String],
[Assignment|+operator:String],
[BodyDeclaration|+modifiers:String],
[Comment|+content:String; +isEnclosedByParent:Boolean; +isPrefixOfParent:Boolean],
[InfixExpression|+operator:String],
[ImportDeclaration|+static:Boolean],
[MethodDeclaration|+extraArrayDimensions:Integer; +constructor:Boolean; +varargs:Boolean],
[MethodRefParameter|+name:String; +isVarargs:Boolean],
[Model|+name:String],
[NamedElement|+name:String; +proxy:Boolean],
[NamedElementRef|+extraArrayDimensions:Integer],
[PostfixExpression|+operator:String],
[PrefixExpression|+operator:String],
[SingleVariableDeclaration|+modifiers:String; +isVarargs:Boolean],
[SwitchCase|+expressionInitialized:Boolean],
[TagElement|+tagName:String],
[TextElement|+text:String],
[TypeDeclaration|+isInterface:Boolean],
[ValuedNamedElement|+extraArrayDimensions:Integer],
[VariableDeclarationExpression|+modifiers:String],
[VariableDeclarationStatement|+modifiers:String],
[WildCardType|+isUpperBound:Boolean],
[AbstractTypeDeclaration]++1-bodyDeclarations *>[BodyDeclaration],
[AbstractTypeDeclaration]++1-superInterfaces *>[NamedElementRef],
[AbstractTypeDeclaration]++1-commentsAfterBody *>[Comment],
[AbstractTypeDeclaration]++1-imports *>[ImportDeclaration],
[AbstractTypeDeclaration]++1-commentsBeforeBody *>[Comment],
[Annotation]++1-type 1>[NamedElementRef],
[Annotation]++1-values *>[AnnotationMemberValuePair],
[AnnotationMemberValuePair]++1-member 1>[NamedElementRef],
[AnnotationMemberValuePair]++1-value 1>[Expression],
[AnnotationTypeMemberDeclaration]++1-type 1>[NamedElementRef],
[AnnotationTypeMemberDeclaration]++1-default 0..1>[Expression],
[AnonymousClassDeclaration]++1-bodyDeclarations *>[BodyDeclaration],
[ArrayAccess]++1-index 1>[Expression],
[ArrayAccess]++1-array 1>[Expression],
[ArrayCreation]++1-dimensions *>[Expression],
[ArrayCreation]++1-initializer 0..1>[ArrayInitializer],
[ArrayCreation]++1-type 1>[NamedElementRef],
[ArrayInitializer]++1-expressions *>[Expression],
[ArrayLengthAccess]++1-array 1>[Expression],
[AssertStatement]++1-message 0..1>[Expression],
[AssertStatement]++1-expression 1>[Expression],
[Assignment]++1-rightHandSide 1>[Expression],
[Assignment]++1-leftHandSide 1>[Expression],
[ASTNode]++1-comments *>[Comment],
[BodyDeclaration]++1-annotations *>[Annotation],
[Block]++1-statements *>[Statement],
[BreakStatement]++1-label 0..1>[NamedElementRef],
[CastExpression]++1-type 1>[NamedElementRef],
[CastExpression]++1-expression 1>[Expression],
[CatchClause]++1-exception 1>[SingleVariableDeclaration],
[CatchClause]++1-body 1>[Block],
[ClassInstanceCreation]++1-arguments *>[Expression],
[ClassInstanceCreation]++1-type 1>[NamedElementRef],
[ClassInstanceCreation]++1-expression 0..1>[Expression],
[ClassInstanceCreation]++1-anonymousClassDeclaration 0..1>[AnonymousClassDeclaration],
[ConditionalExpression]++1-elseExpression 1>[Expression],
[ConditionalExpression]++1-thenExpression 1>[Expression],
[ConditionalExpression]++1-expression 1>[Expression],
[ContinueStatement]++1-label 0..1>[NamedElementRef],
[ConstructorInvocation]++1-arguments *>[Expression],
[DoStatement]++1-expression 1>[Expression],
[DoStatement]++1-body 1>[Statement],
[EnhancedForStatement]++1-parameter 1>[SingleVariableDeclaration],
[EnhancedForStatement]++1-expression 1>[Expression],
[EnhancedForStatement]++1-body 1>[Statement],
[EnumConstantDeclaration]++1-arguments *>[Expression],
[EnumConstantDeclaration]++1-anonymousClassDeclaration 0..1>[AnonymousClassDeclaration],
[EnumDeclaration]++1-enumConstants *>[EnumConstantDeclaration],
[ExpressionStatement]++1-expression 1>[Expression],
[FieldAccess]++1-field 1>[NamedElementRef],
[FieldAccess]++1-expression 1>[Expression],
[FieldDeclaration]++1-type 1>[NamedElementRef],
[ForStatement]++1-body 1>[Statement],
[ForStatement]++1-expression 0..1>[Expression],
[ForStatement]++1-initializers *>[Expression],
[ForStatement]++1-updaters *>[Expression],
[InfixExpression]++1-extendedOperands *>[Expression],
[InfixExpression]++1-rightOperand 1>[Expression],
[InfixExpression]++1-leftOperand 1>[Expression],
[IfStatement]++1-expression 1>[Expression],
[IfStatement]++1-elseStatement 0..1>[Statement],
[IfStatement]++1-thenStatement 1>[Statement],
[ImportDeclaration]++1-importedElement 1>[NamedElementRef],
[Initializer]++1-body 1>[Block],
[InstanceofExpression]++1-leftOperand 1>[Expression],
[InstanceofExpression]++1-rightOperand 1>[NamedElementRef],
[Javadoc]++1-tags *>[TagElement],
[LabeledStatement]++1-body 1>[Statement],
[MemberRef]++1-qualifier 0..1>[NamedElementRef],
[MemberRef]++1-member 1>[NamedElementRef],
[MethodDeclaration]++1-body 0..1>[Block],
[MethodDeclaration]++1-parameters *>[SingleVariableDeclaration],
[MethodDeclaration]++1-typeParameters *>[TypeParameter],
[MethodDeclaration]++1-thrownExceptions *>[NamedElementRef],
[MethodDeclaration]++1-returnType 1>[NamedElementRef],
[MethodInvocation]++1-method 1>[NamedElementRef],
[MethodInvocation]++1-arguments *>[Expression],
[MethodInvocation]++1-expression 0..1>[Expression],
[MethodRef]++1-qualifier 0..1>[NamedElementRef],
[MethodRef]++1-parameters *>[MethodRefParameter],
[MethodRef]++1-method 1>[NamedElementRef],
[MethodRefParameter]++1-type 0..1>[NamedElementRef],
[Model]++model 1-ownedElements *>[PackageDeclaration],
[Model]++1-orphanTypes *>[OrphanType],
[MultipleValuedNamedElement]++1-fragments *>[SingleVariableDeclaration],
[NamedElementRef]1-element 0..1>[NamedElement],
[NamedElementRef]++1-qualifier 0..1>[NamedElementRef],
[PackageDeclaration]++package 1-ownedElements *>[AbstractTypeDeclaration],
[ParameterizedType]++1-typeArguments *>[NamedElementRef],
[ParameterizedType]++1-type 1>[NamedElementRef],
[ParenthesizedExpression]++1-expression 1>[Expression],
[PostfixExpression]++1-operand 1>[Expression],
[PrefixExpression]++1-operand 1>[Expression],
[ReturnStatement]++1-expression 0..1>[Expression],
[ThrowStatement]++1-expression 1>[Expression],
[SingleVariableDeclaration]++1-type 1>[NamedElementRef],
[SuperConstructorInvocation]++1-arguments *>[Expression],
[SuperConstructorInvocation]++1-expression 0..1>[Expression],
[SuperFieldAccess]++1-qualifier 0..1>[NamedElementRef],
[SuperFieldAccess]++1-field 1>[NamedElementRef],
[SuperMethodInvocation]++1-arguments *>[Expression],
[SuperMethodInvocation]++1-qualifier 0..1>[NamedElementRef],
[SuperMethodInvocation]++1-method 1>[NamedElementRef],
[SwitchCase]++1-expression 0..1>[Expression],
[SwitchStatement]++1-statements *>[Statement],
[SwitchStatement]++1-expression 1>[Expression],
[SynchronizedStatement]++1-body 1>[Block],
[SynchronizedStatement]++1-expression 1>[Expression],
[TagElement]++1-fragments *>[ASTNode],
[ThisExpression]++1-qualifier 0..1>[NamedElementRef],
[TryStatement]++1-finally 0..1>[Block],
[TryStatement]++1-body 1>[Block],
[TryStatement]++1-catchClauses *>[CatchClause],
[TypeDeclaration]++1-typeParameters *>[TypeParameter],
[TypeDeclaration]++1-superclass 0..1>[NamedElementRef],
[TypeDeclarationStatement]++1-declaration 1>[AbstractTypeDeclaration],
[TypeLiteral]++1-type 1>[NamedElementRef],
[TypeParameter]++1-bounds *>[NamedElementRef],
[ValuedNamedElement]++1-initializer 0..1>[Expression],
[VariableDeclarationExpression]++1-type 1>[NamedElementRef],
[VariableDeclarationStatement]++1-type 1>[NamedElementRef],
[WildCardType]++1-bound 0..1>[NamedElementRef],
[WhileStatement]++1-expression 1>[Expression],
[WhileStatement]++1-body 1>[Statement],
[BodyDeclaration]^[AbstractTypeDeclaration],
[NamedElement]^[AbstractTypeDeclaration],
[Expression]^[Annotation],
[ASTNode]^[AnnotationMemberValuePair],
[AbstractTypeDeclaration]^[AnnotationTypeDeclaration],
[BodyDeclaration]^[AnnotationTypeMemberDeclaration],
[NamedElement]^[AnnotationTypeMemberDeclaration],
[ASTNode]^[AnonymousClassDeclaration],
[Expression]^[ArrayAccess],
[Expression]^[ArrayCreation],
[Expression]^[ArrayInitializer],
[Expression]^[ArrayLengthAccess],
[Statement]^[AssertStatement],
[Expression]^[Assignment],
[ASTNode]^[BodyDeclaration],
[Statement]^[Block],
[Comment]^[BlockComment],
[Statement]^[BreakStatement],
[Expression]^[CastExpression],
[ASTNode]^[CatchClause],
[Expression]^[ClassInstanceCreation],
[ASTNode]^[Comment],
[Expression]^[ConditionalExpression],
[Statement]^[ContinueStatement],
[Statement]^[ConstructorInvocation],
[Statement]^[DoStatement],
[Statement]^[EmptyStatement],
[Statement]^[EnhancedForStatement],
[BodyDeclaration]^[EnumConstantDeclaration],
[NamedElement]^[EnumConstantDeclaration],
[AbstractTypeDeclaration]^[EnumDeclaration],
[ASTNode]^[Expression],
[Statement]^[ExpressionStatement],
[Expression]^[FieldAccess],
[BodyDeclaration]^[FieldDeclaration],
[MultipleValuedNamedElement]^[FieldDeclaration],
[Statement]^[ForStatement],
[Expression]^[InfixExpression],
[Statement]^[IfStatement],
[ASTNode]^[ImportDeclaration],
[BodyDeclaration]^[Initializer],
[Expression]^[InstanceofExpression],
[Comment]^[Javadoc],
[NamedElement]^[LabeledStatement],
[Statement]^[LabeledStatement],
[Comment]^[LineComment],
[ASTNode]^[MemberRef],
[BodyDeclaration]^[MethodDeclaration],
[NamedElement]^[MethodDeclaration],
[Expression]^[MethodInvocation],
[ASTNode]^[MethodRef],
[ASTNode]^[MethodRefParameter],
[ValuedNamedElement]^[MultipleValuedNamedElement],
[Expression]^[NamedElementRef],
[NamedElement]^[OrphanType],
[ASTNode]^[PackageDeclaration],
[NamedElement]^[PackageDeclaration],
[ASTNode]^[ParameterizedType],
[OrphanType]^[ParameterizedType],
[Expression]^[ParenthesizedExpression],
[Expression]^[PostfixExpression],
[Expression]^[PrefixExpression],
[ASTNode]^[PrimitiveType],
[OrphanType]^[PrimitiveType],
[Statement]^[ReturnStatement],
[Statement]^[ThrowStatement],
[ASTNode]^[SingleVariableDeclaration],
[ValuedNamedElement]^[SingleVariableDeclaration],
[ASTNode]^[Statement],
[Statement]^[SuperConstructorInvocation],
[Expression]^[SuperFieldAccess],
[Expression]^[SuperMethodInvocation],
[Statement]^[SwitchCase],
[Statement]^[SwitchStatement],
[Statement]^[SynchronizedStatement],
[ASTNode]^[TagElement],
[ASTNode]^[TextElement],
[Expression]^[ThisExpression],
[Statement]^[TryStatement],
[AbstractTypeDeclaration]^[TypeDeclaration],
[Statement]^[TypeDeclarationStatement],
[Expression]^[TypeLiteral],
[ASTNode]^[TypeParameter],
[NamedElement]^[TypeParameter],
[ASTNode]^[UnresolvedItem],
[NamedElement]^[UnresolvedItem],
[NamedElement]^[ValuedNamedElement],
[Expression]^[VariableDeclarationExpression],
[MultipleValuedNamedElement]^[VariableDeclarationExpression],
[ValuedNamedElement]^[VariableDeclarationExpression],
[MultipleValuedNamedElement]^[VariableDeclarationStatement],
[Statement]^[VariableDeclarationStatement],
[ValuedNamedElement]^[VariableDeclarationStatement],
[ASTNode]^[WildCardType],
[OrphanType]^[WildCardType],
[Statement]^[WhileStatement]
