[LocatedElement|+location:String; +commentsBefore:String; +commentsAfter:String],
[ACG|+metamodel:String; +startsWith:String],
[Function|+context:String; +name:String],
[Attribute|+context:String; +name:String],
[Node|+element:String; +mode:String],
[AnalyzeStat|+mode:String],
[ReportStat|+severity:Severity],
[LabelStat|+name:String],
[VariableDecl|+name:String],
[IsAExp|+type:String],
[PropertyCallExp|+name:String],
[BooleanExp|+value:Boolean],
[IntegerExp|+value:Integer],
[StringExp|+value:String],
[ACG]++acg 1-elements *>[ACGElement],
[Function]++1-parameters *>[Parameter],
[Function]++1-body 1>[Expression],
[Attribute]++1-body 1>[Expression],
[Node]++1-guard 0..1>[Expression],
[ASMNode]++1-name 1>[Expression],
[StatementBlock]++1-statements *>[Statement],
[ForEachStat]++1-iterator 1>[VariableDecl],
[ForEachStat]++1-collection 1>[Expression],
[VariableStat]++1-definition 1>[Expression],
[VariableStat]++1-name 1>[Expression],
[OperationStat]++1-context 1>[Expression],
[OperationStat]++1-name 1>[Expression],
[ConditionalStat]++1-condition 1>[Expression],
[ConditionalStat]++1-elseStatements *>[Statement],
[LetStat]++1-variable 1>[VariableDecl],
[LetStat]++1-value 1>[Expression],
[AnalyzeStat]++1-target 1>[Expression],
[ReportStat]++1-message 1>[Expression],
[FieldStat]++1-name 1>[Expression],
[FieldStat]++1-type 1>[Expression],
[ParamStat]++1-name 1>[Expression],
[ParamStat]++1-type 1>[Expression],
[LabelStat]++1-id 0..1>[Expression],
[EmitWithOperandStat]++1-operand 1>[Expression],
[EmitWithLabelRefStat]1-label 1>[LabelStat],
[VariableExp]1-variable 1>[VariableDecl],
[IfExp]++1-condition 1>[Expression],
[IfExp]++1-thenExp 1>[Expression],
[IfExp]++1-elseExp 1>[Expression],
[IsAExp]++1-source 1>[Expression],
[LetExp]++1-variable 1>[VariableDecl],
[LetExp]++1-value 1>[Expression],
[LetExp]++1-in 1>[Expression],
[PropertyCallExp]++1-source 1>[Expression],
[IteratorExp]++1-iterator 1>[VariableDecl],
[IteratorExp]++1-body 1>[Expression],
[OperationCallExp]++1-arguments *>[Expression],
[CollectionExp]++1-elements *>[Expression],
[enumeration;Severity|critic; error; warning],
[LocatedElement]^[ACG],
[LocatedElement]^[ACGElement],
[ACGElement]^[Function],
[ACGElement]^[Attribute],
[VariableDecl]^[Parameter],
[ACGElement]^[Node],
[StatementBlock]^[Node],
[Node]^[ASMNode],
[Node]^[CodeNode],
[Node]^[SimpleNode],
[LocatedElement]^[StatementBlock],
[LocatedElement]^[Statement],
[StatementBlock]^[CompoundStat],
[Statement]^[CompoundStat],
[CompoundStat]^[ForEachStat],
[CompoundStat]^[OnceStat],
[CompoundStat]^[VariableStat],
[CompoundStat]^[OperationStat],
[CompoundStat]^[ConditionalStat],
[CompoundStat]^[LetStat],
[CompoundStat]^[AnalyzeStat],
[Statement]^[ReportStat],
[Statement]^[FieldStat],
[Statement]^[ParamStat],
[Statement]^[EmitStat],
[EmitStat]^[LabelStat],
[EmitStat]^[NewStat],
[EmitStat]^[DupStat],
[EmitStat]^[DupX1Stat],
[EmitStat]^[PopStat],
[EmitStat]^[SwapStat],
[EmitStat]^[IterateStat],
[EmitStat]^[EndIterateStat],
[EmitStat]^[GetAsmStat],
[EmitStat]^[FindMEStat],
[EmitStat]^[PushTStat],
[EmitStat]^[PushFStat],
[EmitStat]^[EmitWithOperandStat],
[EmitWithOperandStat]^[PushStat],
[EmitWithOperandStat]^[PushIStat],
[EmitWithOperandStat]^[PushDStat],
[EmitWithOperandStat]^[LoadStat],
[EmitWithOperandStat]^[StoreStat],
[EmitWithOperandStat]^[CallStat],
[EmitWithOperandStat]^[PCallStat],
[EmitWithOperandStat]^[SuperCallStat],
[EmitWithOperandStat]^[GetStat],
[EmitWithOperandStat]^[SetStat],
[EmitStat]^[EmitWithLabelRefStat],
[EmitWithLabelRefStat]^[IfStat],
[EmitWithLabelRefStat]^[GotoStat],
[LocatedElement]^[VariableDecl],
[LocatedElement]^[Expression],
[Expression]^[VariableExp],
[Expression]^[SelfExp],
[Expression]^[LastExp],
[Expression]^[IfExp],
[Expression]^[IsAExp],
[Expression]^[LetExp],
[Expression]^[PropertyCallExp],
[PropertyCallExp]^[NavigationExp],
[PropertyCallExp]^[IteratorExp],
[PropertyCallExp]^[OperationCallExp],
[OperationCallExp]^[OperatorCallExp],
[Expression]^[LiteralExp],
[LiteralExp]^[OclUndefinedExp],
[LiteralExp]^[CollectionExp],
[CollectionExp]^[SequenceExp],
[LiteralExp]^[BooleanExp],
[LiteralExp]^[IntegerExp],
[LiteralExp]^[StringExp]
