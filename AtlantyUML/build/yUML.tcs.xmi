<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tcs="http://www.eclipse.org/gmt/tcs/2007/TCS">
  <tcs:ConcreteSyntax location="7:1-308:2" name="yUML" lexer="&#xD;&#xA;%options testLiterals = false;&#xD;&#xA;&#xD;&#xA;NL&#xD;&#xA;&#x9;:&#x9;(&#x9;'\r' '\n'&#xD;&#xA;&#x9;&#x9;|&#x9;'\n' '\r'&#x9;//Improbable&#xD;&#xA;&#x9;&#x9;|&#x9;'\r'&#xD;&#xA;&#x9;&#x9;|&#x9;'\n'&#xD;&#xA;&#x9;&#x9;)&#xD;&#xA;&#x9;{newline();}&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;WS&#xD;&#xA;&#x9;:&#x9;(&#x9;' '&#xD;&#xA;&#x9;&#x9;|&#x9;'\t'&#xD;&#xA;&#x9;&#x9;)&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;%protected&#xD;&#xA;DIGIT&#xD;&#xA;&#x9;:&#x9;'0'..'9'&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;%protected&#xD;&#xA;ALPHA&#xD;&#xA;&#x9;:&#x9;'a'..'z'&#xD;&#xA;&#x9;|&#x9;'A'..'Z'&#xD;&#xA;&#x9;|&#x9;'_'&#xD;&#xA;&#x9;//For Unicode compatibility (from 0000 to 00ff)&#xD;&#xA;&#x9;|&#x9;'\u00C0' .. '\u00D6'&#xD;&#xA;&#x9;|&#x9;'\u00D8' .. '\u00F6'&#xD;&#xA;&#x9;|&#x9;'\u00F8' .. '\u00FF'&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;%protected&#xD;&#xA;SNAME&#xD;&#xA;%v2&#x9;options {&#xD;&#xA;%v2&#x9;&#x9;testLiterals = true;&#xD;&#xA;%v2&#x9;}&#xD;&#xA;&#x9;:&#x9;(ALPHA) (ALPHA | DIGIT)*&#xD;&#xA;;&#xD;&#xA;&#xD;&#xA;NAME&#xD;&#xA;&#x9;:&#x9;(&#xD;&#xA;%v3&#x9;&#x9;&#x9;SNAME&#xD;&#xA;%v2&#x9;&#x9;&#x9;s:SNAME {if(s.getType() != SNAME) $setType(s.getType());}&#xD;&#xA;&#x9;&#x9;|&#x9;'&quot;'!&#xD;&#xA;&#x9;&#x9;&#x9;(&#x9;ESC&#xD;&#xA;&#x9;&#x9;&#x9;|&#x9;'\n' {newline();}&#xD;&#xA;&#x9;&#x9;&#x9;|&#x9;~('\\'|'\&quot;'|'\n')&#xD;&#xA;&#x9;&#x9;&#x9;)*&#xD;&#xA;&#x9;&#x9;&#x9;'&quot;'!&#xD;&#xA;%v3&#x9;&#x9;&#x9;{setText(ei.unescapeString(getText(), 1));}&#xD;&#xA;&#x9;&#x9;)&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;INT&#xD;&#xA;&#x9;:&#x9;(DIGIT)+&#xD;&#xA;&#x9;;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;%protected&#xD;&#xA;ESC&#xD;&#xA;&#x9;:&#x9;'\\'!&#xD;&#xA;&#x9;&#x9;(&#x9;'n' %v2{%setText(&quot;\n&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'r' %v2{%setText(&quot;\r&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'t' %v2{%setText(&quot;\t&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'b' %v2{%setText(&quot;\b&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'f' %v2{%setText(&quot;\f&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'&quot;' %v2{%setText(&quot;\&quot;&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'\'' %v2{%setText(&quot;\'&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;'\\' %v2{%setText(&quot;\\&quot;);}&#xD;&#xA;&#x9;&#x9;|&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;('0'..'3')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;options {&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;warnWhenFollowAmbig = false;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;:&#x9;('0'..'7')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;options {&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;warnWhenFollowAmbig = false;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;:&#x9;'0'..'7'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)?&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)?&#xD;&#xA;&#x9;&#x9;&#x9;|&#x9;('4'..'7')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;options {&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;warnWhenFollowAmbig = false;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;:&#x9;('0'..'7')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)?&#xD;&#xA;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;String s = %getText;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;int i;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;int ret = 0;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;String ans;&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;for (i=0; i&lt;s.length(); ++i)&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ret = ret*8 + s.charAt(i) - '0';&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;ans = String.valueOf((char) ret);&#xD;&#xA;%v2&#x9;&#x9;&#x9;&#x9;&#x9;%setText(ans);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;)&#xD;&#xA;&#x9;;&#xD;&#xA;&#x9;">
    <commentsBefore>-- @name&#x9;&#x9;yUML</commentsBefore>
    <commentsBefore>-- @version&#x9;&#x9;1.0</commentsBefore>
    <commentsBefore>-- @authors&#x9;&#x9;Cauê Avila Clasen</commentsBefore>
    <commentsBefore>-- @date&#x9;&#x9;2009/11/10</commentsBefore>
    <commentsBefore>-- @description&#x9;${description}</commentsBefore>
    <templates xsi:type="tcs:PrimitiveTemplate" location="13:2-14:21" name="identifier" typeName="String" isDefault="true" tokenName="NAME" value="%token%">
      <commentsBefore>-- BEGIN Primitive templates</commentsBefore>
      <commentsBefore>-- Specifies representation of primitive types.</commentsBefore>
      <commentsBefore>-- Only needs modification when default lexer is not satisfactory.</commentsBefore>
      <commentsBefore>-- Generally modified along with the lexer.</commentsBefore>
    </templates>
    <templates xsi:type="tcs:PrimitiveTemplate" location="16:2-18:50" name="stringSymbol" typeName="String" tokenName="STRING" value="ei.unescapeString(%token%, 1)" serializer="''' + %value%.toCString() + '''"/>
    <templates xsi:type="tcs:PrimitiveTemplate" location="20:2-21:38" name="integerSymbol" typeName="Integer" isDefault="true" tokenName="INT" value="Integer.valueOf(%token%)">
      <commentsAfter>-- END Primitive templates</commentsAfter>
      <commentsAfter>-- BEGIN Class templates</commentsAfter>
      <commentsAfter>--&#x9;&#x9;TODO: </commentsAfter>
      <commentsAfter>-- &#x9;&#x9;- Multiplicity / Navigable order doesn't matter in yUML. In fact, yUML considers both as part of the same string</commentsAfter>
      <commentsAfter>-- &#x9;&#x9;- Aggregation with &lt;></commentsAfter>
      <commentsAfter>--&#x9;&#x9;- Specify filetype?</commentsAfter>
      <commentsAfter>--&#x9;&#x9;- Problem with repeated comments </commentsAfter>
    </templates>
    <templates xsi:type="tcs:ClassTemplate" location="31:2-34:4" name="Model" isMain="true" isContext="true">
      <commentsBefore>-- END Primitive templates</commentsBefore>
      <commentsBefore>-- BEGIN Class templates</commentsBefore>
      <commentsBefore>--&#x9;&#x9;TODO: </commentsBefore>
      <commentsBefore>-- &#x9;&#x9;- Multiplicity / Navigable order doesn't matter in yUML. In fact, yUML considers both as part of the same string</commentsBefore>
      <commentsBefore>-- &#x9;&#x9;- Aggregation with &lt;></commentsBefore>
      <commentsBefore>--&#x9;&#x9;- Specify filetype?</commentsBefore>
      <commentsBefore>--&#x9;&#x9;- Problem with repeated comments </commentsBefore>
      <templateSequence location="33:4-33:67">
        <elements xsi:type="tcs:Block" location="33:4-33:67">
          <blockSequence location="33:6-33:31">
            <elements xsi:type="tcs:Property" location="33:6-33:31" name="elements">
              <propertyArgs xsi:type="tcs:SeparatorPArg" location="33:15-33:30">
                <separatorSequence location="33:27-33:30">
                  <elements xsi:type="tcs:LiteralRef" location="33:27-33:30" referredLiteral="/1"/>
                </separatorSequence>
              </propertyArgs>
            </elements>
          </blockSequence>
          <blockArgs xsi:type="tcs:IndentIncrBArg" location="33:35-33:49" value="0"/>
          <blockArgs xsi:type="tcs:StartNLBArg" location="33:51-33:66"/>
        </elements>
      </templateSequence>
    </templates>
    <templates xsi:type="tcs:ClassTemplate" location="36:2-36:33" name="ModelElement" isAbstract="true"/>
    <templates xsi:type="tcs:ClassTemplate" location="38:2-46:4" name="ClassReference">
      <commentsAfter>--&#x9;template Enumeration</commentsAfter>
      <commentsAfter>--&#x9;&#x9;:&#x9;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;&#x9;&quot;[&quot; --&quot;&lt;&lt;&quot; </commentsAfter>
      <commentsAfter>--&#x9;&#x9;&#x9;&quot;enumeration&quot; --&quot;>>&quot; </commentsAfter>
      <commentsAfter>--&#x9;&#x9;&#x9;&quot;;&quot; name </commentsAfter>
      <commentsAfter>--&#x9;&#x9;&#x9;&quot;|&quot; literals{separator = &quot;;&quot;} &quot;]&quot;</commentsAfter>
      <commentsAfter>--&#x9;&#x9;;</commentsAfter>
      <templateSequence location="40:5-45:8">
        <elements xsi:type="tcs:LiteralRef" location="40:5-40:8" referredLiteral="/0/@symbols.4"/>
        <elements xsi:type="tcs:ConditionalElement" location="40:9-41:21">
          <commentsAfter>-->></commentsAfter>
          <condition xsi:type="tcs:AndExp" location="40:10-40:31">
            <expressions xsi:type="tcs:IsDefinedExp" location="40:10-40:31" propertyName="stereotype"/>
          </condition>
          <thenSequence location="41:5-41:19">
            <commentsBefore>--&lt;&lt;</commentsBefore>
            <elements xsi:type="tcs:Property" location="41:5-41:15" name="stereotype">
              <commentsBefore>--&lt;&lt;</commentsBefore>
            </elements>
            <elements xsi:type="tcs:LiteralRef" location="41:16-41:19" referredLiteral="/0/@symbols.6"/>
          </thenSequence>
        </elements>
        <elements xsi:type="tcs:Property" location="42:4-42:81" name="class">
          <commentsBefore>-->></commentsBefore>
          <propertyArgs xsi:type="tcs:RefersToPArg" location="42:10-42:25" propertyName="name"/>
          <propertyArgs xsi:type="tcs:AutoCreatePArg" location="42:27-42:49" value="ifmissing"/>
          <propertyArgs xsi:type="tcs:CreateInPArg" location="42:51-42:80">
            <propertyName>#context</propertyName>
            <propertyName>classes</propertyName>
          </propertyArgs>
        </elements>
        <elements xsi:type="tcs:ConditionalElement" location="43:5-43:41">
          <condition xsi:type="tcs:AndExp" location="43:6-43:27">
            <expressions xsi:type="tcs:IsDefinedExp" location="43:6-43:27" propertyName="definition"/>
          </condition>
          <thenSequence location="43:30-43:40">
            <elements xsi:type="tcs:Property" location="43:30-43:40" name="definition"/>
          </thenSequence>
        </elements>
        <elements xsi:type="tcs:FunctionCall" location="44:4-44:13" calledFunction="/0/@templates.6"/>
        <elements xsi:type="tcs:LiteralRef" location="45:5-45:8" referredLiteral="/0/@symbols.5"/>
      </templateSequence>
    </templates>
    <templates xsi:type="tcs:FunctionTemplate" location="56:2-60:4" name="setColor" className="ColorableElement">
      <commentsBefore>--&#x9;template Enumeration</commentsBefore>
      <commentsBefore>--&#x9;&#x9;:&#x9;</commentsBefore>
      <commentsBefore>--&#x9;&#x9;&#x9;&quot;[&quot; --&quot;&lt;&lt;&quot; </commentsBefore>
      <commentsBefore>--&#x9;&#x9;&#x9;&quot;enumeration&quot; --&quot;>>&quot; </commentsBefore>
      <commentsBefore>--&#x9;&#x9;&#x9;&quot;;&quot; name </commentsBefore>
      <commentsBefore>--&#x9;&#x9;&#x9;&quot;|&quot; literals{separator = &quot;;&quot;} &quot;]&quot;</commentsBefore>
      <commentsBefore>--&#x9;&#x9;;</commentsBefore>
      <functionSequence location="58:4-59:28">
        <elements xsi:type="tcs:ConditionalElement" location="58:4-59:28">
          <condition xsi:type="tcs:AndExp" location="58:5-58:21">
            <expressions xsi:type="tcs:IsDefinedExp" location="58:5-58:21" propertyName="color"/>
          </condition>
          <thenSequence location="59:5-59:27">
            <elements xsi:type="tcs:LiteralRef" location="59:5-59:8" referredLiteral="/0/@symbols.2"/>
            <elements xsi:type="tcs:LiteralRef" location="59:9-59:13" referredLiteral="/2"/>
            <elements xsi:type="tcs:LiteralRef" location="59:14-59:17" referredLiteral="/0/@symbols.7"/>
            <elements xsi:type="tcs:Property" location="59:18-59:23" name="color"/>
            <elements xsi:type="tcs:LiteralRef" location="59:24-59:27" referredLiteral="/0/@symbols.3"/>
          </thenSequence>
        </elements>
      </functionSequence>
    </templates>
    <templates xsi:type="tcs:ClassTemplate" location="62:2-62:33" name="Relationship" isAbstract="true"/>
    <templates xsi:type="tcs:ClassTemplate" location="64:2-64:37" name="ColorableElement" isAbstract="true"/>
    <templates xsi:type="tcs:ClassTemplate" location="66:2-85:4" name="Association">
      <templateSequence location="68:4-84:10">
        <elements xsi:type="tcs:Property" location="68:4-68:10" name="source"/>
        <elements xsi:type="tcs:ConditionalElement" location="69:4-77:5">
          <condition xsi:type="tcs:AndExp" location="69:5-69:30">
            <expressions xsi:type="tcs:EqualsExp" location="69:5-69:30" propertyName="type">
              <value xsi:type="tcs:EnumLiteralVal" location="69:12-69:30" name="simpleAssociation"/>
            </expressions>
          </condition>
          <thenSequence location="70:5-70:28">
            <elements xsi:type="tcs:ConditionalElement" location="70:5-70:28">
              <condition xsi:type="tcs:AndExp" location="70:6-70:21">
                <expressions xsi:type="tcs:BooleanPropertyExp" location="70:6-70:21" propertyName="navigableSource"/>
              </condition>
              <thenSequence location="70:24-70:27">
                <elements xsi:type="tcs:LiteralRef" location="70:24-70:27" referredLiteral="/0/@symbols.12"/>
              </thenSequence>
            </elements>
          </thenSequence>
          <elseSequence location="72:5-76:6">
            <elements xsi:type="tcs:ConditionalElement" location="72:5-76:6">
              <condition xsi:type="tcs:AndExp" location="72:6-72:25">
                <expressions xsi:type="tcs:EqualsExp" location="72:6-72:25" propertyName="type">
                  <value xsi:type="tcs:EnumLiteralVal" location="72:13-72:25" name="aggregation"/>
                </expressions>
              </condition>
              <thenSequence location="73:6-73:9">
                <commentsAfter>--TODO: may also be &quot;&lt;>&quot;</commentsAfter>
                <elements xsi:type="tcs:LiteralRef" location="73:6-73:9" referredLiteral="/0/@symbols.15">
                  <commentsAfter>--TODO: may also be &quot;&lt;>&quot;</commentsAfter>
                </elements>
              </thenSequence>
              <elseSequence location="75:6-75:34">
                <elements xsi:type="tcs:ConditionalElement" location="75:6-75:34">
                  <condition xsi:type="tcs:AndExp" location="75:7-75:26">
                    <expressions xsi:type="tcs:EqualsExp" location="75:7-75:26" propertyName="type">
                      <value xsi:type="tcs:EnumLiteralVal" location="75:14-75:26" name="composition"/>
                    </expressions>
                  </condition>
                  <thenSequence location="75:29-75:33">
                    <elements xsi:type="tcs:LiteralRef" location="75:29-75:33" referredLiteral="/0/@symbols.14"/>
                  </thenSequence>
                </elements>
              </elseSequence>
            </elements>
          </elseSequence>
        </elements>
        <elements xsi:type="tcs:ConditionalElement" location="78:4-78:42">
          <condition xsi:type="tcs:AndExp" location="78:5-78:27">
            <expressions xsi:type="tcs:IsDefinedExp" location="78:5-78:27" propertyName="sourceLabel"/>
          </condition>
          <thenSequence location="78:30-78:41">
            <elements xsi:type="tcs:Property" location="78:30-78:41" name="sourceLabel"/>
          </thenSequence>
        </elements>
        <elements xsi:type="tcs:ConditionalElement" location="79:4-79:54">
          <condition xsi:type="tcs:AndExp" location="79:5-79:33">
            <expressions xsi:type="tcs:IsDefinedExp" location="79:5-79:33" propertyName="sourceCardinality"/>
          </condition>
          <thenSequence location="79:36-79:53">
            <elements xsi:type="tcs:Property" location="79:36-79:53" name="sourceCardinality"/>
          </thenSequence>
        </elements>
        <elements xsi:type="tcs:LiteralRef" location="80:4-80:7" referredLiteral="/0/@symbols.10"/>
        <elements xsi:type="tcs:ConditionalElement" location="81:4-81:42">
          <condition xsi:type="tcs:AndExp" location="81:5-81:27">
            <expressions xsi:type="tcs:IsDefinedExp" location="81:5-81:27" propertyName="targetLabel"/>
          </condition>
          <thenSequence location="81:30-81:41">
            <elements xsi:type="tcs:Property" location="81:30-81:41" name="targetLabel"/>
          </thenSequence>
        </elements>
        <elements xsi:type="tcs:ConditionalElement" location="82:4-82:54">
          <condition xsi:type="tcs:AndExp" location="82:5-82:33">
            <expressions xsi:type="tcs:IsDefinedExp" location="82:5-82:33" propertyName="targetCardinality"/>
          </condition>
          <thenSequence location="82:36-82:53">
            <elements xsi:type="tcs:Property" location="82:36-82:53" name="targetCardinality"/>
          </thenSequence>
        </elements>
        <elements xsi:type="tcs:ConditionalElement" location="83:4-83:27">
          <condition xsi:type="tcs:AndExp" location="83:5-83:20">
            <expressions xsi:type="tcs:BooleanPropertyExp" location="83:5-83:20" propertyName="navigableTarget"/>
          </condition>
          <thenSequence location="83:23-83:26">
            <elements xsi:type="tcs:LiteralRef" location="83:23-83:26" referredLiteral="/0/@symbols.13"/>
          </thenSequence>
        </elements>
        <elements xsi:type="tcs:Property" location="84:4-84:10" name="target"/>
      </templateSequence>
    </templates>
    <templates xsi:type="tcs:ClassTemplate" location="87:2-92:4" name="Inheritance">
      <templateSequence location="89:4-91:10">
        <elements xsi:type="tcs:Property" location="89:4-89:10" name="source"/>
        <elements xsi:type="tcs:LiteralRef" location="90:4-90:7" referredLiteral="/0/@symbols.11">
          <commentsAfter>-- TODO: optional &quot;-&quot;</commentsAfter>
        </elements>
        <elements xsi:type="tcs:Property" location="91:4-91:10" name="target">
          <commentsBefore>-- TODO: optional &quot;-&quot;</commentsBefore>
        </elements>
      </templateSequence>
    </templates>
    <templates xsi:type="tcs:ClassTemplate" location="94:2-105:4" name="Cardinality">
      <templateSequence location="96:4-104:7">
        <elements xsi:type="tcs:ConditionalElement" location="96:4-104:7">
          <condition xsi:type="tcs:AndExp" location="96:5-96:38">
            <expressions xsi:type="tcs:EqualsExp" location="96:5-96:19" propertyName="lowerBound">
              <value xsi:type="tcs:IntegerVal" location="96:18-96:19" symbol="1"/>
            </expressions>
            <expressions xsi:type="tcs:EqualsExp" location="96:24-96:38" propertyName="upperBound">
              <value xsi:type="tcs:IntegerVal" location="96:37-96:38" symbol="1"/>
            </expressions>
          </condition>
          <thenSequence location="97:5-97:15">
            <elements xsi:type="tcs:Property" location="97:5-97:15" name="upperBound"/>
          </thenSequence>
          <elseSequence location="98:5-104:6">
            <elements xsi:type="tcs:ConditionalElement" location="98:5-104:6">
              <condition xsi:type="tcs:AndExp" location="98:6-98:40">
                <expressions xsi:type="tcs:EqualsExp" location="98:6-98:20" propertyName="lowerBound">
                  <value xsi:type="tcs:IntegerVal" location="98:19-98:20" symbol="0"/>
                </expressions>
                <expressions xsi:type="tcs:EqualsExp" location="98:25-98:40" propertyName="upperBound">
                  <value xsi:type="tcs:NegativeIntegerVal" location="98:38-98:40" symbol="1"/>
                </expressions>
              </condition>
              <thenSequence location="99:5-99:8">
                <elements xsi:type="tcs:LiteralRef" location="99:5-99:8" referredLiteral="/3"/>
              </thenSequence>
              <elseSequence location="100:5-104:5">
                <elements xsi:type="tcs:ConditionalElement" location="100:5-104:5">
                  <condition xsi:type="tcs:AndExp" location="100:6-100:21">
                    <expressions xsi:type="tcs:EqualsExp" location="100:6-100:21" propertyName="upperBound">
                      <value xsi:type="tcs:NegativeIntegerVal" location="100:19-100:21" symbol="1"/>
                    </expressions>
                  </condition>
                  <thenSequence location="101:5-101:24">
                    <elements xsi:type="tcs:Property" location="101:5-101:15" name="lowerBound"/>
                    <elements xsi:type="tcs:LiteralRef" location="101:16-101:20" referredLiteral="/0/@symbols.9"/>
                    <elements xsi:type="tcs:LiteralRef" location="101:21-101:24" referredLiteral="/3"/>
                  </thenSequence>
                  <elseSequence location="103:5-103:31">
                    <elements xsi:type="tcs:Property" location="103:5-103:15" name="lowerBound"/>
                    <elements xsi:type="tcs:LiteralRef" location="103:16-103:20" referredLiteral="/0/@symbols.9"/>
                    <elements xsi:type="tcs:Property" location="103:21-103:31" name="upperBound"/>
                  </elseSequence>
                </elements>
              </elseSequence>
            </elements>
          </elseSequence>
        </elements>
      </templateSequence>
    </templates>
    <templates xsi:type="tcs:ClassTemplate" location="107:2-107:32" name="ClassMember" isAbstract="true"/>
    <templates xsi:type="tcs:ClassTemplate" location="109:2-115:4" name="Attribute">
      <templateSequence location="111:4-114:5">
        <elements xsi:type="tcs:FunctionCall" location="111:4-111:20" calledFunction="/0/@templates.16"/>
        <elements xsi:type="tcs:Property" location="112:4-112:8" name="name"/>
        <elements xsi:type="tcs:ConditionalElement" location="112:9-114:5">
          <condition xsi:type="tcs:AndExp" location="112:10-112:25">
            <expressions xsi:type="tcs:IsDefinedExp" location="112:10-112:25" propertyName="type"/>
          </condition>
          <thenSequence location="113:5-113:13">
            <elements xsi:type="tcs:LiteralRef" location="113:5-113:8" referredLiteral="/0/@symbols.7"/>
            <elements xsi:type="tcs:Property" location="113:9-113:13" name="type"/>
          </thenSequence>
        </elements>
      </templateSequence>
    </templates>
    <templates xsi:type="tcs:ClassTemplate" location="117:2-123:4" name="Method">
      <templateSequence location="119:4-122:7">
        <elements xsi:type="tcs:FunctionCall" location="119:4-119:20" calledFunction="/0/@templates.16"/>
        <elements xsi:type="tcs:Property" location="120:4-120:8" name="name"/>
        <elements xsi:type="tcs:LiteralRef" location="121:4-121:7" referredLiteral="/0/@symbols.0">
          <commentsAfter>--arguments</commentsAfter>
        </elements>
        <elements xsi:type="tcs:LiteralRef" location="122:4-122:7" referredLiteral="/0/@symbols.1">
          <commentsBefore>--arguments</commentsBefore>
        </elements>
      </templateSequence>
    </templates>
    <templates xsi:type="tcs:EnumerationTemplate" location="125:2-131:4" name="Visibility">
      <mappings location="127:4-127:18">
        <literal location="127:4-127:11" name="public"/>
        <element xsi:type="tcs:LiteralRef" location="127:15-127:18" referredLiteral="/0/@symbols.15"/>
      </mappings>
      <mappings location="128:4-128:18">
        <literal location="128:4-128:12" name="private"/>
        <element xsi:type="tcs:LiteralRef" location="128:15-128:18" referredLiteral="/0/@symbols.10"/>
      </mappings>
      <mappings location="129:4-129:20">
        <literal location="129:4-129:14" name="protected"/>
        <element xsi:type="tcs:LiteralRef" location="129:17-129:20" referredLiteral="/0/@symbols.16"/>
      </mappings>
      <mappings location="130:4-130:18">
        <literal location="130:4-130:12" name="package"/>
        <element xsi:type="tcs:LiteralRef" location="130:15-130:18" referredLiteral="/0/@symbols.17"/>
      </mappings>
    </templates>
    <templates xsi:type="tcs:FunctionTemplate" location="133:2-140:4" name="writeVisibility" className="ClassMember">
      <functionSequence location="135:4-139:5">
        <elements xsi:type="tcs:ConditionalElement" location="135:4-139:5">
          <condition xsi:type="tcs:AndExp" location="135:5-135:30">
            <expressions xsi:type="tcs:EqualsExp" location="135:5-135:30" propertyName="visibility">
              <value xsi:type="tcs:EnumLiteralVal" location="135:18-135:30" name="unspecified"/>
            </expressions>
          </condition>
          <thenSequence location="137:4-135:32">
            <commentsBefore>-- nothing</commentsBefore>
            <commentsAfter>-- nothing</commentsAfter>
          </thenSequence>
          <elseSequence location="138:5-138:15">
            <elements xsi:type="tcs:Property" location="138:5-138:15" name="visibility"/>
          </elseSequence>
        </elements>
      </functionSequence>
    </templates>
    <templates xsi:type="tcs:ClassTemplate" location="142:2-149:4" name="ClassDefinition">
      <templateSequence location="144:4-148:5">
        <elements xsi:type="tcs:LiteralRef" location="144:4-144:7" referredLiteral="/0/@symbols.8"/>
        <elements xsi:type="tcs:Property" location="145:6-145:33" name="attributes">
          <propertyArgs xsi:type="tcs:SeparatorPArg" location="145:17-145:32">
            <separatorSequence location="145:29-145:32">
              <elements xsi:type="tcs:LiteralRef" location="145:29-145:32" referredLiteral="/0/@symbols.6"/>
            </separatorSequence>
          </propertyArgs>
        </elements>
        <elements xsi:type="tcs:ConditionalElement" location="146:4-148:5">
          <condition xsi:type="tcs:AndExp" location="146:5-146:23">
            <expressions xsi:type="tcs:IsDefinedExp" location="146:5-146:23" propertyName="methods"/>
          </condition>
          <thenSequence location="147:5-147:33">
            <elements xsi:type="tcs:LiteralRef" location="147:5-147:8" referredLiteral="/0/@symbols.8"/>
            <elements xsi:type="tcs:Property" location="147:9-147:33" name="methods">
              <propertyArgs xsi:type="tcs:SeparatorPArg" location="147:17-147:32">
                <separatorSequence location="147:29-147:32">
                  <elements xsi:type="tcs:LiteralRef" location="147:29-147:32" referredLiteral="/0/@symbols.6"/>
                </separatorSequence>
              </propertyArgs>
            </elements>
          </thenSequence>
        </elements>
      </templateSequence>
    </templates>
    <templates xsi:type="tcs:ClassTemplate" location="151:2-156:4" name="Note">
      <templateSequence location="153:4-155:7">
        <elements xsi:type="tcs:LiteralRef" location="153:4-153:7" referredLiteral="/0/@symbols.4"/>
        <elements xsi:type="tcs:LiteralRef" location="153:8-153:14" referredLiteral="/4"/>
        <elements xsi:type="tcs:LiteralRef" location="153:15-153:18" referredLiteral="/0/@symbols.7"/>
        <elements xsi:type="tcs:Property" location="153:19-153:23" name="text"/>
        <elements xsi:type="tcs:FunctionCall" location="154:4-154:13" calledFunction="/0/@templates.6"/>
        <elements xsi:type="tcs:LiteralRef" location="155:4-155:7" referredLiteral="/0/@symbols.5"/>
      </templateSequence>
    </templates>
    <templates xsi:type="tcs:ClassTemplate" location="158:2-163:4" name="NoteAssociation">
      <commentsAfter>-- END Class templates</commentsAfter>
      <commentsAfter>-- BEGIN Special symbols</commentsAfter>
      <templateSequence location="160:4-162:8">
        <elements xsi:type="tcs:Property" location="160:4-160:10" name="source"/>
        <elements xsi:type="tcs:LiteralRef" location="161:4-161:7" referredLiteral="/0/@symbols.10"/>
        <elements xsi:type="tcs:Property" location="162:4-162:8" name="note"/>
      </templateSequence>
    </templates>
    <symbols location="168:3-168:40" name="lround" literalRefs="/0/@templates.14/@templateSequence/@elements.2" value="(">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="169:3-169:40" name="rround" literalRefs="/0/@templates.14/@templateSequence/@elements.3" value=")">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="170:3-170:40" name="lcurly" literalRefs="/0/@templates.6/@functionSequence/@elements.0/@thenSequence/@elements.0" value="{">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="171:3-171:40" name="rcurly" literalRefs="/0/@templates.6/@functionSequence/@elements.0/@thenSequence/@elements.4" value="}">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="172:3-172:41" name="lsquare" literalRefs="/0/@templates.5/@templateSequence/@elements.0 /0/@templates.18/@templateSequence/@elements.0" value="[">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="173:3-173:40" name="rsquare" literalRefs="/0/@templates.5/@templateSequence/@elements.5 /0/@templates.18/@templateSequence/@elements.5" value="]">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="174:3-174:37" name="semi" literalRefs="/0/@templates.5/@templateSequence/@elements.1/@thenSequence/@elements.1 /0/@templates.17/@templateSequence/@elements.1/@propertyArgs.0/@separatorSequence/@elements.0 /0/@templates.17/@templateSequence/@elements.2/@thenSequence/@elements.1/@propertyArgs.0/@separatorSequence/@elements.0" value=";">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="175:3-175:38" name="colon" literalRefs="/0/@templates.6/@functionSequence/@elements.0/@thenSequence/@elements.2 /0/@templates.13/@templateSequence/@elements.2/@thenSequence/@elements.0 /0/@templates.18/@templateSequence/@elements.2" value=":">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="176:3-176:38" name="pipe" literalRefs="/0/@templates.17/@templateSequence/@elements.0 /0/@templates.17/@templateSequence/@elements.2/@thenSequence/@elements.0" value="|">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="177:3-177:43" name="pointpoint" literalRefs="/0/@templates.11/@templateSequence/@elements.0/@elseSequence/@elements.0/@elseSequence/@elements.0/@thenSequence/@elements.1 /0/@templates.11/@templateSequence/@elements.0/@elseSequence/@elements.0/@elseSequence/@elements.0/@elseSequence/@elements.1" value="..">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="178:3-178:37" name="dash" literalRefs="/0/@templates.9/@templateSequence/@elements.4 /0/@templates.15/@mappings.1/@element /0/@templates.19/@templateSequence/@elements.1" value="-">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="179:3-179:45" name="circumflex" literalRefs="/0/@templates.10/@templateSequence/@elements.1" value="^">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="180:3-180:37" name="less" literalRefs="/0/@templates.9/@templateSequence/@elements.1/@thenSequence/@elements.0/@thenSequence/@elements.0" value="&lt;">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="181:3-181:40" name="greater" literalRefs="/0/@templates.9/@templateSequence/@elements.7/@thenSequence/@elements.0" value=">">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="182:3-182:41" name="plusplus" literalRefs="/0/@templates.9/@templateSequence/@elements.1/@elseSequence/@elements.0/@elseSequence/@elements.0/@thenSequence/@elements.0" value="++">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="183:3-183:37" name="plus" literalRefs="/0/@templates.9/@templateSequence/@elements.1/@elseSequence/@elements.0/@thenSequence/@elements.0 /0/@templates.15/@mappings.0/@element" value="+">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="184:3-184:38" name="sharp" literalRefs="/0/@templates.15/@mappings.2/@element" value="#">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <symbols location="185:3-185:38" name="tilde" literalRefs="/0/@templates.15/@mappings.3/@element" value="~">
      <spaces>leftNone</spaces>
      <spaces>rightNone</spaces>
    </symbols>
    <tokens location="196:2-196:42" name="COMMENT">
      <commentsBefore>-- END Special symbols</commentsBefore>
      <commentsBefore>-- BEGIN Operator table</commentsBefore>
      <commentsBefore>-- END Operator table</commentsBefore>
      <commentsBefore>-- BEGIN Lexer</commentsBefore>
      <commentsBefore>-- Specifies the lexical entities.</commentsBefore>
      <commentsBefore>-- Only needs modification when default lexer is not satisfactory.</commentsBefore>
      <commentsBefore>-- Generally modified along with Primitive templates.</commentsBefore>
      <pattern location="196:18-196:41">
        <simplePatterns xsi:type="tcs:RulePattern" location="196:18-196:41">
          <rule xsi:type="tcs:EndOfLineRule" location="196:18-196:41">
            <start location="196:36-196:40" name="--"/>
          </rule>
        </simplePatterns>
      </pattern>
    </tokens>
    <tokens location="197:2-197:65" name="STRING">
      <pattern location="197:17-197:64">
        <simplePatterns xsi:type="tcs:RulePattern" location="197:17-197:64">
          <rule xsi:type="tcs:MultiLineRule" location="197:17-197:64">
            <start location="197:35-197:39" name="'"/>
            <end location="197:47-197:51" name="'"/>
            <esc location="197:59-197:63" name="\"/>
          </rule>
        </simplePatterns>
      </pattern>
    </tokens>
  </tcs:ConcreteSyntax>
  <tcs:Keyword location="33:27-33:30" literalRefs="/0/@templates.3/@templateSequence/@elements.0/@blockSequence/@elements.0/@propertyArgs.0/@separatorSequence/@elements.0" value=","/>
  <tcs:Keyword location="59:9-59:13" literalRefs="/0/@templates.6/@functionSequence/@elements.0/@thenSequence/@elements.1" value="bg"/>
  <tcs:Keyword location="99:5-99:8" literalRefs="/0/@templates.11/@templateSequence/@elements.0/@elseSequence/@elements.0/@thenSequence/@elements.0 /0/@templates.11/@templateSequence/@elements.0/@elseSequence/@elements.0/@elseSequence/@elements.0/@thenSequence/@elements.2" value="*"/>
  <tcs:Keyword location="153:8-153:14" literalRefs="/0/@templates.18/@templateSequence/@elements.1" value="note"/>
</xmi:XMI>
