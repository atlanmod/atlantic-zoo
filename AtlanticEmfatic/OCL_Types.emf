package Metamodel;

package OCLTypes {
  abstract class Type {
    !ordered ref Type[*]#subtype supertype;
    !ordered ref Type[*]#supertype subtype;
    !ordered val CollectionType[*]#elementType collectionType;
  }

  abstract class BasicType extends Type {
  }

  class InstanceType extends Type {
    !ordered val Classifier[1]#instanceType classifier;
  }

  class EnumType extends Type {
    !ordered val EnumLiteral[+]#enumType enumLiteral;
  }

  class OclAnyType extends Type {
  }

  class OclTypeType extends Type {
  }

  abstract class CollectionType extends Type {
    !ordered ref Type[1]#collectionType elementType;
  }

  class IntegerType extends BasicType {
  }

  class RealType extends BasicType {
  }

  class StringType extends BasicType {
  }

  class BooleanType extends BasicType {
  }

  class Classifier {
    !ordered ref InstanceType#classifier instanceType;
  }

  class EnumLiteral {
    !ordered ref EnumType#enumLiteral enumType;
  }

  class SetType extends CollectionType {
  }

  class SequenceType extends CollectionType {
  }

  class BagType extends CollectionType {
  }

}

package PrimitiveTypes {
  datatype Boolean : "";

  datatype Integer : "";

  datatype String : "";

}

