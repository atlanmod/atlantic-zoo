package Metamodel;

package UMLWithReuseContrats {
  class ReuseContract extends Dependency {
    !ordered ref ProviderClause[1] supplier;
    !ordered ref ReuserClause[1] client;
  }

  class Dependency {
    !ordered ref Dependency#subDependency owningDependency;
    !ordered val Dependency[*]#owningDependency subDependency;
  }

  class ProviderClause extends Package {
  }

  class Package {
  }

  class ReuserClause extends Package {
  }

  class CompositeProvider extends ProviderClause {
    !ordered val ReuseContract[1] subcontract;
  }

  class BasicProvider extends ProviderClause {
  }

  class CompositeReuser extends ReuserClause {
    val ReuserClause[*] subreuser;
  }

  class BasicReuser extends ReuserClause {
  }

}

package PrimitiveTypes {
  datatype Boolean : "";

  datatype Integer : "";

  datatype String : "";

}

