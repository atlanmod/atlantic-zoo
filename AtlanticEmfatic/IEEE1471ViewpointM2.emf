package Metamodel;

package IEEE1471 {
  class Viewpoint {
    !ordered ref ViewpointImport[+] source;
    !ordered ref Concern[+] covers;
    !ordered ref ViewpointDependency[*]#supplier supplierDependency;
    !ordered ref ViewpointDependency[*]#client clientDependency;
    !ordered ref Stakeholder isImportTo;
    !ordered val ArchitecturalConstruct[*] architecturalConstruct;
    !ordered val Process[1] process;
  }

  class Concern {
  }

  class Stakeholder {
    !ordered ref Concern concerns;
  }

  class ViewpointImport {
  }

  class ViewpointDependency {
    !ordered ref Viewpoint[1]#supplierDependency supplier;
    !ordered ref Viewpoint[1]#clientDependency client;
  }

  class Process {
    !ordered ref Technique[+] methodology;
  }

  class Technique {
    !ordered ref AnalysisMethod[*] methods;
    !ordered ref Rule[+]#techniques applies;
  }

  class AnalysisMethod {
    !ordered ref Language[1] analysis;
  }

  class ArchitecturalConstruct {
  }

  class Rule extends ArchitecturalConstruct {
    !ordered ref Technique[+]#applies techniques;
    !ordered ref Language[1] guidance;
  }

  class ModelOrganization extends Rule {
  }

  class ModellingRule {
  }

  class Language extends ArchitecturalConstruct {
  }

  class Mapping extends ArchitecturalConstruct {
    !ordered ref Language[1] input;
    !ordered ref Language[1] ouput;
  }

  class Pattern extends ArchitecturalConstruct {
  }

}

