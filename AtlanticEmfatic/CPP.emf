package Metamodel;

package CPP {
  class CDerived {
  }

  class CStructured {
  }

  class CBehavorialFeature {
  }

  class CFunction extends CBehavorialFeature {
    !unique !ordered attr Boolean[1] isVsrArg;
  }

  class CStructureContents {
  }

  class CField {
  }

  class CDerivableType {
  }

  enum VisibilityKind {
    vk_public = 0;
    vk_private = 0;
    vk_protected = 0;
  }

  class CPPReference extends CDerived {
  }

  class CPPExtern extends CDerived {
    !unique !ordered attr String[1] linkage;
  }

  class CPPConst extends CDerived {
  }

  class CPPTemplate extends CDerived {
    !ordered ref CPPClass[*]#templates classes;
  }

  class CPPClass extends CStructured {
    !unique !ordered attr Boolean[1] isAbstract;
    !unique !ordered attr Boolean[1] isVolatile;
    !unique !ordered attr VisibilityKind[1] visibility;
    !ordered ref CPPTemplate[*]#classes templates;
    !ordered ref CPPGeneralization[*] generalizations;
  }

  class CPPGeneralization {
    !unique !ordered attr VisibilityKind[1] visibility;
    !unique !ordered attr Boolean[1] isVirtual;
    !ordered ref CPPClass[1] supertype;
  }

  class CPPOperation extends CFunction, CStructureContents {
    !unique !ordered attr Boolean[1] isStatic;
    !unique !ordered attr Boolean[1] isExtern;
    !unique !ordered attr Boolean[1] isInline;
    !unique !ordered attr Boolean[1] isVirtual;
    !unique !ordered attr Boolean[1] isPure;
    !unique !ordered attr VisibilityKind[1] visibility;
    !unique !ordered attr Boolean[1] isCtor;
    !unique !ordered attr Boolean[1] isDtor;
    !ordered ref CPPClass[*] ~throws;
  }

  class CPPOperator extends CStructureContents {
    !unique !ordered attr Boolean[1] isInline;
    !unique !ordered attr VisibilityKind[1] visibility;
  }

  class CPPMember {
    !unique !ordered attr Boolean[1] isStatic;
    !unique !ordered attr Boolean[1] isVolatile;
    !unique !ordered attr Boolean[1] isRegister;
    !unique !ordered attr VisibilityKind[1] visibility;
  }

}

package PrimitiveTypes {
  datatype Integer : "";

  datatype String : "";

  datatype Boolean : "";

  datatype Double : "";

}

