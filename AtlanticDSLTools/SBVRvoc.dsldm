<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<dmd xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd = 'http://www.w3.org/2001/XMLSchema' xmlns = 'urn:schemas-microsoft-com:dmd'>
  <model name = 'DM_SBVRvoc' identity = '10000000-0000-0000-0000-000000000001' id = 'i10000000z0000z0000z0000z000000000001' namespace = 'SBVRvoc.DomainModel' isLoaded = 'true'>
    <mdfmetadata xsi:type = 'modelmdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' majorversion = '1' minorversion = '0' alwaysgeneratecollection = 'false'>
      <copyright/>
      <stringtable resxfile = 'DM_SBVRvoc.Resource.resx' resourcesfile = 'SBVRvoc.DomainModel.DM_SBVRvoc.Resource' usefullyqualifiedname = 'false'/>
      <copyclosure name = 'DM_SBVRvocCopyClosure' doccomment = 'Copy closure visitor filter'/>
      <removeclosure name = 'DM_SBVRvocRemoveClosure' doccomment = 'Remove closure visitor filter'/>
    </mdfmetadata>
    <extended>
      <model>i2b131234z7959z458dz834fz2dc0769ce683</model>
    </extended>
    <enumerations>
      <enumeration name = 'Verb' identity = '10000000-0000-0000-0000-000000000232' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000232'>
        <literals>
          <enumerationLiteral name = 'is' identity = '10000000-0000-0000-0000-000000000239' value = '0'/>
          <enumerationLiteral name = 'relevant' identity = '10000000-0000-0000-0000-000000000240' value = '1'/>
          <enumerationLiteral name = 'comprises' identity = '10000000-0000-0000-0000-000000000241' value = '2'/>
          <enumerationLiteral name = 'to' identity = '10000000-0000-0000-0000-000000000242' value = '3'/>
          <enumerationLiteral name = 'work' identity = '10000000-0000-0000-0000-000000000243' value = '4'/>
          <enumerationLiteral name = 'in' identity = '10000000-0000-0000-0000-000000000244' value = '5'/>
          <enumerationLiteral name = 'trades' identity = '10000000-0000-0000-0000-000000000245' value = '6'/>
          <enumerationLiteral name = 'as' identity = '10000000-0000-0000-0000-000000000246' value = '7'/>
          <enumerationLiteral name = 'are' identity = '10000000-0000-0000-0000-000000000247' value = '8'/>
          <enumerationLiteral name = 'accepted' identity = '10000000-0000-0000-0000-000000000248' value = '9'/>
          <enumerationLiteral name = 'generally' identity = '10000000-0000-0000-0000-000000000249' value = '10'/>
          <enumerationLiteral name = 'important' identity = '10000000-0000-0000-0000-000000000250' value = '11'/>
          <enumerationLiteral name = 'across' identity = '10000000-0000-0000-0000-000000000251' value = '12'/>
          <enumerationLiteral name = 'share' identity = '10000000-0000-0000-0000-000000000252' value = '13'/>
          <enumerationLiteral name = 'sets' identity = '10000000-0000-0000-0000-000000000253' value = '14'/>
          <enumerationLiteral name = 'assigned' identity = '10000000-0000-0000-0000-000000000254' value = '15'/>
          <enumerationLiteral name = 'by' identity = '10000000-0000-0000-0000-000000000255' value = '16'/>
          <enumerationLiteral name = 'contains' identity = '10000000-0000-0000-0000-000000000256' value = '17'/>
          <enumerationLiteral name = 'for' identity = '10000000-0000-0000-0000-000000000257' value = '18'/>
          <enumerationLiteral name = 'has' identity = '10000000-0000-0000-0000-000000000258' value = '19'/>
          <enumerationLiteral name = 'specifies' identity = '10000000-0000-0000-0000-000000000259' value = '20'/>
          <enumerationLiteral name = 'specified' identity = '10000000-0000-0000-0000-000000000260' value = '21'/>
        </literals>
      </enumeration>
      <enumeration name = 'ConjonctionnalKeyWord' identity = '10000000-0000-0000-0000-000000000233' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000233'>
        <literals>
          <enumerationLiteral name = 'and' identity = '10000000-0000-0000-0000-000000000261' value = '22'/>
          <enumerationLiteral name = 'or' identity = '10000000-0000-0000-0000-000000000262' value = '23'/>
          <enumerationLiteral name = 'if' identity = '10000000-0000-0000-0000-000000000263' value = '24'/>
          <enumerationLiteral name = 'whether' identity = '10000000-0000-0000-0000-000000000264' value = '25'/>
        </literals>
      </enumeration>
      <enumeration name = 'ModalVerb' identity = '10000000-0000-0000-0000-000000000234' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000234'>
        <literals>
          <enumerationLiteral name = 'must' identity = '10000000-0000-0000-0000-000000000265' value = '26'/>
          <enumerationLiteral name = 'may' identity = '10000000-0000-0000-0000-000000000266' value = '27'/>
          <enumerationLiteral name = 'never' identity = '10000000-0000-0000-0000-000000000267' value = '28'/>
          <enumerationLiteral name = 'always' identity = '10000000-0000-0000-0000-000000000268' value = '29'/>
        </literals>
      </enumeration>
      <enumeration name = 'Join' identity = '10000000-0000-0000-0000-000000000235' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000235'>
        <literals>
          <enumerationLiteral name = 'that' identity = '10000000-0000-0000-0000-000000000269' value = '30'/>
          <enumerationLiteral name = 'who' identity = '10000000-0000-0000-0000-000000000270' value = '31'/>
        </literals>
      </enumeration>
      <enumeration name = 'Link' identity = '10000000-0000-0000-0000-000000000236' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000236'>
        <literals>
          <enumerationLiteral name = 'of' identity = '10000000-0000-0000-0000-000000000271' value = '32'/>
          <enumerationLiteral name = 'quoteS' identity = '10000000-0000-0000-0000-000000000272' value = '33'/>
        </literals>
      </enumeration>
      <enumeration name = 'Qualif' identity = '10000000-0000-0000-0000-000000000237' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000237'>
        <literals>
          <enumerationLiteral name = 'the' identity = '10000000-0000-0000-0000-000000000273' value = '34'/>
          <enumerationLiteral name = 'The' identity = '10000000-0000-0000-0000-000000000274' value = '35'/>
          <enumerationLiteral name = 'a' identity = '10000000-0000-0000-0000-000000000275' value = '36'/>
          <enumerationLiteral name = 'A' identity = '10000000-0000-0000-0000-000000000276' value = '37'/>
          <enumerationLiteral name = 'an' identity = '10000000-0000-0000-0000-000000000277' value = '38'/>
          <enumerationLiteral name = 'An' identity = '10000000-0000-0000-0000-000000000278' value = '39'/>
          <enumerationLiteral name = 'Each' identity = '10000000-0000-0000-0000-000000000279' value = '40'/>
          <enumerationLiteral name = 'each' identity = '10000000-0000-0000-0000-000000000280' value = '41'/>
          <enumerationLiteral name = 'Some' identity = '10000000-0000-0000-0000-000000000281' value = '42'/>
          <enumerationLiteral name = 'some' identity = '10000000-0000-0000-0000-000000000282' value = '43'/>
          <enumerationLiteral name = 'At' identity = '10000000-0000-0000-0000-000000000283' value = '44'/>
          <enumerationLiteral name = 'at' identity = '10000000-0000-0000-0000-000000000284' value = '45'/>
          <enumerationLiteral name = 'Exactly' identity = '10000000-0000-0000-0000-000000000285' value = '46'/>
          <enumerationLiteral name = 'exactly' identity = '10000000-0000-0000-0000-000000000286' value = '47'/>
        </literals>
      </enumeration>
      <enumeration name = 'EndOperator' identity = '10000000-0000-0000-0000-000000000238' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000238'>
        <literals>
          <enumerationLiteral name = 'given' identity = '10000000-0000-0000-0000-000000000287' value = '48'/>
          <enumerationLiteral name = 'thanone' identity = '10000000-0000-0000-0000-000000000288' value = '49'/>
          <enumerationLiteral name = 'one' identity = '10000000-0000-0000-0000-000000000289' value = '50'/>
          <enumerationLiteral name = 'isobligatorythat' identity = '10000000-0000-0000-0000-000000000290' value = '51'/>
          <enumerationLiteral name = 'ispermittedthat' identity = '10000000-0000-0000-0000-000000000291' value = '52'/>
          <enumerationLiteral name = 'isprohibitedthat' identity = '10000000-0000-0000-0000-000000000292' value = '53'/>
          <enumerationLiteral name = 'isnecessarythat' identity = '10000000-0000-0000-0000-000000000293' value = '54'/>
          <enumerationLiteral name = 'ispossiblethat' identity = '10000000-0000-0000-0000-000000000294' value = '55'/>
          <enumerationLiteral name = 'isimpossiblethat' identity = '10000000-0000-0000-0000-000000000295' value = '56'/>
          <enumerationLiteral name = 'isnotthecasethat' identity = '10000000-0000-0000-0000-000000000296' value = '57'/>
          <enumerationLiteral name = 'least' identity = '10000000-0000-0000-0000-000000000297' value = '58'/>
          <enumerationLiteral name = 'leastone' identity = '10000000-0000-0000-0000-000000000298' value = '59'/>
          <enumerationLiteral name = 'most' identity = '10000000-0000-0000-0000-000000000299' value = '60'/>
          <enumerationLiteral name = 'mostone' identity = '10000000-0000-0000-0000-000000000300' value = '61'/>
          <enumerationLiteral name = 'leastnandatmostm' identity = '10000000-0000-0000-0000-000000000301' value = '62'/>
          <enumerationLiteral name = 'andonlyif' identity = '10000000-0000-0000-0000-000000000302' value = '63'/>
          <enumerationLiteral name = 'ornot' identity = '10000000-0000-0000-0000-000000000303' value = '64'/>
          <enumerationLiteral name = 'not' identity = '10000000-0000-0000-0000-000000000304' value = '65'/>
          <enumerationLiteral name = 'of' identity = '10000000-0000-0000-0000-000000000305' value = '66'/>
        </literals>
      </enumeration>
    </enumerations>
    <relationships>
      <relationship name = 'RoothasVocabularyEntry' identity = '10000000-0000-0000-0000-000000000055' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000055' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'entries' identity = '10000000-0000-0000-0000-000000000056' id = 'i10000000z0000z0000z0000z000000000056' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'true' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000003</source>
            <type>i10000000z0000z0000z0000z000000000004</type>
            <generatedProperty name = 'entries' identity = '00000000-0000-0000-0000-000000000429'>
              <referenceType>i10000000z0000z0000z0000z000000000004</referenceType>
            </generatedProperty>
          </role>
          <role name = 'entriesOpposite' identity = '10000000-0000-0000-0000-000000000057' id = 'i10000000z0000z0000z0000z000000000057' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000004</source>
            <type>i10000000z0000z0000z0000z000000000003</type>
            <generatedProperty name = 'entriesOpposite' identity = '00000000-0000-0000-0000-000000000430'>
              <referenceType>i10000000z0000z0000z0000z000000000003</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'VocabularyEntryhasPrimaryRepresentation' identity = '10000000-0000-0000-0000-000000000058' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000058' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'primaryRep' identity = '10000000-0000-0000-0000-000000000059' id = 'i10000000z0000z0000z0000z000000000059' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000004</source>
            <type>i10000000z0000z0000z0000z000000000022</type>
            <generatedProperty name = 'primaryRep' identity = '00000000-0000-0000-0000-000000000431'>
              <referenceType>i10000000z0000z0000z0000z000000000022</referenceType>
            </generatedProperty>
          </role>
          <role name = 'primaryRepOpposite' identity = '10000000-0000-0000-0000-000000000060' id = 'i10000000z0000z0000z0000z000000000060' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000022</source>
            <type>i10000000z0000z0000z0000z000000000004</type>
            <generatedProperty name = 'primaryRepOpposite' identity = '00000000-0000-0000-0000-000000000432'>
              <referenceType>i10000000z0000z0000z0000z000000000004</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'VocabularyEntryhasCaption' identity = '10000000-0000-0000-0000-000000000061' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000061' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'caption' identity = '10000000-0000-0000-0000-000000000062' id = 'i10000000z0000z0000z0000z000000000062' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000004</source>
            <type>i10000000z0000z0000z0000z000000000005</type>
            <generatedProperty name = 'caption' identity = '00000000-0000-0000-0000-000000000433'>
              <referenceType>i10000000z0000z0000z0000z000000000005</referenceType>
            </generatedProperty>
          </role>
          <role name = 'captionOpposite' identity = '10000000-0000-0000-0000-000000000063' id = 'i10000000z0000z0000z0000z000000000063' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000005</source>
            <type>i10000000z0000z0000z0000z000000000004</type>
            <generatedProperty name = 'captionOpposite' identity = '00000000-0000-0000-0000-000000000434'>
              <referenceType>i10000000z0000z0000z0000z000000000004</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'DefCaptionhasConceptDefinition' identity = '10000000-0000-0000-0000-000000000064' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000064' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'definition' identity = '10000000-0000-0000-0000-000000000065' id = 'i10000000z0000z0000z0000z000000000065' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000006</source>
            <type>i10000000z0000z0000z0000z000000000027</type>
            <generatedProperty name = 'definition' identity = '00000000-0000-0000-0000-000000000435'>
              <referenceType>i10000000z0000z0000z0000z000000000027</referenceType>
            </generatedProperty>
          </role>
          <role name = 'definitionOpposite' identity = '10000000-0000-0000-0000-000000000066' id = 'i10000000z0000z0000z0000z000000000066' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000027</source>
            <type>i10000000z0000z0000z0000z000000000006</type>
            <generatedProperty name = 'definitionOpposite' identity = '00000000-0000-0000-0000-000000000436'>
              <referenceType>i10000000z0000z0000z0000z000000000006</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'DescCaptionhasNote' identity = '10000000-0000-0000-0000-000000000067' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000067' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'description' identity = '10000000-0000-0000-0000-000000000068' id = 'i10000000z0000z0000z0000z000000000068' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000007</source>
            <type>i10000000z0000z0000z0000z000000000029</type>
            <generatedProperty name = 'description' identity = '00000000-0000-0000-0000-000000000437'>
              <referenceType>i10000000z0000z0000z0000z000000000029</referenceType>
            </generatedProperty>
          </role>
          <role name = 'descriptionOpposite' identity = '10000000-0000-0000-0000-000000000069' id = 'i10000000z0000z0000z0000z000000000069' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000029</source>
            <type>i10000000z0000z0000z0000z000000000007</type>
            <generatedProperty name = 'descriptionOpposite' identity = '00000000-0000-0000-0000-000000000438'>
              <referenceType>i10000000z0000z0000z0000z000000000007</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SrcCaptionhasConceptSource' identity = '10000000-0000-0000-0000-000000000070' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000070' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'source' identity = '10000000-0000-0000-0000-000000000071' id = 'i10000000z0000z0000z0000z000000000071' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000008</source>
            <type>i10000000z0000z0000z0000z000000000028</type>
            <generatedProperty name = 'source' identity = '00000000-0000-0000-0000-000000000439'>
              <referenceType>i10000000z0000z0000z0000z000000000028</referenceType>
            </generatedProperty>
          </role>
          <role name = 'sourceOpposite' identity = '10000000-0000-0000-0000-000000000072' id = 'i10000000z0000z0000z0000z000000000072' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000028</source>
            <type>i10000000z0000z0000z0000z000000000008</type>
            <generatedProperty name = 'sourceOpposite' identity = '00000000-0000-0000-0000-000000000440'>
              <referenceType>i10000000z0000z0000z0000z000000000008</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'DBCaptionhasConceptSource' identity = '10000000-0000-0000-0000-000000000073' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000073' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'dictionaryBasis' identity = '10000000-0000-0000-0000-000000000074' id = 'i10000000z0000z0000z0000z000000000074' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000009</source>
            <type>i10000000z0000z0000z0000z000000000028</type>
            <generatedProperty name = 'dictionaryBasis' identity = '00000000-0000-0000-0000-000000000441'>
              <referenceType>i10000000z0000z0000z0000z000000000028</referenceType>
            </generatedProperty>
          </role>
          <role name = 'dictionaryBasisOpposite' identity = '10000000-0000-0000-0000-000000000075' id = 'i10000000z0000z0000z0000z000000000075' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000028</source>
            <type>i10000000z0000z0000z0000z000000000009</type>
            <generatedProperty name = 'dictionaryBasisOpposite' identity = '00000000-0000-0000-0000-000000000442'>
              <referenceType>i10000000z0000z0000z0000z000000000009</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'GenCCaptionhasPrimaryRepresentation' identity = '10000000-0000-0000-0000-000000000076' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000076' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'generalConcept' identity = '10000000-0000-0000-0000-000000000077' id = 'i10000000z0000z0000z0000z000000000077' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000010</source>
            <type>i10000000z0000z0000z0000z000000000022</type>
            <generatedProperty name = 'generalConcept' identity = '00000000-0000-0000-0000-000000000443'>
              <referenceType>i10000000z0000z0000z0000z000000000022</referenceType>
            </generatedProperty>
          </role>
          <role name = 'generalConceptOpposite' identity = '10000000-0000-0000-0000-000000000078' id = 'i10000000z0000z0000z0000z000000000078' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000022</source>
            <type>i10000000z0000z0000z0000z000000000010</type>
            <generatedProperty name = 'generalConceptOpposite' identity = '00000000-0000-0000-0000-000000000444'>
              <referenceType>i10000000z0000z0000z0000z000000000010</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'CTypCaptionhasPrimaryRepresentation' identity = '10000000-0000-0000-0000-000000000079' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000079' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'conceptType' identity = '10000000-0000-0000-0000-000000000080' id = 'i10000000z0000z0000z0000z000000000080' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000011</source>
            <type>i10000000z0000z0000z0000z000000000022</type>
            <generatedProperty name = 'conceptType' identity = '00000000-0000-0000-0000-000000000445'>
              <referenceType>i10000000z0000z0000z0000z000000000022</referenceType>
            </generatedProperty>
          </role>
          <role name = 'conceptTypeOpposite' identity = '10000000-0000-0000-0000-000000000081' id = 'i10000000z0000z0000z0000z000000000081' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000022</source>
            <type>i10000000z0000z0000z0000z000000000011</type>
            <generatedProperty name = 'conceptTypeOpposite' identity = '00000000-0000-0000-0000-000000000446'>
              <referenceType>i10000000z0000z0000z0000z000000000011</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NecessityhasSBVRExpression' identity = '10000000-0000-0000-0000-000000000082' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000082' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'exp' identity = '10000000-0000-0000-0000-000000000083' id = 'i10000000z0000z0000z0000z000000000083' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000012</source>
            <type>i10000000z0000z0000z0000z000000000036</type>
            <generatedProperty name = 'exp' identity = '00000000-0000-0000-0000-000000000447'>
              <referenceType>i10000000z0000z0000z0000z000000000036</referenceType>
            </generatedProperty>
          </role>
          <role name = 'exp1Opposite' identity = '10000000-0000-0000-0000-000000000084' id = 'i10000000z0000z0000z0000z000000000084' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000036</source>
            <type>i10000000z0000z0000z0000z000000000012</type>
            <generatedProperty name = 'exp1Opposite' identity = '00000000-0000-0000-0000-000000000448'>
              <referenceType>i10000000z0000z0000z0000z000000000012</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'PossibilityhasSBVRExpression' identity = '10000000-0000-0000-0000-000000000085' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000085' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'exp' identity = '10000000-0000-0000-0000-000000000086' id = 'i10000000z0000z0000z0000z000000000086' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000013</source>
            <type>i10000000z0000z0000z0000z000000000036</type>
            <generatedProperty name = 'exp' identity = '00000000-0000-0000-0000-000000000449'>
              <referenceType>i10000000z0000z0000z0000z000000000036</referenceType>
            </generatedProperty>
          </role>
          <role name = 'exp2Opposite' identity = '10000000-0000-0000-0000-000000000087' id = 'i10000000z0000z0000z0000z000000000087' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000036</source>
            <type>i10000000z0000z0000z0000z000000000013</type>
            <generatedProperty name = 'exp2Opposite' identity = '00000000-0000-0000-0000-000000000450'>
              <referenceType>i10000000z0000z0000z0000z000000000013</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'RefSCaptionhasPrimaryRepresentation' identity = '10000000-0000-0000-0000-000000000088' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000088' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'referenceScheme' identity = '10000000-0000-0000-0000-000000000089' id = 'i10000000z0000z0000z0000z000000000089' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000014</source>
            <type>i10000000z0000z0000z0000z000000000022</type>
            <generatedProperty name = 'referenceScheme' identity = '00000000-0000-0000-0000-000000000451'>
              <referenceType>i10000000z0000z0000z0000z000000000022</referenceType>
            </generatedProperty>
          </role>
          <role name = 'referenceSchemeOpposite' identity = '10000000-0000-0000-0000-000000000090' id = 'i10000000z0000z0000z0000z000000000090' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000022</source>
            <type>i10000000z0000z0000z0000z000000000014</type>
            <generatedProperty name = 'referenceSchemeOpposite' identity = '00000000-0000-0000-0000-000000000452'>
              <referenceType>i10000000z0000z0000z0000z000000000014</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NoteCaptionhasNote' identity = '10000000-0000-0000-0000-000000000091' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000091' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'note' identity = '10000000-0000-0000-0000-000000000092' id = 'i10000000z0000z0000z0000z000000000092' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000015</source>
            <type>i10000000z0000z0000z0000z000000000029</type>
            <generatedProperty name = 'note' identity = '00000000-0000-0000-0000-000000000453'>
              <referenceType>i10000000z0000z0000z0000z000000000029</referenceType>
            </generatedProperty>
          </role>
          <role name = 'noteOpposite' identity = '10000000-0000-0000-0000-000000000093' id = 'i10000000z0000z0000z0000z000000000093' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000029</source>
            <type>i10000000z0000z0000z0000z000000000015</type>
            <generatedProperty name = 'noteOpposite' identity = '00000000-0000-0000-0000-000000000454'>
              <referenceType>i10000000z0000z0000z0000z000000000015</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ExCaptionhasSBVRExpression' identity = '10000000-0000-0000-0000-000000000094' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000094' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'example' identity = '10000000-0000-0000-0000-000000000095' id = 'i10000000z0000z0000z0000z000000000095' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'true' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000016</source>
            <type>i10000000z0000z0000z0000z000000000036</type>
            <generatedProperty name = 'example' identity = '00000000-0000-0000-0000-000000000455'>
              <referenceType>i10000000z0000z0000z0000z000000000036</referenceType>
            </generatedProperty>
          </role>
          <role name = 'exampleOpposite' identity = '10000000-0000-0000-0000-000000000096' id = 'i10000000z0000z0000z0000z000000000096' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000036</source>
            <type>i10000000z0000z0000z0000z000000000016</type>
            <generatedProperty name = 'exampleOpposite' identity = '00000000-0000-0000-0000-000000000456'>
              <referenceType>i10000000z0000z0000z0000z000000000016</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SynCaptionhasPrimaryRepresentation' identity = '10000000-0000-0000-0000-000000000097' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000097' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'synonym' identity = '10000000-0000-0000-0000-000000000098' id = 'i10000000z0000z0000z0000z000000000098' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'true' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000017</source>
            <type>i10000000z0000z0000z0000z000000000022</type>
            <generatedProperty name = 'synonym' identity = '00000000-0000-0000-0000-000000000457'>
              <referenceType>i10000000z0000z0000z0000z000000000022</referenceType>
            </generatedProperty>
          </role>
          <role name = 'synonymOpposite' identity = '10000000-0000-0000-0000-000000000099' id = 'i10000000z0000z0000z0000z000000000099' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000022</source>
            <type>i10000000z0000z0000z0000z000000000017</type>
            <generatedProperty name = 'synonymOpposite' identity = '00000000-0000-0000-0000-000000000458'>
              <referenceType>i10000000z0000z0000z0000z000000000017</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SynFCaptionhasSBVRExpression' identity = '10000000-0000-0000-0000-000000000100' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000100' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'synonymousForm' identity = '10000000-0000-0000-0000-000000000101' id = 'i10000000z0000z0000z0000z000000000101' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000018</source>
            <type>i10000000z0000z0000z0000z000000000036</type>
            <generatedProperty name = 'synonymousForm' identity = '00000000-0000-0000-0000-000000000459'>
              <referenceType>i10000000z0000z0000z0000z000000000036</referenceType>
            </generatedProperty>
          </role>
          <role name = 'synonymousFormOpposite' identity = '10000000-0000-0000-0000-000000000102' id = 'i10000000z0000z0000z0000z000000000102' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000036</source>
            <type>i10000000z0000z0000z0000z000000000018</type>
            <generatedProperty name = 'synonymousFormOpposite' identity = '00000000-0000-0000-0000-000000000460'>
              <referenceType>i10000000z0000z0000z0000z000000000018</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SeeCaptionhasPrimaryRepresentation' identity = '10000000-0000-0000-0000-000000000103' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000103' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'see' identity = '10000000-0000-0000-0000-000000000104' id = 'i10000000z0000z0000z0000z000000000104' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000019</source>
            <type>i10000000z0000z0000z0000z000000000022</type>
            <generatedProperty name = 'see' identity = '00000000-0000-0000-0000-000000000461'>
              <referenceType>i10000000z0000z0000z0000z000000000022</referenceType>
            </generatedProperty>
          </role>
          <role name = 'seeOpposite' identity = '10000000-0000-0000-0000-000000000105' id = 'i10000000z0000z0000z0000z000000000105' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000022</source>
            <type>i10000000z0000z0000z0000z000000000019</type>
            <generatedProperty name = 'seeOpposite' identity = '00000000-0000-0000-0000-000000000462'>
              <referenceType>i10000000z0000z0000z0000z000000000019</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SFCaptionhasPrimaryRepresentation' identity = '10000000-0000-0000-0000-000000000106' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000106' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'subjectField' identity = '10000000-0000-0000-0000-000000000107' id = 'i10000000z0000z0000z0000z000000000107' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000020</source>
            <type>i10000000z0000z0000z0000z000000000022</type>
            <generatedProperty name = 'subjectField' identity = '00000000-0000-0000-0000-000000000463'>
              <referenceType>i10000000z0000z0000z0000z000000000022</referenceType>
            </generatedProperty>
          </role>
          <role name = 'subjectFieldOpposite' identity = '10000000-0000-0000-0000-000000000108' id = 'i10000000z0000z0000z0000z000000000108' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000022</source>
            <type>i10000000z0000z0000z0000z000000000020</type>
            <generatedProperty name = 'subjectFieldOpposite' identity = '00000000-0000-0000-0000-000000000464'>
              <referenceType>i10000000z0000z0000z0000z000000000020</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NSURICaptionhasNameSpaceURI' identity = '10000000-0000-0000-0000-000000000109' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000109' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'namespaceURI' identity = '10000000-0000-0000-0000-000000000110' id = 'i10000000z0000z0000z0000z000000000110' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000021</source>
            <type>i10000000z0000z0000z0000z000000000031</type>
            <generatedProperty name = 'namespaceURI' identity = '00000000-0000-0000-0000-000000000465'>
              <referenceType>i10000000z0000z0000z0000z000000000031</referenceType>
            </generatedProperty>
          </role>
          <role name = 'namespaceURIOpposite' identity = '10000000-0000-0000-0000-000000000111' id = 'i10000000z0000z0000z0000z000000000111' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000031</source>
            <type>i10000000z0000z0000z0000z000000000021</type>
            <generatedProperty name = 'namespaceURIOpposite' identity = '00000000-0000-0000-0000-000000000466'>
              <referenceType>i10000000z0000z0000z0000z000000000021</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'TermRepresentationhasStringWord' identity = '10000000-0000-0000-0000-000000000112' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000112' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'term' identity = '10000000-0000-0000-0000-000000000113' id = 'i10000000z0000z0000z0000z000000000113' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'true' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000024</source>
            <type>i10000000z0000z0000z0000z000000000033</type>
            <generatedProperty name = 'term' identity = '00000000-0000-0000-0000-000000000467'>
              <referenceType>i10000000z0000z0000z0000z000000000033</referenceType>
            </generatedProperty>
          </role>
          <role name = 'termOpposite' identity = '10000000-0000-0000-0000-000000000114' id = 'i10000000z0000z0000z0000z000000000114' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000033</source>
            <type>i10000000z0000z0000z0000z000000000024</type>
            <generatedProperty name = 'termOpposite' identity = '00000000-0000-0000-0000-000000000468'>
              <referenceType>i10000000z0000z0000z0000z000000000024</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NameRepresentationhasNameWord' identity = '10000000-0000-0000-0000-000000000115' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000115' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'name' identity = '10000000-0000-0000-0000-000000000116' id = 'i10000000z0000z0000z0000z000000000116' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'true' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000025</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'name' identity = '00000000-0000-0000-0000-000000000469'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
          <role name = 'name3Opposite' identity = '10000000-0000-0000-0000-000000000117' id = 'i10000000z0000z0000z0000z000000000117' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000025</type>
            <generatedProperty name = 'name3Opposite' identity = '00000000-0000-0000-0000-000000000470'>
              <referenceType>i10000000z0000z0000z0000z000000000025</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'FactTypeFormRepresentationhasNotFactTypeRepresentation-1' identity = '10000000-0000-0000-0000-000000000118' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000118' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'primaryRep1' identity = '10000000-0000-0000-0000-000000000119' id = 'i10000000z0000z0000z0000z000000000119' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000026</source>
            <type>i10000000z0000z0000z0000z000000000023</type>
            <generatedProperty name = 'primaryRep1' identity = '00000000-0000-0000-0000-000000000471'>
              <referenceType>i10000000z0000z0000z0000z000000000023</referenceType>
            </generatedProperty>
          </role>
          <role name = 'primaryRep1Opposite' identity = '10000000-0000-0000-0000-000000000120' id = 'i10000000z0000z0000z0000z000000000120' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000023</source>
            <type>i10000000z0000z0000z0000z000000000026</type>
            <generatedProperty name = 'primaryRep1Opposite' identity = '00000000-0000-0000-0000-000000000472'>
              <referenceType>i10000000z0000z0000z0000z000000000026</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'FactTypeFormRepresentationhasNotFactTypeRepresentation-2' identity = '10000000-0000-0000-0000-000000000121' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000121' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'primaryRep2' identity = '10000000-0000-0000-0000-000000000122' id = 'i10000000z0000z0000z0000z000000000122' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000026</source>
            <type>i10000000z0000z0000z0000z000000000023</type>
            <generatedProperty name = 'primaryRep2' identity = '00000000-0000-0000-0000-000000000473'>
              <referenceType>i10000000z0000z0000z0000z000000000023</referenceType>
            </generatedProperty>
          </role>
          <role name = 'primaryRep2Opposite' identity = '10000000-0000-0000-0000-000000000123' id = 'i10000000z0000z0000z0000z000000000123' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000023</source>
            <type>i10000000z0000z0000z0000z000000000026</type>
            <generatedProperty name = 'primaryRep2Opposite' identity = '00000000-0000-0000-0000-000000000474'>
              <referenceType>i10000000z0000z0000z0000z000000000026</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConceptDefinitionhasConcept' identity = '10000000-0000-0000-0000-000000000124' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000124' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'exp' identity = '10000000-0000-0000-0000-000000000125' id = 'i10000000z0000z0000z0000z000000000125' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000027</source>
            <type>i10000000z0000z0000z0000z000000000043</type>
            <generatedProperty name = 'exp' identity = '00000000-0000-0000-0000-000000000475'>
              <referenceType>i10000000z0000z0000z0000z000000000043</referenceType>
            </generatedProperty>
          </role>
          <role name = 'expOpposite' identity = '10000000-0000-0000-0000-000000000126' id = 'i10000000z0000z0000z0000z000000000126' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000043</source>
            <type>i10000000z0000z0000z0000z000000000027</type>
            <generatedProperty name = 'expOpposite' identity = '00000000-0000-0000-0000-000000000476'>
              <referenceType>i10000000z0000z0000z0000z000000000027</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConceptDefinitionhasConjConcept' identity = '10000000-0000-0000-0000-000000000127' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000127' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'conjexp' identity = '10000000-0000-0000-0000-000000000128' id = 'i10000000z0000z0000z0000z000000000128' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000027</source>
            <type>i10000000z0000z0000z0000z000000000042</type>
            <generatedProperty name = 'conjexp' identity = '00000000-0000-0000-0000-000000000477'>
              <referenceType>i10000000z0000z0000z0000z000000000042</referenceType>
            </generatedProperty>
          </role>
          <role name = 'conjexpOpposite' identity = '10000000-0000-0000-0000-000000000129' id = 'i10000000z0000z0000z0000z000000000129' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000042</source>
            <type>i10000000z0000z0000z0000z000000000027</type>
            <generatedProperty name = 'conjexpOpposite' identity = '00000000-0000-0000-0000-000000000478'>
              <referenceType>i10000000z0000z0000z0000z000000000027</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConceptSourcehasWord' identity = '10000000-0000-0000-0000-000000000130' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000130' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'source' identity = '10000000-0000-0000-0000-000000000131' id = 'i10000000z0000z0000z0000z000000000131' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'true' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000028</source>
            <type>i10000000z0000z0000z0000z000000000032</type>
            <generatedProperty name = 'source' identity = '00000000-0000-0000-0000-000000000479'>
              <referenceType>i10000000z0000z0000z0000z000000000032</referenceType>
            </generatedProperty>
          </role>
          <role name = 'sourceOpposite' identity = '10000000-0000-0000-0000-000000000132' id = 'i10000000z0000z0000z0000z000000000132' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000032</source>
            <type>i10000000z0000z0000z0000z000000000028</type>
            <generatedProperty name = 'sourceOpposite' identity = '00000000-0000-0000-0000-000000000480'>
              <referenceType>i10000000z0000z0000z0000z000000000028</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NotehasSentence' identity = '10000000-0000-0000-0000-000000000133' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000133' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'sentences' identity = '10000000-0000-0000-0000-000000000134' id = 'i10000000z0000z0000z0000z000000000134' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'true' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000029</source>
            <type>i10000000z0000z0000z0000z000000000030</type>
            <generatedProperty name = 'sentences' identity = '00000000-0000-0000-0000-000000000481'>
              <referenceType>i10000000z0000z0000z0000z000000000030</referenceType>
            </generatedProperty>
          </role>
          <role name = 'sentencesOpposite' identity = '10000000-0000-0000-0000-000000000135' id = 'i10000000z0000z0000z0000z000000000135' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000030</source>
            <type>i10000000z0000z0000z0000z000000000029</type>
            <generatedProperty name = 'sentencesOpposite' identity = '00000000-0000-0000-0000-000000000482'>
              <referenceType>i10000000z0000z0000z0000z000000000029</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SentencehasWord' identity = '10000000-0000-0000-0000-000000000136' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000136' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'words' identity = '10000000-0000-0000-0000-000000000137' id = 'i10000000z0000z0000z0000z000000000137' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'true' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000030</source>
            <type>i10000000z0000z0000z0000z000000000032</type>
            <generatedProperty name = 'words' identity = '00000000-0000-0000-0000-000000000483'>
              <referenceType>i10000000z0000z0000z0000z000000000032</referenceType>
            </generatedProperty>
          </role>
          <role name = 'wordsOpposite' identity = '10000000-0000-0000-0000-000000000138' id = 'i10000000z0000z0000z0000z000000000138' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000032</source>
            <type>i10000000z0000z0000z0000z000000000030</type>
            <generatedProperty name = 'wordsOpposite' identity = '00000000-0000-0000-0000-000000000484'>
              <referenceType>i10000000z0000z0000z0000z000000000030</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NameSpaceURIhasWord' identity = '10000000-0000-0000-0000-000000000139' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000139' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'URI' identity = '10000000-0000-0000-0000-000000000140' id = 'i10000000z0000z0000z0000z000000000140' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'true' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000031</source>
            <type>i10000000z0000z0000z0000z000000000032</type>
            <generatedProperty name = 'URI' identity = '00000000-0000-0000-0000-000000000485'>
              <referenceType>i10000000z0000z0000z0000z000000000032</referenceType>
            </generatedProperty>
          </role>
          <role name = 'URIOpposite' identity = '10000000-0000-0000-0000-000000000141' id = 'i10000000z0000z0000z0000z000000000141' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000032</source>
            <type>i10000000z0000z0000z0000z000000000031</type>
            <generatedProperty name = 'URIOpposite' identity = '00000000-0000-0000-0000-000000000486'>
              <referenceType>i10000000z0000z0000z0000z000000000031</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SBVRExpressionhasSimpleSBVRProp' identity = '10000000-0000-0000-0000-000000000142' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000142' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'firstProposition' identity = '10000000-0000-0000-0000-000000000143' id = 'i10000000z0000z0000z0000z000000000143' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000036</source>
            <type>i10000000z0000z0000z0000z000000000039</type>
            <generatedProperty name = 'firstProposition' identity = '00000000-0000-0000-0000-000000000487'>
              <referenceType>i10000000z0000z0000z0000z000000000039</referenceType>
            </generatedProperty>
          </role>
          <role name = 'firstPropositionOpposite' identity = '10000000-0000-0000-0000-000000000144' id = 'i10000000z0000z0000z0000z000000000144' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000039</source>
            <type>i10000000z0000z0000z0000z000000000036</type>
            <generatedProperty name = 'firstPropositionOpposite' identity = '00000000-0000-0000-0000-000000000488'>
              <referenceType>i10000000z0000z0000z0000z000000000036</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SBVRExpressionhasSBVRPropWithKW' identity = '10000000-0000-0000-0000-000000000145' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000145' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'nextProposition' identity = '10000000-0000-0000-0000-000000000146' id = 'i10000000z0000z0000z0000z000000000146' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000036</source>
            <type>i10000000z0000z0000z0000z000000000037</type>
            <generatedProperty name = 'nextProposition' identity = '00000000-0000-0000-0000-000000000489'>
              <referenceType>i10000000z0000z0000z0000z000000000037</referenceType>
            </generatedProperty>
          </role>
          <role name = 'nextPropositionOpposite' identity = '10000000-0000-0000-0000-000000000147' id = 'i10000000z0000z0000z0000z000000000147' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000037</source>
            <type>i10000000z0000z0000z0000z000000000036</type>
            <generatedProperty name = 'nextPropositionOpposite' identity = '00000000-0000-0000-0000-000000000490'>
              <referenceType>i10000000z0000z0000z0000z000000000036</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SBVRPropWithKWhasSimpleSBVRProp' identity = '10000000-0000-0000-0000-000000000148' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000148' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'proposition' identity = '10000000-0000-0000-0000-000000000149' id = 'i10000000z0000z0000z0000z000000000149' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000037</source>
            <type>i10000000z0000z0000z0000z000000000039</type>
            <generatedProperty name = 'proposition' identity = '00000000-0000-0000-0000-000000000491'>
              <referenceType>i10000000z0000z0000z0000z000000000039</referenceType>
            </generatedProperty>
          </role>
          <role name = 'propositionOpposite' identity = '10000000-0000-0000-0000-000000000150' id = 'i10000000z0000z0000z0000z000000000150' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000039</source>
            <type>i10000000z0000z0000z0000z000000000037</type>
            <generatedProperty name = 'propositionOpposite' identity = '00000000-0000-0000-0000-000000000492'>
              <referenceType>i10000000z0000z0000z0000z000000000037</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SimpleSBVRProphasModalBegin' identity = '10000000-0000-0000-0000-000000000151' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000151' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'modal' identity = '10000000-0000-0000-0000-000000000152' id = 'i10000000z0000z0000z0000z000000000152' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000039</source>
            <type>i10000000z0000z0000z0000z000000000053</type>
            <generatedProperty name = 'modal' identity = '00000000-0000-0000-0000-000000000493'>
              <referenceType>i10000000z0000z0000z0000z000000000053</referenceType>
            </generatedProperty>
          </role>
          <role name = 'modalOpposite' identity = '10000000-0000-0000-0000-000000000153' id = 'i10000000z0000z0000z0000z000000000153' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000053</source>
            <type>i10000000z0000z0000z0000z000000000039</type>
            <generatedProperty name = 'modalOpposite' identity = '00000000-0000-0000-0000-000000000494'>
              <referenceType>i10000000z0000z0000z0000z000000000039</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SimpleSBVRProphasConcept-3' identity = '10000000-0000-0000-0000-000000000154' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000154' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'concept1' identity = '10000000-0000-0000-0000-000000000155' id = 'i10000000z0000z0000z0000z000000000155' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000039</source>
            <type>i10000000z0000z0000z0000z000000000043</type>
            <generatedProperty name = 'concept1' identity = '00000000-0000-0000-0000-000000000495'>
              <referenceType>i10000000z0000z0000z0000z000000000043</referenceType>
            </generatedProperty>
          </role>
          <role name = 'concept1Opposite' identity = '10000000-0000-0000-0000-000000000156' id = 'i10000000z0000z0000z0000z000000000156' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000043</source>
            <type>i10000000z0000z0000z0000z000000000039</type>
            <generatedProperty name = 'concept1Opposite' identity = '00000000-0000-0000-0000-000000000496'>
              <referenceType>i10000000z0000z0000z0000z000000000039</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SimpleSBVRProphasModalForm' identity = '10000000-0000-0000-0000-000000000157' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000157' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'modalVerb' identity = '10000000-0000-0000-0000-000000000158' id = 'i10000000z0000z0000z0000z000000000158' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000039</source>
            <type>i10000000z0000z0000z0000z000000000038</type>
            <generatedProperty name = 'modalVerb' identity = '00000000-0000-0000-0000-000000000497'>
              <referenceType>i10000000z0000z0000z0000z000000000038</referenceType>
            </generatedProperty>
          </role>
          <role name = 'modalVerbOpposite' identity = '10000000-0000-0000-0000-000000000159' id = 'i10000000z0000z0000z0000z000000000159' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000038</source>
            <type>i10000000z0000z0000z0000z000000000039</type>
            <generatedProperty name = 'modalVerbOpposite' identity = '00000000-0000-0000-0000-000000000498'>
              <referenceType>i10000000z0000z0000z0000z000000000039</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SimpleSBVRProphasConcept-4' identity = '10000000-0000-0000-0000-000000000160' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000160' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'concept2' identity = '10000000-0000-0000-0000-000000000161' id = 'i10000000z0000z0000z0000z000000000161' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000039</source>
            <type>i10000000z0000z0000z0000z000000000043</type>
            <generatedProperty name = 'concept2' identity = '00000000-0000-0000-0000-000000000499'>
              <referenceType>i10000000z0000z0000z0000z000000000043</referenceType>
            </generatedProperty>
          </role>
          <role name = 'concept24Opposite' identity = '10000000-0000-0000-0000-000000000162' id = 'i10000000z0000z0000z0000z000000000162' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000043</source>
            <type>i10000000z0000z0000z0000z000000000039</type>
            <generatedProperty name = 'concept24Opposite' identity = '00000000-0000-0000-0000-000000000500'>
              <referenceType>i10000000z0000z0000z0000z000000000039</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SubSBVRProphasConcept' identity = '10000000-0000-0000-0000-000000000163' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000163' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'concept2' identity = '10000000-0000-0000-0000-000000000164' id = 'i10000000z0000z0000z0000z000000000164' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000040</source>
            <type>i10000000z0000z0000z0000z000000000043</type>
            <generatedProperty name = 'concept2' identity = '00000000-0000-0000-0000-000000000501'>
              <referenceType>i10000000z0000z0000z0000z000000000043</referenceType>
            </generatedProperty>
          </role>
          <role name = 'concept25Opposite' identity = '10000000-0000-0000-0000-000000000165' id = 'i10000000z0000z0000z0000z000000000165' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000043</source>
            <type>i10000000z0000z0000z0000z000000000040</type>
            <generatedProperty name = 'concept25Opposite' identity = '00000000-0000-0000-0000-000000000502'>
              <referenceType>i10000000z0000z0000z0000z000000000040</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'LinkSBVRConcepthasConcept' identity = '10000000-0000-0000-0000-000000000166' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000166' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'concept' identity = '10000000-0000-0000-0000-000000000167' id = 'i10000000z0000z0000z0000z000000000167' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000041</source>
            <type>i10000000z0000z0000z0000z000000000043</type>
            <generatedProperty name = 'concept' identity = '00000000-0000-0000-0000-000000000503'>
              <referenceType>i10000000z0000z0000z0000z000000000043</referenceType>
            </generatedProperty>
          </role>
          <role name = 'concept6Opposite' identity = '10000000-0000-0000-0000-000000000168' id = 'i10000000z0000z0000z0000z000000000168' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000043</source>
            <type>i10000000z0000z0000z0000z000000000041</type>
            <generatedProperty name = 'concept6Opposite' identity = '00000000-0000-0000-0000-000000000504'>
              <referenceType>i10000000z0000z0000z0000z000000000041</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConjConcepthasConcept' identity = '10000000-0000-0000-0000-000000000169' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000169' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'concept' identity = '10000000-0000-0000-0000-000000000170' id = 'i10000000z0000z0000z0000z000000000170' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000042</source>
            <type>i10000000z0000z0000z0000z000000000043</type>
            <generatedProperty name = 'concept' identity = '00000000-0000-0000-0000-000000000505'>
              <referenceType>i10000000z0000z0000z0000z000000000043</referenceType>
            </generatedProperty>
          </role>
          <role name = 'concept7Opposite' identity = '10000000-0000-0000-0000-000000000171' id = 'i10000000z0000z0000z0000z000000000171' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000043</source>
            <type>i10000000z0000z0000z0000z000000000042</type>
            <generatedProperty name = 'concept7Opposite' identity = '00000000-0000-0000-0000-000000000506'>
              <referenceType>i10000000z0000z0000z0000z000000000042</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepthasSubSBVRProp' identity = '10000000-0000-0000-0000-000000000172' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000172' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'subProp' identity = '10000000-0000-0000-0000-000000000173' id = 'i10000000z0000z0000z0000z000000000173' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000043</source>
            <type>i10000000z0000z0000z0000z000000000040</type>
            <generatedProperty name = 'subProp' identity = '00000000-0000-0000-0000-000000000507'>
              <referenceType>i10000000z0000z0000z0000z000000000040</referenceType>
            </generatedProperty>
          </role>
          <role name = 'subPropOpposite' identity = '10000000-0000-0000-0000-000000000174' id = 'i10000000z0000z0000z0000z000000000174' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000040</source>
            <type>i10000000z0000z0000z0000z000000000043</type>
            <generatedProperty name = 'subPropOpposite' identity = '00000000-0000-0000-0000-000000000508'>
              <referenceType>i10000000z0000z0000z0000z000000000043</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepthasLinkSBVRConcept' identity = '10000000-0000-0000-0000-000000000175' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000175' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'linkedConcept' identity = '10000000-0000-0000-0000-000000000176' id = 'i10000000z0000z0000z0000z000000000176' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000043</source>
            <type>i10000000z0000z0000z0000z000000000041</type>
            <generatedProperty name = 'linkedConcept' identity = '00000000-0000-0000-0000-000000000509'>
              <referenceType>i10000000z0000z0000z0000z000000000041</referenceType>
            </generatedProperty>
          </role>
          <role name = 'linkedConceptOpposite' identity = '10000000-0000-0000-0000-000000000177' id = 'i10000000z0000z0000z0000z000000000177' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000041</source>
            <type>i10000000z0000z0000z0000z000000000043</type>
            <generatedProperty name = 'linkedConceptOpposite' identity = '00000000-0000-0000-0000-000000000510'>
              <referenceType>i10000000z0000z0000z0000z000000000043</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NameConcepthasNameWord' identity = '10000000-0000-0000-0000-000000000178' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000178' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'name' identity = '10000000-0000-0000-0000-000000000179' id = 'i10000000z0000z0000z0000z000000000179' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000044</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'name' identity = '00000000-0000-0000-0000-000000000511'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
          <role name = 'name8Opposite' identity = '10000000-0000-0000-0000-000000000180' id = 'i10000000z0000z0000z0000z000000000180' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000044</type>
            <generatedProperty name = 'name8Opposite' identity = '00000000-0000-0000-0000-000000000512'>
              <referenceType>i10000000z0000z0000z0000z000000000044</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ObjectConcepthasNounConcept' identity = '10000000-0000-0000-0000-000000000181' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000181' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'operatoredConcept' identity = '10000000-0000-0000-0000-000000000182' id = 'i10000000z0000z0000z0000z000000000182' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000045</source>
            <type>i10000000z0000z0000z0000z000000000047</type>
            <generatedProperty name = 'operatoredConcept' identity = '00000000-0000-0000-0000-000000000513'>
              <referenceType>i10000000z0000z0000z0000z000000000047</referenceType>
            </generatedProperty>
          </role>
          <role name = 'operatoredConceptOpposite' identity = '10000000-0000-0000-0000-000000000183' id = 'i10000000z0000z0000z0000z000000000183' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000047</source>
            <type>i10000000z0000z0000z0000z000000000045</type>
            <generatedProperty name = 'operatoredConceptOpposite' identity = '00000000-0000-0000-0000-000000000514'>
              <referenceType>i10000000z0000z0000z0000z000000000045</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ObjectConcepthasQualification' identity = '10000000-0000-0000-0000-000000000184' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000184' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'qualify' identity = '10000000-0000-0000-0000-000000000185' id = 'i10000000z0000z0000z0000z000000000185' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000045</source>
            <type>i10000000z0000z0000z0000z000000000048</type>
            <generatedProperty name = 'qualify' identity = '00000000-0000-0000-0000-000000000515'>
              <referenceType>i10000000z0000z0000z0000z000000000048</referenceType>
            </generatedProperty>
          </role>
          <role name = 'qualifyOpposite' identity = '10000000-0000-0000-0000-000000000186' id = 'i10000000z0000z0000z0000z000000000186' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000048</source>
            <type>i10000000z0000z0000z0000z000000000045</type>
            <generatedProperty name = 'qualifyOpposite' identity = '00000000-0000-0000-0000-000000000516'>
              <referenceType>i10000000z0000z0000z0000z000000000045</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'StringConcepthasQuotedStringWord' identity = '10000000-0000-0000-0000-000000000187' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000187' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'stringWord' identity = '10000000-0000-0000-0000-000000000188' id = 'i10000000z0000z0000z0000z000000000188' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000046</source>
            <type>i10000000z0000z0000z0000z000000000034</type>
            <generatedProperty name = 'stringWord' identity = '00000000-0000-0000-0000-000000000517'>
              <referenceType>i10000000z0000z0000z0000z000000000034</referenceType>
            </generatedProperty>
          </role>
          <role name = 'stringWordOpposite' identity = '10000000-0000-0000-0000-000000000189' id = 'i10000000z0000z0000z0000z000000000189' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000034</source>
            <type>i10000000z0000z0000z0000z000000000046</type>
            <generatedProperty name = 'stringWordOpposite' identity = '00000000-0000-0000-0000-000000000518'>
              <referenceType>i10000000z0000z0000z0000z000000000046</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NounConcepthasQualifier' identity = '10000000-0000-0000-0000-000000000190' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000190' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'qualif' identity = '10000000-0000-0000-0000-000000000191' id = 'i10000000z0000z0000z0000z000000000191' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000047</source>
            <type>i10000000z0000z0000z0000z000000000052</type>
            <generatedProperty name = 'qualif' identity = '00000000-0000-0000-0000-000000000519'>
              <referenceType>i10000000z0000z0000z0000z000000000052</referenceType>
            </generatedProperty>
          </role>
          <role name = 'qualifOpposite' identity = '10000000-0000-0000-0000-000000000192' id = 'i10000000z0000z0000z0000z000000000192' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000052</source>
            <type>i10000000z0000z0000z0000z000000000047</type>
            <generatedProperty name = 'qualifOpposite' identity = '00000000-0000-0000-0000-000000000520'>
              <referenceType>i10000000z0000z0000z0000z000000000047</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NounConcepthasStringWord' identity = '10000000-0000-0000-0000-000000000193' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000193' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'noun' identity = '10000000-0000-0000-0000-000000000194' id = 'i10000000z0000z0000z0000z000000000194' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000047</source>
            <type>i10000000z0000z0000z0000z000000000033</type>
            <generatedProperty name = 'noun' identity = '00000000-0000-0000-0000-000000000521'>
              <referenceType>i10000000z0000z0000z0000z000000000033</referenceType>
            </generatedProperty>
          </role>
          <role name = 'noun9Opposite' identity = '10000000-0000-0000-0000-000000000195' id = 'i10000000z0000z0000z0000z000000000195' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000033</source>
            <type>i10000000z0000z0000z0000z000000000047</type>
            <generatedProperty name = 'noun9Opposite' identity = '00000000-0000-0000-0000-000000000522'>
              <referenceType>i10000000z0000z0000z0000z000000000047</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'QualificationhasGeneralConcept' identity = '10000000-0000-0000-0000-000000000196' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000196' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'generalConcept' identity = '10000000-0000-0000-0000-000000000197' id = 'i10000000z0000z0000z0000z000000000197' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000048</source>
            <type>i10000000z0000z0000z0000z000000000049</type>
            <generatedProperty name = 'generalConcept' identity = '00000000-0000-0000-0000-000000000523'>
              <referenceType>i10000000z0000z0000z0000z000000000049</referenceType>
            </generatedProperty>
          </role>
          <role name = 'generalConceptOpposite' identity = '10000000-0000-0000-0000-000000000198' id = 'i10000000z0000z0000z0000z000000000198' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000049</source>
            <type>i10000000z0000z0000z0000z000000000048</type>
            <generatedProperty name = 'generalConceptOpposite' identity = '00000000-0000-0000-0000-000000000524'>
              <referenceType>i10000000z0000z0000z0000z000000000048</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NameGConcepthasNameConcept' identity = '10000000-0000-0000-0000-000000000199' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000199' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'name' identity = '10000000-0000-0000-0000-000000000200' id = 'i10000000z0000z0000z0000z000000000200' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000050</source>
            <type>i10000000z0000z0000z0000z000000000044</type>
            <generatedProperty name = 'name' identity = '00000000-0000-0000-0000-000000000525'>
              <referenceType>i10000000z0000z0000z0000z000000000044</referenceType>
            </generatedProperty>
          </role>
          <role name = 'nameOpposite' identity = '10000000-0000-0000-0000-000000000201' id = 'i10000000z0000z0000z0000z000000000201' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000044</source>
            <type>i10000000z0000z0000z0000z000000000050</type>
            <generatedProperty name = 'nameOpposite' identity = '00000000-0000-0000-0000-000000000526'>
              <referenceType>i10000000z0000z0000z0000z000000000050</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NounGConcepthasStringWord' identity = '10000000-0000-0000-0000-000000000202' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000202' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'noun' identity = '10000000-0000-0000-0000-000000000203' id = 'i10000000z0000z0000z0000z000000000203' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000051</source>
            <type>i10000000z0000z0000z0000z000000000033</type>
            <generatedProperty name = 'noun' identity = '00000000-0000-0000-0000-000000000527'>
              <referenceType>i10000000z0000z0000z0000z000000000033</referenceType>
            </generatedProperty>
          </role>
          <role name = 'noun10Opposite' identity = '10000000-0000-0000-0000-000000000204' id = 'i10000000z0000z0000z0000z000000000204' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000033</source>
            <type>i10000000z0000z0000z0000z000000000051</type>
            <generatedProperty name = 'noun10Opposite' identity = '00000000-0000-0000-0000-000000000528'>
              <referenceType>i10000000z0000z0000z0000z000000000051</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'QualifierhasStringWord-5' identity = '10000000-0000-0000-0000-000000000205' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000205' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'min' identity = '10000000-0000-0000-0000-000000000206' id = 'i10000000z0000z0000z0000z000000000206' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000052</source>
            <type>i10000000z0000z0000z0000z000000000033</type>
            <generatedProperty name = 'min' identity = '00000000-0000-0000-0000-000000000529'>
              <referenceType>i10000000z0000z0000z0000z000000000033</referenceType>
            </generatedProperty>
          </role>
          <role name = 'minOpposite' identity = '10000000-0000-0000-0000-000000000207' id = 'i10000000z0000z0000z0000z000000000207' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000033</source>
            <type>i10000000z0000z0000z0000z000000000052</type>
            <generatedProperty name = 'minOpposite' identity = '00000000-0000-0000-0000-000000000530'>
              <referenceType>i10000000z0000z0000z0000z000000000052</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'QualifierhasStringWord-6' identity = '10000000-0000-0000-0000-000000000208' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000208' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'max' identity = '10000000-0000-0000-0000-000000000209' id = 'i10000000z0000z0000z0000z000000000209' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000052</source>
            <type>i10000000z0000z0000z0000z000000000033</type>
            <generatedProperty name = 'max' identity = '00000000-0000-0000-0000-000000000531'>
              <referenceType>i10000000z0000z0000z0000z000000000033</referenceType>
            </generatedProperty>
          </role>
          <role name = 'maxOpposite' identity = '10000000-0000-0000-0000-000000000210' id = 'i10000000z0000z0000z0000z000000000210' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000033</source>
            <type>i10000000z0000z0000z0000z000000000052</type>
            <generatedProperty name = 'maxOpposite' identity = '00000000-0000-0000-0000-000000000532'>
              <referenceType>i10000000z0000z0000z0000z000000000052</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
    </relationships>
    <trees>
      <treenavigator name = 'intrinsic' identity = '00000000-0000-0000-0000-000000000002' id = 'i00000000z0000z0000z0000z000000000001'>
        <expressions>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Root-LocatedElement' identity = '00000000-0000-0000-0000-000000000013' id = 'i00000000z0000z0000z0000z000000000014' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000003</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'VocabularyEntry-LocatedElement' identity = '00000000-0000-0000-0000-000000000017' id = 'i00000000z0000z0000z0000z000000000018' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000004</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'DefCaption-Caption' identity = '00000000-0000-0000-0000-000000000021' id = 'i00000000z0000z0000z0000z000000000022' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000006</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'DescCaption-Caption' identity = '00000000-0000-0000-0000-000000000025' id = 'i00000000z0000z0000z0000z000000000026' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000007</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SrcCaption-Caption' identity = '00000000-0000-0000-0000-000000000029' id = 'i00000000z0000z0000z0000z000000000030' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000008</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'DBCaption-Caption' identity = '00000000-0000-0000-0000-000000000033' id = 'i00000000z0000z0000z0000z000000000034' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000009</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'GenCCaption-Caption' identity = '00000000-0000-0000-0000-000000000037' id = 'i00000000z0000z0000z0000z000000000038' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000010</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'CTypCaption-Caption' identity = '00000000-0000-0000-0000-000000000041' id = 'i00000000z0000z0000z0000z000000000042' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000011</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Necessity-Caption' identity = '00000000-0000-0000-0000-000000000045' id = 'i00000000z0000z0000z0000z000000000046' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000012</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Possibility-Caption' identity = '00000000-0000-0000-0000-000000000049' id = 'i00000000z0000z0000z0000z000000000050' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000013</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RefSCaption-Caption' identity = '00000000-0000-0000-0000-000000000053' id = 'i00000000z0000z0000z0000z000000000054' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000014</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NoteCaption-Caption' identity = '00000000-0000-0000-0000-000000000057' id = 'i00000000z0000z0000z0000z000000000058' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000015</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExCaption-Caption' identity = '00000000-0000-0000-0000-000000000061' id = 'i00000000z0000z0000z0000z000000000062' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000016</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SynCaption-Caption' identity = '00000000-0000-0000-0000-000000000065' id = 'i00000000z0000z0000z0000z000000000066' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000017</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SynFCaption-Caption' identity = '00000000-0000-0000-0000-000000000069' id = 'i00000000z0000z0000z0000z000000000070' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000018</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SeeCaption-Caption' identity = '00000000-0000-0000-0000-000000000073' id = 'i00000000z0000z0000z0000z000000000074' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000019</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SFCaption-Caption' identity = '00000000-0000-0000-0000-000000000077' id = 'i00000000z0000z0000z0000z000000000078' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000020</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NSURICaption-Caption' identity = '00000000-0000-0000-0000-000000000081' id = 'i00000000z0000z0000z0000z000000000082' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000021</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'TermRepresentation-NotFactTypeRepresentation' identity = '00000000-0000-0000-0000-000000000085' id = 'i00000000z0000z0000z0000z000000000086' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000023</superType>
            <subType>i10000000z0000z0000z0000z000000000024</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NameRepresentation-NotFactTypeRepresentation' identity = '00000000-0000-0000-0000-000000000089' id = 'i00000000z0000z0000z0000z000000000090' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000023</superType>
            <subType>i10000000z0000z0000z0000z000000000025</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactTypeFormRepresentation-PrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000093' id = 'i00000000z0000z0000z0000z000000000094' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000022</superType>
            <subType>i10000000z0000z0000z0000z000000000026</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptDefinition-LocatedElement' identity = '00000000-0000-0000-0000-000000000097' id = 'i00000000z0000z0000z0000z000000000098' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000027</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptSource-LocatedElement' identity = '00000000-0000-0000-0000-000000000101' id = 'i00000000z0000z0000z0000z000000000102' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000028</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Note-LocatedElement' identity = '00000000-0000-0000-0000-000000000105' id = 'i00000000z0000z0000z0000z000000000106' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000029</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Sentence-LocatedElement' identity = '00000000-0000-0000-0000-000000000109' id = 'i00000000z0000z0000z0000z000000000110' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000030</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NameSpaceURI-LocatedElement' identity = '00000000-0000-0000-0000-000000000113' id = 'i00000000z0000z0000z0000z000000000114' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000031</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StringWord-Word' identity = '00000000-0000-0000-0000-000000000117' id = 'i00000000z0000z0000z0000z000000000118' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000032</superType>
            <subType>i10000000z0000z0000z0000z000000000033</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'QuotedStringWord-Word' identity = '00000000-0000-0000-0000-000000000121' id = 'i00000000z0000z0000z0000z000000000122' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000032</superType>
            <subType>i10000000z0000z0000z0000z000000000034</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NameWord-Word' identity = '00000000-0000-0000-0000-000000000125' id = 'i00000000z0000z0000z0000z000000000126' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000032</superType>
            <subType>i10000000z0000z0000z0000z000000000035</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SBVRExpression-LocatedElement' identity = '00000000-0000-0000-0000-000000000129' id = 'i00000000z0000z0000z0000z000000000130' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000036</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SBVRPropWithKW-LocatedElement' identity = '00000000-0000-0000-0000-000000000133' id = 'i00000000z0000z0000z0000z000000000134' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000037</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ModalForm-LocatedElement' identity = '00000000-0000-0000-0000-000000000137' id = 'i00000000z0000z0000z0000z000000000138' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000038</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SimpleSBVRProp-LocatedElement' identity = '00000000-0000-0000-0000-000000000141' id = 'i00000000z0000z0000z0000z000000000142' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000039</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SubSBVRProp-LocatedElement' identity = '00000000-0000-0000-0000-000000000145' id = 'i00000000z0000z0000z0000z000000000146' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000040</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'LinkSBVRConcept-LocatedElement' identity = '00000000-0000-0000-0000-000000000149' id = 'i00000000z0000z0000z0000z000000000150' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000041</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConjConcept-LocatedElement' identity = '00000000-0000-0000-0000-000000000153' id = 'i00000000z0000z0000z0000z000000000154' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000042</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NameConcept-Concept' identity = '00000000-0000-0000-0000-000000000157' id = 'i00000000z0000z0000z0000z000000000158' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000043</superType>
            <subType>i10000000z0000z0000z0000z000000000044</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ObjectConcept-Concept' identity = '00000000-0000-0000-0000-000000000161' id = 'i00000000z0000z0000z0000z000000000162' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000043</superType>
            <subType>i10000000z0000z0000z0000z000000000045</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StringConcept-Concept' identity = '00000000-0000-0000-0000-000000000165' id = 'i00000000z0000z0000z0000z000000000166' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000043</superType>
            <subType>i10000000z0000z0000z0000z000000000046</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NounConcept-LocatedElement' identity = '00000000-0000-0000-0000-000000000169' id = 'i00000000z0000z0000z0000z000000000170' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000047</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Qualification-LocatedElement' identity = '00000000-0000-0000-0000-000000000173' id = 'i00000000z0000z0000z0000z000000000174' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000048</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NameGConcept-GeneralConcept' identity = '00000000-0000-0000-0000-000000000177' id = 'i00000000z0000z0000z0000z000000000178' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000049</superType>
            <subType>i10000000z0000z0000z0000z000000000050</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NounGConcept-GeneralConcept' identity = '00000000-0000-0000-0000-000000000181' id = 'i00000000z0000z0000z0000z000000000182' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000049</superType>
            <subType>i10000000z0000z0000z0000z000000000051</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Qualifier-LocatedElement' identity = '00000000-0000-0000-0000-000000000185' id = 'i00000000z0000z0000z0000z000000000186' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000052</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ModalBegin-LocatedElement' identity = '00000000-0000-0000-0000-000000000189' id = 'i00000000z0000z0000z0000z000000000190' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000053</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ModalBeginC-ModalBegin' identity = '00000000-0000-0000-0000-000000000193' id = 'i00000000z0000z0000z0000z000000000194' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000053</superType>
            <subType>i10000000z0000z0000z0000z000000000054</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Caption-LocatedElement' identity = '00000000-0000-0000-0000-000000000197' id = 'i00000000z0000z0000z0000z000000000198' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000005</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PrimaryRepresentation-LocatedElement' identity = '00000000-0000-0000-0000-000000000201' id = 'i00000000z0000z0000z0000z000000000202' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000022</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NotFactTypeRepresentation-PrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000205' id = 'i00000000z0000z0000z0000z000000000206' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000022</superType>
            <subType>i10000000z0000z0000z0000z000000000023</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Word-LocatedElement' identity = '00000000-0000-0000-0000-000000000209' id = 'i00000000z0000z0000z0000z000000000210' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000032</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Concept-LocatedElement' identity = '00000000-0000-0000-0000-000000000213' id = 'i00000000z0000z0000z0000z000000000214' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000043</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'GeneralConcept-LocatedElement' identity = '00000000-0000-0000-0000-000000000217' id = 'i00000000z0000z0000z0000z000000000218' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000049</subType>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionRoothasVocabularyEntry' identity = '00000000-0000-0000-0000-000000000221' id = 'i00000000z0000z0000z0000z000000000222' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000056</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionVocabularyEntryhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000225' id = 'i00000000z0000z0000z0000z000000000226' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000059</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionVocabularyEntryhasCaption' identity = '00000000-0000-0000-0000-000000000229' id = 'i00000000z0000z0000z0000z000000000230' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000062</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionDefCaptionhasConceptDefinition' identity = '00000000-0000-0000-0000-000000000233' id = 'i00000000z0000z0000z0000z000000000234' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000065</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionDescCaptionhasNote' identity = '00000000-0000-0000-0000-000000000237' id = 'i00000000z0000z0000z0000z000000000238' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000068</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSrcCaptionhasConceptSource' identity = '00000000-0000-0000-0000-000000000241' id = 'i00000000z0000z0000z0000z000000000242' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000071</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionDBCaptionhasConceptSource' identity = '00000000-0000-0000-0000-000000000245' id = 'i00000000z0000z0000z0000z000000000246' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000074</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionGenCCaptionhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000249' id = 'i00000000z0000z0000z0000z000000000250' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000077</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionCTypCaptionhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000253' id = 'i00000000z0000z0000z0000z000000000254' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000080</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNecessityhasSBVRExpression' identity = '00000000-0000-0000-0000-000000000257' id = 'i00000000z0000z0000z0000z000000000258' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000083</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionPossibilityhasSBVRExpression' identity = '00000000-0000-0000-0000-000000000261' id = 'i00000000z0000z0000z0000z000000000262' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000086</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionRefSCaptionhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000265' id = 'i00000000z0000z0000z0000z000000000266' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000089</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNoteCaptionhasNote' identity = '00000000-0000-0000-0000-000000000269' id = 'i00000000z0000z0000z0000z000000000270' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000092</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionExCaptionhasSBVRExpression' identity = '00000000-0000-0000-0000-000000000273' id = 'i00000000z0000z0000z0000z000000000274' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000095</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSynCaptionhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000277' id = 'i00000000z0000z0000z0000z000000000278' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000098</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSynFCaptionhasSBVRExpression' identity = '00000000-0000-0000-0000-000000000281' id = 'i00000000z0000z0000z0000z000000000282' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000101</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSeeCaptionhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000285' id = 'i00000000z0000z0000z0000z000000000286' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000104</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSFCaptionhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000289' id = 'i00000000z0000z0000z0000z000000000290' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000107</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNSURICaptionhasNameSpaceURI' identity = '00000000-0000-0000-0000-000000000293' id = 'i00000000z0000z0000z0000z000000000294' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000110</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionTermRepresentationhasStringWord' identity = '00000000-0000-0000-0000-000000000297' id = 'i00000000z0000z0000z0000z000000000298' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000113</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNameRepresentationhasNameWord' identity = '00000000-0000-0000-0000-000000000301' id = 'i00000000z0000z0000z0000z000000000302' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000116</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeFormRepresentationhasNotFactTypeRepresentation-1' identity = '00000000-0000-0000-0000-000000000305' id = 'i00000000z0000z0000z0000z000000000306' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000119</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeFormRepresentationhasNotFactTypeRepresentation-2' identity = '00000000-0000-0000-0000-000000000309' id = 'i00000000z0000z0000z0000z000000000310' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000122</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConceptDefinitionhasConcept' identity = '00000000-0000-0000-0000-000000000313' id = 'i00000000z0000z0000z0000z000000000314' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000125</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConceptDefinitionhasConjConcept' identity = '00000000-0000-0000-0000-000000000317' id = 'i00000000z0000z0000z0000z000000000318' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000128</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConceptSourcehasWord' identity = '00000000-0000-0000-0000-000000000321' id = 'i00000000z0000z0000z0000z000000000322' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000131</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNotehasSentence' identity = '00000000-0000-0000-0000-000000000325' id = 'i00000000z0000z0000z0000z000000000326' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000134</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSentencehasWord' identity = '00000000-0000-0000-0000-000000000329' id = 'i00000000z0000z0000z0000z000000000330' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000137</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNameSpaceURIhasWord' identity = '00000000-0000-0000-0000-000000000333' id = 'i00000000z0000z0000z0000z000000000334' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000140</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSBVRExpressionhasSimpleSBVRProp' identity = '00000000-0000-0000-0000-000000000337' id = 'i00000000z0000z0000z0000z000000000338' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000143</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSBVRExpressionhasSBVRPropWithKW' identity = '00000000-0000-0000-0000-000000000341' id = 'i00000000z0000z0000z0000z000000000342' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000146</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSBVRPropWithKWhasSimpleSBVRProp' identity = '00000000-0000-0000-0000-000000000345' id = 'i00000000z0000z0000z0000z000000000346' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000149</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSimpleSBVRProphasModalBegin' identity = '00000000-0000-0000-0000-000000000349' id = 'i00000000z0000z0000z0000z000000000350' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000152</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSimpleSBVRProphasConcept-3' identity = '00000000-0000-0000-0000-000000000353' id = 'i00000000z0000z0000z0000z000000000354' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000155</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSimpleSBVRProphasModalForm' identity = '00000000-0000-0000-0000-000000000357' id = 'i00000000z0000z0000z0000z000000000358' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000158</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSimpleSBVRProphasConcept-4' identity = '00000000-0000-0000-0000-000000000361' id = 'i00000000z0000z0000z0000z000000000362' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000161</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSubSBVRProphasConcept' identity = '00000000-0000-0000-0000-000000000365' id = 'i00000000z0000z0000z0000z000000000366' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000164</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionLinkSBVRConcepthasConcept' identity = '00000000-0000-0000-0000-000000000369' id = 'i00000000z0000z0000z0000z000000000370' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000167</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConjConcepthasConcept' identity = '00000000-0000-0000-0000-000000000373' id = 'i00000000z0000z0000z0000z000000000374' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000170</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepthasSubSBVRProp' identity = '00000000-0000-0000-0000-000000000377' id = 'i00000000z0000z0000z0000z000000000378' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000173</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepthasLinkSBVRConcept' identity = '00000000-0000-0000-0000-000000000381' id = 'i00000000z0000z0000z0000z000000000382' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000176</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNameConcepthasNameWord' identity = '00000000-0000-0000-0000-000000000385' id = 'i00000000z0000z0000z0000z000000000386' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000179</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionObjectConcepthasNounConcept' identity = '00000000-0000-0000-0000-000000000389' id = 'i00000000z0000z0000z0000z000000000390' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000182</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionObjectConcepthasQualification' identity = '00000000-0000-0000-0000-000000000393' id = 'i00000000z0000z0000z0000z000000000394' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000185</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionStringConcepthasQuotedStringWord' identity = '00000000-0000-0000-0000-000000000397' id = 'i00000000z0000z0000z0000z000000000398' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000188</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNounConcepthasQualifier' identity = '00000000-0000-0000-0000-000000000401' id = 'i00000000z0000z0000z0000z000000000402' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000191</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNounConcepthasStringWord' identity = '00000000-0000-0000-0000-000000000405' id = 'i00000000z0000z0000z0000z000000000406' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000194</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionQualificationhasGeneralConcept' identity = '00000000-0000-0000-0000-000000000409' id = 'i00000000z0000z0000z0000z000000000410' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000197</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNameGConcepthasNameConcept' identity = '00000000-0000-0000-0000-000000000413' id = 'i00000000z0000z0000z0000z000000000414' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000200</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNounGConcepthasStringWord' identity = '00000000-0000-0000-0000-000000000417' id = 'i00000000z0000z0000z0000z000000000418' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000203</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionQualifierhasStringWord-5' identity = '00000000-0000-0000-0000-000000000421' id = 'i00000000z0000z0000z0000z000000000422' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000206</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionQualifierhasStringWord-6' identity = '00000000-0000-0000-0000-000000000425' id = 'i00000000z0000z0000z0000z000000000426' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000209</role>
          </treeExpression>
        </expressions>
        <roots/>
      </treenavigator>
      <treenavigator xsi:type = 'ShadowTreeNavigator' name = 'completeDiagram' identity = '00000000-0000-0000-0000-000000000004' id = 'i00000000z0000z0000z0000z000000000003'>
        <expressions>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Root-LocatedElement' identity = '00000000-0000-0000-0000-000000000015' id = 'i00000000z0000z0000z0000z000000000016' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000014</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000003</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'VocabularyEntry-LocatedElement' identity = '00000000-0000-0000-0000-000000000019' id = 'i00000000z0000z0000z0000z000000000020' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000018</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000004</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'DefCaption-Caption' identity = '00000000-0000-0000-0000-000000000023' id = 'i00000000z0000z0000z0000z000000000024' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000022</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000006</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'DescCaption-Caption' identity = '00000000-0000-0000-0000-000000000027' id = 'i00000000z0000z0000z0000z000000000028' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000026</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000007</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SrcCaption-Caption' identity = '00000000-0000-0000-0000-000000000031' id = 'i00000000z0000z0000z0000z000000000032' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000030</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000008</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'DBCaption-Caption' identity = '00000000-0000-0000-0000-000000000035' id = 'i00000000z0000z0000z0000z000000000036' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000034</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000009</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'GenCCaption-Caption' identity = '00000000-0000-0000-0000-000000000039' id = 'i00000000z0000z0000z0000z000000000040' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000038</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000010</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'CTypCaption-Caption' identity = '00000000-0000-0000-0000-000000000043' id = 'i00000000z0000z0000z0000z000000000044' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000042</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000011</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Necessity-Caption' identity = '00000000-0000-0000-0000-000000000047' id = 'i00000000z0000z0000z0000z000000000048' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000046</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000012</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Possibility-Caption' identity = '00000000-0000-0000-0000-000000000051' id = 'i00000000z0000z0000z0000z000000000052' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000050</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000013</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RefSCaption-Caption' identity = '00000000-0000-0000-0000-000000000055' id = 'i00000000z0000z0000z0000z000000000056' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000054</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000014</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NoteCaption-Caption' identity = '00000000-0000-0000-0000-000000000059' id = 'i00000000z0000z0000z0000z000000000060' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000058</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000015</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExCaption-Caption' identity = '00000000-0000-0000-0000-000000000063' id = 'i00000000z0000z0000z0000z000000000064' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000062</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000016</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SynCaption-Caption' identity = '00000000-0000-0000-0000-000000000067' id = 'i00000000z0000z0000z0000z000000000068' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000066</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000017</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SynFCaption-Caption' identity = '00000000-0000-0000-0000-000000000071' id = 'i00000000z0000z0000z0000z000000000072' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000070</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000018</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SeeCaption-Caption' identity = '00000000-0000-0000-0000-000000000075' id = 'i00000000z0000z0000z0000z000000000076' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000074</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000019</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SFCaption-Caption' identity = '00000000-0000-0000-0000-000000000079' id = 'i00000000z0000z0000z0000z000000000080' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000078</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000020</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NSURICaption-Caption' identity = '00000000-0000-0000-0000-000000000083' id = 'i00000000z0000z0000z0000z000000000084' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000082</source>
            <superType>i10000000z0000z0000z0000z000000000005</superType>
            <subType>i10000000z0000z0000z0000z000000000021</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'TermRepresentation-NotFactTypeRepresentation' identity = '00000000-0000-0000-0000-000000000087' id = 'i00000000z0000z0000z0000z000000000088' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000086</source>
            <superType>i10000000z0000z0000z0000z000000000023</superType>
            <subType>i10000000z0000z0000z0000z000000000024</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NameRepresentation-NotFactTypeRepresentation' identity = '00000000-0000-0000-0000-000000000091' id = 'i00000000z0000z0000z0000z000000000092' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000090</source>
            <superType>i10000000z0000z0000z0000z000000000023</superType>
            <subType>i10000000z0000z0000z0000z000000000025</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactTypeFormRepresentation-PrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000095' id = 'i00000000z0000z0000z0000z000000000096' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000094</source>
            <superType>i10000000z0000z0000z0000z000000000022</superType>
            <subType>i10000000z0000z0000z0000z000000000026</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptDefinition-LocatedElement' identity = '00000000-0000-0000-0000-000000000099' id = 'i00000000z0000z0000z0000z000000000100' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000098</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000027</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptSource-LocatedElement' identity = '00000000-0000-0000-0000-000000000103' id = 'i00000000z0000z0000z0000z000000000104' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000102</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000028</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Note-LocatedElement' identity = '00000000-0000-0000-0000-000000000107' id = 'i00000000z0000z0000z0000z000000000108' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000106</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000029</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Sentence-LocatedElement' identity = '00000000-0000-0000-0000-000000000111' id = 'i00000000z0000z0000z0000z000000000112' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000110</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000030</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NameSpaceURI-LocatedElement' identity = '00000000-0000-0000-0000-000000000115' id = 'i00000000z0000z0000z0000z000000000116' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000114</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000031</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StringWord-Word' identity = '00000000-0000-0000-0000-000000000119' id = 'i00000000z0000z0000z0000z000000000120' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000118</source>
            <superType>i10000000z0000z0000z0000z000000000032</superType>
            <subType>i10000000z0000z0000z0000z000000000033</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'QuotedStringWord-Word' identity = '00000000-0000-0000-0000-000000000123' id = 'i00000000z0000z0000z0000z000000000124' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000122</source>
            <superType>i10000000z0000z0000z0000z000000000032</superType>
            <subType>i10000000z0000z0000z0000z000000000034</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NameWord-Word' identity = '00000000-0000-0000-0000-000000000127' id = 'i00000000z0000z0000z0000z000000000128' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000126</source>
            <superType>i10000000z0000z0000z0000z000000000032</superType>
            <subType>i10000000z0000z0000z0000z000000000035</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SBVRExpression-LocatedElement' identity = '00000000-0000-0000-0000-000000000131' id = 'i00000000z0000z0000z0000z000000000132' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000130</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000036</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SBVRPropWithKW-LocatedElement' identity = '00000000-0000-0000-0000-000000000135' id = 'i00000000z0000z0000z0000z000000000136' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000134</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000037</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ModalForm-LocatedElement' identity = '00000000-0000-0000-0000-000000000139' id = 'i00000000z0000z0000z0000z000000000140' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000138</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000038</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SimpleSBVRProp-LocatedElement' identity = '00000000-0000-0000-0000-000000000143' id = 'i00000000z0000z0000z0000z000000000144' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000142</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000039</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SubSBVRProp-LocatedElement' identity = '00000000-0000-0000-0000-000000000147' id = 'i00000000z0000z0000z0000z000000000148' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000146</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000040</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'LinkSBVRConcept-LocatedElement' identity = '00000000-0000-0000-0000-000000000151' id = 'i00000000z0000z0000z0000z000000000152' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000150</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000041</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConjConcept-LocatedElement' identity = '00000000-0000-0000-0000-000000000155' id = 'i00000000z0000z0000z0000z000000000156' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000154</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000042</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NameConcept-Concept' identity = '00000000-0000-0000-0000-000000000159' id = 'i00000000z0000z0000z0000z000000000160' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000158</source>
            <superType>i10000000z0000z0000z0000z000000000043</superType>
            <subType>i10000000z0000z0000z0000z000000000044</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ObjectConcept-Concept' identity = '00000000-0000-0000-0000-000000000163' id = 'i00000000z0000z0000z0000z000000000164' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000162</source>
            <superType>i10000000z0000z0000z0000z000000000043</superType>
            <subType>i10000000z0000z0000z0000z000000000045</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StringConcept-Concept' identity = '00000000-0000-0000-0000-000000000167' id = 'i00000000z0000z0000z0000z000000000168' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000166</source>
            <superType>i10000000z0000z0000z0000z000000000043</superType>
            <subType>i10000000z0000z0000z0000z000000000046</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NounConcept-LocatedElement' identity = '00000000-0000-0000-0000-000000000171' id = 'i00000000z0000z0000z0000z000000000172' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000170</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000047</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Qualification-LocatedElement' identity = '00000000-0000-0000-0000-000000000175' id = 'i00000000z0000z0000z0000z000000000176' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000174</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000048</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NameGConcept-GeneralConcept' identity = '00000000-0000-0000-0000-000000000179' id = 'i00000000z0000z0000z0000z000000000180' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000178</source>
            <superType>i10000000z0000z0000z0000z000000000049</superType>
            <subType>i10000000z0000z0000z0000z000000000050</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NounGConcept-GeneralConcept' identity = '00000000-0000-0000-0000-000000000183' id = 'i00000000z0000z0000z0000z000000000184' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000182</source>
            <superType>i10000000z0000z0000z0000z000000000049</superType>
            <subType>i10000000z0000z0000z0000z000000000051</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Qualifier-LocatedElement' identity = '00000000-0000-0000-0000-000000000187' id = 'i00000000z0000z0000z0000z000000000188' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000186</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000052</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ModalBegin-LocatedElement' identity = '00000000-0000-0000-0000-000000000191' id = 'i00000000z0000z0000z0000z000000000192' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000190</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000053</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ModalBeginC-ModalBegin' identity = '00000000-0000-0000-0000-000000000195' id = 'i00000000z0000z0000z0000z000000000196' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000194</source>
            <superType>i10000000z0000z0000z0000z000000000053</superType>
            <subType>i10000000z0000z0000z0000z000000000054</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Caption-LocatedElement' identity = '00000000-0000-0000-0000-000000000199' id = 'i00000000z0000z0000z0000z000000000200' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000198</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000005</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PrimaryRepresentation-LocatedElement' identity = '00000000-0000-0000-0000-000000000203' id = 'i00000000z0000z0000z0000z000000000204' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000202</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000022</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NotFactTypeRepresentation-PrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000207' id = 'i00000000z0000z0000z0000z000000000208' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000206</source>
            <superType>i10000000z0000z0000z0000z000000000022</superType>
            <subType>i10000000z0000z0000z0000z000000000023</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Word-LocatedElement' identity = '00000000-0000-0000-0000-000000000211' id = 'i00000000z0000z0000z0000z000000000212' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000210</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000032</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Concept-LocatedElement' identity = '00000000-0000-0000-0000-000000000215' id = 'i00000000z0000z0000z0000z000000000216' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000214</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000043</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'GeneralConcept-LocatedElement' identity = '00000000-0000-0000-0000-000000000219' id = 'i00000000z0000z0000z0000z000000000220' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000218</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000049</subType>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionRoothasVocabularyEntry' identity = '00000000-0000-0000-0000-000000000223' id = 'i00000000z0000z0000z0000z000000000224' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000222</source>
            <role>i10000000z0000z0000z0000z000000000056</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionVocabularyEntryhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000227' id = 'i00000000z0000z0000z0000z000000000228' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000226</source>
            <role>i10000000z0000z0000z0000z000000000059</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionVocabularyEntryhasCaption' identity = '00000000-0000-0000-0000-000000000231' id = 'i00000000z0000z0000z0000z000000000232' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000230</source>
            <role>i10000000z0000z0000z0000z000000000062</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionDefCaptionhasConceptDefinition' identity = '00000000-0000-0000-0000-000000000235' id = 'i00000000z0000z0000z0000z000000000236' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000234</source>
            <role>i10000000z0000z0000z0000z000000000065</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionDescCaptionhasNote' identity = '00000000-0000-0000-0000-000000000239' id = 'i00000000z0000z0000z0000z000000000240' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000238</source>
            <role>i10000000z0000z0000z0000z000000000068</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSrcCaptionhasConceptSource' identity = '00000000-0000-0000-0000-000000000243' id = 'i00000000z0000z0000z0000z000000000244' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000242</source>
            <role>i10000000z0000z0000z0000z000000000071</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionDBCaptionhasConceptSource' identity = '00000000-0000-0000-0000-000000000247' id = 'i00000000z0000z0000z0000z000000000248' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000246</source>
            <role>i10000000z0000z0000z0000z000000000074</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionGenCCaptionhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000251' id = 'i00000000z0000z0000z0000z000000000252' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000250</source>
            <role>i10000000z0000z0000z0000z000000000077</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionCTypCaptionhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000255' id = 'i00000000z0000z0000z0000z000000000256' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000254</source>
            <role>i10000000z0000z0000z0000z000000000080</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNecessityhasSBVRExpression' identity = '00000000-0000-0000-0000-000000000259' id = 'i00000000z0000z0000z0000z000000000260' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000258</source>
            <role>i10000000z0000z0000z0000z000000000083</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionPossibilityhasSBVRExpression' identity = '00000000-0000-0000-0000-000000000263' id = 'i00000000z0000z0000z0000z000000000264' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000262</source>
            <role>i10000000z0000z0000z0000z000000000086</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionRefSCaptionhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000267' id = 'i00000000z0000z0000z0000z000000000268' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000266</source>
            <role>i10000000z0000z0000z0000z000000000089</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNoteCaptionhasNote' identity = '00000000-0000-0000-0000-000000000271' id = 'i00000000z0000z0000z0000z000000000272' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000270</source>
            <role>i10000000z0000z0000z0000z000000000092</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionExCaptionhasSBVRExpression' identity = '00000000-0000-0000-0000-000000000275' id = 'i00000000z0000z0000z0000z000000000276' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000274</source>
            <role>i10000000z0000z0000z0000z000000000095</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSynCaptionhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000279' id = 'i00000000z0000z0000z0000z000000000280' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000278</source>
            <role>i10000000z0000z0000z0000z000000000098</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSynFCaptionhasSBVRExpression' identity = '00000000-0000-0000-0000-000000000283' id = 'i00000000z0000z0000z0000z000000000284' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000282</source>
            <role>i10000000z0000z0000z0000z000000000101</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSeeCaptionhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000287' id = 'i00000000z0000z0000z0000z000000000288' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000286</source>
            <role>i10000000z0000z0000z0000z000000000104</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSFCaptionhasPrimaryRepresentation' identity = '00000000-0000-0000-0000-000000000291' id = 'i00000000z0000z0000z0000z000000000292' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000290</source>
            <role>i10000000z0000z0000z0000z000000000107</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNSURICaptionhasNameSpaceURI' identity = '00000000-0000-0000-0000-000000000295' id = 'i00000000z0000z0000z0000z000000000296' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000294</source>
            <role>i10000000z0000z0000z0000z000000000110</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionTermRepresentationhasStringWord' identity = '00000000-0000-0000-0000-000000000299' id = 'i00000000z0000z0000z0000z000000000300' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000298</source>
            <role>i10000000z0000z0000z0000z000000000113</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNameRepresentationhasNameWord' identity = '00000000-0000-0000-0000-000000000303' id = 'i00000000z0000z0000z0000z000000000304' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000302</source>
            <role>i10000000z0000z0000z0000z000000000116</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeFormRepresentationhasNotFactTypeRepresentation-1' identity = '00000000-0000-0000-0000-000000000307' id = 'i00000000z0000z0000z0000z000000000308' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000306</source>
            <role>i10000000z0000z0000z0000z000000000119</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeFormRepresentationhasNotFactTypeRepresentation-2' identity = '00000000-0000-0000-0000-000000000311' id = 'i00000000z0000z0000z0000z000000000312' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000310</source>
            <role>i10000000z0000z0000z0000z000000000122</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConceptDefinitionhasConcept' identity = '00000000-0000-0000-0000-000000000315' id = 'i00000000z0000z0000z0000z000000000316' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000314</source>
            <role>i10000000z0000z0000z0000z000000000125</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConceptDefinitionhasConjConcept' identity = '00000000-0000-0000-0000-000000000319' id = 'i00000000z0000z0000z0000z000000000320' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000318</source>
            <role>i10000000z0000z0000z0000z000000000128</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConceptSourcehasWord' identity = '00000000-0000-0000-0000-000000000323' id = 'i00000000z0000z0000z0000z000000000324' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000322</source>
            <role>i10000000z0000z0000z0000z000000000131</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNotehasSentence' identity = '00000000-0000-0000-0000-000000000327' id = 'i00000000z0000z0000z0000z000000000328' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000326</source>
            <role>i10000000z0000z0000z0000z000000000134</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSentencehasWord' identity = '00000000-0000-0000-0000-000000000331' id = 'i00000000z0000z0000z0000z000000000332' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000330</source>
            <role>i10000000z0000z0000z0000z000000000137</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNameSpaceURIhasWord' identity = '00000000-0000-0000-0000-000000000335' id = 'i00000000z0000z0000z0000z000000000336' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000334</source>
            <role>i10000000z0000z0000z0000z000000000140</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSBVRExpressionhasSimpleSBVRProp' identity = '00000000-0000-0000-0000-000000000339' id = 'i00000000z0000z0000z0000z000000000340' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000338</source>
            <role>i10000000z0000z0000z0000z000000000143</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSBVRExpressionhasSBVRPropWithKW' identity = '00000000-0000-0000-0000-000000000343' id = 'i00000000z0000z0000z0000z000000000344' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000342</source>
            <role>i10000000z0000z0000z0000z000000000146</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSBVRPropWithKWhasSimpleSBVRProp' identity = '00000000-0000-0000-0000-000000000347' id = 'i00000000z0000z0000z0000z000000000348' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000346</source>
            <role>i10000000z0000z0000z0000z000000000149</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSimpleSBVRProphasModalBegin' identity = '00000000-0000-0000-0000-000000000351' id = 'i00000000z0000z0000z0000z000000000352' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000350</source>
            <role>i10000000z0000z0000z0000z000000000152</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSimpleSBVRProphasConcept-3' identity = '00000000-0000-0000-0000-000000000355' id = 'i00000000z0000z0000z0000z000000000356' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000354</source>
            <role>i10000000z0000z0000z0000z000000000155</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSimpleSBVRProphasModalForm' identity = '00000000-0000-0000-0000-000000000359' id = 'i00000000z0000z0000z0000z000000000360' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000358</source>
            <role>i10000000z0000z0000z0000z000000000158</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSimpleSBVRProphasConcept-4' identity = '00000000-0000-0000-0000-000000000363' id = 'i00000000z0000z0000z0000z000000000364' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000362</source>
            <role>i10000000z0000z0000z0000z000000000161</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSubSBVRProphasConcept' identity = '00000000-0000-0000-0000-000000000367' id = 'i00000000z0000z0000z0000z000000000368' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000366</source>
            <role>i10000000z0000z0000z0000z000000000164</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionLinkSBVRConcepthasConcept' identity = '00000000-0000-0000-0000-000000000371' id = 'i00000000z0000z0000z0000z000000000372' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000370</source>
            <role>i10000000z0000z0000z0000z000000000167</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConjConcepthasConcept' identity = '00000000-0000-0000-0000-000000000375' id = 'i00000000z0000z0000z0000z000000000376' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000374</source>
            <role>i10000000z0000z0000z0000z000000000170</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepthasSubSBVRProp' identity = '00000000-0000-0000-0000-000000000379' id = 'i00000000z0000z0000z0000z000000000380' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000378</source>
            <role>i10000000z0000z0000z0000z000000000173</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepthasLinkSBVRConcept' identity = '00000000-0000-0000-0000-000000000383' id = 'i00000000z0000z0000z0000z000000000384' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000382</source>
            <role>i10000000z0000z0000z0000z000000000176</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNameConcepthasNameWord' identity = '00000000-0000-0000-0000-000000000387' id = 'i00000000z0000z0000z0000z000000000388' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000386</source>
            <role>i10000000z0000z0000z0000z000000000179</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionObjectConcepthasNounConcept' identity = '00000000-0000-0000-0000-000000000391' id = 'i00000000z0000z0000z0000z000000000392' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000390</source>
            <role>i10000000z0000z0000z0000z000000000182</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionObjectConcepthasQualification' identity = '00000000-0000-0000-0000-000000000395' id = 'i00000000z0000z0000z0000z000000000396' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000394</source>
            <role>i10000000z0000z0000z0000z000000000185</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionStringConcepthasQuotedStringWord' identity = '00000000-0000-0000-0000-000000000399' id = 'i00000000z0000z0000z0000z000000000400' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000398</source>
            <role>i10000000z0000z0000z0000z000000000188</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNounConcepthasQualifier' identity = '00000000-0000-0000-0000-000000000403' id = 'i00000000z0000z0000z0000z000000000404' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000402</source>
            <role>i10000000z0000z0000z0000z000000000191</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNounConcepthasStringWord' identity = '00000000-0000-0000-0000-000000000407' id = 'i00000000z0000z0000z0000z000000000408' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000406</source>
            <role>i10000000z0000z0000z0000z000000000194</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionQualificationhasGeneralConcept' identity = '00000000-0000-0000-0000-000000000411' id = 'i00000000z0000z0000z0000z000000000412' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000410</source>
            <role>i10000000z0000z0000z0000z000000000197</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNameGConcepthasNameConcept' identity = '00000000-0000-0000-0000-000000000415' id = 'i00000000z0000z0000z0000z000000000416' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000414</source>
            <role>i10000000z0000z0000z0000z000000000200</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNounGConcepthasStringWord' identity = '00000000-0000-0000-0000-000000000419' id = 'i00000000z0000z0000z0000z000000000420' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000418</source>
            <role>i10000000z0000z0000z0000z000000000203</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionQualifierhasStringWord-5' identity = '00000000-0000-0000-0000-000000000423' id = 'i00000000z0000z0000z0000z000000000424' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000422</source>
            <role>i10000000z0000z0000z0000z000000000206</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionQualifierhasStringWord-6' identity = '00000000-0000-0000-0000-000000000427' id = 'i00000000z0000z0000z0000z000000000428' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000426</source>
            <role>i10000000z0000z0000z0000z000000000209</role>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'location' identity = '00000000-0000-0000-0000-000000000534' id = 'i00000000z0000z0000z0000z000000000535'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000211</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'commentsBefore' identity = '00000000-0000-0000-0000-000000000537' id = 'i00000000z0000z0000z0000z000000000538'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000212</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'commentsAfter' identity = '00000000-0000-0000-0000-000000000540' id = 'i00000000z0000z0000z0000z000000000541'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000213</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'hasThe' identity = '00000000-0000-0000-0000-000000000543' id = 'i00000000z0000z0000z0000z000000000544'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000214</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'val' identity = '00000000-0000-0000-0000-000000000546' id = 'i00000000z0000z0000z0000z000000000547'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000216</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'hasPoint' identity = '00000000-0000-0000-0000-000000000549' id = 'i00000000z0000z0000z0000z000000000550'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000217</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'isNeg' identity = '00000000-0000-0000-0000-000000000552' id = 'i00000000z0000z0000z0000z000000000553'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000221</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'verbExp' identity = '00000000-0000-0000-0000-000000000555' id = 'i00000000z0000z0000z0000z000000000556'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000215</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'conjonction' identity = '00000000-0000-0000-0000-000000000558' id = 'i00000000z0000z0000z0000z000000000559'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000218</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'endConj' identity = '00000000-0000-0000-0000-000000000561' id = 'i00000000z0000z0000z0000z000000000562'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000219</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'modal' identity = '00000000-0000-0000-0000-000000000564' id = 'i00000000z0000z0000z0000z000000000565'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000220</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'verbs' identity = '00000000-0000-0000-0000-000000000567' id = 'i00000000z0000z0000z0000z000000000568'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000222</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'join' identity = '00000000-0000-0000-0000-000000000570' id = 'i00000000z0000z0000z0000z000000000571'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000223</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'modalVerb' identity = '00000000-0000-0000-0000-000000000573' id = 'i00000000z0000z0000z0000z000000000574'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000224</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'verbs' identity = '00000000-0000-0000-0000-000000000576' id = 'i00000000z0000z0000z0000z000000000577'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000225</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'link' identity = '00000000-0000-0000-0000-000000000579' id = 'i00000000z0000z0000z0000z000000000580'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000226</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'conjonction' identity = '00000000-0000-0000-0000-000000000582' id = 'i00000000z0000z0000z0000z000000000583'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000227</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'the' identity = '00000000-0000-0000-0000-000000000585' id = 'i00000000z0000z0000z0000z000000000586'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000228</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'op' identity = '00000000-0000-0000-0000-000000000588' id = 'i00000000z0000z0000z0000z000000000589'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000229</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'endOperator' identity = '00000000-0000-0000-0000-000000000591' id = 'i00000000z0000z0000z0000z000000000592'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000230</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'endOperator' identity = '00000000-0000-0000-0000-000000000594' id = 'i00000000z0000z0000z0000z000000000595'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000231</property>
          </treeExpression>
        </expressions>
        <roots>
          <root name = 'LocatedElement' identity = '00000000-0000-0000-0000-000000000011' id = 'i00000000z0000z0000z0000z000000000012'>
            <source/>
            <referencetype>i10000000z0000z0000z0000z000000000002</referencetype>
          </root>
        </roots>
        <source>i00000000z0000z0000z0000z000000000001</source>
      </treenavigator>
      <treenavigator xsi:type = 'ShadowTreeNavigator' name = 'serialization' identity = '00000000-0000-0000-0000-000000000006' id = 'i00000000z0000z0000z0000z000000000005'>
        <expressions/>
        <roots>
          <root name = 'Root' identity = '00000000-0000-0000-0000-000000000007' id = 'i00000000z0000z0000z0000z000000000008'>
            <source/>
            <referencetype>i10000000z0000z0000z0000z000000000003</referencetype>
          </root>
        </roots>
        <source>i00000000z0000z0000z0000z000000000001</source>
      </treenavigator>
      <treenavigator xsi:type = 'ShadowTreeNavigator' name = 'delete' identity = '00000000-0000-0000-0000-000000000010' id = 'i00000000z0000z0000z0000z00000000009'>
        <expressions/>
        <roots/>
        <source>i00000000z0000z0000z0000z000000000001</source>
      </treenavigator>
    </trees>
    <concepts>
      <concept name = 'LocatedElement' identity = '10000000-0000-0000-0000-000000000002' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000002' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' classmodifier = 'abstract'/>
        <valueProperties>
          <property name = 'commentsAfter' identity = '10000000-0000-0000-0000-000000000213' id = 'i10000000z0000z0000z0000z000000000213'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'StringPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000000539' default = '' max = '2147483647' min = '-2147483647'/>
          </property>
          <property name = 'commentsBefore' identity = '10000000-0000-0000-0000-000000000212' id = 'i10000000z0000z0000z0000z000000000212'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'StringPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000000536' default = '' max = '2147483647' min = '-2147483647'/>
          </property>
          <property name = 'location' identity = '10000000-0000-0000-0000-000000000211' id = 'i10000000z0000z0000z0000z000000000211'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'StringPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000000533' default = '' max = '2147483647' min = '-2147483647'/>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'Root' identity = '10000000-0000-0000-0000-000000000003' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000003' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'VocabularyEntry' identity = '10000000-0000-0000-0000-000000000004' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000004' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Caption' identity = '10000000-0000-0000-0000-000000000005' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000005' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' classmodifier = 'abstract'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'DefCaption' identity = '10000000-0000-0000-0000-000000000006' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000006' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'DescCaption' identity = '10000000-0000-0000-0000-000000000007' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000007' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SrcCaption' identity = '10000000-0000-0000-0000-000000000008' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000008' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'DBCaption' identity = '10000000-0000-0000-0000-000000000009' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000009' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'GenCCaption' identity = '10000000-0000-0000-0000-000000000010' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000010' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'CTypCaption' identity = '10000000-0000-0000-0000-000000000011' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000011' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Necessity' identity = '10000000-0000-0000-0000-000000000012' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000012' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Possibility' identity = '10000000-0000-0000-0000-000000000013' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000013' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'RefSCaption' identity = '10000000-0000-0000-0000-000000000014' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000014' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NoteCaption' identity = '10000000-0000-0000-0000-000000000015' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000015' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ExCaption' identity = '10000000-0000-0000-0000-000000000016' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000016' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SynCaption' identity = '10000000-0000-0000-0000-000000000017' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000017' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SynFCaption' identity = '10000000-0000-0000-0000-000000000018' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000018' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SeeCaption' identity = '10000000-0000-0000-0000-000000000019' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000019' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SFCaption' identity = '10000000-0000-0000-0000-000000000020' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000020' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NSURICaption' identity = '10000000-0000-0000-0000-000000000021' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000021' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000005</superType>
        <valueProperties/>
      </concept>
      <concept name = 'PrimaryRepresentation' identity = '10000000-0000-0000-0000-000000000022' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000022' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' classmodifier = 'abstract'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NotFactTypeRepresentation' identity = '10000000-0000-0000-0000-000000000023' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000023' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' classmodifier = 'abstract'/>
        <superType>i10000000z0000z0000z0000z000000000022</superType>
        <valueProperties/>
      </concept>
      <concept name = 'TermRepresentation' identity = '10000000-0000-0000-0000-000000000024' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000024' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000023</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NameRepresentation' identity = '10000000-0000-0000-0000-000000000025' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000025' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000023</superType>
        <valueProperties>
          <property name = 'hasThe' identity = '10000000-0000-0000-0000-000000000214' id = 'i10000000z0000z0000z0000z000000000214'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000000542' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'FactTypeFormRepresentation' identity = '10000000-0000-0000-0000-000000000026' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000026' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000022</superType>
        <valueProperties>
          <property name = 'verbExp' identity = '10000000-0000-0000-0000-000000000215' id = 'i10000000z0000z0000z0000z000000000215'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'Verb' identity = '00000000-0000-0000-0000-000000000554' default = 'Verb.'>
              <enumeration>i10000000z0000z0000z0000z000000000232</enumeration>
            </propertyInfo>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'ConceptDefinition' identity = '10000000-0000-0000-0000-000000000027' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000027' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ConceptSource' identity = '10000000-0000-0000-0000-000000000028' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000028' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Note' identity = '10000000-0000-0000-0000-000000000029' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000029' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Sentence' identity = '10000000-0000-0000-0000-000000000030' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000030' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NameSpaceURI' identity = '10000000-0000-0000-0000-000000000031' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000031' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Word' identity = '10000000-0000-0000-0000-000000000032' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000032' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' classmodifier = 'abstract'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties>
          <property name = 'val' identity = '10000000-0000-0000-0000-000000000216' id = 'i10000000z0000z0000z0000z000000000216'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'StringPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000000545' default = '' max = '2147483647' min = '-2147483647'/>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'StringWord' identity = '10000000-0000-0000-0000-000000000033' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000033' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000032</superType>
        <valueProperties/>
      </concept>
      <concept name = 'QuotedStringWord' identity = '10000000-0000-0000-0000-000000000034' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000034' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000032</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NameWord' identity = '10000000-0000-0000-0000-000000000035' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000035' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000032</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SBVRExpression' identity = '10000000-0000-0000-0000-000000000036' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000036' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties>
          <property name = 'hasPoint' identity = '10000000-0000-0000-0000-000000000217' id = 'i10000000z0000z0000z0000z000000000217'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000000548' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'SBVRPropWithKW' identity = '10000000-0000-0000-0000-000000000037' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000037' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties>
          <property name = 'conjonction' identity = '10000000-0000-0000-0000-000000000218' id = 'i10000000z0000z0000z0000z000000000218'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'ConjonctionnalKeyWord' identity = '00000000-0000-0000-0000-000000000557' default = 'ConjonctionnalKeyWord.'>
              <enumeration>i10000000z0000z0000z0000z000000000233</enumeration>
            </propertyInfo>
          </property>
          <property name = 'endConj' identity = '10000000-0000-0000-0000-000000000219' id = 'i10000000z0000z0000z0000z000000000219'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'EndOperator' identity = '00000000-0000-0000-0000-000000000560' default = 'EndOperator.'>
              <enumeration>i10000000z0000z0000z0000z000000000238</enumeration>
            </propertyInfo>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'ModalForm' identity = '10000000-0000-0000-0000-000000000038' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000038' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties>
          <property name = 'isNeg' identity = '10000000-0000-0000-0000-000000000221' id = 'i10000000z0000z0000z0000z000000000221'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000000551' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
          <property name = 'modal' identity = '10000000-0000-0000-0000-000000000220' id = 'i10000000z0000z0000z0000z000000000220'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'ModalVerb' identity = '00000000-0000-0000-0000-000000000563' default = 'ModalVerb.'>
              <enumeration>i10000000z0000z0000z0000z000000000234</enumeration>
            </propertyInfo>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'SimpleSBVRProp' identity = '10000000-0000-0000-0000-000000000039' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000039' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties>
          <property name = 'verbs' identity = '10000000-0000-0000-0000-000000000222' id = 'i10000000z0000z0000z0000z000000000222'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'Verb' identity = '00000000-0000-0000-0000-000000000566' default = 'Verb.'>
              <enumeration>i10000000z0000z0000z0000z000000000232</enumeration>
            </propertyInfo>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'SubSBVRProp' identity = '10000000-0000-0000-0000-000000000040' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000040' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties>
          <property name = 'join' identity = '10000000-0000-0000-0000-000000000223' id = 'i10000000z0000z0000z0000z000000000223'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'Join' identity = '00000000-0000-0000-0000-000000000569' default = 'Join.'>
              <enumeration>i10000000z0000z0000z0000z000000000235</enumeration>
            </propertyInfo>
          </property>
          <property name = 'modalVerb' identity = '10000000-0000-0000-0000-000000000224' id = 'i10000000z0000z0000z0000z000000000224'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'ModalVerb' identity = '00000000-0000-0000-0000-000000000572' default = 'ModalVerb.'>
              <enumeration>i10000000z0000z0000z0000z000000000234</enumeration>
            </propertyInfo>
          </property>
          <property name = 'verbs' identity = '10000000-0000-0000-0000-000000000225' id = 'i10000000z0000z0000z0000z000000000225'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'Verb' identity = '00000000-0000-0000-0000-000000000575' default = 'Verb.'>
              <enumeration>i10000000z0000z0000z0000z000000000232</enumeration>
            </propertyInfo>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'LinkSBVRConcept' identity = '10000000-0000-0000-0000-000000000041' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000041' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties>
          <property name = 'link' identity = '10000000-0000-0000-0000-000000000226' id = 'i10000000z0000z0000z0000z000000000226'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'Link' identity = '00000000-0000-0000-0000-000000000578' default = 'Link.'>
              <enumeration>i10000000z0000z0000z0000z000000000236</enumeration>
            </propertyInfo>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'ConjConcept' identity = '10000000-0000-0000-0000-000000000042' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000042' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties>
          <property name = 'conjonction' identity = '10000000-0000-0000-0000-000000000227' id = 'i10000000z0000z0000z0000z000000000227'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'ConjonctionnalKeyWord' identity = '00000000-0000-0000-0000-000000000581' default = 'ConjonctionnalKeyWord.'>
              <enumeration>i10000000z0000z0000z0000z000000000233</enumeration>
            </propertyInfo>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'Concept' identity = '10000000-0000-0000-0000-000000000043' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000043' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' classmodifier = 'abstract'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NameConcept' identity = '10000000-0000-0000-0000-000000000044' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000044' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000043</superType>
        <valueProperties>
          <property name = 'the' identity = '10000000-0000-0000-0000-000000000228' id = 'i10000000z0000z0000z0000z000000000228'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'Qualif' identity = '00000000-0000-0000-0000-000000000584' default = 'Qualif.'>
              <enumeration>i10000000z0000z0000z0000z000000000237</enumeration>
            </propertyInfo>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'ObjectConcept' identity = '10000000-0000-0000-0000-000000000045' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000045' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000043</superType>
        <valueProperties/>
      </concept>
      <concept name = 'StringConcept' identity = '10000000-0000-0000-0000-000000000046' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000046' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000043</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NounConcept' identity = '10000000-0000-0000-0000-000000000047' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000047' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Qualification' identity = '10000000-0000-0000-0000-000000000048' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000048' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'GeneralConcept' identity = '10000000-0000-0000-0000-000000000049' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000049' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' classmodifier = 'abstract'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NameGConcept' identity = '10000000-0000-0000-0000-000000000050' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000050' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000049</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NounGConcept' identity = '10000000-0000-0000-0000-000000000051' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000051' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000049</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Qualifier' identity = '10000000-0000-0000-0000-000000000052' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000052' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties>
          <property name = 'op' identity = '10000000-0000-0000-0000-000000000229' id = 'i10000000z0000z0000z0000z000000000229'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'Qualif' identity = '00000000-0000-0000-0000-000000000587' default = 'Qualif.'>
              <enumeration>i10000000z0000z0000z0000z000000000237</enumeration>
            </propertyInfo>
          </property>
          <property name = 'endOperator' identity = '10000000-0000-0000-0000-000000000230' id = 'i10000000z0000z0000z0000z000000000230'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'EndOperator' identity = '00000000-0000-0000-0000-000000000590' default = 'EndOperator.'>
              <enumeration>i10000000z0000z0000z0000z000000000238</enumeration>
            </propertyInfo>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'ModalBegin' identity = '10000000-0000-0000-0000-000000000053' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000053' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties>
          <property name = 'endOperator' identity = '10000000-0000-0000-0000-000000000231' id = 'i10000000z0000z0000z0000z000000000231'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'EnumerationPropertyInfo' name = 'EndOperator' identity = '00000000-0000-0000-0000-000000000593' default = 'EndOperator.'>
              <enumeration>i10000000z0000z0000z0000z000000000238</enumeration>
            </propertyInfo>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'ModalBeginC' identity = '10000000-0000-0000-0000-000000000054' namespace = 'SBVRvoc.DomainModel' id = 'i10000000z0000z0000z0000z000000000054' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000053</superType>
        <valueProperties/>
      </concept>
    </concepts>
  </model>
</dmd>
