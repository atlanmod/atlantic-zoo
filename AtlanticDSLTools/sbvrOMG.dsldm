<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<dmd xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd = 'http://www.w3.org/2001/XMLSchema' xmlns = 'urn:schemas-microsoft-com:dmd'>
  <model name = 'DM_sbvr' identity = '10000000-0000-0000-0000-000000000001' id = 'i10000000z0000z0000z0000z000000000001' namespace = 'sbvr.DomainModel' isLoaded = 'true'>
    <mdfmetadata xsi:type = 'modelmdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' majorversion = '1' minorversion = '0' alwaysgeneratecollection = 'false'>
      <copyright/>
      <stringtable resxfile = 'DM_sbvr.Resource.resx' resourcesfile = 'sbvr.DomainModel.DM_sbvr.Resource' usefullyqualifiedname = 'false'/>
      <copyclosure name = 'DM_sbvrCopyClosure' doccomment = 'Copy closure visitor filter'/>
      <removeclosure name = 'DM_sbvrRemoveClosure' doccomment = 'Remove closure visitor filter'/>
    </mdfmetadata>
    <extended>
      <model>i2b131234z7959z458dz834fz2dc0769ce683</model>
    </extended>
    <enumerations/>
    <relationships>
      <relationship name = 'ThingtoName' identity = '10000000-0000-0000-0000-000000000195' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000195' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'name' identity = '10000000-0000-0000-0000-000000000196' id = 'i10000000z0000z0000z0000z000000000196' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000004</source>
            <type>i10000000z0000z0000z0000z000000000005</type>
            <generatedProperty name = 'name' identity = '00000000-0000-0000-0000-000000001037'>
              <referenceType>i10000000z0000z0000z0000z000000000005</referenceType>
            </generatedProperty>
          </role>
          <role name = 'nameOpposite' identity = '10000000-0000-0000-0000-000000000197' id = 'i10000000z0000z0000z0000z000000000197' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000005</source>
            <type>i10000000z0000z0000z0000z000000000004</type>
            <generatedProperty name = 'nameOpposite' identity = '00000000-0000-0000-0000-000000001038'>
              <referenceType>i10000000z0000z0000z0000z000000000004</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'DesignationtoExpression' identity = '10000000-0000-0000-0000-000000000198' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000198' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'signifier' identity = '10000000-0000-0000-0000-000000000199' id = 'i10000000z0000z0000z0000z000000000199' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000006</source>
            <type>i10000000z0000z0000z0000z000000000009</type>
            <generatedProperty name = 'signifier' identity = '00000000-0000-0000-0000-000000001039'>
              <referenceType>i10000000z0000z0000z0000z000000000009</referenceType>
            </generatedProperty>
          </role>
          <role name = 'signifierOpposite' identity = '10000000-0000-0000-0000-000000000200' id = 'i10000000z0000z0000z0000z000000000200' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000009</source>
            <type>i10000000z0000z0000z0000z000000000006</type>
            <generatedProperty name = 'signifierOpposite' identity = '00000000-0000-0000-0000-000000001040'>
              <referenceType>i10000000z0000z0000z0000z000000000006</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'RepresentationtoMeaning' identity = '10000000-0000-0000-0000-000000000201' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000201' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'meaning' identity = '10000000-0000-0000-0000-000000000202' id = 'i10000000z0000z0000z0000z000000000202' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000007</source>
            <type>i10000000z0000z0000z0000z000000000008</type>
            <generatedProperty name = 'meaning' identity = '00000000-0000-0000-0000-000000001041'>
              <referenceType>i10000000z0000z0000z0000z000000000008</referenceType>
            </generatedProperty>
          </role>
          <role name = 'meaningOpposite' identity = '10000000-0000-0000-0000-000000000203' id = 'i10000000z0000z0000z0000z000000000203' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000008</source>
            <type>i10000000z0000z0000z0000z000000000007</type>
            <generatedProperty name = 'meaningOpposite' identity = '00000000-0000-0000-0000-000000001042'>
              <referenceType>i10000000z0000z0000z0000z000000000007</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'RepresentationtoExpression' identity = '10000000-0000-0000-0000-000000000204' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000204' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'expression' identity = '10000000-0000-0000-0000-000000000205' id = 'i10000000z0000z0000z0000z000000000205' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000007</source>
            <type>i10000000z0000z0000z0000z000000000009</type>
            <generatedProperty name = 'expression' identity = '00000000-0000-0000-0000-000000001043'>
              <referenceType>i10000000z0000z0000z0000z000000000009</referenceType>
            </generatedProperty>
          </role>
          <role name = 'expressionOpposite' identity = '10000000-0000-0000-0000-000000000206' id = 'i10000000z0000z0000z0000z000000000206' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000009</source>
            <type>i10000000z0000z0000z0000z000000000007</type>
            <generatedProperty name = 'expressionOpposite' identity = '00000000-0000-0000-0000-000000001044'>
              <referenceType>i10000000z0000z0000z0000z000000000007</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'MeaningtoRepresentation' identity = '10000000-0000-0000-0000-000000000207' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000207' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'representation' identity = '10000000-0000-0000-0000-000000000208' id = 'i10000000z0000z0000z0000z000000000208' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000008</source>
            <type>i10000000z0000z0000z0000z000000000007</type>
            <generatedProperty name = 'representation' identity = '00000000-0000-0000-0000-000000001045'>
              <referenceType>i10000000z0000z0000z0000z000000000007</referenceType>
            </generatedProperty>
          </role>
          <role name = 'representationOpposite' identity = '10000000-0000-0000-0000-000000000209' id = 'i10000000z0000z0000z0000z000000000209' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000007</source>
            <type>i10000000z0000z0000z0000z000000000008</type>
            <generatedProperty name = 'representationOpposite' identity = '00000000-0000-0000-0000-000000001046'>
              <referenceType>i10000000z0000z0000z0000z000000000008</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'PropositiontoStatement' identity = '10000000-0000-0000-0000-000000000210' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000210' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'statement' identity = '10000000-0000-0000-0000-000000000211' id = 'i10000000z0000z0000z0000z000000000211' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000015</source>
            <type>i10000000z0000z0000z0000z000000000016</type>
            <generatedProperty name = 'statement' identity = '00000000-0000-0000-0000-000000001047'>
              <referenceType>i10000000z0000z0000z0000z000000000016</referenceType>
            </generatedProperty>
          </role>
          <role name = 'statementOpposite' identity = '10000000-0000-0000-0000-000000000212' id = 'i10000000z0000z0000z0000z000000000212' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000016</source>
            <type>i10000000z0000z0000z0000z000000000015</type>
            <generatedProperty name = 'statementOpposite' identity = '00000000-0000-0000-0000-000000001048'>
              <referenceType>i10000000z0000z0000z0000z000000000015</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ProjectingFormulationtoProjection' identity = '10000000-0000-0000-0000-000000000213' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000213' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'projection' identity = '10000000-0000-0000-0000-000000000214' id = 'i10000000z0000z0000z0000z000000000214' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000024</source>
            <type>i10000000z0000z0000z0000z000000000027</type>
            <generatedProperty name = 'projection' identity = '00000000-0000-0000-0000-000000001049'>
              <referenceType>i10000000z0000z0000z0000z000000000027</referenceType>
            </generatedProperty>
          </role>
          <role name = 'projectionOpposite' identity = '10000000-0000-0000-0000-000000000215' id = 'i10000000z0000z0000z0000z000000000215' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000027</source>
            <type>i10000000z0000z0000z0000z000000000024</type>
            <generatedProperty name = 'projectionOpposite' identity = '00000000-0000-0000-0000-000000001050'>
              <referenceType>i10000000z0000z0000z0000z000000000024</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ProjectiontoLogicalFormulation' identity = '10000000-0000-0000-0000-000000000216' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000216' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'constrainingFormulation' identity = '10000000-0000-0000-0000-000000000217' id = 'i10000000z0000z0000z0000z000000000217' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000027</source>
            <type>i10000000z0000z0000z0000z000000000025</type>
            <generatedProperty name = 'constrainingFormulation' identity = '00000000-0000-0000-0000-000000001051'>
              <referenceType>i10000000z0000z0000z0000z000000000025</referenceType>
            </generatedProperty>
          </role>
          <role name = 'constrainingFormulationOpposite' identity = '10000000-0000-0000-0000-000000000218' id = 'i10000000z0000z0000z0000z000000000218' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000025</source>
            <type>i10000000z0000z0000z0000z000000000027</type>
            <generatedProperty name = 'constrainingFormulationOpposite' identity = '00000000-0000-0000-0000-000000001052'>
              <referenceType>i10000000z0000z0000z0000z000000000027</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ProjectiontoVariable' identity = '10000000-0000-0000-0000-000000000219' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000219' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'projectionVariable' identity = '10000000-0000-0000-0000-000000000220' id = 'i10000000z0000z0000z0000z000000000220' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000027</source>
            <type>i10000000z0000z0000z0000z000000000028</type>
            <generatedProperty name = 'projectionVariable' identity = '00000000-0000-0000-0000-000000001053'>
              <referenceType>i10000000z0000z0000z0000z000000000028</referenceType>
            </generatedProperty>
          </role>
          <role name = 'projectionVariableOpposite' identity = '10000000-0000-0000-0000-000000000221' id = 'i10000000z0000z0000z0000z000000000221' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000028</source>
            <type>i10000000z0000z0000z0000z000000000027</type>
            <generatedProperty name = 'projectionVariableOpposite' identity = '00000000-0000-0000-0000-000000001054'>
              <referenceType>i10000000z0000z0000z0000z000000000027</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ProjectiontoAuxiliaryVariable' identity = '10000000-0000-0000-0000-000000000222' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000222' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'auxiliaryVariable' identity = '10000000-0000-0000-0000-000000000223' id = 'i10000000z0000z0000z0000z000000000223' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000027</source>
            <type>i10000000z0000z0000z0000z000000000049</type>
            <generatedProperty name = 'auxiliaryVariable' identity = '00000000-0000-0000-0000-000000001055'>
              <referenceType>i10000000z0000z0000z0000z000000000049</referenceType>
            </generatedProperty>
          </role>
          <role name = 'auxiliaryVariableOpposite' identity = '10000000-0000-0000-0000-000000000224' id = 'i10000000z0000z0000z0000z000000000224' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000049</source>
            <type>i10000000z0000z0000z0000z000000000027</type>
            <generatedProperty name = 'auxiliaryVariableOpposite' identity = '00000000-0000-0000-0000-000000001056'>
              <referenceType>i10000000z0000z0000z0000z000000000027</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'VariabletoLogicalFormulation' identity = '10000000-0000-0000-0000-000000000225' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000225' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'restrictingFormulation' identity = '10000000-0000-0000-0000-000000000226' id = 'i10000000z0000z0000z0000z000000000226' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000028</source>
            <type>i10000000z0000z0000z0000z000000000025</type>
            <generatedProperty name = 'restrictingFormulation' identity = '00000000-0000-0000-0000-000000001057'>
              <referenceType>i10000000z0000z0000z0000z000000000025</referenceType>
            </generatedProperty>
          </role>
          <role name = 'restrictingFormulationOpposite' identity = '10000000-0000-0000-0000-000000000227' id = 'i10000000z0000z0000z0000z000000000227' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000025</source>
            <type>i10000000z0000z0000z0000z000000000028</type>
            <generatedProperty name = 'restrictingFormulationOpposite' identity = '00000000-0000-0000-0000-000000001058'>
              <referenceType>i10000000z0000z0000z0000z000000000028</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'VariabletoPositiveInteger' identity = '10000000-0000-0000-0000-000000000228' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000228' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'projectionPosition' identity = '10000000-0000-0000-0000-000000000229' id = 'i10000000z0000z0000z0000z000000000229' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000028</source>
            <type>i10000000z0000z0000z0000z000000000029</type>
            <generatedProperty name = 'projectionPosition' identity = '00000000-0000-0000-0000-000000001059'>
              <referenceType>i10000000z0000z0000z0000z000000000029</referenceType>
            </generatedProperty>
          </role>
          <role name = 'projectionPositionOpposite' identity = '10000000-0000-0000-0000-000000000230' id = 'i10000000z0000z0000z0000z000000000230' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000029</source>
            <type>i10000000z0000z0000z0000z000000000028</type>
            <generatedProperty name = 'projectionPositionOpposite' identity = '00000000-0000-0000-0000-000000001060'>
              <referenceType>i10000000z0000z0000z0000z000000000028</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'VariabletoConcept' identity = '10000000-0000-0000-0000-000000000231' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000231' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'rangedoverConcept' identity = '10000000-0000-0000-0000-000000000232' id = 'i10000000z0000z0000z0000z000000000232' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000028</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'rangedoverConcept' identity = '00000000-0000-0000-0000-000000001061'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
          <role name = 'rangedoverConceptOpposite' identity = '10000000-0000-0000-0000-000000000233' id = 'i10000000z0000z0000z0000z000000000233' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000028</type>
            <generatedProperty name = 'rangedoverConceptOpposite' identity = '00000000-0000-0000-0000-000000001062'>
              <referenceType>i10000000z0000z0000z0000z000000000028</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepttoAttributiveNamespace' identity = '10000000-0000-0000-0000-000000000234' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000234' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'attributiveNamespace' identity = '10000000-0000-0000-0000-000000000235' id = 'i10000000z0000z0000z0000z000000000235' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000036</type>
            <generatedProperty name = 'attributiveNamespace' identity = '00000000-0000-0000-0000-000000001063'>
              <referenceType>i10000000z0000z0000z0000z000000000036</referenceType>
            </generatedProperty>
          </role>
          <role name = 'attributiveNamespaceOpposite' identity = '10000000-0000-0000-0000-000000000236' id = 'i10000000z0000z0000z0000z000000000236' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000036</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'attributiveNamespaceOpposite' identity = '00000000-0000-0000-0000-000000001064'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepttoDefinition' identity = '10000000-0000-0000-0000-000000000237' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000237' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'definition' identity = '10000000-0000-0000-0000-000000000238' id = 'i10000000z0000z0000z0000z000000000238' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000012</type>
            <generatedProperty name = 'definition' identity = '00000000-0000-0000-0000-000000001065'>
              <referenceType>i10000000z0000z0000z0000z000000000012</referenceType>
            </generatedProperty>
          </role>
          <role name = 'definitionOpposite' identity = '10000000-0000-0000-0000-000000000239' id = 'i10000000z0000z0000z0000z000000000239' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000012</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'definitionOpposite' identity = '00000000-0000-0000-0000-000000001066'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepttoConcept-1' identity = '10000000-0000-0000-0000-000000000240' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000240' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'moreGeneralConcept' identity = '10000000-0000-0000-0000-000000000241' id = 'i10000000z0000z0000z0000z000000000241' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'moreGeneralConcept' identity = '00000000-0000-0000-0000-000000001067'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
          <role name = 'moreGeneralConceptOpposite' identity = '10000000-0000-0000-0000-000000000242' id = 'i10000000z0000z0000z0000z000000000242' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'moreGeneralConceptOpposite' identity = '00000000-0000-0000-0000-000000001068'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepttoConcept-2' identity = '10000000-0000-0000-0000-000000000243' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000243' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'category' identity = '10000000-0000-0000-0000-000000000244' id = 'i10000000z0000z0000z0000z000000000244' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'category' identity = '00000000-0000-0000-0000-000000001069'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
          <role name = 'categoryOpposite' identity = '10000000-0000-0000-0000-000000000245' id = 'i10000000z0000z0000z0000z000000000245' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'categoryOpposite' identity = '00000000-0000-0000-0000-000000001070'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepttoCharacteristic-3' identity = '10000000-0000-0000-0000-000000000246' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000246' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'essentialCharacteristic' identity = '10000000-0000-0000-0000-000000000247' id = 'i10000000z0000z0000z0000z000000000247' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000040</type>
            <generatedProperty name = 'essentialCharacteristic' identity = '00000000-0000-0000-0000-000000001071'>
              <referenceType>i10000000z0000z0000z0000z000000000040</referenceType>
            </generatedProperty>
          </role>
          <role name = 'essentialCharacteristicOpposite' identity = '10000000-0000-0000-0000-000000000248' id = 'i10000000z0000z0000z0000z000000000248' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000040</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'essentialCharacteristicOpposite' identity = '00000000-0000-0000-0000-000000001072'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepttoThing' identity = '10000000-0000-0000-0000-000000000249' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000249' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'instance' identity = '10000000-0000-0000-0000-000000000250' id = 'i10000000z0000z0000z0000z000000000250' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000004</type>
            <generatedProperty name = 'instance' identity = '00000000-0000-0000-0000-000000001073'>
              <referenceType>i10000000z0000z0000z0000z000000000004</referenceType>
            </generatedProperty>
          </role>
          <role name = 'instanceOpposite' identity = '10000000-0000-0000-0000-000000000251' id = 'i10000000z0000z0000z0000z000000000251' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000004</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'instanceOpposite' identity = '00000000-0000-0000-0000-000000001074'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepttoReferenceScheme' identity = '10000000-0000-0000-0000-000000000252' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000252' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'referenceScheme' identity = '10000000-0000-0000-0000-000000000253' id = 'i10000000z0000z0000z0000z000000000253' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000047</type>
            <generatedProperty name = 'referenceScheme' identity = '00000000-0000-0000-0000-000000001075'>
              <referenceType>i10000000z0000z0000z0000z000000000047</referenceType>
            </generatedProperty>
          </role>
          <role name = 'referenceSchemeOpposite' identity = '10000000-0000-0000-0000-000000000254' id = 'i10000000z0000z0000z0000z000000000254' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000047</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'referenceSchemeOpposite' identity = '00000000-0000-0000-0000-000000001076'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepttoCharacteristic-4' identity = '10000000-0000-0000-0000-000000000255' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000255' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'impliedCharacteristic' identity = '10000000-0000-0000-0000-000000000256' id = 'i10000000z0000z0000z0000z000000000256' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000040</type>
            <generatedProperty name = 'impliedCharacteristic' identity = '00000000-0000-0000-0000-000000001077'>
              <referenceType>i10000000z0000z0000z0000z000000000040</referenceType>
            </generatedProperty>
          </role>
          <role name = 'impliedCharacteristicOpposite' identity = '10000000-0000-0000-0000-000000000257' id = 'i10000000z0000z0000z0000z000000000257' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000040</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'impliedCharacteristicOpposite' identity = '00000000-0000-0000-0000-000000001078'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepttoCharacteristic-5' identity = '10000000-0000-0000-0000-000000000258' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000258' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'necessaryCharacteristic' identity = '10000000-0000-0000-0000-000000000259' id = 'i10000000z0000z0000z0000z000000000259' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000040</type>
            <generatedProperty name = 'necessaryCharacteristic' identity = '00000000-0000-0000-0000-000000001079'>
              <referenceType>i10000000z0000z0000z0000z000000000040</referenceType>
            </generatedProperty>
          </role>
          <role name = 'necessaryCharacteristicOpposite' identity = '10000000-0000-0000-0000-000000000260' id = 'i10000000z0000z0000z0000z000000000260' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000040</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'necessaryCharacteristicOpposite' identity = '00000000-0000-0000-0000-000000001080'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepttoDesignation' identity = '10000000-0000-0000-0000-000000000261' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000261' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'designation' identity = '10000000-0000-0000-0000-000000000262' id = 'i10000000z0000z0000z0000z000000000262' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000006</type>
            <generatedProperty name = 'designation' identity = '00000000-0000-0000-0000-000000001081'>
              <referenceType>i10000000z0000z0000z0000z000000000006</referenceType>
            </generatedProperty>
          </role>
          <role name = 'designationOpposite' identity = '10000000-0000-0000-0000-000000000263' id = 'i10000000z0000z0000z0000z000000000263' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000006</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'designationOpposite' identity = '00000000-0000-0000-0000-000000001082'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ConcepttoSet' identity = '10000000-0000-0000-0000-000000000264' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000264' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'extension' identity = '10000000-0000-0000-0000-000000000265' id = 'i10000000z0000z0000z0000z000000000265' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000035</source>
            <type>i10000000z0000z0000z0000z000000000048</type>
            <generatedProperty name = 'extension' identity = '00000000-0000-0000-0000-000000001083'>
              <referenceType>i10000000z0000z0000z0000z000000000048</referenceType>
            </generatedProperty>
          </role>
          <role name = 'extensionOpposite' identity = '10000000-0000-0000-0000-000000000266' id = 'i10000000z0000z0000z0000z000000000266' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000048</source>
            <type>i10000000z0000z0000z0000z000000000035</type>
            <generatedProperty name = 'extensionOpposite' identity = '00000000-0000-0000-0000-000000001084'>
              <referenceType>i10000000z0000z0000z0000z000000000035</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NamespacetoUri' identity = '10000000-0000-0000-0000-000000000267' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000267' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'uri' identity = '10000000-0000-0000-0000-000000000268' id = 'i10000000z0000z0000z0000z000000000268' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000037</source>
            <type>i10000000z0000z0000z0000z000000000038</type>
            <generatedProperty name = 'uri' identity = '00000000-0000-0000-0000-000000001085'>
              <referenceType>i10000000z0000z0000z0000z000000000038</referenceType>
            </generatedProperty>
          </role>
          <role name = 'uri1Opposite' identity = '10000000-0000-0000-0000-000000000269' id = 'i10000000z0000z0000z0000z000000000269' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000038</source>
            <type>i10000000z0000z0000z0000z000000000037</type>
            <generatedProperty name = 'uri1Opposite' identity = '00000000-0000-0000-0000-000000001086'>
              <referenceType>i10000000z0000z0000z0000z000000000037</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'FactTypetoFactTypeForm' identity = '10000000-0000-0000-0000-000000000270' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000270' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'factTypeForm' identity = '10000000-0000-0000-0000-000000000271' id = 'i10000000z0000z0000z0000z000000000271' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000041</source>
            <type>i10000000z0000z0000z0000z000000000042</type>
            <generatedProperty name = 'factTypeForm' identity = '00000000-0000-0000-0000-000000001087'>
              <referenceType>i10000000z0000z0000z0000z000000000042</referenceType>
            </generatedProperty>
          </role>
          <role name = 'factTypeFormOpposite' identity = '10000000-0000-0000-0000-000000000272' id = 'i10000000z0000z0000z0000z000000000272' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000042</source>
            <type>i10000000z0000z0000z0000z000000000041</type>
            <generatedProperty name = 'factTypeFormOpposite' identity = '00000000-0000-0000-0000-000000001088'>
              <referenceType>i10000000z0000z0000z0000z000000000041</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'FactTypetoFactTypeRole' identity = '10000000-0000-0000-0000-000000000273' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000273' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'role' identity = '10000000-0000-0000-0000-000000000274' id = 'i10000000z0000z0000z0000z000000000274' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000041</source>
            <type>i10000000z0000z0000z0000z000000000044</type>
            <generatedProperty name = 'role' identity = '00000000-0000-0000-0000-000000001089'>
              <referenceType>i10000000z0000z0000z0000z000000000044</referenceType>
            </generatedProperty>
          </role>
          <role name = 'roleOpposite' identity = '10000000-0000-0000-0000-000000000275' id = 'i10000000z0000z0000z0000z000000000275' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000044</source>
            <type>i10000000z0000z0000z0000z000000000041</type>
            <generatedProperty name = 'roleOpposite' identity = '00000000-0000-0000-0000-000000001090'>
              <referenceType>i10000000z0000z0000z0000z000000000041</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'FactTypeFormtoPlaceholder' identity = '10000000-0000-0000-0000-000000000276' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000276' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'placeholder' identity = '10000000-0000-0000-0000-000000000277' id = 'i10000000z0000z0000z0000z000000000277' min = '1' max = '0' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000042</source>
            <type>i10000000z0000z0000z0000z000000000043</type>
            <generatedProperty name = 'placeholder' identity = '00000000-0000-0000-0000-000000001091'>
              <referenceType>i10000000z0000z0000z0000z000000000043</referenceType>
            </generatedProperty>
          </role>
          <role name = 'placeholderOpposite' identity = '10000000-0000-0000-0000-000000000278' id = 'i10000000z0000z0000z0000z000000000278' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000043</source>
            <type>i10000000z0000z0000z0000z000000000042</type>
            <generatedProperty name = 'placeholderOpposite' identity = '00000000-0000-0000-0000-000000001092'>
              <referenceType>i10000000z0000z0000z0000z000000000042</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'PlaceholdertoPositiveInteger' identity = '10000000-0000-0000-0000-000000000279' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000279' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'startingCharacterPosition' identity = '10000000-0000-0000-0000-000000000280' id = 'i10000000z0000z0000z0000z000000000280' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000043</source>
            <type>i10000000z0000z0000z0000z000000000029</type>
            <generatedProperty name = 'startingCharacterPosition' identity = '00000000-0000-0000-0000-000000001093'>
              <referenceType>i10000000z0000z0000z0000z000000000029</referenceType>
            </generatedProperty>
          </role>
          <role name = 'startingCharacterPositionOpposite' identity = '10000000-0000-0000-0000-000000000281' id = 'i10000000z0000z0000z0000z000000000281' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000029</source>
            <type>i10000000z0000z0000z0000z000000000043</type>
            <generatedProperty name = 'startingCharacterPositionOpposite' identity = '00000000-0000-0000-0000-000000001094'>
              <referenceType>i10000000z0000z0000z0000z000000000043</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'FactTypeRoletoRoleBinding' identity = '10000000-0000-0000-0000-000000000282' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000282' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'roleBinding' identity = '10000000-0000-0000-0000-000000000283' id = 'i10000000z0000z0000z0000z000000000283' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000044</source>
            <type>i10000000z0000z0000z0000z000000000046</type>
            <generatedProperty name = 'roleBinding' identity = '00000000-0000-0000-0000-000000001095'>
              <referenceType>i10000000z0000z0000z0000z000000000046</referenceType>
            </generatedProperty>
          </role>
          <role name = 'roleBinding2Opposite' identity = '10000000-0000-0000-0000-000000000284' id = 'i10000000z0000z0000z0000z000000000284' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000046</source>
            <type>i10000000z0000z0000z0000z000000000044</type>
            <generatedProperty name = 'roleBinding2Opposite' identity = '00000000-0000-0000-0000-000000001096'>
              <referenceType>i10000000z0000z0000z0000z000000000044</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ReferenceSchemetoFactTypeRole-6' identity = '10000000-0000-0000-0000-000000000285' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000285' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'simplyUsedRole' identity = '10000000-0000-0000-0000-000000000286' id = 'i10000000z0000z0000z0000z000000000286' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000047</source>
            <type>i10000000z0000z0000z0000z000000000044</type>
            <generatedProperty name = 'simplyUsedRole' identity = '00000000-0000-0000-0000-000000001097'>
              <referenceType>i10000000z0000z0000z0000z000000000044</referenceType>
            </generatedProperty>
          </role>
          <role name = 'simplyUsedRoleOpposite' identity = '10000000-0000-0000-0000-000000000287' id = 'i10000000z0000z0000z0000z000000000287' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000044</source>
            <type>i10000000z0000z0000z0000z000000000047</type>
            <generatedProperty name = 'simplyUsedRoleOpposite' identity = '00000000-0000-0000-0000-000000001098'>
              <referenceType>i10000000z0000z0000z0000z000000000047</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ReferenceSchemetoCharacteristic' identity = '10000000-0000-0000-0000-000000000288' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000288' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'identifyingCharacteristic' identity = '10000000-0000-0000-0000-000000000289' id = 'i10000000z0000z0000z0000z000000000289' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000047</source>
            <type>i10000000z0000z0000z0000z000000000040</type>
            <generatedProperty name = 'identifyingCharacteristic' identity = '00000000-0000-0000-0000-000000001099'>
              <referenceType>i10000000z0000z0000z0000z000000000040</referenceType>
            </generatedProperty>
          </role>
          <role name = 'identifyingCharacteristicOpposite' identity = '10000000-0000-0000-0000-000000000290' id = 'i10000000z0000z0000z0000z000000000290' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000040</source>
            <type>i10000000z0000z0000z0000z000000000047</type>
            <generatedProperty name = 'identifyingCharacteristicOpposite' identity = '00000000-0000-0000-0000-000000001100'>
              <referenceType>i10000000z0000z0000z0000z000000000047</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ReferenceSchemetoFactTypeRole-7' identity = '10000000-0000-0000-0000-000000000291' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000291' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'extensionallyUsedRole' identity = '10000000-0000-0000-0000-000000000292' id = 'i10000000z0000z0000z0000z000000000292' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000047</source>
            <type>i10000000z0000z0000z0000z000000000044</type>
            <generatedProperty name = 'extensionallyUsedRole' identity = '00000000-0000-0000-0000-000000001101'>
              <referenceType>i10000000z0000z0000z0000z000000000044</referenceType>
            </generatedProperty>
          </role>
          <role name = 'extensionallyUsedRoleOpposite' identity = '10000000-0000-0000-0000-000000000293' id = 'i10000000z0000z0000z0000z000000000293' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000044</source>
            <type>i10000000z0000z0000z0000z000000000047</type>
            <generatedProperty name = 'extensionallyUsedRoleOpposite' identity = '00000000-0000-0000-0000-000000001102'>
              <referenceType>i10000000z0000z0000z0000z000000000047</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SettoNonnegativeInteger' identity = '10000000-0000-0000-0000-000000000294' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000294' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'cardinality' identity = '10000000-0000-0000-0000-000000000295' id = 'i10000000z0000z0000z0000z000000000295' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000048</source>
            <type>i10000000z0000z0000z0000z000000000030</type>
            <generatedProperty name = 'cardinality' identity = '00000000-0000-0000-0000-000000001103'>
              <referenceType>i10000000z0000z0000z0000z000000000030</referenceType>
            </generatedProperty>
          </role>
          <role name = 'cardinality3Opposite' identity = '10000000-0000-0000-0000-000000000296' id = 'i10000000z0000z0000z0000z000000000296' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000030</source>
            <type>i10000000z0000z0000z0000z000000000048</type>
            <generatedProperty name = 'cardinality3Opposite' identity = '00000000-0000-0000-0000-000000001104'>
              <referenceType>i10000000z0000z0000z0000z000000000048</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SettoThing' identity = '10000000-0000-0000-0000-000000000297' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000297' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'element' identity = '10000000-0000-0000-0000-000000000298' id = 'i10000000z0000z0000z0000z000000000298' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000048</source>
            <type>i10000000z0000z0000z0000z000000000004</type>
            <generatedProperty name = 'element' identity = '00000000-0000-0000-0000-000000001105'>
              <referenceType>i10000000z0000z0000z0000z000000000004</referenceType>
            </generatedProperty>
          </role>
          <role name = 'elementOpposite' identity = '10000000-0000-0000-0000-000000000299' id = 'i10000000z0000z0000z0000z000000000299' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000004</source>
            <type>i10000000z0000z0000z0000z000000000048</type>
            <generatedProperty name = 'elementOpposite' identity = '00000000-0000-0000-0000-000000001106'>
              <referenceType>i10000000z0000z0000z0000z000000000048</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'AtleastnQuantificationtoNonnegativeInteger' identity = '10000000-0000-0000-0000-000000000300' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000300' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'minimumCardinality' identity = '10000000-0000-0000-0000-000000000301' id = 'i10000000z0000z0000z0000z000000000301' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000053</source>
            <type>i10000000z0000z0000z0000z000000000030</type>
            <generatedProperty name = 'minimumCardinality' identity = '00000000-0000-0000-0000-000000001107'>
              <referenceType>i10000000z0000z0000z0000z000000000030</referenceType>
            </generatedProperty>
          </role>
          <role name = 'minimumCardinality4Opposite' identity = '10000000-0000-0000-0000-000000000302' id = 'i10000000z0000z0000z0000z000000000302' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000030</source>
            <type>i10000000z0000z0000z0000z000000000053</type>
            <generatedProperty name = 'minimumCardinality4Opposite' identity = '00000000-0000-0000-0000-000000001108'>
              <referenceType>i10000000z0000z0000z0000z000000000053</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'QuantificationtoLogicalFormulation' identity = '10000000-0000-0000-0000-000000000303' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000303' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'scopeFormulation' identity = '10000000-0000-0000-0000-000000000304' id = 'i10000000z0000z0000z0000z000000000304' min = '0' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000054</source>
            <type>i10000000z0000z0000z0000z000000000025</type>
            <generatedProperty name = 'scopeFormulation' identity = '00000000-0000-0000-0000-000000001109'>
              <referenceType>i10000000z0000z0000z0000z000000000025</referenceType>
            </generatedProperty>
          </role>
          <role name = 'scopeFormulationOpposite' identity = '10000000-0000-0000-0000-000000000305' id = 'i10000000z0000z0000z0000z000000000305' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000025</source>
            <type>i10000000z0000z0000z0000z000000000054</type>
            <generatedProperty name = 'scopeFormulationOpposite' identity = '00000000-0000-0000-0000-000000001110'>
              <referenceType>i10000000z0000z0000z0000z000000000054</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'AtmostnQuantificationtoNonnegativeInteger' identity = '10000000-0000-0000-0000-000000000306' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000306' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'maximumCardinality' identity = '10000000-0000-0000-0000-000000000307' id = 'i10000000z0000z0000z0000z000000000307' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000055</source>
            <type>i10000000z0000z0000z0000z000000000030</type>
            <generatedProperty name = 'maximumCardinality' identity = '00000000-0000-0000-0000-000000001111'>
              <referenceType>i10000000z0000z0000z0000z000000000030</referenceType>
            </generatedProperty>
          </role>
          <role name = 'maximumCardinality5Opposite' identity = '10000000-0000-0000-0000-000000000308' id = 'i10000000z0000z0000z0000z000000000308' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000030</source>
            <type>i10000000z0000z0000z0000z000000000055</type>
            <generatedProperty name = 'maximumCardinality5Opposite' identity = '00000000-0000-0000-0000-000000001112'>
              <referenceType>i10000000z0000z0000z0000z000000000055</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'AtomicFormulationtoRoleBinding' identity = '10000000-0000-0000-0000-000000000309' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000309' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'roleBinding' identity = '10000000-0000-0000-0000-000000000310' id = 'i10000000z0000z0000z0000z000000000310' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000057</source>
            <type>i10000000z0000z0000z0000z000000000046</type>
            <generatedProperty name = 'roleBinding' identity = '00000000-0000-0000-0000-000000001113'>
              <referenceType>i10000000z0000z0000z0000z000000000046</referenceType>
            </generatedProperty>
          </role>
          <role name = 'roleBinding6Opposite' identity = '10000000-0000-0000-0000-000000000311' id = 'i10000000z0000z0000z0000z000000000311' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000046</source>
            <type>i10000000z0000z0000z0000z000000000057</type>
            <generatedProperty name = 'roleBinding6Opposite' identity = '00000000-0000-0000-0000-000000001114'>
              <referenceType>i10000000z0000z0000z0000z000000000057</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'BinaryLogicalOperationtoLogicalFormulation-8' identity = '10000000-0000-0000-0000-000000000312' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000312' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'logicalOperand2' identity = '10000000-0000-0000-0000-000000000313' id = 'i10000000z0000z0000z0000z000000000313' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000060</source>
            <type>i10000000z0000z0000z0000z000000000025</type>
            <generatedProperty name = 'logicalOperand2' identity = '00000000-0000-0000-0000-000000001115'>
              <referenceType>i10000000z0000z0000z0000z000000000025</referenceType>
            </generatedProperty>
          </role>
          <role name = 'logicalOperand2Opposite' identity = '10000000-0000-0000-0000-000000000314' id = 'i10000000z0000z0000z0000z000000000314' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000025</source>
            <type>i10000000z0000z0000z0000z000000000060</type>
            <generatedProperty name = 'logicalOperand2Opposite' identity = '00000000-0000-0000-0000-000000001116'>
              <referenceType>i10000000z0000z0000z0000z000000000060</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'BinaryLogicalOperationtoLogicalFormulation-9' identity = '10000000-0000-0000-0000-000000000315' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000315' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'logicalOperand1' identity = '10000000-0000-0000-0000-000000000316' id = 'i10000000z0000z0000z0000z000000000316' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000060</source>
            <type>i10000000z0000z0000z0000z000000000025</type>
            <generatedProperty name = 'logicalOperand1' identity = '00000000-0000-0000-0000-000000001117'>
              <referenceType>i10000000z0000z0000z0000z000000000025</referenceType>
            </generatedProperty>
          </role>
          <role name = 'logicalOperand1Opposite' identity = '10000000-0000-0000-0000-000000000317' id = 'i10000000z0000z0000z0000z000000000317' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000025</source>
            <type>i10000000z0000z0000z0000z000000000060</type>
            <generatedProperty name = 'logicalOperand1Opposite' identity = '00000000-0000-0000-0000-000000001118'>
              <referenceType>i10000000z0000z0000z0000z000000000060</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'LogicalOperationtoLogicalFormulation' identity = '10000000-0000-0000-0000-000000000318' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000318' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'logicalOperand' identity = '10000000-0000-0000-0000-000000000319' id = 'i10000000z0000z0000z0000z000000000319' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000061</source>
            <type>i10000000z0000z0000z0000z000000000025</type>
            <generatedProperty name = 'logicalOperand' identity = '00000000-0000-0000-0000-000000001119'>
              <referenceType>i10000000z0000z0000z0000z000000000025</referenceType>
            </generatedProperty>
          </role>
          <role name = 'logicalOperandOpposite' identity = '10000000-0000-0000-0000-000000000320' id = 'i10000000z0000z0000z0000z000000000320' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000025</source>
            <type>i10000000z0000z0000z0000z000000000061</type>
            <generatedProperty name = 'logicalOperandOpposite' identity = '00000000-0000-0000-0000-000000001120'>
              <referenceType>i10000000z0000z0000z0000z000000000061</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'BodyOfSharedMeaningstoFactType' identity = '10000000-0000-0000-0000-000000000321' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000321' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'elementaryFactType' identity = '10000000-0000-0000-0000-000000000322' id = 'i10000000z0000z0000z0000z000000000322' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000064</source>
            <type>i10000000z0000z0000z0000z000000000041</type>
            <generatedProperty name = 'elementaryFactType' identity = '00000000-0000-0000-0000-000000001121'>
              <referenceType>i10000000z0000z0000z0000z000000000041</referenceType>
            </generatedProperty>
          </role>
          <role name = 'elementaryFactTypeOpposite' identity = '10000000-0000-0000-0000-000000000323' id = 'i10000000z0000z0000z0000z000000000323' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000041</source>
            <type>i10000000z0000z0000z0000z000000000064</type>
            <generatedProperty name = 'elementaryFactTypeOpposite' identity = '00000000-0000-0000-0000-000000001122'>
              <referenceType>i10000000z0000z0000z0000z000000000064</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ObjectTypetoCategorizationScheme' identity = '10000000-0000-0000-0000-000000000324' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000324' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'categorizationScheme' identity = '10000000-0000-0000-0000-000000000325' id = 'i10000000z0000z0000z0000z000000000325' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000078</source>
            <type>i10000000z0000z0000z0000z000000000074</type>
            <generatedProperty name = 'categorizationScheme' identity = '00000000-0000-0000-0000-000000001123'>
              <referenceType>i10000000z0000z0000z0000z000000000074</referenceType>
            </generatedProperty>
          </role>
          <role name = 'categorizationSchemeOpposite' identity = '10000000-0000-0000-0000-000000000326' id = 'i10000000z0000z0000z0000z000000000326' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000074</source>
            <type>i10000000z0000z0000z0000z000000000078</type>
            <generatedProperty name = 'categorizationSchemeOpposite' identity = '00000000-0000-0000-0000-000000001124'>
              <referenceType>i10000000z0000z0000z0000z000000000078</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ObjectTypetoCategorizationType' identity = '10000000-0000-0000-0000-000000000327' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000327' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'categorizationType' identity = '10000000-0000-0000-0000-000000000328' id = 'i10000000z0000z0000z0000z000000000328' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000078</source>
            <type>i10000000z0000z0000z0000z000000000075</type>
            <generatedProperty name = 'categorizationType' identity = '00000000-0000-0000-0000-000000001125'>
              <referenceType>i10000000z0000z0000z0000z000000000075</referenceType>
            </generatedProperty>
          </role>
          <role name = 'categorizationTypeOpposite' identity = '10000000-0000-0000-0000-000000000329' id = 'i10000000z0000z0000z0000z000000000329' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000075</source>
            <type>i10000000z0000z0000z0000z000000000078</type>
            <generatedProperty name = 'categorizationTypeOpposite' identity = '00000000-0000-0000-0000-000000001126'>
              <referenceType>i10000000z0000z0000z0000z000000000078</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'CommunitytoUri' identity = '10000000-0000-0000-0000-000000000330' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000330' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'uri' identity = '10000000-0000-0000-0000-000000000331' id = 'i10000000z0000z0000z0000z000000000331' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000083</source>
            <type>i10000000z0000z0000z0000z000000000038</type>
            <generatedProperty name = 'uri' identity = '00000000-0000-0000-0000-000000001127'>
              <referenceType>i10000000z0000z0000z0000z000000000038</referenceType>
            </generatedProperty>
          </role>
          <role name = 'uri7Opposite' identity = '10000000-0000-0000-0000-000000000332' id = 'i10000000z0000z0000z0000z000000000332' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000038</source>
            <type>i10000000z0000z0000z0000z000000000083</type>
            <generatedProperty name = 'uri7Opposite' identity = '00000000-0000-0000-0000-000000001128'>
              <referenceType>i10000000z0000z0000z0000z000000000083</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'CommunitytoCommunity' identity = '10000000-0000-0000-0000-000000000333' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000333' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'subcommunity' identity = '10000000-0000-0000-0000-000000000334' id = 'i10000000z0000z0000z0000z000000000334' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000083</source>
            <type>i10000000z0000z0000z0000z000000000083</type>
            <generatedProperty name = 'subcommunity' identity = '00000000-0000-0000-0000-000000001129'>
              <referenceType>i10000000z0000z0000z0000z000000000083</referenceType>
            </generatedProperty>
          </role>
          <role name = 'subcommunityOpposite' identity = '10000000-0000-0000-0000-000000000335' id = 'i10000000z0000z0000z0000z000000000335' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000083</source>
            <type>i10000000z0000z0000z0000z000000000083</type>
            <generatedProperty name = 'subcommunityOpposite' identity = '00000000-0000-0000-0000-000000001130'>
              <referenceType>i10000000z0000z0000z0000z000000000083</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ExactlynQuantificationtoNonnegativeInteger' identity = '10000000-0000-0000-0000-000000000336' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000336' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'cardinality' identity = '10000000-0000-0000-0000-000000000337' id = 'i10000000z0000z0000z0000z000000000337' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000107</source>
            <type>i10000000z0000z0000z0000z000000000030</type>
            <generatedProperty name = 'cardinality' identity = '00000000-0000-0000-0000-000000001131'>
              <referenceType>i10000000z0000z0000z0000z000000000030</referenceType>
            </generatedProperty>
          </role>
          <role name = 'cardinality8Opposite' identity = '10000000-0000-0000-0000-000000000338' id = 'i10000000z0000z0000z0000z000000000338' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000030</source>
            <type>i10000000z0000z0000z0000z000000000107</type>
            <generatedProperty name = 'cardinality8Opposite' identity = '00000000-0000-0000-0000-000000001132'>
              <referenceType>i10000000z0000z0000z0000z000000000107</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'FactTypeHasFactInFactModeltoFactType' identity = '10000000-0000-0000-0000-000000000339' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000339' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'factType' identity = '10000000-0000-0000-0000-000000000340' id = 'i10000000z0000z0000z0000z000000000340' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000117</source>
            <type>i10000000z0000z0000z0000z000000000041</type>
            <generatedProperty name = 'factType' identity = '00000000-0000-0000-0000-000000001133'>
              <referenceType>i10000000z0000z0000z0000z000000000041</referenceType>
            </generatedProperty>
          </role>
          <role name = 'factTypeOpposite' identity = '10000000-0000-0000-0000-000000000341' id = 'i10000000z0000z0000z0000z000000000341' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000041</source>
            <type>i10000000z0000z0000z0000z000000000117</type>
            <generatedProperty name = 'factTypeOpposite' identity = '00000000-0000-0000-0000-000000001134'>
              <referenceType>i10000000z0000z0000z0000z000000000117</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'FactTypeHasFactInFactModeltoFact' identity = '10000000-0000-0000-0000-000000000342' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000342' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'fact' identity = '10000000-0000-0000-0000-000000000343' id = 'i10000000z0000z0000z0000z000000000343' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000117</source>
            <type>i10000000z0000z0000z0000z000000000114</type>
            <generatedProperty name = 'fact' identity = '00000000-0000-0000-0000-000000001135'>
              <referenceType>i10000000z0000z0000z0000z000000000114</referenceType>
            </generatedProperty>
          </role>
          <role name = 'factOpposite' identity = '10000000-0000-0000-0000-000000000344' id = 'i10000000z0000z0000z0000z000000000344' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000114</source>
            <type>i10000000z0000z0000z0000z000000000117</type>
            <generatedProperty name = 'factOpposite' identity = '00000000-0000-0000-0000-000000001136'>
              <referenceType>i10000000z0000z0000z0000z000000000117</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'FactTypeHasFactInFactModeltoFactModel' identity = '10000000-0000-0000-0000-000000000345' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000345' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'factModel' identity = '10000000-0000-0000-0000-000000000346' id = 'i10000000z0000z0000z0000z000000000346' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000117</source>
            <type>i10000000z0000z0000z0000z000000000115</type>
            <generatedProperty name = 'factModel' identity = '00000000-0000-0000-0000-000000001137'>
              <referenceType>i10000000z0000z0000z0000z000000000115</referenceType>
            </generatedProperty>
          </role>
          <role name = 'factModelOpposite' identity = '10000000-0000-0000-0000-000000000347' id = 'i10000000z0000z0000z0000z000000000347' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000115</source>
            <type>i10000000z0000z0000z0000z000000000117</type>
            <generatedProperty name = 'factModelOpposite' identity = '00000000-0000-0000-0000-000000001138'>
              <referenceType>i10000000z0000z0000z0000z000000000117</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ImplicationtoLogicalFormulation-10' identity = '10000000-0000-0000-0000-000000000348' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000348' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'consequent' identity = '10000000-0000-0000-0000-000000000349' id = 'i10000000z0000z0000z0000z000000000349' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000125</source>
            <type>i10000000z0000z0000z0000z000000000025</type>
            <generatedProperty name = 'consequent' identity = '00000000-0000-0000-0000-000000001139'>
              <referenceType>i10000000z0000z0000z0000z000000000025</referenceType>
            </generatedProperty>
          </role>
          <role name = 'consequent9Opposite' identity = '10000000-0000-0000-0000-000000000350' id = 'i10000000z0000z0000z0000z000000000350' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000025</source>
            <type>i10000000z0000z0000z0000z000000000125</type>
            <generatedProperty name = 'consequent9Opposite' identity = '00000000-0000-0000-0000-000000001140'>
              <referenceType>i10000000z0000z0000z0000z000000000125</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'ImplicationtoLogicalFormulation-11' identity = '10000000-0000-0000-0000-000000000351' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000351' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'antecedent' identity = '10000000-0000-0000-0000-000000000352' id = 'i10000000z0000z0000z0000z000000000352' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000125</source>
            <type>i10000000z0000z0000z0000z000000000025</type>
            <generatedProperty name = 'antecedent' identity = '00000000-0000-0000-0000-000000001141'>
              <referenceType>i10000000z0000z0000z0000z000000000025</referenceType>
            </generatedProperty>
          </role>
          <role name = 'antecedentOpposite' identity = '10000000-0000-0000-0000-000000000353' id = 'i10000000z0000z0000z0000z000000000353' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000025</source>
            <type>i10000000z0000z0000z0000z000000000125</type>
            <generatedProperty name = 'antecedentOpposite' identity = '00000000-0000-0000-0000-000000001142'>
              <referenceType>i10000000z0000z0000z0000z000000000125</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NumericRangeQuantificationtoNonnegativeInteger-12' identity = '10000000-0000-0000-0000-000000000354' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000354' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'maximumCardinality' identity = '10000000-0000-0000-0000-000000000355' id = 'i10000000z0000z0000z0000z000000000355' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000151</source>
            <type>i10000000z0000z0000z0000z000000000030</type>
            <generatedProperty name = 'maximumCardinality' identity = '00000000-0000-0000-0000-000000001143'>
              <referenceType>i10000000z0000z0000z0000z000000000030</referenceType>
            </generatedProperty>
          </role>
          <role name = 'maximumCardinality10Opposite' identity = '10000000-0000-0000-0000-000000000356' id = 'i10000000z0000z0000z0000z000000000356' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000030</source>
            <type>i10000000z0000z0000z0000z000000000151</type>
            <generatedProperty name = 'maximumCardinality10Opposite' identity = '00000000-0000-0000-0000-000000001144'>
              <referenceType>i10000000z0000z0000z0000z000000000151</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'NumericRangeQuantificationtoNonnegativeInteger-13' identity = '10000000-0000-0000-0000-000000000357' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000357' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'minimumCardinality' identity = '10000000-0000-0000-0000-000000000358' id = 'i10000000z0000z0000z0000z000000000358' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000151</source>
            <type>i10000000z0000z0000z0000z000000000030</type>
            <generatedProperty name = 'minimumCardinality' identity = '00000000-0000-0000-0000-000000001145'>
              <referenceType>i10000000z0000z0000z0000z000000000030</referenceType>
            </generatedProperty>
          </role>
          <role name = 'minimumCardinality11Opposite' identity = '10000000-0000-0000-0000-000000000359' id = 'i10000000z0000z0000z0000z000000000359' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000030</source>
            <type>i10000000z0000z0000z0000z000000000151</type>
            <generatedProperty name = 'minimumCardinality11Opposite' identity = '00000000-0000-0000-0000-000000001146'>
              <referenceType>i10000000z0000z0000z0000z000000000151</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'OperativeBusinessRuletoLevelOfEnforcement' identity = '10000000-0000-0000-0000-000000000360' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000360' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'levelOfEnforcement' identity = '10000000-0000-0000-0000-000000000361' id = 'i10000000z0000z0000z0000z000000000361' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000156</source>
            <type>i10000000z0000z0000z0000z000000000137</type>
            <generatedProperty name = 'levelOfEnforcement' identity = '00000000-0000-0000-0000-000000001147'>
              <referenceType>i10000000z0000z0000z0000z000000000137</referenceType>
            </generatedProperty>
          </role>
          <role name = 'levelOfEnforcementOpposite' identity = '10000000-0000-0000-0000-000000000362' id = 'i10000000z0000z0000z0000z000000000362' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000137</source>
            <type>i10000000z0000z0000z0000z000000000156</type>
            <generatedProperty name = 'levelOfEnforcementOpposite' identity = '00000000-0000-0000-0000-000000001148'>
              <referenceType>i10000000z0000z0000z0000z000000000156</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SemanticCommunitytoSpeechCommunity' identity = '10000000-0000-0000-0000-000000000363' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000363' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'speechCommunity' identity = '10000000-0000-0000-0000-000000000364' id = 'i10000000z0000z0000z0000z000000000364' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000177</source>
            <type>i10000000z0000z0000z0000z000000000178</type>
            <generatedProperty name = 'speechCommunity' identity = '00000000-0000-0000-0000-000000001149'>
              <referenceType>i10000000z0000z0000z0000z000000000178</referenceType>
            </generatedProperty>
          </role>
          <role name = 'speechCommunity12Opposite' identity = '10000000-0000-0000-0000-000000000365' id = 'i10000000z0000z0000z0000z000000000365' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000178</source>
            <type>i10000000z0000z0000z0000z000000000177</type>
            <generatedProperty name = 'speechCommunity12Opposite' identity = '00000000-0000-0000-0000-000000001150'>
              <referenceType>i10000000z0000z0000z0000z000000000177</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SpeechCommunityAdoptsAdoptedDefinitionCitingReferencetoSpeechCommunity' identity = '10000000-0000-0000-0000-000000000366' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000366' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'speechCommunity' identity = '10000000-0000-0000-0000-000000000367' id = 'i10000000z0000z0000z0000z000000000367' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000183</source>
            <type>i10000000z0000z0000z0000z000000000178</type>
            <generatedProperty name = 'speechCommunity' identity = '00000000-0000-0000-0000-000000001151'>
              <referenceType>i10000000z0000z0000z0000z000000000178</referenceType>
            </generatedProperty>
          </role>
          <role name = 'speechCommunity13Opposite' identity = '10000000-0000-0000-0000-000000000368' id = 'i10000000z0000z0000z0000z000000000368' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000178</source>
            <type>i10000000z0000z0000z0000z000000000183</type>
            <generatedProperty name = 'speechCommunity13Opposite' identity = '00000000-0000-0000-0000-000000001152'>
              <referenceType>i10000000z0000z0000z0000z000000000183</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SpeechCommunityAdoptsAdoptedDefinitionCitingReferencetoAdoptedDefinition' identity = '10000000-0000-0000-0000-000000000369' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000369' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'adoptedDefinition' identity = '10000000-0000-0000-0000-000000000370' id = 'i10000000z0000z0000z0000z000000000370' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000183</source>
            <type>i10000000z0000z0000z0000z000000000011</type>
            <generatedProperty name = 'adoptedDefinition' identity = '00000000-0000-0000-0000-000000001153'>
              <referenceType>i10000000z0000z0000z0000z000000000011</referenceType>
            </generatedProperty>
          </role>
          <role name = 'adoptedDefinitionOpposite' identity = '10000000-0000-0000-0000-000000000371' id = 'i10000000z0000z0000z0000z000000000371' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000011</source>
            <type>i10000000z0000z0000z0000z000000000183</type>
            <generatedProperty name = 'adoptedDefinitionOpposite' identity = '00000000-0000-0000-0000-000000001154'>
              <referenceType>i10000000z0000z0000z0000z000000000183</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'SpeechCommunityAdoptsAdoptedDefinitionCitingReferencetoReference' identity = '10000000-0000-0000-0000-000000000372' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000372' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'reference' identity = '10000000-0000-0000-0000-000000000373' id = 'i10000000z0000z0000z0000z000000000373' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000183</source>
            <type>i10000000z0000z0000z0000z000000000171</type>
            <generatedProperty name = 'reference' identity = '00000000-0000-0000-0000-000000001155'>
              <referenceType>i10000000z0000z0000z0000z000000000171</referenceType>
            </generatedProperty>
          </role>
          <role name = 'referenceOpposite' identity = '10000000-0000-0000-0000-000000000374' id = 'i10000000z0000z0000z0000z000000000374' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000171</source>
            <type>i10000000z0000z0000z0000z000000000183</type>
            <generatedProperty name = 'referenceOpposite' identity = '00000000-0000-0000-0000-000000001156'>
              <referenceType>i10000000z0000z0000z0000z000000000183</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'StateOfAffairsInvolvesThingInRoletoStateOfAffairs' identity = '10000000-0000-0000-0000-000000000375' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000375' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'stateOfAffairs' identity = '10000000-0000-0000-0000-000000000376' id = 'i10000000z0000z0000z0000z000000000376' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000184</source>
            <type>i10000000z0000z0000z0000z000000000003</type>
            <generatedProperty name = 'stateOfAffairs' identity = '00000000-0000-0000-0000-000000001157'>
              <referenceType>i10000000z0000z0000z0000z000000000003</referenceType>
            </generatedProperty>
          </role>
          <role name = 'stateOfAffairsOpposite' identity = '10000000-0000-0000-0000-000000000377' id = 'i10000000z0000z0000z0000z000000000377' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000003</source>
            <type>i10000000z0000z0000z0000z000000000184</type>
            <generatedProperty name = 'stateOfAffairsOpposite' identity = '00000000-0000-0000-0000-000000001158'>
              <referenceType>i10000000z0000z0000z0000z000000000184</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'StateOfAffairsInvolvesThingInRoletoThing' identity = '10000000-0000-0000-0000-000000000378' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000378' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'thing' identity = '10000000-0000-0000-0000-000000000379' id = 'i10000000z0000z0000z0000z000000000379' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000184</source>
            <type>i10000000z0000z0000z0000z000000000004</type>
            <generatedProperty name = 'thing' identity = '00000000-0000-0000-0000-000000001159'>
              <referenceType>i10000000z0000z0000z0000z000000000004</referenceType>
            </generatedProperty>
          </role>
          <role name = 'thingOpposite' identity = '10000000-0000-0000-0000-000000000380' id = 'i10000000z0000z0000z0000z000000000380' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000004</source>
            <type>i10000000z0000z0000z0000z000000000184</type>
            <generatedProperty name = 'thingOpposite' identity = '00000000-0000-0000-0000-000000001160'>
              <referenceType>i10000000z0000z0000z0000z000000000184</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'StateOfAffairsInvolvesThingInRoletoRole' identity = '10000000-0000-0000-0000-000000000381' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000381' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'role' identity = '10000000-0000-0000-0000-000000000382' id = 'i10000000z0000z0000z0000z000000000382' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000184</source>
            <type>i10000000z0000z0000z0000z000000000045</type>
            <generatedProperty name = 'role' identity = '00000000-0000-0000-0000-000000001161'>
              <referenceType>i10000000z0000z0000z0000z000000000045</referenceType>
            </generatedProperty>
          </role>
          <role name = 'roleOpposite' identity = '10000000-0000-0000-0000-000000000383' id = 'i10000000z0000z0000z0000z000000000383' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000045</source>
            <type>i10000000z0000z0000z0000z000000000184</type>
            <generatedProperty name = 'roleOpposite' identity = '00000000-0000-0000-0000-000000001162'>
              <referenceType>i10000000z0000z0000z0000z000000000184</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'TerminologicalDictionaryhasUri' identity = '10000000-0000-0000-0000-000000000384' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000384' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'uri' identity = '10000000-0000-0000-0000-000000000385' id = 'i10000000z0000z0000z0000z000000000385' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000189</source>
            <type>i10000000z0000z0000z0000z000000000038</type>
            <generatedProperty name = 'uri' identity = '00000000-0000-0000-0000-000000001163'>
              <referenceType>i10000000z0000z0000z0000z000000000038</referenceType>
            </generatedProperty>
          </role>
          <role name = 'uri14Opposite' identity = '10000000-0000-0000-0000-000000000386' id = 'i10000000z0000z0000z0000z000000000386' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000038</source>
            <type>i10000000z0000z0000z0000z000000000189</type>
            <generatedProperty name = 'uri14Opposite' identity = '00000000-0000-0000-0000-000000001164'>
              <referenceType>i10000000z0000z0000z0000z000000000189</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'WhetherornotFormulationtoLogicalFormulation-14' identity = '10000000-0000-0000-0000-000000000387' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000387' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'inconsequent' identity = '10000000-0000-0000-0000-000000000388' id = 'i10000000z0000z0000z0000z000000000388' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000194</source>
            <type>i10000000z0000z0000z0000z000000000025</type>
            <generatedProperty name = 'inconsequent' identity = '00000000-0000-0000-0000-000000001165'>
              <referenceType>i10000000z0000z0000z0000z000000000025</referenceType>
            </generatedProperty>
          </role>
          <role name = 'inconsequentOpposite' identity = '10000000-0000-0000-0000-000000000389' id = 'i10000000z0000z0000z0000z000000000389' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000025</source>
            <type>i10000000z0000z0000z0000z000000000194</type>
            <generatedProperty name = 'inconsequentOpposite' identity = '00000000-0000-0000-0000-000000001166'>
              <referenceType>i10000000z0000z0000z0000z000000000194</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
      <relationship name = 'WhetherornotFormulationtoLogicalFormulation-15' identity = '10000000-0000-0000-0000-000000000390' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000390' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'mdfclassmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <roles>
          <role name = 'consequent' identity = '10000000-0000-0000-0000-000000000391' id = 'i10000000z0000z0000z0000z000000000391' min = '0' max = '0' isUnbounded = 'true' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000194</source>
            <type>i10000000z0000z0000z0000z000000000025</type>
            <generatedProperty name = 'consequent' identity = '00000000-0000-0000-0000-000000001167'>
              <referenceType>i10000000z0000z0000z0000z000000000025</referenceType>
            </generatedProperty>
          </role>
          <role name = 'consequent15Opposite' identity = '10000000-0000-0000-0000-000000000392' id = 'i10000000z0000z0000z0000z000000000392' min = '1' max = '1' isUnbounded = 'false' accepts = 'all'>
            <mdfmetadata xsi:type = 'rolemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' isordered = 'false' isnavigablefrom = 'false'/>
            <source>i10000000z0000z0000z0000z000000000025</source>
            <type>i10000000z0000z0000z0000z000000000194</type>
            <generatedProperty name = 'consequent15Opposite' identity = '00000000-0000-0000-0000-000000001168'>
              <referenceType>i10000000z0000z0000z0000z000000000194</referenceType>
            </generatedProperty>
          </role>
        </roles>
        <valueProperties/>
      </relationship>
    </relationships>
    <trees>
      <treenavigator name = 'intrinsic' identity = '00000000-0000-0000-0000-000000000002' id = 'i00000000z0000z0000z0000z000000000001'>
        <expressions>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Actuality-StateOfAffairs' identity = '00000000-0000-0000-0000-000000000017' id = 'i00000000z0000z0000z0000z000000000018' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000003</superType>
            <subType>i10000000z0000z0000z0000z000000000002</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StateOfAffairs-Thing' identity = '00000000-0000-0000-0000-000000000021' id = 'i00000000z0000z0000z0000z000000000022' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000003</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Name-Designation' identity = '00000000-0000-0000-0000-000000000025' id = 'i00000000z0000z0000z0000z000000000026' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000005</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Designation-Representation' identity = '00000000-0000-0000-0000-000000000029' id = 'i00000000z0000z0000z0000z000000000030' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000006</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Representation-Actuality' identity = '00000000-0000-0000-0000-000000000033' id = 'i00000000z0000z0000z0000z000000000034' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000007</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Meaning-Thing' identity = '00000000-0000-0000-0000-000000000037' id = 'i00000000z0000z0000z0000z000000000038' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000008</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Expression-BindableTarget' identity = '00000000-0000-0000-0000-000000000041' id = 'i00000000z0000z0000z0000z000000000042' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000010</superType>
            <subType>i10000000z0000z0000z0000z000000000009</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BindableTarget-Thing' identity = '00000000-0000-0000-0000-000000000045' id = 'i00000000z0000z0000z0000z000000000046' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000010</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AdoptedDefinition-Definition' identity = '00000000-0000-0000-0000-000000000049' id = 'i00000000z0000z0000z0000z000000000050' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000012</superType>
            <subType>i10000000z0000z0000z0000z000000000011</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Definition-Representation' identity = '00000000-0000-0000-0000-000000000053' id = 'i00000000z0000z0000z0000z000000000054' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000012</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Advice-ElementOfGuidance' identity = '00000000-0000-0000-0000-000000000057' id = 'i00000000z0000z0000z0000z000000000058' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000014</superType>
            <subType>i10000000z0000z0000z0000z000000000013</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ElementOfGuidance-Proposition' identity = '00000000-0000-0000-0000-000000000061' id = 'i00000000z0000z0000z0000z000000000062' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000015</superType>
            <subType>i10000000z0000z0000z0000z000000000014</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Proposition-Meaning' identity = '00000000-0000-0000-0000-000000000065' id = 'i00000000z0000z0000z0000z000000000066' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000008</superType>
            <subType>i10000000z0000z0000z0000z000000000015</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Statement-Representation' identity = '00000000-0000-0000-0000-000000000069' id = 'i00000000z0000z0000z0000z000000000070' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000016</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AdviceOfContingency-AdviceOfPossibility' identity = '00000000-0000-0000-0000-000000000073' id = 'i00000000z0000z0000z0000z000000000074' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000018</superType>
            <subType>i10000000z0000z0000z0000z000000000017</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AdviceOfPossibility-Advice' identity = '00000000-0000-0000-0000-000000000077' id = 'i00000000z0000z0000z0000z000000000078' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000013</superType>
            <subType>i10000000z0000z0000z0000z000000000018</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AdviceOfOptionality-AdviceOfPermission' identity = '00000000-0000-0000-0000-000000000081' id = 'i00000000z0000z0000z0000z000000000082' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000020</superType>
            <subType>i10000000z0000z0000z0000z000000000019</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AdviceOfPermission-Advice' identity = '00000000-0000-0000-0000-000000000085' id = 'i00000000z0000z0000z0000z000000000086' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000013</superType>
            <subType>i10000000z0000z0000z0000z000000000020</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AdviceStatement-GuidanceStatement' identity = '00000000-0000-0000-0000-000000000089' id = 'i00000000z0000z0000z0000z000000000090' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000022</superType>
            <subType>i10000000z0000z0000z0000z000000000021</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'GuidanceStatement-Statement' identity = '00000000-0000-0000-0000-000000000093' id = 'i00000000z0000z0000z0000z000000000094' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000016</superType>
            <subType>i10000000z0000z0000z0000z000000000022</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AggregationFormulation-ProjectingFormulation' identity = '00000000-0000-0000-0000-000000000097' id = 'i00000000z0000z0000z0000z000000000098' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000024</superType>
            <subType>i10000000z0000z0000z0000z000000000023</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ProjectingFormulation-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000101' id = 'i00000000z0000z0000z0000z000000000102' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000024</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'LogicalFormulation-SemanticFormulation' identity = '00000000-0000-0000-0000-000000000105' id = 'i00000000z0000z0000z0000z000000000106' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000026</superType>
            <subType>i10000000z0000z0000z0000z000000000025</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SemanticFormulation-Thing' identity = '00000000-0000-0000-0000-000000000109' id = 'i00000000z0000z0000z0000z000000000110' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000026</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Projection-SemanticFormulation' identity = '00000000-0000-0000-0000-000000000113' id = 'i00000000z0000z0000z0000z000000000114' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000026</superType>
            <subType>i10000000z0000z0000z0000z000000000027</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Variable-BindableTarget' identity = '00000000-0000-0000-0000-000000000117' id = 'i00000000z0000z0000z0000z000000000118' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000010</superType>
            <subType>i10000000z0000z0000z0000z000000000028</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PositiveInteger-NonnegativeInteger' identity = '00000000-0000-0000-0000-000000000121' id = 'i00000000z0000z0000z0000z000000000122' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000030</superType>
            <subType>i10000000z0000z0000z0000z000000000029</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NonnegativeInteger-Integer' identity = '00000000-0000-0000-0000-000000000125' id = 'i00000000z0000z0000z0000z000000000126' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000031</superType>
            <subType>i10000000z0000z0000z0000z000000000030</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Integer-Number' identity = '00000000-0000-0000-0000-000000000129' id = 'i00000000z0000z0000z0000z000000000130' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000032</superType>
            <subType>i10000000z0000z0000z0000z000000000031</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Number-Quantity' identity = '00000000-0000-0000-0000-000000000133' id = 'i00000000z0000z0000z0000z000000000134' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000033</superType>
            <subType>i10000000z0000z0000z0000z000000000032</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Quantity-NounConcept' identity = '00000000-0000-0000-0000-000000000137' id = 'i00000000z0000z0000z0000z000000000138' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000034</superType>
            <subType>i10000000z0000z0000z0000z000000000033</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NounConcept-Concept' identity = '00000000-0000-0000-0000-000000000141' id = 'i00000000z0000z0000z0000z000000000142' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000034</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Concept-Meaning' identity = '00000000-0000-0000-0000-000000000145' id = 'i00000000z0000z0000z0000z000000000146' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000008</superType>
            <subType>i10000000z0000z0000z0000z000000000035</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AttributiveNamespace-Namespace' identity = '00000000-0000-0000-0000-000000000149' id = 'i00000000z0000z0000z0000z000000000150' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000037</superType>
            <subType>i10000000z0000z0000z0000z000000000036</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Namespace-Thing' identity = '00000000-0000-0000-0000-000000000153' id = 'i00000000z0000z0000z0000z000000000154' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000037</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Uri-Text' identity = '00000000-0000-0000-0000-000000000157' id = 'i00000000z0000z0000z0000z000000000158' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000039</superType>
            <subType>i10000000z0000z0000z0000z000000000038</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Text-Expression' identity = '00000000-0000-0000-0000-000000000161' id = 'i00000000z0000z0000z0000z000000000162' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000009</superType>
            <subType>i10000000z0000z0000z0000z000000000039</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Characteristic-FactType' identity = '00000000-0000-0000-0000-000000000165' id = 'i00000000z0000z0000z0000z000000000166' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000041</superType>
            <subType>i10000000z0000z0000z0000z000000000040</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactType-Concept' identity = '00000000-0000-0000-0000-000000000169' id = 'i00000000z0000z0000z0000z000000000170' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000041</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactTypeForm-Representation' identity = '00000000-0000-0000-0000-000000000173' id = 'i00000000z0000z0000z0000z000000000174' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000042</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Placeholder-Designation' identity = '00000000-0000-0000-0000-000000000177' id = 'i00000000z0000z0000z0000z000000000178' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000043</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactTypeRole-Role' identity = '00000000-0000-0000-0000-000000000181' id = 'i00000000z0000z0000z0000z000000000182' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000045</superType>
            <subType>i10000000z0000z0000z0000z000000000044</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Role-NounConcept' identity = '00000000-0000-0000-0000-000000000185' id = 'i00000000z0000z0000z0000z000000000186' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000034</superType>
            <subType>i10000000z0000z0000z0000z000000000045</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RoleBinding-Thing' identity = '00000000-0000-0000-0000-000000000189' id = 'i00000000z0000z0000z0000z000000000190' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000046</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ReferenceScheme-Thing' identity = '00000000-0000-0000-0000-000000000193' id = 'i00000000z0000z0000z0000z000000000194' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000047</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Set-Thing' identity = '00000000-0000-0000-0000-000000000197' id = 'i00000000z0000z0000z0000z000000000198' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000048</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AuxiliaryVariable-Variable' identity = '00000000-0000-0000-0000-000000000201' id = 'i00000000z0000z0000z0000z000000000202' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000028</superType>
            <subType>i10000000z0000z0000z0000z000000000049</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AnswerNominalization-ProjectingFormulation' identity = '00000000-0000-0000-0000-000000000205' id = 'i00000000z0000z0000z0000z000000000206' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000024</superType>
            <subType>i10000000z0000z0000z0000z000000000050</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AssociativeFactType-FactType' identity = '00000000-0000-0000-0000-000000000209' id = 'i00000000z0000z0000z0000z000000000210' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000041</superType>
            <subType>i10000000z0000z0000z0000z000000000051</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AssortmentFactType-FactType' identity = '00000000-0000-0000-0000-000000000213' id = 'i00000000z0000z0000z0000z000000000214' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000041</superType>
            <subType>i10000000z0000z0000z0000z000000000052</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AtleastnQuantification-Quantification' identity = '00000000-0000-0000-0000-000000000217' id = 'i00000000z0000z0000z0000z000000000218' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000054</superType>
            <subType>i10000000z0000z0000z0000z000000000053</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Quantification-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000221' id = 'i00000000z0000z0000z0000z000000000222' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000054</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AtmostnQuantification-Quantification' identity = '00000000-0000-0000-0000-000000000225' id = 'i00000000z0000z0000z0000z000000000226' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000054</superType>
            <subType>i10000000z0000z0000z0000z000000000055</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AtmostoneQuantification-AtmostnQuantification' identity = '00000000-0000-0000-0000-000000000229' id = 'i00000000z0000z0000z0000z000000000230' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000055</superType>
            <subType>i10000000z0000z0000z0000z000000000056</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AtomicFormulation-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000233' id = 'i00000000z0000z0000z0000z000000000234' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000057</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BagProjection-Projection' identity = '00000000-0000-0000-0000-000000000237' id = 'i00000000z0000z0000z0000z000000000238' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000027</superType>
            <subType>i10000000z0000z0000z0000z000000000058</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BinaryFactType-FactType' identity = '00000000-0000-0000-0000-000000000241' id = 'i00000000z0000z0000z0000z000000000242' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000041</superType>
            <subType>i10000000z0000z0000z0000z000000000059</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BinaryLogicalOperation-LogicalOperation' identity = '00000000-0000-0000-0000-000000000245' id = 'i00000000z0000z0000z0000z000000000246' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000061</superType>
            <subType>i10000000z0000z0000z0000z000000000060</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'LogicalOperation-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000249' id = 'i00000000z0000z0000z0000z000000000250' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000061</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BodyOfSharedConcepts-Thing' identity = '00000000-0000-0000-0000-000000000253' id = 'i00000000z0000z0000z0000z000000000254' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000062</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BodyOfSharedGuidance-Thing' identity = '00000000-0000-0000-0000-000000000257' id = 'i00000000z0000z0000z0000z000000000258' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000063</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BodyOfSharedMeanings-Set' identity = '00000000-0000-0000-0000-000000000261' id = 'i00000000z0000z0000z0000z000000000262' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000048</superType>
            <subType>i10000000z0000z0000z0000z000000000064</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BusinessPolicy-ElementOfGovernance' identity = '00000000-0000-0000-0000-000000000265' id = 'i00000000z0000z0000z0000z000000000266' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000066</superType>
            <subType>i10000000z0000z0000z0000z000000000065</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ElementOfGovernance-ElementOfGuidance' identity = '00000000-0000-0000-0000-000000000269' id = 'i00000000z0000z0000z0000z000000000270' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000014</superType>
            <subType>i10000000z0000z0000z0000z000000000066</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BusinessPolicyStatement-GuidanceStatement' identity = '00000000-0000-0000-0000-000000000273' id = 'i00000000z0000z0000z0000z000000000274' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000022</superType>
            <subType>i10000000z0000z0000z0000z000000000067</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BusinessRule-ElementOfGuidance' identity = '00000000-0000-0000-0000-000000000277' id = 'i00000000z0000z0000z0000z000000000278' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000014</superType>
            <subType>i10000000z0000z0000z0000z000000000068</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Rule-Proposition' identity = '00000000-0000-0000-0000-000000000281' id = 'i00000000z0000z0000z0000z000000000282' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000015</superType>
            <subType>i10000000z0000z0000z0000z000000000069</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BusinessVocabulary-Vocabulary' identity = '00000000-0000-0000-0000-000000000285' id = 'i00000000z0000z0000z0000z000000000286' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000071</superType>
            <subType>i10000000z0000z0000z0000z000000000070</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Vocabulary-Set' identity = '00000000-0000-0000-0000-000000000289' id = 'i00000000z0000z0000z0000z000000000290' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000048</superType>
            <subType>i10000000z0000z0000z0000z000000000071</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'CategorizationFactType-SpecializationFactType' identity = '00000000-0000-0000-0000-000000000293' id = 'i00000000z0000z0000z0000z000000000294' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000073</superType>
            <subType>i10000000z0000z0000z0000z000000000072</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SpecializationFactType-FactType' identity = '00000000-0000-0000-0000-000000000297' id = 'i00000000z0000z0000z0000z000000000298' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000041</superType>
            <subType>i10000000z0000z0000z0000z000000000073</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'CategorizationScheme-Thing' identity = '00000000-0000-0000-0000-000000000301' id = 'i00000000z0000z0000z0000z000000000302' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000074</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'CategorizationType-Concept' identity = '00000000-0000-0000-0000-000000000305' id = 'i00000000z0000z0000z0000z000000000306' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000075</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'CharacteristicType-ConceptType' identity = '00000000-0000-0000-0000-000000000309' id = 'i00000000z0000z0000z0000z000000000310' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000077</superType>
            <subType>i10000000z0000z0000z0000z000000000076</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptType-ObjectType' identity = '00000000-0000-0000-0000-000000000313' id = 'i00000000z0000z0000z0000z000000000314' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000078</superType>
            <subType>i10000000z0000z0000z0000z000000000077</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ObjectType-Concept' identity = '00000000-0000-0000-0000-000000000317' id = 'i00000000z0000z0000z0000z000000000318' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000078</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ClosedLogicalFormulation-ClosedSemanticFormulation' identity = '00000000-0000-0000-0000-000000000321' id = 'i00000000z0000z0000z0000z000000000322' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000080</superType>
            <subType>i10000000z0000z0000z0000z000000000079</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ClosedSemanticFormulation-SemanticFormulation' identity = '00000000-0000-0000-0000-000000000325' id = 'i00000000z0000z0000z0000z000000000326' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000026</superType>
            <subType>i10000000z0000z0000z0000z000000000080</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ClosedProjection-Projection' identity = '00000000-0000-0000-0000-000000000329' id = 'i00000000z0000z0000z0000z000000000330' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000027</superType>
            <subType>i10000000z0000z0000z0000z000000000081</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'CommunicationContent-Representation' identity = '00000000-0000-0000-0000-000000000333' id = 'i00000000z0000z0000z0000z000000000334' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000082</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Community-Thing' identity = '00000000-0000-0000-0000-000000000337' id = 'i00000000z0000z0000z0000z000000000338' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000083</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingAsComposite-Concept' identity = '00000000-0000-0000-0000-000000000341' id = 'i00000000z0000z0000z0000z000000000342' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000084</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingAsContinuant-Concept' identity = '00000000-0000-0000-0000-000000000345' id = 'i00000000z0000z0000z0000z000000000346' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000085</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingAsDeveloped-Concept' identity = '00000000-0000-0000-0000-000000000349' id = 'i00000000z0000z0000z0000z000000000350' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000086</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingAsOccurrent-Concept' identity = '00000000-0000-0000-0000-000000000353' id = 'i00000000z0000z0000z0000z000000000354' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000087</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingAsPrimitive-Concept' identity = '00000000-0000-0000-0000-000000000357' id = 'i00000000z0000z0000z0000z000000000358' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000088</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingAsUnitary-Concept' identity = '00000000-0000-0000-0000-000000000361' id = 'i00000000z0000z0000z0000z000000000362' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000089</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingExistingDependently-Concept' identity = '00000000-0000-0000-0000-000000000365' id = 'i00000000z0000z0000z0000z000000000366' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000090</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingExistingIndependently-Concept' identity = '00000000-0000-0000-0000-000000000369' id = 'i00000000z0000z0000z0000z000000000370' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000091</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptualSchema-Thing' identity = '00000000-0000-0000-0000-000000000373' id = 'i00000000z0000z0000z0000z000000000374' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000092</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Conjunction-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000377' id = 'i00000000z0000z0000z0000z000000000378' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000093</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ContextOfThing-Segmentation' identity = '00000000-0000-0000-0000-000000000381' id = 'i00000000z0000z0000z0000z000000000382' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000095</superType>
            <subType>i10000000z0000z0000z0000z000000000094</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Segmentation-CategorizationScheme' identity = '00000000-0000-0000-0000-000000000385' id = 'i00000000z0000z0000z0000z000000000386' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000074</superType>
            <subType>i10000000z0000z0000z0000z000000000095</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ContextualizationFactType-SpecializationFactType' identity = '00000000-0000-0000-0000-000000000389' id = 'i00000000z0000z0000z0000z000000000390' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000073</superType>
            <subType>i10000000z0000z0000z0000z000000000096</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ContextualizedConcept-NounConcept' identity = '00000000-0000-0000-0000-000000000393' id = 'i00000000z0000z0000z0000z000000000394' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000034</superType>
            <subType>i10000000z0000z0000z0000z000000000097</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ContingencyStatement-StatementOfAdviceOfPossibility' identity = '00000000-0000-0000-0000-000000000397' id = 'i00000000z0000z0000z0000z000000000398' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000099</superType>
            <subType>i10000000z0000z0000z0000z000000000098</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StatementOfAdviceOfPossibility-AdviceStatement' identity = '00000000-0000-0000-0000-000000000401' id = 'i00000000z0000z0000z0000z000000000402' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000021</superType>
            <subType>i10000000z0000z0000z0000z000000000099</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'DefiniteDescription-IntensionalDefinition' identity = '00000000-0000-0000-0000-000000000405' id = 'i00000000z0000z0000z0000z000000000406' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000101</superType>
            <subType>i10000000z0000z0000z0000z000000000100</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'IntensionalDefinition-Definition' identity = '00000000-0000-0000-0000-000000000409' id = 'i00000000z0000z0000z0000z000000000410' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000012</superType>
            <subType>i10000000z0000z0000z0000z000000000101</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'DerivableConcept-Concept' identity = '00000000-0000-0000-0000-000000000413' id = 'i00000000z0000z0000z0000z000000000414' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000102</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Description-Representation' identity = '00000000-0000-0000-0000-000000000417' id = 'i00000000z0000z0000z0000z000000000418' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000103</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'DescriptiveExample-Representation' identity = '00000000-0000-0000-0000-000000000421' id = 'i00000000z0000z0000z0000z000000000422' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000104</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Disjunction-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000425' id = 'i00000000z0000z0000z0000z000000000426' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000105</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Equivalence-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000429' id = 'i00000000z0000z0000z0000z000000000430' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000106</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExactlynQuantification-Quantification' identity = '00000000-0000-0000-0000-000000000433' id = 'i00000000z0000z0000z0000z000000000434' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000054</superType>
            <subType>i10000000z0000z0000z0000z000000000107</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExactlyoneQuantification-ExactlynQuantification' identity = '00000000-0000-0000-0000-000000000437' id = 'i00000000z0000z0000z0000z000000000438' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000107</superType>
            <subType>i10000000z0000z0000z0000z000000000108</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExclusiveDisjunction-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000441' id = 'i00000000z0000z0000z0000z000000000442' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000109</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExistentialQuantification-AtleastnQuantification' identity = '00000000-0000-0000-0000-000000000445' id = 'i00000000z0000z0000z0000z000000000446' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000053</superType>
            <subType>i10000000z0000z0000z0000z000000000110</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExplicitnessOfRepresentation-CategorizationScheme' identity = '00000000-0000-0000-0000-000000000449' id = 'i00000000z0000z0000z0000z000000000450' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000074</superType>
            <subType>i10000000z0000z0000z0000z000000000111</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExtensionalDefinition-Definition' identity = '00000000-0000-0000-0000-000000000453' id = 'i00000000z0000z0000z0000z000000000454' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000012</superType>
            <subType>i10000000z0000z0000z0000z000000000112</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Facet-ContextualizedConcept' identity = '00000000-0000-0000-0000-000000000457' id = 'i00000000z0000z0000z0000z000000000458' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000097</superType>
            <subType>i10000000z0000z0000z0000z000000000113</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Fact-Proposition' identity = '00000000-0000-0000-0000-000000000461' id = 'i00000000z0000z0000z0000z000000000462' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000015</superType>
            <subType>i10000000z0000z0000z0000z000000000114</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactModel-Thing' identity = '00000000-0000-0000-0000-000000000465' id = 'i00000000z0000z0000z0000z000000000466' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000115</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactSymbol-Designation' identity = '00000000-0000-0000-0000-000000000469' id = 'i00000000z0000z0000z0000z000000000470' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000116</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactTypeNominalization-ProjectingFormulation' identity = '00000000-0000-0000-0000-000000000473' id = 'i00000000z0000z0000z0000z000000000474' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000024</superType>
            <subType>i10000000z0000z0000z0000z000000000118</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactTypeRoleDesignation-Designation' identity = '00000000-0000-0000-0000-000000000477' id = 'i00000000z0000z0000z0000z000000000478' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000119</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactTypeTemplating-CategorizationScheme' identity = '00000000-0000-0000-0000-000000000481' id = 'i00000000z0000z0000z0000z000000000482' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000074</superType>
            <subType>i10000000z0000z0000z0000z000000000120</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FormalRepresentation-Representation' identity = '00000000-0000-0000-0000-000000000485' id = 'i00000000z0000z0000z0000z000000000486' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000121</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FundamentalConcept-ObjectType' identity = '00000000-0000-0000-0000-000000000489' id = 'i00000000z0000z0000z0000z000000000490' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000078</superType>
            <subType>i10000000z0000z0000z0000z000000000122</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Icon-NonverbalDesignation' identity = '00000000-0000-0000-0000-000000000493' id = 'i00000000z0000z0000z0000z000000000494' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000124</superType>
            <subType>i10000000z0000z0000z0000z000000000123</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NonverbalDesignation-Designation' identity = '00000000-0000-0000-0000-000000000497' id = 'i00000000z0000z0000z0000z000000000498' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000124</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Implication-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000501' id = 'i00000000z0000z0000z0000z000000000502' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000125</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ImpossibilityStatement-StructuralRuleStatement' identity = '00000000-0000-0000-0000-000000000505' id = 'i00000000z0000z0000z0000z000000000506' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000127</superType>
            <subType>i10000000z0000z0000z0000z000000000126</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StructuralRuleStatement-RuleStatement' identity = '00000000-0000-0000-0000-000000000509' id = 'i00000000z0000z0000z0000z000000000510' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000128</superType>
            <subType>i10000000z0000z0000z0000z000000000127</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RuleStatement-GuidanceStatement' identity = '00000000-0000-0000-0000-000000000513' id = 'i00000000z0000z0000z0000z000000000514' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000022</superType>
            <subType>i10000000z0000z0000z0000z000000000128</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'IndividualConcept-NounConcept' identity = '00000000-0000-0000-0000-000000000517' id = 'i00000000z0000z0000z0000z000000000518' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000034</superType>
            <subType>i10000000z0000z0000z0000z000000000129</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'InformalRepresentation-Representation' identity = '00000000-0000-0000-0000-000000000521' id = 'i00000000z0000z0000z0000z000000000522' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000130</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'InstantiationFormulation-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000525' id = 'i00000000z0000z0000z0000z000000000526' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000131</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'IsfacetofFactType-ContextualizationFactType' identity = '00000000-0000-0000-0000-000000000529' id = 'i00000000z0000z0000z0000z000000000530' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000096</superType>
            <subType>i10000000z0000z0000z0000z000000000132</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'IspropertyofFactType-AssociativeFactType' identity = '00000000-0000-0000-0000-000000000533' id = 'i00000000z0000z0000z0000z000000000534' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000051</superType>
            <subType>i10000000z0000z0000z0000z000000000133</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'IsroleofFactType-FactType' identity = '00000000-0000-0000-0000-000000000537' id = 'i00000000z0000z0000z0000z000000000538' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000041</superType>
            <subType>i10000000z0000z0000z0000z000000000134</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'KindOfGuidanceStatement-CategorizationScheme' identity = '00000000-0000-0000-0000-000000000541' id = 'i00000000z0000z0000z0000z000000000542' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000074</superType>
            <subType>i10000000z0000z0000z0000z000000000135</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Language-Thing' identity = '00000000-0000-0000-0000-000000000545' id = 'i00000000z0000z0000z0000z000000000546' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000136</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'LevelOfEnforcement-Thing' identity = '00000000-0000-0000-0000-000000000549' id = 'i00000000z0000z0000z0000z000000000550' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000137</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'LogicalFormulationKind-ObjectType' identity = '00000000-0000-0000-0000-000000000553' id = 'i00000000z0000z0000z0000z000000000554' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000078</superType>
            <subType>i10000000z0000z0000z0000z000000000138</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'LogicalNegation-LogicalOperation' identity = '00000000-0000-0000-0000-000000000557' id = 'i00000000z0000z0000z0000z000000000558' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000061</superType>
            <subType>i10000000z0000z0000z0000z000000000139</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ModalFormulation-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000561' id = 'i00000000z0000z0000z0000z000000000562' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000140</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NandFormulation-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000565' id = 'i00000000z0000z0000z0000z000000000566' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000141</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NecessityFormulation-ModalFormulation' identity = '00000000-0000-0000-0000-000000000569' id = 'i00000000z0000z0000z0000z000000000570' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000140</superType>
            <subType>i10000000z0000z0000z0000z000000000142</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NecessityStatement-StructuralRuleStatement' identity = '00000000-0000-0000-0000-000000000573' id = 'i00000000z0000z0000z0000z000000000574' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000127</superType>
            <subType>i10000000z0000z0000z0000z000000000143</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NonnecessityStatement-StatementOfAdviceOfPossibility' identity = '00000000-0000-0000-0000-000000000577' id = 'i00000000z0000z0000z0000z000000000578' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000099</superType>
            <subType>i10000000z0000z0000z0000z000000000144</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NonobligationStatement-StatementOfAdviceOfPermission' identity = '00000000-0000-0000-0000-000000000581' id = 'i00000000z0000z0000z0000z000000000582' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000146</superType>
            <subType>i10000000z0000z0000z0000z000000000145</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StatementOfAdviceOfPermission-AdviceStatement' identity = '00000000-0000-0000-0000-000000000585' id = 'i00000000z0000z0000z0000z000000000586' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000021</superType>
            <subType>i10000000z0000z0000z0000z000000000146</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NorFormulation-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000589' id = 'i00000000z0000z0000z0000z000000000590' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000147</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Note-Representation' identity = '00000000-0000-0000-0000-000000000593' id = 'i00000000z0000z0000z0000z000000000594' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000148</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NounConceptNominalization-ProjectingFormulation' identity = '00000000-0000-0000-0000-000000000597' id = 'i00000000z0000z0000z0000z000000000598' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000024</superType>
            <subType>i10000000z0000z0000z0000z000000000149</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NounForm-FactTypeForm' identity = '00000000-0000-0000-0000-000000000601' id = 'i00000000z0000z0000z0000z000000000602' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000042</superType>
            <subType>i10000000z0000z0000z0000z000000000150</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NumericRangeQuantification-Quantification' identity = '00000000-0000-0000-0000-000000000605' id = 'i00000000z0000z0000z0000z000000000606' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000054</superType>
            <subType>i10000000z0000z0000z0000z000000000151</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Objectification-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000609' id = 'i00000000z0000z0000z0000z000000000610' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000152</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ObligationFormulation-ModalFormulation' identity = '00000000-0000-0000-0000-000000000613' id = 'i00000000z0000z0000z0000z000000000614' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000140</superType>
            <subType>i10000000z0000z0000z0000z000000000153</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ObligationStatement-OperativeBusinessRuleStatement' identity = '00000000-0000-0000-0000-000000000617' id = 'i00000000z0000z0000z0000z000000000618' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000155</superType>
            <subType>i10000000z0000z0000z0000z000000000154</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'OperativeBusinessRuleStatement-RuleStatement' identity = '00000000-0000-0000-0000-000000000621' id = 'i00000000z0000z0000z0000z000000000622' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000128</superType>
            <subType>i10000000z0000z0000z0000z000000000155</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'OperativeBusinessRule-ElementOfGovernance' identity = '00000000-0000-0000-0000-000000000625' id = 'i00000000z0000z0000z0000z000000000626' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000066</superType>
            <subType>i10000000z0000z0000z0000z000000000156</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'OptionalityStatement-StatementOfAdviceOfPermission' identity = '00000000-0000-0000-0000-000000000629' id = 'i00000000z0000z0000z0000z000000000630' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000146</superType>
            <subType>i10000000z0000z0000z0000z000000000157</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'OwnedDefinition-Definition' identity = '00000000-0000-0000-0000-000000000633' id = 'i00000000z0000z0000z0000z000000000634' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000012</superType>
            <subType>i10000000z0000z0000z0000z000000000158</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PartitiveFactType-BinaryFactType' identity = '00000000-0000-0000-0000-000000000637' id = 'i00000000z0000z0000z0000z000000000638' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000059</superType>
            <subType>i10000000z0000z0000z0000z000000000159</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PermissibilityFormulation-ModalFormulation' identity = '00000000-0000-0000-0000-000000000641' id = 'i00000000z0000z0000z0000z000000000642' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000140</superType>
            <subType>i10000000z0000z0000z0000z000000000160</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PermissionStatement-StatementOfAdviceOfPermission' identity = '00000000-0000-0000-0000-000000000645' id = 'i00000000z0000z0000z0000z000000000646' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000146</superType>
            <subType>i10000000z0000z0000z0000z000000000161</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PossibilityFormulation-ModalFormulation' identity = '00000000-0000-0000-0000-000000000649' id = 'i00000000z0000z0000z0000z000000000650' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000140</superType>
            <subType>i10000000z0000z0000z0000z000000000162</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PossibilityStatement-StatementOfAdviceOfPossibility' identity = '00000000-0000-0000-0000-000000000653' id = 'i00000000z0000z0000z0000z000000000654' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000099</superType>
            <subType>i10000000z0000z0000z0000z000000000163</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PreferredDesignation-Designation' identity = '00000000-0000-0000-0000-000000000657' id = 'i00000000z0000z0000z0000z000000000658' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000164</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ProhibitedDesignation-Designation' identity = '00000000-0000-0000-0000-000000000661' id = 'i00000000z0000z0000z0000z000000000662' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000165</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ProhibitionStatement-OperativeBusinessRuleStatement' identity = '00000000-0000-0000-0000-000000000665' id = 'i00000000z0000z0000z0000z000000000666' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000155</superType>
            <subType>i10000000z0000z0000z0000z000000000166</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PropositionNominalization-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000669' id = 'i00000000z0000z0000z0000z000000000670' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000167</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Question-Meaning' identity = '00000000-0000-0000-0000-000000000673' id = 'i00000000z0000z0000z0000z000000000674' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000008</superType>
            <subType>i10000000z0000z0000z0000z000000000168</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'QuestionNominalization-ProjectingFormulation' identity = '00000000-0000-0000-0000-000000000677' id = 'i00000000z0000z0000z0000z000000000678' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000024</superType>
            <subType>i10000000z0000z0000z0000z000000000169</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RealworldNumericalCorrespondence-CategorizationScheme' identity = '00000000-0000-0000-0000-000000000681' id = 'i00000000z0000z0000z0000z000000000682' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000074</superType>
            <subType>i10000000z0000z0000z0000z000000000170</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Reference-Representation' identity = '00000000-0000-0000-0000-000000000685' id = 'i00000000z0000z0000z0000z000000000686' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000171</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RepresentationFormality-Segmentation' identity = '00000000-0000-0000-0000-000000000689' id = 'i00000000z0000z0000z0000z000000000690' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000095</superType>
            <subType>i10000000z0000z0000z0000z000000000172</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Res-Thing' identity = '00000000-0000-0000-0000-000000000693' id = 'i00000000z0000z0000z0000z000000000694' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000173</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RestrictedPermissionStatement-OperativeBusinessRuleStatement' identity = '00000000-0000-0000-0000-000000000697' id = 'i00000000z0000z0000z0000z000000000698' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000155</superType>
            <subType>i10000000z0000z0000z0000z000000000174</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RestrictedPossibilityStatement-StructuralRuleStatement' identity = '00000000-0000-0000-0000-000000000701' id = 'i00000000z0000z0000z0000z000000000702' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000127</superType>
            <subType>i10000000z0000z0000z0000z000000000175</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Rulebook-Set' identity = '00000000-0000-0000-0000-000000000705' id = 'i00000000z0000z0000z0000z000000000706' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000048</superType>
            <subType>i10000000z0000z0000z0000z000000000176</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SemanticCommunity-Community' identity = '00000000-0000-0000-0000-000000000709' id = 'i00000000z0000z0000z0000z000000000710' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000083</superType>
            <subType>i10000000z0000z0000z0000z000000000177</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SpeechCommunity-Community' identity = '00000000-0000-0000-0000-000000000713' id = 'i00000000z0000z0000z0000z000000000714' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000083</superType>
            <subType>i10000000z0000z0000z0000z000000000178</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SententialForm-FactTypeForm' identity = '00000000-0000-0000-0000-000000000717' id = 'i00000000z0000z0000z0000z000000000718' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000042</superType>
            <subType>i10000000z0000z0000z0000z000000000179</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SetProjection-Projection' identity = '00000000-0000-0000-0000-000000000721' id = 'i00000000z0000z0000z0000z000000000722' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000027</superType>
            <subType>i10000000z0000z0000z0000z000000000180</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Situation-Thing' identity = '00000000-0000-0000-0000-000000000725' id = 'i00000000z0000z0000z0000z000000000726' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000181</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SituationalRole-ObjectType' identity = '00000000-0000-0000-0000-000000000729' id = 'i00000000z0000z0000z0000z000000000730' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000078</superType>
            <subType>i10000000z0000z0000z0000z000000000182</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StructuralBusinessRule-BusinessRule' identity = '00000000-0000-0000-0000-000000000733' id = 'i00000000z0000z0000z0000z000000000734' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000068</superType>
            <subType>i10000000z0000z0000z0000z000000000185</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StructuralRule-Rule' identity = '00000000-0000-0000-0000-000000000737' id = 'i00000000z0000z0000z0000z000000000738' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000069</superType>
            <subType>i10000000z0000z0000z0000z000000000186</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SubjectField-Thing' identity = '00000000-0000-0000-0000-000000000741' id = 'i00000000z0000z0000z0000z000000000742' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000187</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Term-Designation' identity = '00000000-0000-0000-0000-000000000745' id = 'i00000000z0000z0000z0000z000000000746' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000188</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'TerminologicalDictionary-Thing' identity = '00000000-0000-0000-0000-000000000749' id = 'i00000000z0000z0000z0000z000000000750' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000189</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ThingInContext-Segmentation' identity = '00000000-0000-0000-0000-000000000753' id = 'i00000000z0000z0000z0000z000000000754' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000095</superType>
            <subType>i10000000z0000z0000z0000z000000000190</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'UniversalQuantification-Quantification' identity = '00000000-0000-0000-0000-000000000757' id = 'i00000000z0000z0000z0000z000000000758' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000054</superType>
            <subType>i10000000z0000z0000z0000z000000000191</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Viewpoint-Thing' identity = '00000000-0000-0000-0000-000000000761' id = 'i00000000z0000z0000z0000z000000000762' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000192</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'VocabularyNamespace-Namespace' identity = '00000000-0000-0000-0000-000000000765' id = 'i00000000z0000z0000z0000z000000000766' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000037</superType>
            <subType>i10000000z0000z0000z0000z000000000193</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'WhetherornotFormulation-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000769' id = 'i00000000z0000z0000z0000z000000000770' definitionlevel = 'none'>
            <source/>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000194</subType>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionThingtoName' identity = '00000000-0000-0000-0000-000000000773' id = 'i00000000z0000z0000z0000z000000000774' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000196</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionDesignationtoExpression' identity = '00000000-0000-0000-0000-000000000777' id = 'i00000000z0000z0000z0000z000000000778' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000199</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionRepresentationtoMeaning' identity = '00000000-0000-0000-0000-000000000781' id = 'i00000000z0000z0000z0000z000000000782' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000202</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionRepresentationtoExpression' identity = '00000000-0000-0000-0000-000000000785' id = 'i00000000z0000z0000z0000z000000000786' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000205</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionMeaningtoRepresentation' identity = '00000000-0000-0000-0000-000000000789' id = 'i00000000z0000z0000z0000z000000000790' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000208</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionPropositiontoStatement' identity = '00000000-0000-0000-0000-000000000793' id = 'i00000000z0000z0000z0000z000000000794' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000211</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionProjectingFormulationtoProjection' identity = '00000000-0000-0000-0000-000000000797' id = 'i00000000z0000z0000z0000z000000000798' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000214</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionProjectiontoLogicalFormulation' identity = '00000000-0000-0000-0000-000000000801' id = 'i00000000z0000z0000z0000z000000000802' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000217</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionProjectiontoVariable' identity = '00000000-0000-0000-0000-000000000805' id = 'i00000000z0000z0000z0000z000000000806' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000220</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionProjectiontoAuxiliaryVariable' identity = '00000000-0000-0000-0000-000000000809' id = 'i00000000z0000z0000z0000z000000000810' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000223</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionVariabletoLogicalFormulation' identity = '00000000-0000-0000-0000-000000000813' id = 'i00000000z0000z0000z0000z000000000814' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000226</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionVariabletoPositiveInteger' identity = '00000000-0000-0000-0000-000000000817' id = 'i00000000z0000z0000z0000z000000000818' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000229</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionVariabletoConcept' identity = '00000000-0000-0000-0000-000000000821' id = 'i00000000z0000z0000z0000z000000000822' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000232</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoAttributiveNamespace' identity = '00000000-0000-0000-0000-000000000825' id = 'i00000000z0000z0000z0000z000000000826' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000235</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoDefinition' identity = '00000000-0000-0000-0000-000000000829' id = 'i00000000z0000z0000z0000z000000000830' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000238</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoConcept-1' identity = '00000000-0000-0000-0000-000000000833' id = 'i00000000z0000z0000z0000z000000000834' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000241</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoConcept-2' identity = '00000000-0000-0000-0000-000000000837' id = 'i00000000z0000z0000z0000z000000000838' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000244</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoCharacteristic-3' identity = '00000000-0000-0000-0000-000000000841' id = 'i00000000z0000z0000z0000z000000000842' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000247</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoThing' identity = '00000000-0000-0000-0000-000000000845' id = 'i00000000z0000z0000z0000z000000000846' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000250</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoReferenceScheme' identity = '00000000-0000-0000-0000-000000000849' id = 'i00000000z0000z0000z0000z000000000850' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000253</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoCharacteristic-4' identity = '00000000-0000-0000-0000-000000000853' id = 'i00000000z0000z0000z0000z000000000854' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000256</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoCharacteristic-5' identity = '00000000-0000-0000-0000-000000000857' id = 'i00000000z0000z0000z0000z000000000858' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000259</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoDesignation' identity = '00000000-0000-0000-0000-000000000861' id = 'i00000000z0000z0000z0000z000000000862' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000262</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoSet' identity = '00000000-0000-0000-0000-000000000865' id = 'i00000000z0000z0000z0000z000000000866' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000265</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNamespacetoUri' identity = '00000000-0000-0000-0000-000000000869' id = 'i00000000z0000z0000z0000z000000000870' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000268</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypetoFactTypeForm' identity = '00000000-0000-0000-0000-000000000873' id = 'i00000000z0000z0000z0000z000000000874' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000271</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypetoFactTypeRole' identity = '00000000-0000-0000-0000-000000000877' id = 'i00000000z0000z0000z0000z000000000878' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000274</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeFormtoPlaceholder' identity = '00000000-0000-0000-0000-000000000881' id = 'i00000000z0000z0000z0000z000000000882' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000277</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionPlaceholdertoPositiveInteger' identity = '00000000-0000-0000-0000-000000000885' id = 'i00000000z0000z0000z0000z000000000886' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000280</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeRoletoRoleBinding' identity = '00000000-0000-0000-0000-000000000889' id = 'i00000000z0000z0000z0000z000000000890' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000283</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionReferenceSchemetoFactTypeRole-6' identity = '00000000-0000-0000-0000-000000000893' id = 'i00000000z0000z0000z0000z000000000894' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000286</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionReferenceSchemetoCharacteristic' identity = '00000000-0000-0000-0000-000000000897' id = 'i00000000z0000z0000z0000z000000000898' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000289</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionReferenceSchemetoFactTypeRole-7' identity = '00000000-0000-0000-0000-000000000901' id = 'i00000000z0000z0000z0000z000000000902' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000292</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSettoNonnegativeInteger' identity = '00000000-0000-0000-0000-000000000905' id = 'i00000000z0000z0000z0000z000000000906' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000295</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSettoThing' identity = '00000000-0000-0000-0000-000000000909' id = 'i00000000z0000z0000z0000z000000000910' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000298</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionAtleastnQuantificationtoNonnegativeInteger' identity = '00000000-0000-0000-0000-000000000913' id = 'i00000000z0000z0000z0000z000000000914' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000301</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionQuantificationtoLogicalFormulation' identity = '00000000-0000-0000-0000-000000000917' id = 'i00000000z0000z0000z0000z000000000918' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000304</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionAtmostnQuantificationtoNonnegativeInteger' identity = '00000000-0000-0000-0000-000000000921' id = 'i00000000z0000z0000z0000z000000000922' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000307</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionAtomicFormulationtoRoleBinding' identity = '00000000-0000-0000-0000-000000000925' id = 'i00000000z0000z0000z0000z000000000926' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000310</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionBinaryLogicalOperationtoLogicalFormulation-8' identity = '00000000-0000-0000-0000-000000000929' id = 'i00000000z0000z0000z0000z000000000930' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000313</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionBinaryLogicalOperationtoLogicalFormulation-9' identity = '00000000-0000-0000-0000-000000000933' id = 'i00000000z0000z0000z0000z000000000934' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000316</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionLogicalOperationtoLogicalFormulation' identity = '00000000-0000-0000-0000-000000000937' id = 'i00000000z0000z0000z0000z000000000938' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000319</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionBodyOfSharedMeaningstoFactType' identity = '00000000-0000-0000-0000-000000000941' id = 'i00000000z0000z0000z0000z000000000942' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000322</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionObjectTypetoCategorizationScheme' identity = '00000000-0000-0000-0000-000000000945' id = 'i00000000z0000z0000z0000z000000000946' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000325</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionObjectTypetoCategorizationType' identity = '00000000-0000-0000-0000-000000000949' id = 'i00000000z0000z0000z0000z000000000950' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000328</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionCommunitytoUri' identity = '00000000-0000-0000-0000-000000000953' id = 'i00000000z0000z0000z0000z000000000954' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000331</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionCommunitytoCommunity' identity = '00000000-0000-0000-0000-000000000957' id = 'i00000000z0000z0000z0000z000000000958' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000334</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionExactlynQuantificationtoNonnegativeInteger' identity = '00000000-0000-0000-0000-000000000961' id = 'i00000000z0000z0000z0000z000000000962' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000337</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeHasFactInFactModeltoFactType' identity = '00000000-0000-0000-0000-000000000965' id = 'i00000000z0000z0000z0000z000000000966' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000340</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeHasFactInFactModeltoFact' identity = '00000000-0000-0000-0000-000000000969' id = 'i00000000z0000z0000z0000z000000000970' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000343</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeHasFactInFactModeltoFactModel' identity = '00000000-0000-0000-0000-000000000973' id = 'i00000000z0000z0000z0000z000000000974' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000346</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionImplicationtoLogicalFormulation-10' identity = '00000000-0000-0000-0000-000000000977' id = 'i00000000z0000z0000z0000z000000000978' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000349</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionImplicationtoLogicalFormulation-11' identity = '00000000-0000-0000-0000-000000000981' id = 'i00000000z0000z0000z0000z000000000982' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000352</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNumericRangeQuantificationtoNonnegativeInteger-12' identity = '00000000-0000-0000-0000-000000000985' id = 'i00000000z0000z0000z0000z000000000986' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000355</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNumericRangeQuantificationtoNonnegativeInteger-13' identity = '00000000-0000-0000-0000-000000000989' id = 'i00000000z0000z0000z0000z000000000990' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000358</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionOperativeBusinessRuletoLevelOfEnforcement' identity = '00000000-0000-0000-0000-000000000993' id = 'i00000000z0000z0000z0000z000000000994' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000361</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSemanticCommunitytoSpeechCommunity' identity = '00000000-0000-0000-0000-000000000997' id = 'i00000000z0000z0000z0000z000000000998' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000364</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSpeechCommunityAdoptsAdoptedDefinitionCitingReferencetoSpeechCommunity' identity = '00000000-0000-0000-0000-000000001001' id = 'i00000000z0000z0000z0000z000000001002' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000367</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSpeechCommunityAdoptsAdoptedDefinitionCitingReferencetoAdoptedDefinition' identity = '00000000-0000-0000-0000-000000001005' id = 'i00000000z0000z0000z0000z000000001006' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000370</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSpeechCommunityAdoptsAdoptedDefinitionCitingReferencetoReference' identity = '00000000-0000-0000-0000-000000001009' id = 'i00000000z0000z0000z0000z000000001010' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000373</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionStateOfAffairsInvolvesThingInRoletoStateOfAffairs' identity = '00000000-0000-0000-0000-000000001013' id = 'i00000000z0000z0000z0000z000000001014' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000376</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionStateOfAffairsInvolvesThingInRoletoThing' identity = '00000000-0000-0000-0000-000000001017' id = 'i00000000z0000z0000z0000z000000001018' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000379</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionStateOfAffairsInvolvesThingInRoletoRole' identity = '00000000-0000-0000-0000-000000001021' id = 'i00000000z0000z0000z0000z000000001022' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000382</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionTerminologicalDictionaryhasUri' identity = '00000000-0000-0000-0000-000000001025' id = 'i00000000z0000z0000z0000z000000001026' definitionlevel = 'none' containmentstyle = 'embedding'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000385</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionWhetherornotFormulationtoLogicalFormulation-14' identity = '00000000-0000-0000-0000-000000001029' id = 'i00000000z0000z0000z0000z000000001030' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000388</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionWhetherornotFormulationtoLogicalFormulation-15' identity = '00000000-0000-0000-0000-000000001033' id = 'i00000000z0000z0000z0000z000000001034' definitionlevel = 'none' containmentstyle = 'reference'>
            <source/>
            <role>i10000000z0000z0000z0000z000000000391</role>
          </treeExpression>
        </expressions>
        <roots/>
      </treenavigator>
      <treenavigator xsi:type = 'ShadowTreeNavigator' name = 'completeDiagram' identity = '00000000-0000-0000-0000-000000000004' id = 'i00000000z0000z0000z0000z000000000003'>
        <expressions>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Actuality-StateOfAffairs' identity = '00000000-0000-0000-0000-000000000019' id = 'i00000000z0000z0000z0000z000000000020' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000018</source>
            <superType>i10000000z0000z0000z0000z000000000003</superType>
            <subType>i10000000z0000z0000z0000z000000000002</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StateOfAffairs-Thing' identity = '00000000-0000-0000-0000-000000000023' id = 'i00000000z0000z0000z0000z000000000024' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000022</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000003</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Name-Designation' identity = '00000000-0000-0000-0000-000000000027' id = 'i00000000z0000z0000z0000z000000000028' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000026</source>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000005</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Designation-Representation' identity = '00000000-0000-0000-0000-000000000031' id = 'i00000000z0000z0000z0000z000000000032' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000030</source>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000006</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Representation-Actuality' identity = '00000000-0000-0000-0000-000000000035' id = 'i00000000z0000z0000z0000z000000000036' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000034</source>
            <superType>i10000000z0000z0000z0000z000000000002</superType>
            <subType>i10000000z0000z0000z0000z000000000007</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Meaning-Thing' identity = '00000000-0000-0000-0000-000000000039' id = 'i00000000z0000z0000z0000z000000000040' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000038</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000008</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Expression-BindableTarget' identity = '00000000-0000-0000-0000-000000000043' id = 'i00000000z0000z0000z0000z000000000044' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000042</source>
            <superType>i10000000z0000z0000z0000z000000000010</superType>
            <subType>i10000000z0000z0000z0000z000000000009</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BindableTarget-Thing' identity = '00000000-0000-0000-0000-000000000047' id = 'i00000000z0000z0000z0000z000000000048' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000046</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000010</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AdoptedDefinition-Definition' identity = '00000000-0000-0000-0000-000000000051' id = 'i00000000z0000z0000z0000z000000000052' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000050</source>
            <superType>i10000000z0000z0000z0000z000000000012</superType>
            <subType>i10000000z0000z0000z0000z000000000011</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Definition-Representation' identity = '00000000-0000-0000-0000-000000000055' id = 'i00000000z0000z0000z0000z000000000056' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000054</source>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000012</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Advice-ElementOfGuidance' identity = '00000000-0000-0000-0000-000000000059' id = 'i00000000z0000z0000z0000z000000000060' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000058</source>
            <superType>i10000000z0000z0000z0000z000000000014</superType>
            <subType>i10000000z0000z0000z0000z000000000013</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ElementOfGuidance-Proposition' identity = '00000000-0000-0000-0000-000000000063' id = 'i00000000z0000z0000z0000z000000000064' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000062</source>
            <superType>i10000000z0000z0000z0000z000000000015</superType>
            <subType>i10000000z0000z0000z0000z000000000014</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Proposition-Meaning' identity = '00000000-0000-0000-0000-000000000067' id = 'i00000000z0000z0000z0000z000000000068' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000066</source>
            <superType>i10000000z0000z0000z0000z000000000008</superType>
            <subType>i10000000z0000z0000z0000z000000000015</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Statement-Representation' identity = '00000000-0000-0000-0000-000000000071' id = 'i00000000z0000z0000z0000z000000000072' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000070</source>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000016</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AdviceOfContingency-AdviceOfPossibility' identity = '00000000-0000-0000-0000-000000000075' id = 'i00000000z0000z0000z0000z000000000076' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000074</source>
            <superType>i10000000z0000z0000z0000z000000000018</superType>
            <subType>i10000000z0000z0000z0000z000000000017</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AdviceOfPossibility-Advice' identity = '00000000-0000-0000-0000-000000000079' id = 'i00000000z0000z0000z0000z000000000080' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000078</source>
            <superType>i10000000z0000z0000z0000z000000000013</superType>
            <subType>i10000000z0000z0000z0000z000000000018</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AdviceOfOptionality-AdviceOfPermission' identity = '00000000-0000-0000-0000-000000000083' id = 'i00000000z0000z0000z0000z000000000084' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000082</source>
            <superType>i10000000z0000z0000z0000z000000000020</superType>
            <subType>i10000000z0000z0000z0000z000000000019</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AdviceOfPermission-Advice' identity = '00000000-0000-0000-0000-000000000087' id = 'i00000000z0000z0000z0000z000000000088' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000086</source>
            <superType>i10000000z0000z0000z0000z000000000013</superType>
            <subType>i10000000z0000z0000z0000z000000000020</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AdviceStatement-GuidanceStatement' identity = '00000000-0000-0000-0000-000000000091' id = 'i00000000z0000z0000z0000z000000000092' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000090</source>
            <superType>i10000000z0000z0000z0000z000000000022</superType>
            <subType>i10000000z0000z0000z0000z000000000021</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'GuidanceStatement-Statement' identity = '00000000-0000-0000-0000-000000000095' id = 'i00000000z0000z0000z0000z000000000096' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000094</source>
            <superType>i10000000z0000z0000z0000z000000000016</superType>
            <subType>i10000000z0000z0000z0000z000000000022</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AggregationFormulation-ProjectingFormulation' identity = '00000000-0000-0000-0000-000000000099' id = 'i00000000z0000z0000z0000z000000000100' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000098</source>
            <superType>i10000000z0000z0000z0000z000000000024</superType>
            <subType>i10000000z0000z0000z0000z000000000023</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ProjectingFormulation-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000103' id = 'i00000000z0000z0000z0000z000000000104' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000102</source>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000024</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'LogicalFormulation-SemanticFormulation' identity = '00000000-0000-0000-0000-000000000107' id = 'i00000000z0000z0000z0000z000000000108' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000106</source>
            <superType>i10000000z0000z0000z0000z000000000026</superType>
            <subType>i10000000z0000z0000z0000z000000000025</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SemanticFormulation-Thing' identity = '00000000-0000-0000-0000-000000000111' id = 'i00000000z0000z0000z0000z000000000112' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000110</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000026</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Projection-SemanticFormulation' identity = '00000000-0000-0000-0000-000000000115' id = 'i00000000z0000z0000z0000z000000000116' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000114</source>
            <superType>i10000000z0000z0000z0000z000000000026</superType>
            <subType>i10000000z0000z0000z0000z000000000027</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Variable-BindableTarget' identity = '00000000-0000-0000-0000-000000000119' id = 'i00000000z0000z0000z0000z000000000120' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000118</source>
            <superType>i10000000z0000z0000z0000z000000000010</superType>
            <subType>i10000000z0000z0000z0000z000000000028</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PositiveInteger-NonnegativeInteger' identity = '00000000-0000-0000-0000-000000000123' id = 'i00000000z0000z0000z0000z000000000124' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000122</source>
            <superType>i10000000z0000z0000z0000z000000000030</superType>
            <subType>i10000000z0000z0000z0000z000000000029</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NonnegativeInteger-Integer' identity = '00000000-0000-0000-0000-000000000127' id = 'i00000000z0000z0000z0000z000000000128' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000126</source>
            <superType>i10000000z0000z0000z0000z000000000031</superType>
            <subType>i10000000z0000z0000z0000z000000000030</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Integer-Number' identity = '00000000-0000-0000-0000-000000000131' id = 'i00000000z0000z0000z0000z000000000132' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000130</source>
            <superType>i10000000z0000z0000z0000z000000000032</superType>
            <subType>i10000000z0000z0000z0000z000000000031</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Number-Quantity' identity = '00000000-0000-0000-0000-000000000135' id = 'i00000000z0000z0000z0000z000000000136' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000134</source>
            <superType>i10000000z0000z0000z0000z000000000033</superType>
            <subType>i10000000z0000z0000z0000z000000000032</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Quantity-NounConcept' identity = '00000000-0000-0000-0000-000000000139' id = 'i00000000z0000z0000z0000z000000000140' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000138</source>
            <superType>i10000000z0000z0000z0000z000000000034</superType>
            <subType>i10000000z0000z0000z0000z000000000033</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NounConcept-Concept' identity = '00000000-0000-0000-0000-000000000143' id = 'i00000000z0000z0000z0000z000000000144' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000142</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000034</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Concept-Meaning' identity = '00000000-0000-0000-0000-000000000147' id = 'i00000000z0000z0000z0000z000000000148' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000146</source>
            <superType>i10000000z0000z0000z0000z000000000008</superType>
            <subType>i10000000z0000z0000z0000z000000000035</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AttributiveNamespace-Namespace' identity = '00000000-0000-0000-0000-000000000151' id = 'i00000000z0000z0000z0000z000000000152' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000150</source>
            <superType>i10000000z0000z0000z0000z000000000037</superType>
            <subType>i10000000z0000z0000z0000z000000000036</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Namespace-Thing' identity = '00000000-0000-0000-0000-000000000155' id = 'i00000000z0000z0000z0000z000000000156' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000154</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000037</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Uri-Text' identity = '00000000-0000-0000-0000-000000000159' id = 'i00000000z0000z0000z0000z000000000160' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000158</source>
            <superType>i10000000z0000z0000z0000z000000000039</superType>
            <subType>i10000000z0000z0000z0000z000000000038</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Text-Expression' identity = '00000000-0000-0000-0000-000000000163' id = 'i00000000z0000z0000z0000z000000000164' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000162</source>
            <superType>i10000000z0000z0000z0000z000000000009</superType>
            <subType>i10000000z0000z0000z0000z000000000039</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Characteristic-FactType' identity = '00000000-0000-0000-0000-000000000167' id = 'i00000000z0000z0000z0000z000000000168' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000166</source>
            <superType>i10000000z0000z0000z0000z000000000041</superType>
            <subType>i10000000z0000z0000z0000z000000000040</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactType-Concept' identity = '00000000-0000-0000-0000-000000000171' id = 'i00000000z0000z0000z0000z000000000172' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000170</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000041</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactTypeForm-Representation' identity = '00000000-0000-0000-0000-000000000175' id = 'i00000000z0000z0000z0000z000000000176' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000174</source>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000042</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Placeholder-Designation' identity = '00000000-0000-0000-0000-000000000179' id = 'i00000000z0000z0000z0000z000000000180' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000178</source>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000043</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactTypeRole-Role' identity = '00000000-0000-0000-0000-000000000183' id = 'i00000000z0000z0000z0000z000000000184' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000182</source>
            <superType>i10000000z0000z0000z0000z000000000045</superType>
            <subType>i10000000z0000z0000z0000z000000000044</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Role-NounConcept' identity = '00000000-0000-0000-0000-000000000187' id = 'i00000000z0000z0000z0000z000000000188' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000186</source>
            <superType>i10000000z0000z0000z0000z000000000034</superType>
            <subType>i10000000z0000z0000z0000z000000000045</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RoleBinding-Thing' identity = '00000000-0000-0000-0000-000000000191' id = 'i00000000z0000z0000z0000z000000000192' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000190</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000046</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ReferenceScheme-Thing' identity = '00000000-0000-0000-0000-000000000195' id = 'i00000000z0000z0000z0000z000000000196' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000194</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000047</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Set-Thing' identity = '00000000-0000-0000-0000-000000000199' id = 'i00000000z0000z0000z0000z000000000200' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000198</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000048</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AuxiliaryVariable-Variable' identity = '00000000-0000-0000-0000-000000000203' id = 'i00000000z0000z0000z0000z000000000204' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000202</source>
            <superType>i10000000z0000z0000z0000z000000000028</superType>
            <subType>i10000000z0000z0000z0000z000000000049</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AnswerNominalization-ProjectingFormulation' identity = '00000000-0000-0000-0000-000000000207' id = 'i00000000z0000z0000z0000z000000000208' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000206</source>
            <superType>i10000000z0000z0000z0000z000000000024</superType>
            <subType>i10000000z0000z0000z0000z000000000050</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AssociativeFactType-FactType' identity = '00000000-0000-0000-0000-000000000211' id = 'i00000000z0000z0000z0000z000000000212' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000210</source>
            <superType>i10000000z0000z0000z0000z000000000041</superType>
            <subType>i10000000z0000z0000z0000z000000000051</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AssortmentFactType-FactType' identity = '00000000-0000-0000-0000-000000000215' id = 'i00000000z0000z0000z0000z000000000216' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000214</source>
            <superType>i10000000z0000z0000z0000z000000000041</superType>
            <subType>i10000000z0000z0000z0000z000000000052</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AtleastnQuantification-Quantification' identity = '00000000-0000-0000-0000-000000000219' id = 'i00000000z0000z0000z0000z000000000220' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000218</source>
            <superType>i10000000z0000z0000z0000z000000000054</superType>
            <subType>i10000000z0000z0000z0000z000000000053</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Quantification-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000223' id = 'i00000000z0000z0000z0000z000000000224' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000222</source>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000054</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AtmostnQuantification-Quantification' identity = '00000000-0000-0000-0000-000000000227' id = 'i00000000z0000z0000z0000z000000000228' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000226</source>
            <superType>i10000000z0000z0000z0000z000000000054</superType>
            <subType>i10000000z0000z0000z0000z000000000055</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AtmostoneQuantification-AtmostnQuantification' identity = '00000000-0000-0000-0000-000000000231' id = 'i00000000z0000z0000z0000z000000000232' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000230</source>
            <superType>i10000000z0000z0000z0000z000000000055</superType>
            <subType>i10000000z0000z0000z0000z000000000056</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'AtomicFormulation-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000235' id = 'i00000000z0000z0000z0000z000000000236' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000234</source>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000057</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BagProjection-Projection' identity = '00000000-0000-0000-0000-000000000239' id = 'i00000000z0000z0000z0000z000000000240' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000238</source>
            <superType>i10000000z0000z0000z0000z000000000027</superType>
            <subType>i10000000z0000z0000z0000z000000000058</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BinaryFactType-FactType' identity = '00000000-0000-0000-0000-000000000243' id = 'i00000000z0000z0000z0000z000000000244' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000242</source>
            <superType>i10000000z0000z0000z0000z000000000041</superType>
            <subType>i10000000z0000z0000z0000z000000000059</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BinaryLogicalOperation-LogicalOperation' identity = '00000000-0000-0000-0000-000000000247' id = 'i00000000z0000z0000z0000z000000000248' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000246</source>
            <superType>i10000000z0000z0000z0000z000000000061</superType>
            <subType>i10000000z0000z0000z0000z000000000060</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'LogicalOperation-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000251' id = 'i00000000z0000z0000z0000z000000000252' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000250</source>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000061</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BodyOfSharedConcepts-Thing' identity = '00000000-0000-0000-0000-000000000255' id = 'i00000000z0000z0000z0000z000000000256' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000254</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000062</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BodyOfSharedGuidance-Thing' identity = '00000000-0000-0000-0000-000000000259' id = 'i00000000z0000z0000z0000z000000000260' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000258</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000063</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BodyOfSharedMeanings-Set' identity = '00000000-0000-0000-0000-000000000263' id = 'i00000000z0000z0000z0000z000000000264' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000262</source>
            <superType>i10000000z0000z0000z0000z000000000048</superType>
            <subType>i10000000z0000z0000z0000z000000000064</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BusinessPolicy-ElementOfGovernance' identity = '00000000-0000-0000-0000-000000000267' id = 'i00000000z0000z0000z0000z000000000268' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000266</source>
            <superType>i10000000z0000z0000z0000z000000000066</superType>
            <subType>i10000000z0000z0000z0000z000000000065</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ElementOfGovernance-ElementOfGuidance' identity = '00000000-0000-0000-0000-000000000271' id = 'i00000000z0000z0000z0000z000000000272' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000270</source>
            <superType>i10000000z0000z0000z0000z000000000014</superType>
            <subType>i10000000z0000z0000z0000z000000000066</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BusinessPolicyStatement-GuidanceStatement' identity = '00000000-0000-0000-0000-000000000275' id = 'i00000000z0000z0000z0000z000000000276' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000274</source>
            <superType>i10000000z0000z0000z0000z000000000022</superType>
            <subType>i10000000z0000z0000z0000z000000000067</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BusinessRule-ElementOfGuidance' identity = '00000000-0000-0000-0000-000000000279' id = 'i00000000z0000z0000z0000z000000000280' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000278</source>
            <superType>i10000000z0000z0000z0000z000000000014</superType>
            <subType>i10000000z0000z0000z0000z000000000068</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Rule-Proposition' identity = '00000000-0000-0000-0000-000000000283' id = 'i00000000z0000z0000z0000z000000000284' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000282</source>
            <superType>i10000000z0000z0000z0000z000000000015</superType>
            <subType>i10000000z0000z0000z0000z000000000069</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'BusinessVocabulary-Vocabulary' identity = '00000000-0000-0000-0000-000000000287' id = 'i00000000z0000z0000z0000z000000000288' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000286</source>
            <superType>i10000000z0000z0000z0000z000000000071</superType>
            <subType>i10000000z0000z0000z0000z000000000070</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Vocabulary-Set' identity = '00000000-0000-0000-0000-000000000291' id = 'i00000000z0000z0000z0000z000000000292' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000290</source>
            <superType>i10000000z0000z0000z0000z000000000048</superType>
            <subType>i10000000z0000z0000z0000z000000000071</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'CategorizationFactType-SpecializationFactType' identity = '00000000-0000-0000-0000-000000000295' id = 'i00000000z0000z0000z0000z000000000296' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000294</source>
            <superType>i10000000z0000z0000z0000z000000000073</superType>
            <subType>i10000000z0000z0000z0000z000000000072</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SpecializationFactType-FactType' identity = '00000000-0000-0000-0000-000000000299' id = 'i00000000z0000z0000z0000z000000000300' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000298</source>
            <superType>i10000000z0000z0000z0000z000000000041</superType>
            <subType>i10000000z0000z0000z0000z000000000073</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'CategorizationScheme-Thing' identity = '00000000-0000-0000-0000-000000000303' id = 'i00000000z0000z0000z0000z000000000304' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000302</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000074</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'CategorizationType-Concept' identity = '00000000-0000-0000-0000-000000000307' id = 'i00000000z0000z0000z0000z000000000308' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000306</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000075</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'CharacteristicType-ConceptType' identity = '00000000-0000-0000-0000-000000000311' id = 'i00000000z0000z0000z0000z000000000312' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000310</source>
            <superType>i10000000z0000z0000z0000z000000000077</superType>
            <subType>i10000000z0000z0000z0000z000000000076</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptType-ObjectType' identity = '00000000-0000-0000-0000-000000000315' id = 'i00000000z0000z0000z0000z000000000316' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000314</source>
            <superType>i10000000z0000z0000z0000z000000000078</superType>
            <subType>i10000000z0000z0000z0000z000000000077</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ObjectType-Concept' identity = '00000000-0000-0000-0000-000000000319' id = 'i00000000z0000z0000z0000z000000000320' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000318</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000078</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ClosedLogicalFormulation-ClosedSemanticFormulation' identity = '00000000-0000-0000-0000-000000000323' id = 'i00000000z0000z0000z0000z000000000324' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000322</source>
            <superType>i10000000z0000z0000z0000z000000000080</superType>
            <subType>i10000000z0000z0000z0000z000000000079</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ClosedSemanticFormulation-SemanticFormulation' identity = '00000000-0000-0000-0000-000000000327' id = 'i00000000z0000z0000z0000z000000000328' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000326</source>
            <superType>i10000000z0000z0000z0000z000000000026</superType>
            <subType>i10000000z0000z0000z0000z000000000080</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ClosedProjection-Projection' identity = '00000000-0000-0000-0000-000000000331' id = 'i00000000z0000z0000z0000z000000000332' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000330</source>
            <superType>i10000000z0000z0000z0000z000000000027</superType>
            <subType>i10000000z0000z0000z0000z000000000081</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'CommunicationContent-Representation' identity = '00000000-0000-0000-0000-000000000335' id = 'i00000000z0000z0000z0000z000000000336' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000334</source>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000082</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Community-Thing' identity = '00000000-0000-0000-0000-000000000339' id = 'i00000000z0000z0000z0000z000000000340' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000338</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000083</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingAsComposite-Concept' identity = '00000000-0000-0000-0000-000000000343' id = 'i00000000z0000z0000z0000z000000000344' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000342</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000084</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingAsContinuant-Concept' identity = '00000000-0000-0000-0000-000000000347' id = 'i00000000z0000z0000z0000z000000000348' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000346</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000085</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingAsDeveloped-Concept' identity = '00000000-0000-0000-0000-000000000351' id = 'i00000000z0000z0000z0000z000000000352' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000350</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000086</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingAsOccurrent-Concept' identity = '00000000-0000-0000-0000-000000000355' id = 'i00000000z0000z0000z0000z000000000356' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000354</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000087</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingAsPrimitive-Concept' identity = '00000000-0000-0000-0000-000000000359' id = 'i00000000z0000z0000z0000z000000000360' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000358</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000088</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingAsUnitary-Concept' identity = '00000000-0000-0000-0000-000000000363' id = 'i00000000z0000z0000z0000z000000000364' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000362</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000089</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingExistingDependently-Concept' identity = '00000000-0000-0000-0000-000000000367' id = 'i00000000z0000z0000z0000z000000000368' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000366</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000090</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptOfThingExistingIndependently-Concept' identity = '00000000-0000-0000-0000-000000000371' id = 'i00000000z0000z0000z0000z000000000372' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000370</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000091</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ConceptualSchema-Thing' identity = '00000000-0000-0000-0000-000000000375' id = 'i00000000z0000z0000z0000z000000000376' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000374</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000092</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Conjunction-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000379' id = 'i00000000z0000z0000z0000z000000000380' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000378</source>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000093</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ContextOfThing-Segmentation' identity = '00000000-0000-0000-0000-000000000383' id = 'i00000000z0000z0000z0000z000000000384' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000382</source>
            <superType>i10000000z0000z0000z0000z000000000095</superType>
            <subType>i10000000z0000z0000z0000z000000000094</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Segmentation-CategorizationScheme' identity = '00000000-0000-0000-0000-000000000387' id = 'i00000000z0000z0000z0000z000000000388' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000386</source>
            <superType>i10000000z0000z0000z0000z000000000074</superType>
            <subType>i10000000z0000z0000z0000z000000000095</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ContextualizationFactType-SpecializationFactType' identity = '00000000-0000-0000-0000-000000000391' id = 'i00000000z0000z0000z0000z000000000392' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000390</source>
            <superType>i10000000z0000z0000z0000z000000000073</superType>
            <subType>i10000000z0000z0000z0000z000000000096</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ContextualizedConcept-NounConcept' identity = '00000000-0000-0000-0000-000000000395' id = 'i00000000z0000z0000z0000z000000000396' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000394</source>
            <superType>i10000000z0000z0000z0000z000000000034</superType>
            <subType>i10000000z0000z0000z0000z000000000097</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ContingencyStatement-StatementOfAdviceOfPossibility' identity = '00000000-0000-0000-0000-000000000399' id = 'i00000000z0000z0000z0000z000000000400' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000398</source>
            <superType>i10000000z0000z0000z0000z000000000099</superType>
            <subType>i10000000z0000z0000z0000z000000000098</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StatementOfAdviceOfPossibility-AdviceStatement' identity = '00000000-0000-0000-0000-000000000403' id = 'i00000000z0000z0000z0000z000000000404' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000402</source>
            <superType>i10000000z0000z0000z0000z000000000021</superType>
            <subType>i10000000z0000z0000z0000z000000000099</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'DefiniteDescription-IntensionalDefinition' identity = '00000000-0000-0000-0000-000000000407' id = 'i00000000z0000z0000z0000z000000000408' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000406</source>
            <superType>i10000000z0000z0000z0000z000000000101</superType>
            <subType>i10000000z0000z0000z0000z000000000100</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'IntensionalDefinition-Definition' identity = '00000000-0000-0000-0000-000000000411' id = 'i00000000z0000z0000z0000z000000000412' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000410</source>
            <superType>i10000000z0000z0000z0000z000000000012</superType>
            <subType>i10000000z0000z0000z0000z000000000101</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'DerivableConcept-Concept' identity = '00000000-0000-0000-0000-000000000415' id = 'i00000000z0000z0000z0000z000000000416' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000414</source>
            <superType>i10000000z0000z0000z0000z000000000035</superType>
            <subType>i10000000z0000z0000z0000z000000000102</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Description-Representation' identity = '00000000-0000-0000-0000-000000000419' id = 'i00000000z0000z0000z0000z000000000420' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000418</source>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000103</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'DescriptiveExample-Representation' identity = '00000000-0000-0000-0000-000000000423' id = 'i00000000z0000z0000z0000z000000000424' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000422</source>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000104</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Disjunction-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000427' id = 'i00000000z0000z0000z0000z000000000428' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000426</source>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000105</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Equivalence-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000431' id = 'i00000000z0000z0000z0000z000000000432' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000430</source>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000106</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExactlynQuantification-Quantification' identity = '00000000-0000-0000-0000-000000000435' id = 'i00000000z0000z0000z0000z000000000436' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000434</source>
            <superType>i10000000z0000z0000z0000z000000000054</superType>
            <subType>i10000000z0000z0000z0000z000000000107</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExactlyoneQuantification-ExactlynQuantification' identity = '00000000-0000-0000-0000-000000000439' id = 'i00000000z0000z0000z0000z000000000440' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000438</source>
            <superType>i10000000z0000z0000z0000z000000000107</superType>
            <subType>i10000000z0000z0000z0000z000000000108</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExclusiveDisjunction-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000443' id = 'i00000000z0000z0000z0000z000000000444' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000442</source>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000109</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExistentialQuantification-AtleastnQuantification' identity = '00000000-0000-0000-0000-000000000447' id = 'i00000000z0000z0000z0000z000000000448' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000446</source>
            <superType>i10000000z0000z0000z0000z000000000053</superType>
            <subType>i10000000z0000z0000z0000z000000000110</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExplicitnessOfRepresentation-CategorizationScheme' identity = '00000000-0000-0000-0000-000000000451' id = 'i00000000z0000z0000z0000z000000000452' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000450</source>
            <superType>i10000000z0000z0000z0000z000000000074</superType>
            <subType>i10000000z0000z0000z0000z000000000111</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ExtensionalDefinition-Definition' identity = '00000000-0000-0000-0000-000000000455' id = 'i00000000z0000z0000z0000z000000000456' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000454</source>
            <superType>i10000000z0000z0000z0000z000000000012</superType>
            <subType>i10000000z0000z0000z0000z000000000112</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Facet-ContextualizedConcept' identity = '00000000-0000-0000-0000-000000000459' id = 'i00000000z0000z0000z0000z000000000460' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000458</source>
            <superType>i10000000z0000z0000z0000z000000000097</superType>
            <subType>i10000000z0000z0000z0000z000000000113</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Fact-Proposition' identity = '00000000-0000-0000-0000-000000000463' id = 'i00000000z0000z0000z0000z000000000464' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000462</source>
            <superType>i10000000z0000z0000z0000z000000000015</superType>
            <subType>i10000000z0000z0000z0000z000000000114</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactModel-Thing' identity = '00000000-0000-0000-0000-000000000467' id = 'i00000000z0000z0000z0000z000000000468' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000466</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000115</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactSymbol-Designation' identity = '00000000-0000-0000-0000-000000000471' id = 'i00000000z0000z0000z0000z000000000472' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000470</source>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000116</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactTypeNominalization-ProjectingFormulation' identity = '00000000-0000-0000-0000-000000000475' id = 'i00000000z0000z0000z0000z000000000476' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000474</source>
            <superType>i10000000z0000z0000z0000z000000000024</superType>
            <subType>i10000000z0000z0000z0000z000000000118</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactTypeRoleDesignation-Designation' identity = '00000000-0000-0000-0000-000000000479' id = 'i00000000z0000z0000z0000z000000000480' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000478</source>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000119</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FactTypeTemplating-CategorizationScheme' identity = '00000000-0000-0000-0000-000000000483' id = 'i00000000z0000z0000z0000z000000000484' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000482</source>
            <superType>i10000000z0000z0000z0000z000000000074</superType>
            <subType>i10000000z0000z0000z0000z000000000120</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FormalRepresentation-Representation' identity = '00000000-0000-0000-0000-000000000487' id = 'i00000000z0000z0000z0000z000000000488' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000486</source>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000121</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'FundamentalConcept-ObjectType' identity = '00000000-0000-0000-0000-000000000491' id = 'i00000000z0000z0000z0000z000000000492' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000490</source>
            <superType>i10000000z0000z0000z0000z000000000078</superType>
            <subType>i10000000z0000z0000z0000z000000000122</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Icon-NonverbalDesignation' identity = '00000000-0000-0000-0000-000000000495' id = 'i00000000z0000z0000z0000z000000000496' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000494</source>
            <superType>i10000000z0000z0000z0000z000000000124</superType>
            <subType>i10000000z0000z0000z0000z000000000123</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NonverbalDesignation-Designation' identity = '00000000-0000-0000-0000-000000000499' id = 'i00000000z0000z0000z0000z000000000500' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000498</source>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000124</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Implication-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000503' id = 'i00000000z0000z0000z0000z000000000504' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000502</source>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000125</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ImpossibilityStatement-StructuralRuleStatement' identity = '00000000-0000-0000-0000-000000000507' id = 'i00000000z0000z0000z0000z000000000508' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000506</source>
            <superType>i10000000z0000z0000z0000z000000000127</superType>
            <subType>i10000000z0000z0000z0000z000000000126</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StructuralRuleStatement-RuleStatement' identity = '00000000-0000-0000-0000-000000000511' id = 'i00000000z0000z0000z0000z000000000512' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000510</source>
            <superType>i10000000z0000z0000z0000z000000000128</superType>
            <subType>i10000000z0000z0000z0000z000000000127</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RuleStatement-GuidanceStatement' identity = '00000000-0000-0000-0000-000000000515' id = 'i00000000z0000z0000z0000z000000000516' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000514</source>
            <superType>i10000000z0000z0000z0000z000000000022</superType>
            <subType>i10000000z0000z0000z0000z000000000128</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'IndividualConcept-NounConcept' identity = '00000000-0000-0000-0000-000000000519' id = 'i00000000z0000z0000z0000z000000000520' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000518</source>
            <superType>i10000000z0000z0000z0000z000000000034</superType>
            <subType>i10000000z0000z0000z0000z000000000129</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'InformalRepresentation-Representation' identity = '00000000-0000-0000-0000-000000000523' id = 'i00000000z0000z0000z0000z000000000524' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000522</source>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000130</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'InstantiationFormulation-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000527' id = 'i00000000z0000z0000z0000z000000000528' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000526</source>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000131</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'IsfacetofFactType-ContextualizationFactType' identity = '00000000-0000-0000-0000-000000000531' id = 'i00000000z0000z0000z0000z000000000532' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000530</source>
            <superType>i10000000z0000z0000z0000z000000000096</superType>
            <subType>i10000000z0000z0000z0000z000000000132</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'IspropertyofFactType-AssociativeFactType' identity = '00000000-0000-0000-0000-000000000535' id = 'i00000000z0000z0000z0000z000000000536' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000534</source>
            <superType>i10000000z0000z0000z0000z000000000051</superType>
            <subType>i10000000z0000z0000z0000z000000000133</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'IsroleofFactType-FactType' identity = '00000000-0000-0000-0000-000000000539' id = 'i00000000z0000z0000z0000z000000000540' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000538</source>
            <superType>i10000000z0000z0000z0000z000000000041</superType>
            <subType>i10000000z0000z0000z0000z000000000134</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'KindOfGuidanceStatement-CategorizationScheme' identity = '00000000-0000-0000-0000-000000000543' id = 'i00000000z0000z0000z0000z000000000544' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000542</source>
            <superType>i10000000z0000z0000z0000z000000000074</superType>
            <subType>i10000000z0000z0000z0000z000000000135</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Language-Thing' identity = '00000000-0000-0000-0000-000000000547' id = 'i00000000z0000z0000z0000z000000000548' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000546</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000136</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'LevelOfEnforcement-Thing' identity = '00000000-0000-0000-0000-000000000551' id = 'i00000000z0000z0000z0000z000000000552' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000550</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000137</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'LogicalFormulationKind-ObjectType' identity = '00000000-0000-0000-0000-000000000555' id = 'i00000000z0000z0000z0000z000000000556' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000554</source>
            <superType>i10000000z0000z0000z0000z000000000078</superType>
            <subType>i10000000z0000z0000z0000z000000000138</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'LogicalNegation-LogicalOperation' identity = '00000000-0000-0000-0000-000000000559' id = 'i00000000z0000z0000z0000z000000000560' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000558</source>
            <superType>i10000000z0000z0000z0000z000000000061</superType>
            <subType>i10000000z0000z0000z0000z000000000139</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ModalFormulation-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000563' id = 'i00000000z0000z0000z0000z000000000564' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000562</source>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000140</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NandFormulation-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000567' id = 'i00000000z0000z0000z0000z000000000568' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000566</source>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000141</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NecessityFormulation-ModalFormulation' identity = '00000000-0000-0000-0000-000000000571' id = 'i00000000z0000z0000z0000z000000000572' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000570</source>
            <superType>i10000000z0000z0000z0000z000000000140</superType>
            <subType>i10000000z0000z0000z0000z000000000142</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NecessityStatement-StructuralRuleStatement' identity = '00000000-0000-0000-0000-000000000575' id = 'i00000000z0000z0000z0000z000000000576' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000574</source>
            <superType>i10000000z0000z0000z0000z000000000127</superType>
            <subType>i10000000z0000z0000z0000z000000000143</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NonnecessityStatement-StatementOfAdviceOfPossibility' identity = '00000000-0000-0000-0000-000000000579' id = 'i00000000z0000z0000z0000z000000000580' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000578</source>
            <superType>i10000000z0000z0000z0000z000000000099</superType>
            <subType>i10000000z0000z0000z0000z000000000144</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NonobligationStatement-StatementOfAdviceOfPermission' identity = '00000000-0000-0000-0000-000000000583' id = 'i00000000z0000z0000z0000z000000000584' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000582</source>
            <superType>i10000000z0000z0000z0000z000000000146</superType>
            <subType>i10000000z0000z0000z0000z000000000145</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StatementOfAdviceOfPermission-AdviceStatement' identity = '00000000-0000-0000-0000-000000000587' id = 'i00000000z0000z0000z0000z000000000588' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000586</source>
            <superType>i10000000z0000z0000z0000z000000000021</superType>
            <subType>i10000000z0000z0000z0000z000000000146</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NorFormulation-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000591' id = 'i00000000z0000z0000z0000z000000000592' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000590</source>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000147</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Note-Representation' identity = '00000000-0000-0000-0000-000000000595' id = 'i00000000z0000z0000z0000z000000000596' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000594</source>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000148</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NounConceptNominalization-ProjectingFormulation' identity = '00000000-0000-0000-0000-000000000599' id = 'i00000000z0000z0000z0000z000000000600' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000598</source>
            <superType>i10000000z0000z0000z0000z000000000024</superType>
            <subType>i10000000z0000z0000z0000z000000000149</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NounForm-FactTypeForm' identity = '00000000-0000-0000-0000-000000000603' id = 'i00000000z0000z0000z0000z000000000604' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000602</source>
            <superType>i10000000z0000z0000z0000z000000000042</superType>
            <subType>i10000000z0000z0000z0000z000000000150</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'NumericRangeQuantification-Quantification' identity = '00000000-0000-0000-0000-000000000607' id = 'i00000000z0000z0000z0000z000000000608' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000606</source>
            <superType>i10000000z0000z0000z0000z000000000054</superType>
            <subType>i10000000z0000z0000z0000z000000000151</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Objectification-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000611' id = 'i00000000z0000z0000z0000z000000000612' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000610</source>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000152</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ObligationFormulation-ModalFormulation' identity = '00000000-0000-0000-0000-000000000615' id = 'i00000000z0000z0000z0000z000000000616' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000614</source>
            <superType>i10000000z0000z0000z0000z000000000140</superType>
            <subType>i10000000z0000z0000z0000z000000000153</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ObligationStatement-OperativeBusinessRuleStatement' identity = '00000000-0000-0000-0000-000000000619' id = 'i00000000z0000z0000z0000z000000000620' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000618</source>
            <superType>i10000000z0000z0000z0000z000000000155</superType>
            <subType>i10000000z0000z0000z0000z000000000154</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'OperativeBusinessRuleStatement-RuleStatement' identity = '00000000-0000-0000-0000-000000000623' id = 'i00000000z0000z0000z0000z000000000624' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000622</source>
            <superType>i10000000z0000z0000z0000z000000000128</superType>
            <subType>i10000000z0000z0000z0000z000000000155</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'OperativeBusinessRule-ElementOfGovernance' identity = '00000000-0000-0000-0000-000000000627' id = 'i00000000z0000z0000z0000z000000000628' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000626</source>
            <superType>i10000000z0000z0000z0000z000000000066</superType>
            <subType>i10000000z0000z0000z0000z000000000156</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'OptionalityStatement-StatementOfAdviceOfPermission' identity = '00000000-0000-0000-0000-000000000631' id = 'i00000000z0000z0000z0000z000000000632' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000630</source>
            <superType>i10000000z0000z0000z0000z000000000146</superType>
            <subType>i10000000z0000z0000z0000z000000000157</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'OwnedDefinition-Definition' identity = '00000000-0000-0000-0000-000000000635' id = 'i00000000z0000z0000z0000z000000000636' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000634</source>
            <superType>i10000000z0000z0000z0000z000000000012</superType>
            <subType>i10000000z0000z0000z0000z000000000158</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PartitiveFactType-BinaryFactType' identity = '00000000-0000-0000-0000-000000000639' id = 'i00000000z0000z0000z0000z000000000640' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000638</source>
            <superType>i10000000z0000z0000z0000z000000000059</superType>
            <subType>i10000000z0000z0000z0000z000000000159</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PermissibilityFormulation-ModalFormulation' identity = '00000000-0000-0000-0000-000000000643' id = 'i00000000z0000z0000z0000z000000000644' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000642</source>
            <superType>i10000000z0000z0000z0000z000000000140</superType>
            <subType>i10000000z0000z0000z0000z000000000160</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PermissionStatement-StatementOfAdviceOfPermission' identity = '00000000-0000-0000-0000-000000000647' id = 'i00000000z0000z0000z0000z000000000648' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000646</source>
            <superType>i10000000z0000z0000z0000z000000000146</superType>
            <subType>i10000000z0000z0000z0000z000000000161</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PossibilityFormulation-ModalFormulation' identity = '00000000-0000-0000-0000-000000000651' id = 'i00000000z0000z0000z0000z000000000652' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000650</source>
            <superType>i10000000z0000z0000z0000z000000000140</superType>
            <subType>i10000000z0000z0000z0000z000000000162</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PossibilityStatement-StatementOfAdviceOfPossibility' identity = '00000000-0000-0000-0000-000000000655' id = 'i00000000z0000z0000z0000z000000000656' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000654</source>
            <superType>i10000000z0000z0000z0000z000000000099</superType>
            <subType>i10000000z0000z0000z0000z000000000163</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PreferredDesignation-Designation' identity = '00000000-0000-0000-0000-000000000659' id = 'i00000000z0000z0000z0000z000000000660' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000658</source>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000164</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ProhibitedDesignation-Designation' identity = '00000000-0000-0000-0000-000000000663' id = 'i00000000z0000z0000z0000z000000000664' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000662</source>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000165</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ProhibitionStatement-OperativeBusinessRuleStatement' identity = '00000000-0000-0000-0000-000000000667' id = 'i00000000z0000z0000z0000z000000000668' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000666</source>
            <superType>i10000000z0000z0000z0000z000000000155</superType>
            <subType>i10000000z0000z0000z0000z000000000166</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'PropositionNominalization-LogicalFormulation' identity = '00000000-0000-0000-0000-000000000671' id = 'i00000000z0000z0000z0000z000000000672' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000670</source>
            <superType>i10000000z0000z0000z0000z000000000025</superType>
            <subType>i10000000z0000z0000z0000z000000000167</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Question-Meaning' identity = '00000000-0000-0000-0000-000000000675' id = 'i00000000z0000z0000z0000z000000000676' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000674</source>
            <superType>i10000000z0000z0000z0000z000000000008</superType>
            <subType>i10000000z0000z0000z0000z000000000168</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'QuestionNominalization-ProjectingFormulation' identity = '00000000-0000-0000-0000-000000000679' id = 'i00000000z0000z0000z0000z000000000680' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000678</source>
            <superType>i10000000z0000z0000z0000z000000000024</superType>
            <subType>i10000000z0000z0000z0000z000000000169</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RealworldNumericalCorrespondence-CategorizationScheme' identity = '00000000-0000-0000-0000-000000000683' id = 'i00000000z0000z0000z0000z000000000684' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000682</source>
            <superType>i10000000z0000z0000z0000z000000000074</superType>
            <subType>i10000000z0000z0000z0000z000000000170</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Reference-Representation' identity = '00000000-0000-0000-0000-000000000687' id = 'i00000000z0000z0000z0000z000000000688' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000686</source>
            <superType>i10000000z0000z0000z0000z000000000007</superType>
            <subType>i10000000z0000z0000z0000z000000000171</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RepresentationFormality-Segmentation' identity = '00000000-0000-0000-0000-000000000691' id = 'i00000000z0000z0000z0000z000000000692' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000690</source>
            <superType>i10000000z0000z0000z0000z000000000095</superType>
            <subType>i10000000z0000z0000z0000z000000000172</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Res-Thing' identity = '00000000-0000-0000-0000-000000000695' id = 'i00000000z0000z0000z0000z000000000696' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000694</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000173</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RestrictedPermissionStatement-OperativeBusinessRuleStatement' identity = '00000000-0000-0000-0000-000000000699' id = 'i00000000z0000z0000z0000z000000000700' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000698</source>
            <superType>i10000000z0000z0000z0000z000000000155</superType>
            <subType>i10000000z0000z0000z0000z000000000174</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'RestrictedPossibilityStatement-StructuralRuleStatement' identity = '00000000-0000-0000-0000-000000000703' id = 'i00000000z0000z0000z0000z000000000704' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000702</source>
            <superType>i10000000z0000z0000z0000z000000000127</superType>
            <subType>i10000000z0000z0000z0000z000000000175</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Rulebook-Set' identity = '00000000-0000-0000-0000-000000000707' id = 'i00000000z0000z0000z0000z000000000708' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000706</source>
            <superType>i10000000z0000z0000z0000z000000000048</superType>
            <subType>i10000000z0000z0000z0000z000000000176</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SemanticCommunity-Community' identity = '00000000-0000-0000-0000-000000000711' id = 'i00000000z0000z0000z0000z000000000712' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000710</source>
            <superType>i10000000z0000z0000z0000z000000000083</superType>
            <subType>i10000000z0000z0000z0000z000000000177</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SpeechCommunity-Community' identity = '00000000-0000-0000-0000-000000000715' id = 'i00000000z0000z0000z0000z000000000716' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000714</source>
            <superType>i10000000z0000z0000z0000z000000000083</superType>
            <subType>i10000000z0000z0000z0000z000000000178</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SententialForm-FactTypeForm' identity = '00000000-0000-0000-0000-000000000719' id = 'i00000000z0000z0000z0000z000000000720' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000718</source>
            <superType>i10000000z0000z0000z0000z000000000042</superType>
            <subType>i10000000z0000z0000z0000z000000000179</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SetProjection-Projection' identity = '00000000-0000-0000-0000-000000000723' id = 'i00000000z0000z0000z0000z000000000724' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000722</source>
            <superType>i10000000z0000z0000z0000z000000000027</superType>
            <subType>i10000000z0000z0000z0000z000000000180</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Situation-Thing' identity = '00000000-0000-0000-0000-000000000727' id = 'i00000000z0000z0000z0000z000000000728' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000726</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000181</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SituationalRole-ObjectType' identity = '00000000-0000-0000-0000-000000000731' id = 'i00000000z0000z0000z0000z000000000732' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000730</source>
            <superType>i10000000z0000z0000z0000z000000000078</superType>
            <subType>i10000000z0000z0000z0000z000000000182</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StructuralBusinessRule-BusinessRule' identity = '00000000-0000-0000-0000-000000000735' id = 'i00000000z0000z0000z0000z000000000736' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000734</source>
            <superType>i10000000z0000z0000z0000z000000000068</superType>
            <subType>i10000000z0000z0000z0000z000000000185</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'StructuralRule-Rule' identity = '00000000-0000-0000-0000-000000000739' id = 'i00000000z0000z0000z0000z000000000740' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000738</source>
            <superType>i10000000z0000z0000z0000z000000000069</superType>
            <subType>i10000000z0000z0000z0000z000000000186</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'SubjectField-Thing' identity = '00000000-0000-0000-0000-000000000743' id = 'i00000000z0000z0000z0000z000000000744' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000742</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000187</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Term-Designation' identity = '00000000-0000-0000-0000-000000000747' id = 'i00000000z0000z0000z0000z000000000748' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000746</source>
            <superType>i10000000z0000z0000z0000z000000000006</superType>
            <subType>i10000000z0000z0000z0000z000000000188</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'TerminologicalDictionary-Thing' identity = '00000000-0000-0000-0000-000000000751' id = 'i00000000z0000z0000z0000z000000000752' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000750</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000189</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'ThingInContext-Segmentation' identity = '00000000-0000-0000-0000-000000000755' id = 'i00000000z0000z0000z0000z000000000756' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000754</source>
            <superType>i10000000z0000z0000z0000z000000000095</superType>
            <subType>i10000000z0000z0000z0000z000000000190</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'UniversalQuantification-Quantification' identity = '00000000-0000-0000-0000-000000000759' id = 'i00000000z0000z0000z0000z000000000760' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000758</source>
            <superType>i10000000z0000z0000z0000z000000000054</superType>
            <subType>i10000000z0000z0000z0000z000000000191</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'Viewpoint-Thing' identity = '00000000-0000-0000-0000-000000000763' id = 'i00000000z0000z0000z0000z000000000764' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000762</source>
            <superType>i10000000z0000z0000z0000z000000000004</superType>
            <subType>i10000000z0000z0000z0000z000000000192</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'VocabularyNamespace-Namespace' identity = '00000000-0000-0000-0000-000000000767' id = 'i00000000z0000z0000z0000z000000000768' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000766</source>
            <superType>i10000000z0000z0000z0000z000000000037</superType>
            <subType>i10000000z0000z0000z0000z000000000193</subType>
          </treeExpression>
          <treeExpression xsi:type = 'InheritanceExpression' name = 'WhetherornotFormulation-BinaryLogicalOperation' identity = '00000000-0000-0000-0000-000000000771' id = 'i00000000z0000z0000z0000z000000000772' definitionlevel = 'definition'>
            <source>i00000000z0000z0000z0000z000000000770</source>
            <superType>i10000000z0000z0000z0000z000000000060</superType>
            <subType>i10000000z0000z0000z0000z000000000194</subType>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionThingtoName' identity = '00000000-0000-0000-0000-000000000775' id = 'i00000000z0000z0000z0000z000000000776' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000774</source>
            <role>i10000000z0000z0000z0000z000000000196</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionDesignationtoExpression' identity = '00000000-0000-0000-0000-000000000779' id = 'i00000000z0000z0000z0000z000000000780' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000778</source>
            <role>i10000000z0000z0000z0000z000000000199</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionRepresentationtoMeaning' identity = '00000000-0000-0000-0000-000000000783' id = 'i00000000z0000z0000z0000z000000000784' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000782</source>
            <role>i10000000z0000z0000z0000z000000000202</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionRepresentationtoExpression' identity = '00000000-0000-0000-0000-000000000787' id = 'i00000000z0000z0000z0000z000000000788' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000786</source>
            <role>i10000000z0000z0000z0000z000000000205</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionMeaningtoRepresentation' identity = '00000000-0000-0000-0000-000000000791' id = 'i00000000z0000z0000z0000z000000000792' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000790</source>
            <role>i10000000z0000z0000z0000z000000000208</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionPropositiontoStatement' identity = '00000000-0000-0000-0000-000000000795' id = 'i00000000z0000z0000z0000z000000000796' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000794</source>
            <role>i10000000z0000z0000z0000z000000000211</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionProjectingFormulationtoProjection' identity = '00000000-0000-0000-0000-000000000799' id = 'i00000000z0000z0000z0000z000000000800' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000798</source>
            <role>i10000000z0000z0000z0000z000000000214</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionProjectiontoLogicalFormulation' identity = '00000000-0000-0000-0000-000000000803' id = 'i00000000z0000z0000z0000z000000000804' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000802</source>
            <role>i10000000z0000z0000z0000z000000000217</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionProjectiontoVariable' identity = '00000000-0000-0000-0000-000000000807' id = 'i00000000z0000z0000z0000z000000000808' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000806</source>
            <role>i10000000z0000z0000z0000z000000000220</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionProjectiontoAuxiliaryVariable' identity = '00000000-0000-0000-0000-000000000811' id = 'i00000000z0000z0000z0000z000000000812' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000810</source>
            <role>i10000000z0000z0000z0000z000000000223</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionVariabletoLogicalFormulation' identity = '00000000-0000-0000-0000-000000000815' id = 'i00000000z0000z0000z0000z000000000816' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000814</source>
            <role>i10000000z0000z0000z0000z000000000226</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionVariabletoPositiveInteger' identity = '00000000-0000-0000-0000-000000000819' id = 'i00000000z0000z0000z0000z000000000820' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000818</source>
            <role>i10000000z0000z0000z0000z000000000229</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionVariabletoConcept' identity = '00000000-0000-0000-0000-000000000823' id = 'i00000000z0000z0000z0000z000000000824' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000822</source>
            <role>i10000000z0000z0000z0000z000000000232</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoAttributiveNamespace' identity = '00000000-0000-0000-0000-000000000827' id = 'i00000000z0000z0000z0000z000000000828' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000826</source>
            <role>i10000000z0000z0000z0000z000000000235</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoDefinition' identity = '00000000-0000-0000-0000-000000000831' id = 'i00000000z0000z0000z0000z000000000832' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000830</source>
            <role>i10000000z0000z0000z0000z000000000238</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoConcept-1' identity = '00000000-0000-0000-0000-000000000835' id = 'i00000000z0000z0000z0000z000000000836' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000834</source>
            <role>i10000000z0000z0000z0000z000000000241</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoConcept-2' identity = '00000000-0000-0000-0000-000000000839' id = 'i00000000z0000z0000z0000z000000000840' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000838</source>
            <role>i10000000z0000z0000z0000z000000000244</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoCharacteristic-3' identity = '00000000-0000-0000-0000-000000000843' id = 'i00000000z0000z0000z0000z000000000844' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000842</source>
            <role>i10000000z0000z0000z0000z000000000247</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoThing' identity = '00000000-0000-0000-0000-000000000847' id = 'i00000000z0000z0000z0000z000000000848' definitionlevel = 'definition' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000846</source>
            <role>i10000000z0000z0000z0000z000000000250</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoReferenceScheme' identity = '00000000-0000-0000-0000-000000000851' id = 'i00000000z0000z0000z0000z000000000852' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000850</source>
            <role>i10000000z0000z0000z0000z000000000253</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoCharacteristic-4' identity = '00000000-0000-0000-0000-000000000855' id = 'i00000000z0000z0000z0000z000000000856' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000854</source>
            <role>i10000000z0000z0000z0000z000000000256</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoCharacteristic-5' identity = '00000000-0000-0000-0000-000000000859' id = 'i00000000z0000z0000z0000z000000000860' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000858</source>
            <role>i10000000z0000z0000z0000z000000000259</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoDesignation' identity = '00000000-0000-0000-0000-000000000863' id = 'i00000000z0000z0000z0000z000000000864' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000862</source>
            <role>i10000000z0000z0000z0000z000000000262</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionConcepttoSet' identity = '00000000-0000-0000-0000-000000000867' id = 'i00000000z0000z0000z0000z000000000868' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000866</source>
            <role>i10000000z0000z0000z0000z000000000265</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNamespacetoUri' identity = '00000000-0000-0000-0000-000000000871' id = 'i00000000z0000z0000z0000z000000000872' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000870</source>
            <role>i10000000z0000z0000z0000z000000000268</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypetoFactTypeForm' identity = '00000000-0000-0000-0000-000000000875' id = 'i00000000z0000z0000z0000z000000000876' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000874</source>
            <role>i10000000z0000z0000z0000z000000000271</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypetoFactTypeRole' identity = '00000000-0000-0000-0000-000000000879' id = 'i00000000z0000z0000z0000z000000000880' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000878</source>
            <role>i10000000z0000z0000z0000z000000000274</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeFormtoPlaceholder' identity = '00000000-0000-0000-0000-000000000883' id = 'i00000000z0000z0000z0000z000000000884' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000882</source>
            <role>i10000000z0000z0000z0000z000000000277</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionPlaceholdertoPositiveInteger' identity = '00000000-0000-0000-0000-000000000887' id = 'i00000000z0000z0000z0000z000000000888' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000886</source>
            <role>i10000000z0000z0000z0000z000000000280</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeRoletoRoleBinding' identity = '00000000-0000-0000-0000-000000000891' id = 'i00000000z0000z0000z0000z000000000892' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000890</source>
            <role>i10000000z0000z0000z0000z000000000283</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionReferenceSchemetoFactTypeRole-6' identity = '00000000-0000-0000-0000-000000000895' id = 'i00000000z0000z0000z0000z000000000896' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000894</source>
            <role>i10000000z0000z0000z0000z000000000286</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionReferenceSchemetoCharacteristic' identity = '00000000-0000-0000-0000-000000000899' id = 'i00000000z0000z0000z0000z000000000900' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000898</source>
            <role>i10000000z0000z0000z0000z000000000289</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionReferenceSchemetoFactTypeRole-7' identity = '00000000-0000-0000-0000-000000000903' id = 'i00000000z0000z0000z0000z000000000904' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000902</source>
            <role>i10000000z0000z0000z0000z000000000292</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSettoNonnegativeInteger' identity = '00000000-0000-0000-0000-000000000907' id = 'i00000000z0000z0000z0000z000000000908' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000906</source>
            <role>i10000000z0000z0000z0000z000000000295</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSettoThing' identity = '00000000-0000-0000-0000-000000000911' id = 'i00000000z0000z0000z0000z000000000912' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000910</source>
            <role>i10000000z0000z0000z0000z000000000298</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionAtleastnQuantificationtoNonnegativeInteger' identity = '00000000-0000-0000-0000-000000000915' id = 'i00000000z0000z0000z0000z000000000916' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000914</source>
            <role>i10000000z0000z0000z0000z000000000301</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionQuantificationtoLogicalFormulation' identity = '00000000-0000-0000-0000-000000000919' id = 'i00000000z0000z0000z0000z000000000920' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000918</source>
            <role>i10000000z0000z0000z0000z000000000304</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionAtmostnQuantificationtoNonnegativeInteger' identity = '00000000-0000-0000-0000-000000000923' id = 'i00000000z0000z0000z0000z000000000924' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000922</source>
            <role>i10000000z0000z0000z0000z000000000307</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionAtomicFormulationtoRoleBinding' identity = '00000000-0000-0000-0000-000000000927' id = 'i00000000z0000z0000z0000z000000000928' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000926</source>
            <role>i10000000z0000z0000z0000z000000000310</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionBinaryLogicalOperationtoLogicalFormulation-8' identity = '00000000-0000-0000-0000-000000000931' id = 'i00000000z0000z0000z0000z000000000932' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000930</source>
            <role>i10000000z0000z0000z0000z000000000313</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionBinaryLogicalOperationtoLogicalFormulation-9' identity = '00000000-0000-0000-0000-000000000935' id = 'i00000000z0000z0000z0000z000000000936' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000934</source>
            <role>i10000000z0000z0000z0000z000000000316</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionLogicalOperationtoLogicalFormulation' identity = '00000000-0000-0000-0000-000000000939' id = 'i00000000z0000z0000z0000z000000000940' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000938</source>
            <role>i10000000z0000z0000z0000z000000000319</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionBodyOfSharedMeaningstoFactType' identity = '00000000-0000-0000-0000-000000000943' id = 'i00000000z0000z0000z0000z000000000944' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000942</source>
            <role>i10000000z0000z0000z0000z000000000322</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionObjectTypetoCategorizationScheme' identity = '00000000-0000-0000-0000-000000000947' id = 'i00000000z0000z0000z0000z000000000948' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000946</source>
            <role>i10000000z0000z0000z0000z000000000325</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionObjectTypetoCategorizationType' identity = '00000000-0000-0000-0000-000000000951' id = 'i00000000z0000z0000z0000z000000000952' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000950</source>
            <role>i10000000z0000z0000z0000z000000000328</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionCommunitytoUri' identity = '00000000-0000-0000-0000-000000000955' id = 'i00000000z0000z0000z0000z000000000956' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000954</source>
            <role>i10000000z0000z0000z0000z000000000331</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionCommunitytoCommunity' identity = '00000000-0000-0000-0000-000000000959' id = 'i00000000z0000z0000z0000z000000000960' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000958</source>
            <role>i10000000z0000z0000z0000z000000000334</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionExactlynQuantificationtoNonnegativeInteger' identity = '00000000-0000-0000-0000-000000000963' id = 'i00000000z0000z0000z0000z000000000964' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000962</source>
            <role>i10000000z0000z0000z0000z000000000337</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeHasFactInFactModeltoFactType' identity = '00000000-0000-0000-0000-000000000967' id = 'i00000000z0000z0000z0000z000000000968' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000966</source>
            <role>i10000000z0000z0000z0000z000000000340</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeHasFactInFactModeltoFact' identity = '00000000-0000-0000-0000-000000000971' id = 'i00000000z0000z0000z0000z000000000972' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000970</source>
            <role>i10000000z0000z0000z0000z000000000343</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionFactTypeHasFactInFactModeltoFactModel' identity = '00000000-0000-0000-0000-000000000975' id = 'i00000000z0000z0000z0000z000000000976' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000974</source>
            <role>i10000000z0000z0000z0000z000000000346</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionImplicationtoLogicalFormulation-10' identity = '00000000-0000-0000-0000-000000000979' id = 'i00000000z0000z0000z0000z000000000980' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000978</source>
            <role>i10000000z0000z0000z0000z000000000349</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionImplicationtoLogicalFormulation-11' identity = '00000000-0000-0000-0000-000000000983' id = 'i00000000z0000z0000z0000z000000000984' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000982</source>
            <role>i10000000z0000z0000z0000z000000000352</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNumericRangeQuantificationtoNonnegativeInteger-12' identity = '00000000-0000-0000-0000-000000000987' id = 'i00000000z0000z0000z0000z000000000988' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000986</source>
            <role>i10000000z0000z0000z0000z000000000355</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionNumericRangeQuantificationtoNonnegativeInteger-13' identity = '00000000-0000-0000-0000-000000000991' id = 'i00000000z0000z0000z0000z000000000992' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000990</source>
            <role>i10000000z0000z0000z0000z000000000358</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionOperativeBusinessRuletoLevelOfEnforcement' identity = '00000000-0000-0000-0000-000000000995' id = 'i00000000z0000z0000z0000z000000000996' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000994</source>
            <role>i10000000z0000z0000z0000z000000000361</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSemanticCommunitytoSpeechCommunity' identity = '00000000-0000-0000-0000-000000000999' id = 'i00000000z0000z0000z0000z000000001000' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000000998</source>
            <role>i10000000z0000z0000z0000z000000000364</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSpeechCommunityAdoptsAdoptedDefinitionCitingReferencetoSpeechCommunity' identity = '00000000-0000-0000-0000-000000001003' id = 'i00000000z0000z0000z0000z000000001004' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000001002</source>
            <role>i10000000z0000z0000z0000z000000000367</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSpeechCommunityAdoptsAdoptedDefinitionCitingReferencetoAdoptedDefinition' identity = '00000000-0000-0000-0000-000000001007' id = 'i00000000z0000z0000z0000z000000001008' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000001006</source>
            <role>i10000000z0000z0000z0000z000000000370</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionSpeechCommunityAdoptsAdoptedDefinitionCitingReferencetoReference' identity = '00000000-0000-0000-0000-000000001011' id = 'i00000000z0000z0000z0000z000000001012' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000001010</source>
            <role>i10000000z0000z0000z0000z000000000373</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionStateOfAffairsInvolvesThingInRoletoStateOfAffairs' identity = '00000000-0000-0000-0000-000000001015' id = 'i00000000z0000z0000z0000z000000001016' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000001014</source>
            <role>i10000000z0000z0000z0000z000000000376</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionStateOfAffairsInvolvesThingInRoletoThing' identity = '00000000-0000-0000-0000-000000001019' id = 'i00000000z0000z0000z0000z000000001020' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000001018</source>
            <role>i10000000z0000z0000z0000z000000000379</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionStateOfAffairsInvolvesThingInRoletoRole' identity = '00000000-0000-0000-0000-000000001023' id = 'i00000000z0000z0000z0000z000000001024' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000001022</source>
            <role>i10000000z0000z0000z0000z000000000382</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionTerminologicalDictionaryhasUri' identity = '00000000-0000-0000-0000-000000001027' id = 'i00000000z0000z0000z0000z000000001028' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000001026</source>
            <role>i10000000z0000z0000z0000z000000000385</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionWhetherornotFormulationtoLogicalFormulation-14' identity = '00000000-0000-0000-0000-000000001031' id = 'i00000000z0000z0000z0000z000000001032' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000001030</source>
            <role>i10000000z0000z0000z0000z000000000388</role>
          </treeExpression>
          <treeExpression xsi:type = 'RoleExpression' name = 'RoleExpressionWhetherornotFormulationtoLogicalFormulation-15' identity = '00000000-0000-0000-0000-000000001035' id = 'i00000000z0000z0000z0000z000000001036' definitionlevel = 'use' containmentstyle = 'fromsource'>
            <source>i00000000z0000z0000z0000z000000001034</source>
            <role>i10000000z0000z0000z0000z000000000391</role>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'implicitlyIsUnderstood' identity = '00000000-0000-0000-0000-000000001170' id = 'i00000000z0000z0000z0000z000000001171'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000393</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'isPracticable' identity = '00000000-0000-0000-0000-000000001173' id = 'i00000000z0000z0000z0000z000000001174'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000394</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'isFalse' identity = '00000000-0000-0000-0000-000000001176' id = 'i00000000z0000z0000z0000z000000001177'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000395</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'isTrue' identity = '00000000-0000-0000-0000-000000001179' id = 'i00000000z0000z0000z0000z000000001180'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000396</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'isPossiblyTrue' identity = '00000000-0000-0000-0000-000000001182' id = 'i00000000z0000z0000z0000z000000001183'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000397</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'isObligatedToBeTrue' identity = '00000000-0000-0000-0000-000000001185' id = 'i00000000z0000z0000z0000z000000001186'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000398</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'isPermittedToBeTrue' identity = '00000000-0000-0000-0000-000000001188' id = 'i00000000z0000z0000z0000z000000001189'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000399</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'isNecessarilyTrue' identity = '00000000-0000-0000-0000-000000001191' id = 'i00000000z0000z0000z0000z000000001192'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000400</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'isUnitary' identity = '00000000-0000-0000-0000-000000001194' id = 'i00000000z0000z0000z0000z000000001195'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000401</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'value' identity = '00000000-0000-0000-0000-000000001197' id = 'i00000000z0000z0000z0000z000000001198'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000402</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'value' identity = '00000000-0000-0000-0000-000000001200' id = 'i00000000z0000z0000z0000z000000001201'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000403</property>
          </treeExpression>
          <treeExpression xsi:type = 'ValuePropertyExpression' name = 'isDirectlyEnforceable' identity = '00000000-0000-0000-0000-000000001203' id = 'i00000000z0000z0000z0000z000000001204'>
            <source/>
            <property>i10000000z0000z0000z0000z000000000404</property>
          </treeExpression>
        </expressions>
        <roots>
          <root name = 'FactTypeHasFactInFactModel' identity = '00000000-0000-0000-0000-000000000011' id = 'i00000000z0000z0000z0000z000000000012'>
            <source/>
            <referencetype>i10000000z0000z0000z0000z000000000117</referencetype>
          </root>
          <root name = 'SpeechCommunityAdoptsAdoptedDefinitionCitingReference' identity = '00000000-0000-0000-0000-000000000013' id = 'i00000000z0000z0000z0000z000000000014'>
            <source/>
            <referencetype>i10000000z0000z0000z0000z000000000183</referencetype>
          </root>
          <root name = 'StateOfAffairsInvolvesThingInRole' identity = '00000000-0000-0000-0000-000000000015' id = 'i00000000z0000z0000z0000z000000000016'>
            <source/>
            <referencetype>i10000000z0000z0000z0000z000000000184</referencetype>
          </root>
        </roots>
        <source>i00000000z0000z0000z0000z000000000001</source>
      </treenavigator>
      <treenavigator xsi:type = 'ShadowTreeNavigator' name = 'serialization' identity = '00000000-0000-0000-0000-000000000006' id = 'i00000000z0000z0000z0000z000000000005'>
        <expressions/>
        <roots>
          <root name = 'TerminologicalDictionary' identity = '00000000-0000-0000-0000-000000000007' id = 'i00000000z0000z0000z0000z000000000008'>
            <source/>
            <referencetype>i10000000z0000z0000z0000z000000000189</referencetype>
          </root>
        </roots>
        <source>i00000000z0000z0000z0000z000000000001</source>
      </treenavigator>
      <treenavigator xsi:type = 'ShadowTreeNavigator' name = 'delete' identity = '00000000-0000-0000-0000-000000000010' id = 'i00000000z0000z0000z0000z00000000009'>
        <expressions/>
        <roots/>
        <source>i00000000z0000z0000z0000z000000000001</source>
      </treenavigator>
    </trees>
    <concepts>
      <concept name = 'Actuality' identity = '10000000-0000-0000-0000-000000000002' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000002' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000003</superType>
        <valueProperties/>
      </concept>
      <concept name = 'StateOfAffairs' identity = '10000000-0000-0000-0000-000000000003' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000003' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Thing' identity = '10000000-0000-0000-0000-000000000004' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000004' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <valueProperties/>
      </concept>
      <concept name = 'Name' identity = '10000000-0000-0000-0000-000000000005' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000005' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000006</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Designation' identity = '10000000-0000-0000-0000-000000000006' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000006' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000007</superType>
        <valueProperties>
          <property name = 'implicitlyIsUnderstood' identity = '10000000-0000-0000-0000-000000000393' id = 'i10000000z0000z0000z0000z000000000393'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000001169' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'Representation' identity = '10000000-0000-0000-0000-000000000007' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000007' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000002</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Meaning' identity = '10000000-0000-0000-0000-000000000008' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000008' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Expression' identity = '10000000-0000-0000-0000-000000000009' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000009' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000010</superType>
        <valueProperties/>
      </concept>
      <concept name = 'BindableTarget' identity = '10000000-0000-0000-0000-000000000010' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000010' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AdoptedDefinition' identity = '10000000-0000-0000-0000-000000000011' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000011' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000012</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Definition' identity = '10000000-0000-0000-0000-000000000012' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000012' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000007</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Advice' identity = '10000000-0000-0000-0000-000000000013' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000013' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000014</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ElementOfGuidance' identity = '10000000-0000-0000-0000-000000000014' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000014' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000015</superType>
        <valueProperties>
          <property name = 'isPracticable' identity = '10000000-0000-0000-0000-000000000394' id = 'i10000000z0000z0000z0000z000000000394'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000001172' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'Proposition' identity = '10000000-0000-0000-0000-000000000015' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000015' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000008</superType>
        <valueProperties>
          <property name = 'isObligatedToBeTrue' identity = '10000000-0000-0000-0000-000000000398' id = 'i10000000z0000z0000z0000z000000000398'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000001184' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
          <property name = 'isPossiblyTrue' identity = '10000000-0000-0000-0000-000000000397' id = 'i10000000z0000z0000z0000z000000000397'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000001181' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
          <property name = 'isTrue' identity = '10000000-0000-0000-0000-000000000396' id = 'i10000000z0000z0000z0000z000000000396'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000001178' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
          <property name = 'isFalse' identity = '10000000-0000-0000-0000-000000000395' id = 'i10000000z0000z0000z0000z000000000395'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000001175' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
          <property name = 'isPermittedToBeTrue' identity = '10000000-0000-0000-0000-000000000399' id = 'i10000000z0000z0000z0000z000000000399'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000001187' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
          <property name = 'isNecessarilyTrue' identity = '10000000-0000-0000-0000-000000000400' id = 'i10000000z0000z0000z0000z000000000400'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000001190' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'Statement' identity = '10000000-0000-0000-0000-000000000016' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000016' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000007</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AdviceOfContingency' identity = '10000000-0000-0000-0000-000000000017' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000017' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000018</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AdviceOfPossibility' identity = '10000000-0000-0000-0000-000000000018' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000018' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000013</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AdviceOfOptionality' identity = '10000000-0000-0000-0000-000000000019' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000019' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000020</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AdviceOfPermission' identity = '10000000-0000-0000-0000-000000000020' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000020' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000013</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AdviceStatement' identity = '10000000-0000-0000-0000-000000000021' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000021' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000022</superType>
        <valueProperties/>
      </concept>
      <concept name = 'GuidanceStatement' identity = '10000000-0000-0000-0000-000000000022' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000022' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000016</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AggregationFormulation' identity = '10000000-0000-0000-0000-000000000023' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000023' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000024</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ProjectingFormulation' identity = '10000000-0000-0000-0000-000000000024' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000024' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000025</superType>
        <valueProperties/>
      </concept>
      <concept name = 'LogicalFormulation' identity = '10000000-0000-0000-0000-000000000025' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000025' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000026</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SemanticFormulation' identity = '10000000-0000-0000-0000-000000000026' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000026' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Projection' identity = '10000000-0000-0000-0000-000000000027' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000027' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000026</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Variable' identity = '10000000-0000-0000-0000-000000000028' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000028' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000010</superType>
        <valueProperties>
          <property name = 'isUnitary' identity = '10000000-0000-0000-0000-000000000401' id = 'i10000000z0000z0000z0000z000000000401'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000001193' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'PositiveInteger' identity = '10000000-0000-0000-0000-000000000029' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000029' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000030</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NonnegativeInteger' identity = '10000000-0000-0000-0000-000000000030' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000030' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000031</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Integer' identity = '10000000-0000-0000-0000-000000000031' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000031' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000032</superType>
        <valueProperties>
          <property name = 'value' identity = '10000000-0000-0000-0000-000000000402' id = 'i10000000z0000z0000z0000z000000000402'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'integerPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000001196' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'Number' identity = '10000000-0000-0000-0000-000000000032' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000032' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000033</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Quantity' identity = '10000000-0000-0000-0000-000000000033' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000033' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000034</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NounConcept' identity = '10000000-0000-0000-0000-000000000034' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000034' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Concept' identity = '10000000-0000-0000-0000-000000000035' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000035' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000008</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AttributiveNamespace' identity = '10000000-0000-0000-0000-000000000036' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000036' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000037</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Namespace' identity = '10000000-0000-0000-0000-000000000037' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000037' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Uri' identity = '10000000-0000-0000-0000-000000000038' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000038' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000039</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Text' identity = '10000000-0000-0000-0000-000000000039' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000039' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000009</superType>
        <valueProperties>
          <property name = 'value' identity = '10000000-0000-0000-0000-000000000403' id = 'i10000000z0000z0000z0000z000000000403'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'StringPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000001199' default = '' max = '2147483647' min = '-2147483647'/>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'Characteristic' identity = '10000000-0000-0000-0000-000000000040' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000040' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000041</superType>
        <valueProperties/>
      </concept>
      <concept name = 'FactType' identity = '10000000-0000-0000-0000-000000000041' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000041' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'FactTypeForm' identity = '10000000-0000-0000-0000-000000000042' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000042' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000007</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Placeholder' identity = '10000000-0000-0000-0000-000000000043' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000043' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000006</superType>
        <valueProperties/>
      </concept>
      <concept name = 'FactTypeRole' identity = '10000000-0000-0000-0000-000000000044' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000044' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000045</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Role' identity = '10000000-0000-0000-0000-000000000045' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000045' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000034</superType>
        <valueProperties/>
      </concept>
      <concept name = 'RoleBinding' identity = '10000000-0000-0000-0000-000000000046' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000046' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ReferenceScheme' identity = '10000000-0000-0000-0000-000000000047' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000047' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Set' identity = '10000000-0000-0000-0000-000000000048' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000048' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AuxiliaryVariable' identity = '10000000-0000-0000-0000-000000000049' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000049' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000028</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AnswerNominalization' identity = '10000000-0000-0000-0000-000000000050' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000050' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000024</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AssociativeFactType' identity = '10000000-0000-0000-0000-000000000051' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000051' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000041</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AssortmentFactType' identity = '10000000-0000-0000-0000-000000000052' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000052' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000041</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AtleastnQuantification' identity = '10000000-0000-0000-0000-000000000053' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000053' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000054</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Quantification' identity = '10000000-0000-0000-0000-000000000054' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000054' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000025</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AtmostnQuantification' identity = '10000000-0000-0000-0000-000000000055' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000055' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000054</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AtmostoneQuantification' identity = '10000000-0000-0000-0000-000000000056' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000056' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000055</superType>
        <valueProperties/>
      </concept>
      <concept name = 'AtomicFormulation' identity = '10000000-0000-0000-0000-000000000057' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000057' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000025</superType>
        <valueProperties/>
      </concept>
      <concept name = 'BagProjection' identity = '10000000-0000-0000-0000-000000000058' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000058' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000027</superType>
        <valueProperties/>
      </concept>
      <concept name = 'BinaryFactType' identity = '10000000-0000-0000-0000-000000000059' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000059' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000041</superType>
        <valueProperties/>
      </concept>
      <concept name = 'BinaryLogicalOperation' identity = '10000000-0000-0000-0000-000000000060' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000060' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000061</superType>
        <valueProperties/>
      </concept>
      <concept name = 'LogicalOperation' identity = '10000000-0000-0000-0000-000000000061' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000061' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000025</superType>
        <valueProperties/>
      </concept>
      <concept name = 'BodyOfSharedConcepts' identity = '10000000-0000-0000-0000-000000000062' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000062' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'BodyOfSharedGuidance' identity = '10000000-0000-0000-0000-000000000063' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000063' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'BodyOfSharedMeanings' identity = '10000000-0000-0000-0000-000000000064' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000064' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000048</superType>
        <valueProperties/>
      </concept>
      <concept name = 'BusinessPolicy' identity = '10000000-0000-0000-0000-000000000065' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000065' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000066</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ElementOfGovernance' identity = '10000000-0000-0000-0000-000000000066' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000066' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000014</superType>
        <valueProperties>
          <property name = 'isDirectlyEnforceable' identity = '10000000-0000-0000-0000-000000000404' id = 'i10000000z0000z0000z0000z000000000404'>
            <mdfmetadata xsi:type = 'propertymdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false' xpathexpression = '' reversexpathexpression = '' realattributename = '' proxyattributename = '' customstorage = 'false' allownulls = 'false' readwritestate = 'readwrite' tag = ''/>
            <propertyInfo xsi:type = 'BooleanPropertyInfo' name = '' identity = '00000000-0000-0000-0000-000000001202' default = '0' max = '2147483647' min = '-2147483647'/>
          </property>
        </valueProperties>
      </concept>
      <concept name = 'BusinessPolicyStatement' identity = '10000000-0000-0000-0000-000000000067' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000067' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000022</superType>
        <valueProperties/>
      </concept>
      <concept name = 'BusinessRule' identity = '10000000-0000-0000-0000-000000000068' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000068' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000014</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Rule' identity = '10000000-0000-0000-0000-000000000069' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000069' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000015</superType>
        <valueProperties/>
      </concept>
      <concept name = 'BusinessVocabulary' identity = '10000000-0000-0000-0000-000000000070' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000070' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000071</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Vocabulary' identity = '10000000-0000-0000-0000-000000000071' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000071' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000048</superType>
        <valueProperties/>
      </concept>
      <concept name = 'CategorizationFactType' identity = '10000000-0000-0000-0000-000000000072' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000072' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000073</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SpecializationFactType' identity = '10000000-0000-0000-0000-000000000073' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000073' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000041</superType>
        <valueProperties/>
      </concept>
      <concept name = 'CategorizationScheme' identity = '10000000-0000-0000-0000-000000000074' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000074' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'CategorizationType' identity = '10000000-0000-0000-0000-000000000075' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000075' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'CharacteristicType' identity = '10000000-0000-0000-0000-000000000076' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000076' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000077</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ConceptType' identity = '10000000-0000-0000-0000-000000000077' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000077' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000078</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ObjectType' identity = '10000000-0000-0000-0000-000000000078' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000078' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ClosedLogicalFormulation' identity = '10000000-0000-0000-0000-000000000079' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000079' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000080</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ClosedSemanticFormulation' identity = '10000000-0000-0000-0000-000000000080' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000080' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000026</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ClosedProjection' identity = '10000000-0000-0000-0000-000000000081' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000081' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000027</superType>
        <valueProperties/>
      </concept>
      <concept name = 'CommunicationContent' identity = '10000000-0000-0000-0000-000000000082' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000082' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000007</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Community' identity = '10000000-0000-0000-0000-000000000083' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000083' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ConceptOfThingAsComposite' identity = '10000000-0000-0000-0000-000000000084' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000084' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ConceptOfThingAsContinuant' identity = '10000000-0000-0000-0000-000000000085' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000085' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ConceptOfThingAsDeveloped' identity = '10000000-0000-0000-0000-000000000086' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000086' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ConceptOfThingAsOccurrent' identity = '10000000-0000-0000-0000-000000000087' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000087' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ConceptOfThingAsPrimitive' identity = '10000000-0000-0000-0000-000000000088' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000088' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ConceptOfThingAsUnitary' identity = '10000000-0000-0000-0000-000000000089' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000089' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ConceptOfThingExistingDependently' identity = '10000000-0000-0000-0000-000000000090' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000090' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ConceptOfThingExistingIndependently' identity = '10000000-0000-0000-0000-000000000091' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000091' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ConceptualSchema' identity = '10000000-0000-0000-0000-000000000092' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000092' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Conjunction' identity = '10000000-0000-0000-0000-000000000093' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000093' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000060</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ContextOfThing' identity = '10000000-0000-0000-0000-000000000094' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000094' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000095</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Segmentation' identity = '10000000-0000-0000-0000-000000000095' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000095' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000074</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ContextualizationFactType' identity = '10000000-0000-0000-0000-000000000096' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000096' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000073</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ContextualizedConcept' identity = '10000000-0000-0000-0000-000000000097' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000097' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000034</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ContingencyStatement' identity = '10000000-0000-0000-0000-000000000098' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000098' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000099</superType>
        <valueProperties/>
      </concept>
      <concept name = 'StatementOfAdviceOfPossibility' identity = '10000000-0000-0000-0000-000000000099' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000099' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000021</superType>
        <valueProperties/>
      </concept>
      <concept name = 'DefiniteDescription' identity = '10000000-0000-0000-0000-000000000100' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000100' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000101</superType>
        <valueProperties/>
      </concept>
      <concept name = 'IntensionalDefinition' identity = '10000000-0000-0000-0000-000000000101' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000101' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000012</superType>
        <valueProperties/>
      </concept>
      <concept name = 'DerivableConcept' identity = '10000000-0000-0000-0000-000000000102' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000102' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000035</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Description' identity = '10000000-0000-0000-0000-000000000103' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000103' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000007</superType>
        <valueProperties/>
      </concept>
      <concept name = 'DescriptiveExample' identity = '10000000-0000-0000-0000-000000000104' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000104' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000007</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Disjunction' identity = '10000000-0000-0000-0000-000000000105' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000105' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000060</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Equivalence' identity = '10000000-0000-0000-0000-000000000106' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000106' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000060</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ExactlynQuantification' identity = '10000000-0000-0000-0000-000000000107' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000107' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000054</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ExactlyoneQuantification' identity = '10000000-0000-0000-0000-000000000108' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000108' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000107</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ExclusiveDisjunction' identity = '10000000-0000-0000-0000-000000000109' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000109' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000060</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ExistentialQuantification' identity = '10000000-0000-0000-0000-000000000110' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000110' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000053</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ExplicitnessOfRepresentation' identity = '10000000-0000-0000-0000-000000000111' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000111' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000074</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ExtensionalDefinition' identity = '10000000-0000-0000-0000-000000000112' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000112' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000012</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Facet' identity = '10000000-0000-0000-0000-000000000113' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000113' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000097</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Fact' identity = '10000000-0000-0000-0000-000000000114' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000114' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000015</superType>
        <valueProperties/>
      </concept>
      <concept name = 'FactModel' identity = '10000000-0000-0000-0000-000000000115' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000115' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'FactSymbol' identity = '10000000-0000-0000-0000-000000000116' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000116' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000006</superType>
        <valueProperties/>
      </concept>
      <concept name = 'FactTypeHasFactInFactModel' identity = '10000000-0000-0000-0000-000000000117' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000117' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <valueProperties/>
      </concept>
      <concept name = 'FactTypeNominalization' identity = '10000000-0000-0000-0000-000000000118' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000118' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000024</superType>
        <valueProperties/>
      </concept>
      <concept name = 'FactTypeRoleDesignation' identity = '10000000-0000-0000-0000-000000000119' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000119' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000006</superType>
        <valueProperties/>
      </concept>
      <concept name = 'FactTypeTemplating' identity = '10000000-0000-0000-0000-000000000120' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000120' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000074</superType>
        <valueProperties/>
      </concept>
      <concept name = 'FormalRepresentation' identity = '10000000-0000-0000-0000-000000000121' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000121' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000007</superType>
        <valueProperties/>
      </concept>
      <concept name = 'FundamentalConcept' identity = '10000000-0000-0000-0000-000000000122' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000122' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000078</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Icon' identity = '10000000-0000-0000-0000-000000000123' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000123' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000124</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NonverbalDesignation' identity = '10000000-0000-0000-0000-000000000124' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000124' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000006</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Implication' identity = '10000000-0000-0000-0000-000000000125' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000125' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000060</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ImpossibilityStatement' identity = '10000000-0000-0000-0000-000000000126' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000126' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000127</superType>
        <valueProperties/>
      </concept>
      <concept name = 'StructuralRuleStatement' identity = '10000000-0000-0000-0000-000000000127' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000127' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000128</superType>
        <valueProperties/>
      </concept>
      <concept name = 'RuleStatement' identity = '10000000-0000-0000-0000-000000000128' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000128' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000022</superType>
        <valueProperties/>
      </concept>
      <concept name = 'IndividualConcept' identity = '10000000-0000-0000-0000-000000000129' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000129' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000034</superType>
        <valueProperties/>
      </concept>
      <concept name = 'InformalRepresentation' identity = '10000000-0000-0000-0000-000000000130' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000130' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000007</superType>
        <valueProperties/>
      </concept>
      <concept name = 'InstantiationFormulation' identity = '10000000-0000-0000-0000-000000000131' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000131' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000025</superType>
        <valueProperties/>
      </concept>
      <concept name = 'IsfacetofFactType' identity = '10000000-0000-0000-0000-000000000132' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000132' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000096</superType>
        <valueProperties/>
      </concept>
      <concept name = 'IspropertyofFactType' identity = '10000000-0000-0000-0000-000000000133' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000133' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000051</superType>
        <valueProperties/>
      </concept>
      <concept name = 'IsroleofFactType' identity = '10000000-0000-0000-0000-000000000134' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000134' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000041</superType>
        <valueProperties/>
      </concept>
      <concept name = 'KindOfGuidanceStatement' identity = '10000000-0000-0000-0000-000000000135' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000135' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000074</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Language' identity = '10000000-0000-0000-0000-000000000136' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000136' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'LevelOfEnforcement' identity = '10000000-0000-0000-0000-000000000137' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000137' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'LogicalFormulationKind' identity = '10000000-0000-0000-0000-000000000138' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000138' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000078</superType>
        <valueProperties/>
      </concept>
      <concept name = 'LogicalNegation' identity = '10000000-0000-0000-0000-000000000139' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000139' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000061</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ModalFormulation' identity = '10000000-0000-0000-0000-000000000140' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000140' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000025</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NandFormulation' identity = '10000000-0000-0000-0000-000000000141' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000141' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000060</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NecessityFormulation' identity = '10000000-0000-0000-0000-000000000142' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000142' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000140</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NecessityStatement' identity = '10000000-0000-0000-0000-000000000143' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000143' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000127</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NonnecessityStatement' identity = '10000000-0000-0000-0000-000000000144' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000144' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000099</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NonobligationStatement' identity = '10000000-0000-0000-0000-000000000145' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000145' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000146</superType>
        <valueProperties/>
      </concept>
      <concept name = 'StatementOfAdviceOfPermission' identity = '10000000-0000-0000-0000-000000000146' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000146' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000021</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NorFormulation' identity = '10000000-0000-0000-0000-000000000147' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000147' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000060</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Note' identity = '10000000-0000-0000-0000-000000000148' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000148' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000007</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NounConceptNominalization' identity = '10000000-0000-0000-0000-000000000149' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000149' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000024</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NounForm' identity = '10000000-0000-0000-0000-000000000150' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000150' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000042</superType>
        <valueProperties/>
      </concept>
      <concept name = 'NumericRangeQuantification' identity = '10000000-0000-0000-0000-000000000151' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000151' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000054</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Objectification' identity = '10000000-0000-0000-0000-000000000152' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000152' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000025</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ObligationFormulation' identity = '10000000-0000-0000-0000-000000000153' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000153' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000140</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ObligationStatement' identity = '10000000-0000-0000-0000-000000000154' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000154' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000155</superType>
        <valueProperties/>
      </concept>
      <concept name = 'OperativeBusinessRuleStatement' identity = '10000000-0000-0000-0000-000000000155' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000155' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000128</superType>
        <valueProperties/>
      </concept>
      <concept name = 'OperativeBusinessRule' identity = '10000000-0000-0000-0000-000000000156' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000156' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000066</superType>
        <valueProperties/>
      </concept>
      <concept name = 'OptionalityStatement' identity = '10000000-0000-0000-0000-000000000157' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000157' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000146</superType>
        <valueProperties/>
      </concept>
      <concept name = 'OwnedDefinition' identity = '10000000-0000-0000-0000-000000000158' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000158' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000012</superType>
        <valueProperties/>
      </concept>
      <concept name = 'PartitiveFactType' identity = '10000000-0000-0000-0000-000000000159' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000159' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000059</superType>
        <valueProperties/>
      </concept>
      <concept name = 'PermissibilityFormulation' identity = '10000000-0000-0000-0000-000000000160' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000160' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000140</superType>
        <valueProperties/>
      </concept>
      <concept name = 'PermissionStatement' identity = '10000000-0000-0000-0000-000000000161' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000161' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000146</superType>
        <valueProperties/>
      </concept>
      <concept name = 'PossibilityFormulation' identity = '10000000-0000-0000-0000-000000000162' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000162' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000140</superType>
        <valueProperties/>
      </concept>
      <concept name = 'PossibilityStatement' identity = '10000000-0000-0000-0000-000000000163' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000163' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000099</superType>
        <valueProperties/>
      </concept>
      <concept name = 'PreferredDesignation' identity = '10000000-0000-0000-0000-000000000164' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000164' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000006</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ProhibitedDesignation' identity = '10000000-0000-0000-0000-000000000165' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000165' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000006</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ProhibitionStatement' identity = '10000000-0000-0000-0000-000000000166' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000166' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000155</superType>
        <valueProperties/>
      </concept>
      <concept name = 'PropositionNominalization' identity = '10000000-0000-0000-0000-000000000167' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000167' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000025</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Question' identity = '10000000-0000-0000-0000-000000000168' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000168' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000008</superType>
        <valueProperties/>
      </concept>
      <concept name = 'QuestionNominalization' identity = '10000000-0000-0000-0000-000000000169' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000169' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000024</superType>
        <valueProperties/>
      </concept>
      <concept name = 'RealworldNumericalCorrespondence' identity = '10000000-0000-0000-0000-000000000170' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000170' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000074</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Reference' identity = '10000000-0000-0000-0000-000000000171' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000171' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000007</superType>
        <valueProperties/>
      </concept>
      <concept name = 'RepresentationFormality' identity = '10000000-0000-0000-0000-000000000172' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000172' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000095</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Res' identity = '10000000-0000-0000-0000-000000000173' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000173' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'RestrictedPermissionStatement' identity = '10000000-0000-0000-0000-000000000174' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000174' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000155</superType>
        <valueProperties/>
      </concept>
      <concept name = 'RestrictedPossibilityStatement' identity = '10000000-0000-0000-0000-000000000175' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000175' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000127</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Rulebook' identity = '10000000-0000-0000-0000-000000000176' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000176' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000048</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SemanticCommunity' identity = '10000000-0000-0000-0000-000000000177' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000177' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000083</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SpeechCommunity' identity = '10000000-0000-0000-0000-000000000178' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000178' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000083</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SententialForm' identity = '10000000-0000-0000-0000-000000000179' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000179' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000042</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SetProjection' identity = '10000000-0000-0000-0000-000000000180' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000180' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000027</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Situation' identity = '10000000-0000-0000-0000-000000000181' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000181' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SituationalRole' identity = '10000000-0000-0000-0000-000000000182' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000182' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000078</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SpeechCommunityAdoptsAdoptedDefinitionCitingReference' identity = '10000000-0000-0000-0000-000000000183' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000183' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <valueProperties/>
      </concept>
      <concept name = 'StateOfAffairsInvolvesThingInRole' identity = '10000000-0000-0000-0000-000000000184' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000184' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <valueProperties/>
      </concept>
      <concept name = 'StructuralBusinessRule' identity = '10000000-0000-0000-0000-000000000185' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000185' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000068</superType>
        <valueProperties/>
      </concept>
      <concept name = 'StructuralRule' identity = '10000000-0000-0000-0000-000000000186' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000186' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000069</superType>
        <valueProperties/>
      </concept>
      <concept name = 'SubjectField' identity = '10000000-0000-0000-0000-000000000187' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000187' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Term' identity = '10000000-0000-0000-0000-000000000188' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000188' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000006</superType>
        <valueProperties/>
      </concept>
      <concept name = 'TerminologicalDictionary' identity = '10000000-0000-0000-0000-000000000189' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000189' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'ThingInContext' identity = '10000000-0000-0000-0000-000000000190' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000190' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000095</superType>
        <valueProperties/>
      </concept>
      <concept name = 'UniversalQuantification' identity = '10000000-0000-0000-0000-000000000191' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000191' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000054</superType>
        <valueProperties/>
      </concept>
      <concept name = 'Viewpoint' identity = '10000000-0000-0000-0000-000000000192' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000192' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000004</superType>
        <valueProperties/>
      </concept>
      <concept name = 'VocabularyNamespace' identity = '10000000-0000-0000-0000-000000000193' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000193' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000037</superType>
        <valueProperties/>
      </concept>
      <concept name = 'WhetherornotFormulation' identity = '10000000-0000-0000-0000-000000000194' namespace = 'sbvr.DomainModel' id = 'i10000000z0000z0000z0000z000000000194' isLoaded = 'true' isAbstract = 'false'>
        <mdfmetadata xsi:type = 'conceptorshapemdfmetadata' accessmodifier = 'public' category = '' description = '' doccomment = '' localize = 'false'/>
        <superType>i10000000z0000z0000z0000z000000000060</superType>
        <valueProperties/>
      </concept>
    </concepts>
  </model>
</dmd>
