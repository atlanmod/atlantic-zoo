digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_SVG"{
labelloc=t
color=black
label=SVG
 node[shape=record];
Element[label="{/Element/|fill[0-1] : String\nviewBox[0-1] : String\nidentifier[0-1] : String| }"]
 Element->Use[arrowhead=none,arrowtail=none,headlabel="target[*]",taillabel="use[*]",group=Use,minlen=2,constraint=false,]
 Element->Attribute[arrowhead=none,arrowtail=none,headlabel="attribute[*]",taillabel="attOwner[*]",group=Attribute,minlen=2,constraint=false,]
 Element->Coordinates[arrowhead=vee,arrowtail=diamond,headlabel="position[0-1]",group=Coordinates,minlen=2,constraint=true,]
 Element->Dimension[arrowhead=vee,arrowtail=diamond,headlabel="size[0-1]",group=Dimension,minlen=2,constraint=true,]
 Element->Svg[arrowhead=diamond,arrowtail=none,headlabel="root[0-1]",taillabel="children[*]{ordered}",group=Svg,minlen=2,constraint=true,]
 Element->GroupingElement[arrowhead=diamond,arrowtail=none,headlabel="group[0-1]",taillabel="groupContent[*]{ordered}",group=GroupingElement,minlen=2,constraint=true,]
 Element->Marker[arrowhead=diamond,arrowtail=none,headlabel="drawsMarker[0-1]",taillabel="drawing[*]",group=Marker,minlen=2,constraint=true,]
;
 node[shape=record];
StructuralElement[label="{/StructuralElement/| | }"]
 StructuralElement->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
Image[label="{Image| | }"]
 Image->ReferencedFile[arrowhead=none,arrowtail=none,headlabel="referee[*]",taillabel="referer[*]",group=ReferencedFile,minlen=2,constraint=false,]
 Image->StructuralElement[arrowhead=onormal,group=StructuralElement,minlen=2,constraint=true,]
;
 node[shape=record];
Svg[label="{Svg|namespace[0-1] : String\nversion[0-1] : String\nbaseProfile[0-1] : String| }"]
 Svg->StructuralElement[arrowhead=onormal,group=StructuralElement,minlen=2,constraint=true,]
;
 node[shape=record];
GroupingElement[label="{/GroupingElement/| | }"]
 GroupingElement->StructuralElement[arrowhead=onormal,group=StructuralElement,minlen=2,constraint=true,]
;
 node[shape=record];
G[label="{G|name[0-1] : String| }"]
 G->GroupingElement[arrowhead=onormal,group=GroupingElement,minlen=2,constraint=true,]
;
 node[shape=record];
Defs[label="{Defs| | }"]
 Defs->GroupingElement[arrowhead=onormal,group=GroupingElement,minlen=2,constraint=true,]
;
 node[shape=record];
Symbol[label="{Symbol| | }"]
 Symbol->GroupingElement[arrowhead=onormal,group=GroupingElement,minlen=2,constraint=true,]
;
 node[shape=record];
Use[label="{Use| | }"]
 Use->StructuralElement[arrowhead=onormal,group=StructuralElement,minlen=2,constraint=true,]
;
 node[shape=record];
GraphicalElement[label="{/GraphicalElement/|stroke[0-1] : String| }"]
 GraphicalElement->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
Shape[label="{/Shape/| | }"]
 Shape->GraphicalElement[arrowhead=onormal,group=GraphicalElement,minlen=2,constraint=true,]
;
 node[shape=record];
TextElement[label="{/TextElement/|rotate[0-1] : Double\ntextLength[0-1] : String\nfontSize[0-1] : String| }"]
 TextElement->GraphicalElement[arrowhead=onormal,group=GraphicalElement,minlen=2,constraint=true,]
;
 node[shape=record];
Rect[label="{Rect|rx[0-1] : Double\nry[0-1] : Double| }"]
 Rect->Shape[arrowhead=onormal,group=Shape,minlen=2,constraint=true,]
;
 node[shape=record];
Circle[label="{Circle| | }"]
 Circle->Shape[arrowhead=onormal,group=Shape,minlen=2,constraint=true,]
;
 node[shape=record];
Ellipse[label="{Ellipse| | }"]
 Ellipse->Shape[arrowhead=onormal,group=Shape,minlen=2,constraint=true,]
;
 node[shape=record];
Line[label="{Line|markerEnd[0-1] : String\nmarkerStart[0-1] : String| }"]
 Line->Point[arrowhead=vee,arrowtail=none,headlabel="between[22]",group=Point,minlen=2,constraint=false,]
 Line->Shape[arrowhead=onormal,group=Shape,minlen=2,constraint=true,]
;
 node[shape=record];
Polyline[label="{Polyline|strokeDashArray[0-1] : String\nmarkerEnd[0-1] : String\nmarkerStart[0-1] : String| }"]
 Polyline->Point[arrowhead=vee,arrowtail=diamond,headlabel="waypoints[*]{ordered}",group=Point,minlen=2,constraint=true,]
 Polyline->Shape[arrowhead=onormal,group=Shape,minlen=2,constraint=true,]
;
 node[shape=record];
Polygon[label="{Polygon|markerEnd[0-1] : String\nmarkerStart[0-1] : String| }"]
 Polygon->Point[arrowhead=vee,arrowtail=none,headlabel="waypoints[*]{ordered}",group=Point,minlen=2,constraint=false,]
 Polygon->Shape[arrowhead=onormal,group=Shape,minlen=2,constraint=true,]
;
 node[shape=record];
Path[label="{Path|pathLength[0-1] : Double\nd : String\nmarkerEnd[0-1] : String\nmarkerStart[0-1] : String| }"]
 Path->Shape[arrowhead=onormal,group=Shape,minlen=2,constraint=true,]
;
 node[shape=record];
Point[label="{Point| | }"]
 Point->Shape[arrowhead=onormal,group=Shape,minlen=2,constraint=true,]
;
 node[shape=record];
Marker[label="{Marker|markerUnits[0-1] : String\nrefX[0-1] : Double\nrefY[0-1] : Double\nmarkerWidth[0-1] : Double\nmarkerHeight[0-1] : Double\norient[0-1] : String| }"]
 Marker->Shape[arrowhead=onormal,group=Shape,minlen=2,constraint=true,]
;
 node[shape=record];
Text[label="{Text|lengthAdjust[0-1] : String\ncontent : String| }"]
 Text->TextElement[arrowhead=onormal,group=TextElement,minlen=2,constraint=true,]
;
 node[shape=record];
Tspan[label="{Tspan|content[0-1] : String| }"]
 Tspan->TextElement[arrowhead=onormal,group=TextElement,minlen=2,constraint=true,]
;
 node[shape=record];
Tref[label="{Tref| | }"]
 Tref->TextElement[arrowhead=vee,arrowtail=none,headlabel="xlinkHref",group=TextElement,minlen=2,constraint=false,]
 Tref->TextElement[arrowhead=onormal,group=TextElement,minlen=2,constraint=true,]
;
 node[shape=record];
Attribute[label="{/Attribute/| | }"]
;
 node[shape=record];
Transform[label="{/Transform/| | }"]
 Transform->Attribute[arrowhead=onormal,group=Attribute,minlen=2,constraint=true,]
;
 node[shape=record];
Scale[label="{Scale|sx : Double\nsy : Double| }"]
 Scale->Transform[arrowhead=onormal,group=Transform,minlen=2,constraint=true,]
;
 node[shape=record];
Translate[label="{Translate|tx : Double\nty : Double| }"]
 Translate->Transform[arrowhead=onormal,group=Transform,minlen=2,constraint=true,]
;
 node[shape=record];
Rotate[label="{Rotate|angle : Double\ncx : Double\ncy : Double| }"]
 Rotate->Transform[arrowhead=onormal,group=Transform,minlen=2,constraint=true,]
;
 node[shape=record];
Visibility[label="{Visibility|visible : Boolean| }"]
 Visibility->Attribute[arrowhead=onormal,group=Attribute,minlen=2,constraint=true,]
;
 node[shape=record];
FontWeight[label="{FontWeight|bold : Boolean| }"]
 FontWeight->Attribute[arrowhead=onormal,group=Attribute,minlen=2,constraint=true,]
;
 node[shape=record];
FontStyle[label="{FontStyle|italic : Boolean| }"]
 FontStyle->Attribute[arrowhead=onormal,group=Attribute,minlen=2,constraint=true,]
;
 node[shape=record];
Dimension[label="{Dimension|width : Double\nheight : Double| }"]
;
 node[shape=record];
Coordinates[label="{/Coordinates/|x : Double\ny : Double| }"]
;
 node[shape=record];
RelativeCoord[label="{RelativeCoord| | }"]
 RelativeCoord->Coordinates[arrowhead=onormal,group=Coordinates,minlen=2,constraint=true,]
;
 node[shape=record];
AbsoluteCoord[label="{AbsoluteCoord| | }"]
 AbsoluteCoord->Coordinates[arrowhead=onormal,group=Coordinates,minlen=2,constraint=true,]
;
 node[shape=record];
ReferencedFile[label="{/ReferencedFile/|name : String| }"]
;
 node[shape=record];
SvgFile[label="{SvgFile| | }"]
 SvgFile->Svg[arrowhead=none,arrowtail=none,headlabel="tag",taillabel="owner_SVG[*]",group=Svg,minlen=2,constraint=false,]
 SvgFile->Element[arrowhead=none,arrowtail=none,headlabel="elements[*]",taillabel="owner[*]",group=Element,minlen=2,constraint=false,]
 SvgFile->ReferencedFile[arrowhead=onormal,group=ReferencedFile,minlen=2,constraint=true,]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;
 node[shape=record];
Double[label="{&#171;DataType&#187;\nDouble|}"]
;

}
}