digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_XSLT"{
labelloc=t
color=black
label=XSLT
 node[shape=record];
Node[label="{/Node/|name : String| }"]
 Node->ElementNode[arrowhead=diamond,arrowtail=none,headlabel="parentNode[0-1]",taillabel="nodes[*]{ordered}",group=ElementNode,minlen=2,constraint=true,]
;
 node[shape=record];
ElementNode[label="{ElementNode| | }"]
 ElementNode->Node[arrowhead=onormal,group=Node,minlen=2,constraint=true,]
;
 node[shape=record];
AttributeNode[label="{AttributeNode| | }"]
 AttributeNode->Node[arrowhead=onormal,group=Node,minlen=2,constraint=true,]
;
 node[shape=record];
RootNode[label="{RootNode| | }"]
 RootNode->ElementNode[arrowhead=onormal,group=ElementNode,minlen=2,constraint=true,]
;
 node[shape=record];
TextNode[label="{TextNode|value : String| }"]
 TextNode->ElementNode[arrowhead=onormal,group=ElementNode,minlen=2,constraint=true,]
;
 node[shape=record];
XSLTNode[label="{/XSLTNode/| | }"]
 XSLTNode->ElementNode[arrowhead=onormal,group=ElementNode,minlen=2,constraint=true,]
;
 node[shape=record];
XSLTRootNode[label="{XSLTRootNode| | }"]
 XSLTRootNode->RootNode[arrowhead=onormal,group=RootNode,minlen=2,constraint=true,]
;
 node[shape=record];
Document[label="{Document|documentName : String| }"]
 Document->RootNode[arrowhead=diamond,arrowtail=diamond,headlabel="document",taillabel="document",group=RootNode,minlen=2,constraint=true,]
;
 node[shape=record];
ApplyTemplates[label="{ApplyTemplates|select : String| }"]
 ApplyTemplates->XSLTNode[arrowhead=onormal,group=XSLTNode,minlen=2,constraint=true,]
;
 node[shape=record];
If[label="{If|test : String| }"]
 If->XSLTNode[arrowhead=onormal,group=XSLTNode,minlen=2,constraint=true,]
;
 node[shape=record];
Template[label="{Template|match : String| }"]
 Template->XSLTNode[arrowhead=onormal,group=XSLTNode,minlen=2,constraint=true,]
;
 node[shape=record];
ValueOf[label="{ValueOf|select : String| }"]
 ValueOf->XSLTNode[arrowhead=onormal,group=XSLTNode,minlen=2,constraint=true,]
;
 node[shape=record];
When[label="{When|test : String| }"]
 When->XSLTNode[arrowhead=onormal,group=XSLTNode,minlen=2,constraint=true,]
;
 node[shape=record];
Choose[label="{Choose| | }"]
 Choose->When[arrowhead=vee,arrowtail=diamond,headlabel="when",group=When,minlen=2,constraint=true,]
 Choose->Otherwise[arrowhead=vee,arrowtail=diamond,headlabel="otherwise",group=Otherwise,minlen=2,constraint=true,]
 Choose->XSLTNode[arrowhead=onormal,group=XSLTNode,minlen=2,constraint=true,]
;
 node[shape=record];
Otherwise[label="{Otherwise| | }"]
 Otherwise->XSLTNode[arrowhead=onormal,group=XSLTNode,minlen=2,constraint=true,]
;
 node[shape=record];
Sort[label="{Sort|select : String| }"]
 Sort->XSLTNode[arrowhead=onormal,group=XSLTNode,minlen=2,constraint=true,]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;

}
}