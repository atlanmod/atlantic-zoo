digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_Matlab"{
labelloc=t
color=black
label=Matlab
 node[shape=record];
Matlab[label="{Matlab| | }"]
 Matlab->Model[arrowhead=vee,arrowtail=diamond,headlabel="model[*]",group=Model,minlen=2,constraint=true,]
;
 node[shape=record];
BlockDefaults[label="{BlockDefaults|blockDefaults : String| }"]
 BlockDefaults->Model[arrowhead=diamond,arrowtail=none,headlabel="model",taillabel="blockDefaults[*]",group=Model,minlen=2,constraint=true,]
;
 node[shape=record];
Model[label="{Model|name : String| }"]
 Model->Matlab[arrowhead=vee,arrowtail=none,headlabel="matlab",group=Matlab,minlen=2,constraint=false,]
 Model->Simulink[arrowhead=diamond,arrowtail=none,headlabel="simulink",taillabel="models[*]",group=Simulink,minlen=2,constraint=true,]
;
 node[shape=record];
AnnotationDefaults[label="{AnnotationDefaults|annotationDefaults : String| }"]
 AnnotationDefaults->Model[arrowhead=diamond,arrowtail=none,headlabel="model",taillabel="annotationDefaults[*]",group=Model,minlen=2,constraint=true,]
;
 node[shape=record];
LineDefaults[label="{LineDefaults|lineDefaults : String| }"]
 LineDefaults->Model[arrowhead=diamond,arrowtail=none,headlabel="model",taillabel="lineDefaults[*]",group=Model,minlen=2,constraint=true,]
;
 node[shape=record];
System[label="{System|name : String| }"]
 System->Model[arrowhead=diamond,arrowtail=none,headlabel="model",taillabel="system[*]",group=Model,minlen=2,constraint=true,]
 System->Subsystem[arrowhead=diamond,arrowtail=none,headlabel="parentSubsystem",taillabel="system",group=Subsystem,minlen=2,constraint=true,]
;
 node[shape=record];
Subsystem[label="{Subsystem| | }"]
 Subsystem->Block[arrowhead=onormal,group=Block,minlen=2,constraint=true,]
;
 node[shape=record];
Block[label="{Block|name : String\nblockType : String\ndescription : String\npriority : String\ntag : String\nposition : String| }"]
 Block->System[arrowhead=diamond,arrowtail=none,headlabel="mySystem",taillabel="blocks[*]",group=System,minlen=2,constraint=true,]
 Block->BlockDefaults[arrowhead=onormal,group=BlockDefaults,minlen=2,constraint=true,]
;
 node[shape=record];
Annotation[label="{Annotation|position : String\ntext : String| }"]
 Annotation->System[arrowhead=diamond,arrowtail=none,headlabel="system",taillabel="annotations[*]",group=System,minlen=2,constraint=true,]
 Annotation->AnnotationDefaults[arrowhead=onormal,group=AnnotationDefaults,minlen=2,constraint=true,]
;
 node[shape=record];
Line[label="{Line|points : String\nid[0-1] : String| }"]
 Line->OutputPort[arrowhead=none,arrowtail=none,headlabel="srcPort[0-1]",taillabel="owningLine[0-1]",group=OutputPort,minlen=2,constraint=false,]
 Line->System[arrowhead=diamond,arrowtail=none,headlabel="system",taillabel="lines[*]",group=System,minlen=2,constraint=true,]
 Line->LineDefaults[arrowhead=onormal,group=LineDefaults,minlen=2,constraint=true,]
;
 node[shape=record];
DirectLine[label="{DirectLine| | }"]
 DirectLine->InputPort[arrowhead=none,arrowtail=none,headlabel="destPort1[0-1]",taillabel="owningDirectLine[0-1]",group=InputPort,minlen=2,constraint=false,]
 DirectLine->Line[arrowhead=onormal,group=Line,minlen=2,constraint=true,]
;
 node[shape=record];
InputPort[label="{InputPort| | }"]
 InputPort->Port[arrowhead=onormal,group=Port,minlen=2,constraint=true,]
;
 node[shape=record];
Branch[label="{Branch|points : String| }"]
 Branch->BranchedLine[arrowhead=diamond,arrowtail=none,headlabel="branchedLine",taillabel="branchs[*]",group=BranchedLine,minlen=2,constraint=true,]
 Branch->NestedBranch[arrowhead=diamond,arrowtail=none,headlabel="nestedBranch",taillabel="branchs[*]",group=NestedBranch,minlen=2,constraint=true,]
;
 node[shape=record];
BranchedLine[label="{BranchedLine| | }"]
 BranchedLine->Line[arrowhead=onormal,group=Line,minlen=2,constraint=true,]
;
 node[shape=record];
Primitive[label="{Primitive|id[0-1] : String| }"]
 Primitive->Block[arrowhead=onormal,group=Block,minlen=2,constraint=true,]
;
 node[shape=record];
Port[label="{Port|id[0-1] : String\nnumber : String| }"]
 Port->Block[arrowhead=diamond,arrowtail=none,headlabel="portBlock",taillabel="ports[*]",group=Block,minlen=2,constraint=true,]
 Port->Primitive[arrowhead=none,arrowtail=none,headlabel="primitive[0-1]",taillabel="refPort[0-1]",group=Primitive,minlen=2,constraint=false,]
;
 node[shape=record];
Reference[label="{Reference|sourceType : String\nsourceBlock : String| }"]
 Reference->Block[arrowhead=onormal,group=Block,minlen=2,constraint=true,]
;
 node[shape=record];
Masked[label="{Masked| | }"]
 Masked->Subsystem[arrowhead=onormal,group=Subsystem,minlen=2,constraint=true,]
;
 node[shape=record];
Normal[label="{Normal| | }"]
 Normal->Subsystem[arrowhead=onormal,group=Subsystem,minlen=2,constraint=true,]
;
 node[shape=record];
Parameter[label="{Parameter|name : String| }"]
 Parameter->Reference[arrowhead=diamond,arrowtail=none,headlabel="le_reference",taillabel="parameters[*]",group=Reference,minlen=2,constraint=true,]
 Parameter->Primitive[arrowhead=diamond,arrowtail=none,headlabel="primitive",taillabel="parameters[*]",group=Primitive,minlen=2,constraint=true,]
;
 node[shape=record];
OutputPort[label="{OutputPort| | }"]
 OutputPort->Port[arrowhead=onormal,group=Port,minlen=2,constraint=true,]
;
 node[shape=record];
Type[label="{Type|value : String| }"]
 Type->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
Double[label="{Double|value : String| }"]
 Double->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
INteger[label="{INteger|value : String| }"]
 INteger->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
Enumeration[label="{Enumeration|value : String| }"]
 Enumeration->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
BOolean[label="{BOolean|value : TrueFalse| }"]
 BOolean->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
Text[label="{Text|value : String| }"]
 Text->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
Vector[label="{Vector|value : String| }"]
 Vector->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
DirectBranch[label="{DirectBranch|id[0-1] : String| }"]
 DirectBranch->InputPort[arrowhead=none,arrowtail=none,headlabel="destPort[0-1]",taillabel="owningDirectBranch[0-1]",group=InputPort,minlen=2,constraint=false,]
 DirectBranch->Branch[arrowhead=onormal,group=Branch,minlen=2,constraint=true,]
;
 node[shape=record];
NestedBranch[label="{NestedBranch| | }"]
 NestedBranch->Branch[arrowhead=onormal,group=Branch,minlen=2,constraint=true,]
;
 node[shape=record];
Machine[label="{Machine|name : String\nid : String| }"]
 Machine->StateFlow[arrowhead=diamond,arrowtail=none,headlabel="stateFlow",taillabel="machines[*]",group=StateFlow,minlen=2,constraint=true,]
;
 node[shape=record];
Junction[label="{Junction|_id[0-1] : String\nid : String\ntype : String\nposition : String| }"]
 Junction->State[arrowhead=diamond,arrowtail=none,headlabel="state",taillabel="junctions[*]",group=State,minlen=2,constraint=true,]
 Junction->Chart[arrowhead=diamond,arrowtail=none,headlabel="chart",taillabel="junctions[*]",group=Chart,minlen=2,constraint=true,]
;
 node[shape=record];
Transition[label="{Transition|_id[0-1] : String\ndataLimites : String\nid : String\ntrigger : String\ncondition : String\nconditionAction : String\naction : String| }"]
 Transition->Chart[arrowhead=diamond,arrowtail=none,headlabel="chart",taillabel="transitions[*]",group=Chart,minlen=2,constraint=true,]
 Transition->State[arrowhead=diamond,arrowtail=none,headlabel="state",taillabel="transitions[*]",group=State,minlen=2,constraint=true,]
;
 node[shape=record];
Event[label="{Event|name : String\nid : String\nscope : String\ndescription : String\ntrigger : String| }"]
 Event->Machine[arrowhead=diamond,arrowtail=none,headlabel="machine",taillabel="events[*]",group=Machine,minlen=2,constraint=true,]
 Event->Chart[arrowhead=diamond,arrowtail=none,headlabel="chart",taillabel="events[*]",group=Chart,minlen=2,constraint=true,]
 Event->State[arrowhead=diamond,arrowtail=none,headlabel="state",taillabel="events[*]",group=State,minlen=2,constraint=true,]
;
 node[shape=record];
Data[label="{Data|name : String\nid : String\nscope : String\ndescription : String\nunits : String\ndataType : String| }"]
 Data->State[arrowhead=diamond,arrowtail=none,headlabel="state",taillabel="data[*]",group=State,minlen=2,constraint=true,]
 Data->Chart[arrowhead=diamond,arrowtail=none,headlabel="chart",taillabel="data[*]",group=Chart,minlen=2,constraint=true,]
 Data->Machine[arrowhead=diamond,arrowtail=none,headlabel="machine",taillabel="data[*]",group=Machine,minlen=2,constraint=true,]
;
 node[shape=record];
Instance[label="{Instance|_id[0-1] : String\nid : String\nname : String| }"]
 Instance->Machine[arrowhead=diamond,arrowtail=none,headlabel="machine",taillabel="instances[*]",group=Machine,minlen=2,constraint=true,]
;
 node[shape=record];
Target[label="{Target|name : String\nid : String\ncodeCommand : String\ndescription : String\nmakeCommand : String\ncodeFlags : String\nchecksumOld : String| }"]
 Target->Machine[arrowhead=diamond,arrowtail=none,headlabel="machine",taillabel="targets[*]",group=Machine,minlen=2,constraint=true,]
;
 node[shape=record];
Chart[label="{Chart|name : String\nid : String\n_id[0-1] : String\ndecomposotion : String\nupdateMethode : String\nsampleTime : String| }"]
;
 node[shape=record];
State[label="{State|name : String\nid : String\n_id[0-1] : String\ntype : String\nentryAction : String\nexitAction : String\nduringAction : String\neventActions : String\ndecomposition : String\nposition : String| }"]
 State->Chart[arrowhead=diamond,arrowtail=none,headlabel="chart",taillabel="states[*]",group=Chart,minlen=2,constraint=true,]
 State->State[arrowhead=vee,arrowtail=diamond,headlabel="states[*]",group=State,minlen=2,constraint=true,]
;
 node[shape=record];
Props[label="{Props|initialValue : String| }"]
 Props->Data[arrowhead=diamond,arrowtail=none,headlabel="data",taillabel="props[*]",group=Data,minlen=2,constraint=true,]
;
 node[shape=record];
Range[label="{Range|maximum : String\nminimum : String| }"]
 Range->Props[arrowhead=diamond,arrowtail=none,headlabel="props",taillabel="ranges[*]",group=Props,minlen=2,constraint=true,]
;
 node[shape=record];
Array[label="{Array|firstIndex : String\nsize : String| }"]
 Array->Props[arrowhead=diamond,arrowtail=none,headlabel="props",taillabel="arrays[*]",group=Props,minlen=2,constraint=true,]
;
 node[shape=record];
StateFlow[label="{StateFlow|stateFlow : String| }"]
 StateFlow->Simulink[arrowhead=diamond,arrowtail=none,headlabel="simulink",taillabel="stateFlows[*]",group=Simulink,minlen=2,constraint=true,]
;
 node[shape=record];
TransitionTerminal[label="{TransitionTerminal|_id[0-1] : String| }"]
;
 node[shape=record];
Simulink[label="{Simulink|simulink[0-1] : String| }"]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;

}
}