digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_sbvr"{
labelloc=t
color=black
label=sbvr
 node[shape=record];
Actuality[label="{Actuality| | }"]
 Actuality->StateOfAffairs[arrowhead=onormal,group=StateOfAffairs,minlen=2,constraint=true,]
;
 node[shape=record];
StateOfAffairs[label="{StateOfAffairs| | }"]
 StateOfAffairs->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
Thing[label="{Thing| | }"]
 Thing->Name[arrowhead=vee,arrowtail=none,headlabel="name[*]",group=Name,minlen=2,constraint=false,]
;
 node[shape=record];
Name[label="{Name| | }"]
 Name->Designation[arrowhead=onormal,group=Designation,minlen=2,constraint=true,]
;
 node[shape=record];
Designation[label="{Designation|implicitlyIsUnderstood[0-1] : Boolean|getSignifierText() : String\nsetSignifierText(value : String)\n}"]
 Designation->Expression[arrowhead=vee,arrowtail=none,headlabel="signifier",group=Expression,minlen=2,constraint=false,]
 Designation->Representation[arrowhead=onormal,group=Representation,minlen=2,constraint=true,]
;
 node[shape=record];
Representation[label="{Representation| | }"]
 Representation->Meaning[arrowhead=vee,arrowtail=none,headlabel="meaning",group=Meaning,minlen=2,constraint=false,]
 Representation->Expression[arrowhead=vee,arrowtail=none,headlabel="expression",group=Expression,minlen=2,constraint=false,]
 Representation->Actuality[arrowhead=onormal,group=Actuality,minlen=2,constraint=true,]
;
 node[shape=record];
Meaning[label="{Meaning| | }"]
 Meaning->Representation[arrowhead=vee,arrowtail=none,headlabel="representation[*]",group=Representation,minlen=2,constraint=false,]
 Meaning->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
Expression[label="{Expression| | }"]
 Expression->BindableTarget[arrowhead=onormal,group=BindableTarget,minlen=2,constraint=true,]
;
 node[shape=record];
BindableTarget[label="{BindableTarget| | }"]
 BindableTarget->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
AdoptedDefinition[label="{AdoptedDefinition| | }"]
 AdoptedDefinition->Definition[arrowhead=onormal,group=Definition,minlen=2,constraint=true,]
;
 node[shape=record];
Definition[label="{Definition| | }"]
 Definition->Representation[arrowhead=onormal,group=Representation,minlen=2,constraint=true,]
;
 node[shape=record];
Advice[label="{Advice| | }"]
 Advice->ElementOfGuidance[arrowhead=onormal,group=ElementOfGuidance,minlen=2,constraint=true,]
;
 node[shape=record];
ElementOfGuidance[label="{ElementOfGuidance|isPracticable[0-1] : Boolean| }"]
 ElementOfGuidance->Proposition[arrowhead=onormal,group=Proposition,minlen=2,constraint=true,]
;
 node[shape=record];
Proposition[label="{Proposition|isFalse[0-1] : Boolean\nisTrue[0-1] : Boolean\nisPossiblyTrue[0-1] : Boolean\nisObligatedToBeTrue[0-1] : Boolean\nisPermittedToBeTrue[0-1] : Boolean\nisNecessarilyTrue[0-1] : Boolean| }"]
 Proposition->Statement[arrowhead=vee,arrowtail=none,headlabel="statement[*]",group=Statement,minlen=2,constraint=false,]
 Proposition->Meaning[arrowhead=onormal,group=Meaning,minlen=2,constraint=true,]
;
 node[shape=record];
Statement[label="{Statement| | }"]
 Statement->Representation[arrowhead=onormal,group=Representation,minlen=2,constraint=true,]
;
 node[shape=record];
AdviceOfContingency[label="{AdviceOfContingency| | }"]
 AdviceOfContingency->AdviceOfPossibility[arrowhead=onormal,group=AdviceOfPossibility,minlen=2,constraint=true,]
;
 node[shape=record];
AdviceOfPossibility[label="{AdviceOfPossibility| | }"]
 AdviceOfPossibility->Advice[arrowhead=onormal,group=Advice,minlen=2,constraint=true,]
;
 node[shape=record];
AdviceOfOptionality[label="{AdviceOfOptionality| | }"]
 AdviceOfOptionality->AdviceOfPermission[arrowhead=onormal,group=AdviceOfPermission,minlen=2,constraint=true,]
;
 node[shape=record];
AdviceOfPermission[label="{AdviceOfPermission| | }"]
 AdviceOfPermission->Advice[arrowhead=onormal,group=Advice,minlen=2,constraint=true,]
;
 node[shape=record];
AdviceStatement[label="{AdviceStatement| | }"]
 AdviceStatement->GuidanceStatement[arrowhead=onormal,group=GuidanceStatement,minlen=2,constraint=true,]
;
 node[shape=record];
GuidanceStatement[label="{GuidanceStatement| | }"]
 GuidanceStatement->Statement[arrowhead=onormal,group=Statement,minlen=2,constraint=true,]
;
 node[shape=record];
AggregationFormulation[label="{AggregationFormulation| | }"]
 AggregationFormulation->ProjectingFormulation[arrowhead=onormal,group=ProjectingFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
ProjectingFormulation[label="{ProjectingFormulation| | }"]
 ProjectingFormulation->Projection[arrowhead=vee,arrowtail=none,headlabel="projection",group=Projection,minlen=2,constraint=false,]
 ProjectingFormulation->LogicalFormulation[arrowhead=onormal,group=LogicalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
LogicalFormulation[label="{LogicalFormulation| | }"]
 LogicalFormulation->SemanticFormulation[arrowhead=onormal,group=SemanticFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
SemanticFormulation[label="{SemanticFormulation| | }"]
 SemanticFormulation->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
Projection[label="{Projection| | }"]
 Projection->LogicalFormulation[arrowhead=vee,arrowtail=none,headlabel="constrainingFormulation[0-1]",group=LogicalFormulation,minlen=2,constraint=false,]
 Projection->Variable[arrowhead=vee,arrowtail=none,headlabel="projectionVariable[1-*]",group=Variable,minlen=2,constraint=false,]
 Projection->AuxiliaryVariable[arrowhead=vee,arrowtail=none,headlabel="auxiliaryVariable[*]",group=AuxiliaryVariable,minlen=2,constraint=false,]
 Projection->SemanticFormulation[arrowhead=onormal,group=SemanticFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
Variable[label="{Variable|isUnitary[0-1] : Boolean| }"]
 Variable->LogicalFormulation[arrowhead=vee,arrowtail=none,headlabel="restrictingFormulation[0-1]",group=LogicalFormulation,minlen=2,constraint=false,]
 Variable->PositiveInteger[arrowhead=vee,arrowtail=none,headlabel="projectionPosition[0-1]",group=PositiveInteger,minlen=2,constraint=false,]
 Variable->Concept[arrowhead=vee,arrowtail=none,headlabel="rangedoverConcept[0-1]",group=Concept,minlen=2,constraint=false,]
 Variable->BindableTarget[arrowhead=onormal,group=BindableTarget,minlen=2,constraint=true,]
;
 node[shape=record];
PositiveInteger[label="{PositiveInteger| | }"]
 PositiveInteger->NonnegativeInteger[arrowhead=onormal,group=NonnegativeInteger,minlen=2,constraint=true,]
;
 node[shape=record];
NonnegativeInteger[label="{NonnegativeInteger| | }"]
 NonnegativeInteger->Integer[arrowhead=onormal,group=Integer,minlen=2,constraint=true,]
;
 node[shape=record];
Integer[label="{Integer|value[0-1] : integer| }"]
 Integer->Number[arrowhead=onormal,group=Number,minlen=2,constraint=true,]
;
 node[shape=record];
Number[label="{Number| | }"]
 Number->Quantity[arrowhead=onormal,group=Quantity,minlen=2,constraint=true,]
;
 node[shape=record];
Quantity[label="{Quantity| | }"]
 Quantity->NounConcept[arrowhead=onormal,group=NounConcept,minlen=2,constraint=true,]
;
 node[shape=record];
NounConcept[label="{NounConcept| | }"]
 NounConcept->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
Concept[label="{Concept| | }"]
 Concept->AttributiveNamespace[arrowhead=vee,arrowtail=none,headlabel="attributiveNamespace[*]",group=AttributiveNamespace,minlen=2,constraint=false,]
 Concept->Definition[arrowhead=vee,arrowtail=none,headlabel="definition[*]",group=Definition,minlen=2,constraint=false,]
 Concept->Concept[arrowhead=vee,arrowtail=none,headlabel="moreGeneralConcept[*]",group=Concept,minlen=2,constraint=false,]
 Concept->Concept[arrowhead=vee,arrowtail=none,headlabel="category[*]",group=Concept,minlen=2,constraint=false,]
 Concept->Characteristic[arrowhead=vee,arrowtail=none,headlabel="essentialCharacteristic[*]",group=Characteristic,minlen=2,constraint=false,]
 Concept->Thing[arrowhead=vee,arrowtail=none,headlabel="instance[*]",group=Thing,minlen=2,constraint=false,]
 Concept->ReferenceScheme[arrowhead=vee,arrowtail=none,headlabel="referenceScheme[*]",group=ReferenceScheme,minlen=2,constraint=false,]
 Concept->Characteristic[arrowhead=vee,arrowtail=none,headlabel="impliedCharacteristic[*]",group=Characteristic,minlen=2,constraint=false,]
 Concept->Characteristic[arrowhead=vee,arrowtail=none,headlabel="necessaryCharacteristic[*]",group=Characteristic,minlen=2,constraint=false,]
 Concept->Designation[arrowhead=vee,arrowtail=none,headlabel="designation[*]",group=Designation,minlen=2,constraint=false,]
 Concept->Set[arrowhead=vee,arrowtail=none,headlabel="extension",group=Set,minlen=2,constraint=false,]
 Concept->Meaning[arrowhead=onormal,group=Meaning,minlen=2,constraint=true,]
;
 node[shape=record];
AttributiveNamespace[label="{AttributiveNamespace| | }"]
 AttributiveNamespace->Namespace[arrowhead=onormal,group=Namespace,minlen=2,constraint=true,]
;
 node[shape=record];
Namespace[label="{Namespace| | }"]
 Namespace->Uri[arrowhead=vee,arrowtail=none,headlabel="uri[*]",group=Uri,minlen=2,constraint=false,]
 Namespace->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
Uri[label="{Uri| | }"]
 Uri->Text[arrowhead=onormal,group=Text,minlen=2,constraint=true,]
;
 node[shape=record];
Text[label="{Text|value[0-1] : String| }"]
 Text->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
Characteristic[label="{Characteristic| | }"]
 Characteristic->FactType[arrowhead=onormal,group=FactType,minlen=2,constraint=true,]
;
 node[shape=record];
FactType[label="{FactType| | }"]
 FactType->FactTypeForm[arrowhead=vee,arrowtail=none,headlabel="factTypeForm[*]",group=FactTypeForm,minlen=2,constraint=false,]
 FactType->FactTypeRole[arrowhead=vee,arrowtail=none,headlabel="role[1-*]",group=FactTypeRole,minlen=2,constraint=false,]
 FactType->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
FactTypeForm[label="{FactTypeForm| | }"]
 FactTypeForm->Placeholder[arrowhead=vee,arrowtail=none,headlabel="placeholder[1-*]",group=Placeholder,minlen=2,constraint=false,]
 FactTypeForm->Representation[arrowhead=onormal,group=Representation,minlen=2,constraint=true,]
;
 node[shape=record];
Placeholder[label="{Placeholder| | }"]
 Placeholder->PositiveInteger[arrowhead=vee,arrowtail=none,headlabel="startingCharacterPosition[0-1]",group=PositiveInteger,minlen=2,constraint=false,]
 Placeholder->Designation[arrowhead=onormal,group=Designation,minlen=2,constraint=true,]
;
 node[shape=record];
FactTypeRole[label="{FactTypeRole| | }"]
 FactTypeRole->RoleBinding[arrowhead=vee,arrowtail=none,headlabel="roleBinding[*]",group=RoleBinding,minlen=2,constraint=false,]
 FactTypeRole->Role[arrowhead=onormal,group=Role,minlen=2,constraint=true,]
;
 node[shape=record];
Role[label="{Role| | }"]
 Role->NounConcept[arrowhead=onormal,group=NounConcept,minlen=2,constraint=true,]
;
 node[shape=record];
RoleBinding[label="{RoleBinding| | }"]
 RoleBinding->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
ReferenceScheme[label="{ReferenceScheme| | }"]
 ReferenceScheme->FactTypeRole[arrowhead=vee,arrowtail=none,headlabel="simplyUsedRole[*]",group=FactTypeRole,minlen=2,constraint=false,]
 ReferenceScheme->Characteristic[arrowhead=vee,arrowtail=none,headlabel="identifyingCharacteristic[*]",group=Characteristic,minlen=2,constraint=false,]
 ReferenceScheme->FactTypeRole[arrowhead=vee,arrowtail=none,headlabel="extensionallyUsedRole[*]",group=FactTypeRole,minlen=2,constraint=false,]
 ReferenceScheme->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
Set[label="{Set| | }"]
 Set->NonnegativeInteger[arrowhead=vee,arrowtail=none,headlabel="cardinality[0-1]",group=NonnegativeInteger,minlen=2,constraint=false,]
 Set->Thing[arrowhead=vee,arrowtail=none,headlabel="element[*]",group=Thing,minlen=2,constraint=false,]
 Set->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
AuxiliaryVariable[label="{AuxiliaryVariable| | }"]
 AuxiliaryVariable->Variable[arrowhead=onormal,group=Variable,minlen=2,constraint=true,]
;
 node[shape=record];
AnswerNominalization[label="{AnswerNominalization| | }"]
 AnswerNominalization->ProjectingFormulation[arrowhead=onormal,group=ProjectingFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
AssociativeFactType[label="{AssociativeFactType| | }"]
 AssociativeFactType->FactType[arrowhead=onormal,group=FactType,minlen=2,constraint=true,]
;
 node[shape=record];
AssortmentFactType[label="{AssortmentFactType| | }"]
 AssortmentFactType->FactType[arrowhead=onormal,group=FactType,minlen=2,constraint=true,]
;
 node[shape=record];
AtleastnQuantification[label="{AtleastnQuantification| | }"]
 AtleastnQuantification->NonnegativeInteger[arrowhead=vee,arrowtail=none,headlabel="minimumCardinality",group=NonnegativeInteger,minlen=2,constraint=false,]
 AtleastnQuantification->Quantification[arrowhead=onormal,group=Quantification,minlen=2,constraint=true,]
;
 node[shape=record];
Quantification[label="{Quantification| | }"]
 Quantification->LogicalFormulation[arrowhead=vee,arrowtail=none,headlabel="scopeFormulation[0-1]",group=LogicalFormulation,minlen=2,constraint=false,]
 Quantification->LogicalFormulation[arrowhead=onormal,group=LogicalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
AtmostnQuantification[label="{AtmostnQuantification| | }"]
 AtmostnQuantification->NonnegativeInteger[arrowhead=vee,arrowtail=none,headlabel="maximumCardinality",group=NonnegativeInteger,minlen=2,constraint=false,]
 AtmostnQuantification->Quantification[arrowhead=onormal,group=Quantification,minlen=2,constraint=true,]
;
 node[shape=record];
AtmostoneQuantification[label="{AtmostoneQuantification| | }"]
 AtmostoneQuantification->AtmostnQuantification[arrowhead=onormal,group=AtmostnQuantification,minlen=2,constraint=true,]
;
 node[shape=record];
AtomicFormulation[label="{AtomicFormulation| | }"]
 AtomicFormulation->RoleBinding[arrowhead=vee,arrowtail=none,headlabel="roleBinding[*]",group=RoleBinding,minlen=2,constraint=false,]
 AtomicFormulation->LogicalFormulation[arrowhead=onormal,group=LogicalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
BagProjection[label="{BagProjection| | }"]
 BagProjection->Projection[arrowhead=onormal,group=Projection,minlen=2,constraint=true,]
;
 node[shape=record];
BinaryFactType[label="{BinaryFactType| | }"]
 BinaryFactType->FactType[arrowhead=onormal,group=FactType,minlen=2,constraint=true,]
;
 node[shape=record];
BinaryLogicalOperation[label="{BinaryLogicalOperation| | }"]
 BinaryLogicalOperation->LogicalFormulation[arrowhead=vee,arrowtail=none,headlabel="logicalOperand2[*]",group=LogicalFormulation,minlen=2,constraint=false,]
 BinaryLogicalOperation->LogicalFormulation[arrowhead=vee,arrowtail=none,headlabel="logicalOperand1[*]",group=LogicalFormulation,minlen=2,constraint=false,]
 BinaryLogicalOperation->LogicalOperation[arrowhead=onormal,group=LogicalOperation,minlen=2,constraint=true,]
;
 node[shape=record];
LogicalOperation[label="{LogicalOperation| | }"]
 LogicalOperation->LogicalFormulation[arrowhead=vee,arrowtail=none,headlabel="logicalOperand",group=LogicalFormulation,minlen=2,constraint=false,]
 LogicalOperation->LogicalFormulation[arrowhead=onormal,group=LogicalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
BodyOfSharedConcepts[label="{BodyOfSharedConcepts| | }"]
 BodyOfSharedConcepts->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
BodyOfSharedGuidance[label="{BodyOfSharedGuidance| | }"]
 BodyOfSharedGuidance->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
BodyOfSharedMeanings[label="{BodyOfSharedMeanings| | }"]
 BodyOfSharedMeanings->FactType[arrowhead=vee,arrowtail=none,headlabel="elementaryFactType[*]",group=FactType,minlen=2,constraint=false,]
 BodyOfSharedMeanings->Set[arrowhead=onormal,group=Set,minlen=2,constraint=true,]
;
 node[shape=record];
BusinessPolicy[label="{BusinessPolicy| | }"]
 BusinessPolicy->ElementOfGovernance[arrowhead=onormal,group=ElementOfGovernance,minlen=2,constraint=true,]
;
 node[shape=record];
ElementOfGovernance[label="{ElementOfGovernance|isDirectlyEnforceable[0-1] : Boolean| }"]
 ElementOfGovernance->ElementOfGuidance[arrowhead=onormal,group=ElementOfGuidance,minlen=2,constraint=true,]
;
 node[shape=record];
BusinessPolicyStatement[label="{BusinessPolicyStatement| | }"]
 BusinessPolicyStatement->GuidanceStatement[arrowhead=onormal,group=GuidanceStatement,minlen=2,constraint=true,]
;
 node[shape=record];
BusinessRule[label="{BusinessRule| | }"]
 BusinessRule->ElementOfGuidance[arrowhead=onormal,group=ElementOfGuidance,minlen=2,constraint=true,]
 BusinessRule->Rule[arrowhead=onormal,group=Rule,minlen=2,constraint=true,]
;
 node[shape=record];
Rule[label="{Rule| | }"]
 Rule->Proposition[arrowhead=onormal,group=Proposition,minlen=2,constraint=true,]
;
 node[shape=record];
BusinessVocabulary[label="{BusinessVocabulary| | }"]
 BusinessVocabulary->Vocabulary[arrowhead=onormal,group=Vocabulary,minlen=2,constraint=true,]
;
 node[shape=record];
Vocabulary[label="{Vocabulary| | }"]
 Vocabulary->Set[arrowhead=onormal,group=Set,minlen=2,constraint=true,]
;
 node[shape=record];
CategorizationFactType[label="{CategorizationFactType| | }"]
 CategorizationFactType->SpecializationFactType[arrowhead=onormal,group=SpecializationFactType,minlen=2,constraint=true,]
;
 node[shape=record];
SpecializationFactType[label="{SpecializationFactType| | }"]
 SpecializationFactType->FactType[arrowhead=onormal,group=FactType,minlen=2,constraint=true,]
;
 node[shape=record];
CategorizationScheme[label="{CategorizationScheme| | }"]
 CategorizationScheme->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
CategorizationType[label="{CategorizationType| | }"]
 CategorizationType->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
CharacteristicType[label="{CharacteristicType| | }"]
 CharacteristicType->ConceptType[arrowhead=onormal,group=ConceptType,minlen=2,constraint=true,]
;
 node[shape=record];
ConceptType[label="{ConceptType| | }"]
 ConceptType->ObjectType[arrowhead=onormal,group=ObjectType,minlen=2,constraint=true,]
;
 node[shape=record];
ObjectType[label="{ObjectType| | }"]
 ObjectType->CategorizationScheme[arrowhead=vee,arrowtail=none,headlabel="categorizationScheme[*]",group=CategorizationScheme,minlen=2,constraint=false,]
 ObjectType->CategorizationType[arrowhead=vee,arrowtail=none,headlabel="categorizationType[*]",group=CategorizationType,minlen=2,constraint=false,]
 ObjectType->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
ClosedLogicalFormulation[label="{ClosedLogicalFormulation| | }"]
 ClosedLogicalFormulation->ClosedSemanticFormulation[arrowhead=onormal,group=ClosedSemanticFormulation,minlen=2,constraint=true,]
 ClosedLogicalFormulation->LogicalFormulation[arrowhead=onormal,group=LogicalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
ClosedSemanticFormulation[label="{ClosedSemanticFormulation| | }"]
 ClosedSemanticFormulation->SemanticFormulation[arrowhead=onormal,group=SemanticFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
ClosedProjection[label="{ClosedProjection| | }"]
 ClosedProjection->Projection[arrowhead=onormal,group=Projection,minlen=2,constraint=true,]
;
 node[shape=record];
CommunicationContent[label="{CommunicationContent| | }"]
 CommunicationContent->Representation[arrowhead=onormal,group=Representation,minlen=2,constraint=true,]
;
 node[shape=record];
Community[label="{Community| | }"]
 Community->Uri[arrowhead=vee,arrowtail=none,headlabel="uri[*]",group=Uri,minlen=2,constraint=false,]
 Community->Community[arrowhead=vee,arrowtail=none,headlabel="subcommunity[*]",group=Community,minlen=2,constraint=false,]
 Community->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
ConceptOfThingAsComposite[label="{ConceptOfThingAsComposite| | }"]
 ConceptOfThingAsComposite->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
ConceptOfThingAsContinuant[label="{ConceptOfThingAsContinuant| | }"]
 ConceptOfThingAsContinuant->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
ConceptOfThingAsDeveloped[label="{ConceptOfThingAsDeveloped| | }"]
 ConceptOfThingAsDeveloped->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
ConceptOfThingAsOccurrent[label="{ConceptOfThingAsOccurrent| | }"]
 ConceptOfThingAsOccurrent->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
ConceptOfThingAsPrimitive[label="{ConceptOfThingAsPrimitive| | }"]
 ConceptOfThingAsPrimitive->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
ConceptOfThingAsUnitary[label="{ConceptOfThingAsUnitary| | }"]
 ConceptOfThingAsUnitary->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
ConceptOfThingExistingDependently[label="{ConceptOfThingExistingDependently| | }"]
 ConceptOfThingExistingDependently->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
ConceptOfThingExistingIndependently[label="{ConceptOfThingExistingIndependently| | }"]
 ConceptOfThingExistingIndependently->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
ConceptualSchema[label="{ConceptualSchema| | }"]
 ConceptualSchema->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
Conjunction[label="{Conjunction| | }"]
 Conjunction->BinaryLogicalOperation[arrowhead=onormal,group=BinaryLogicalOperation,minlen=2,constraint=true,]
;
 node[shape=record];
ContextOfThing[label="{ContextOfThing| | }"]
 ContextOfThing->Segmentation[arrowhead=onormal,group=Segmentation,minlen=2,constraint=true,]
;
 node[shape=record];
Segmentation[label="{Segmentation| | }"]
 Segmentation->CategorizationScheme[arrowhead=onormal,group=CategorizationScheme,minlen=2,constraint=true,]
;
 node[shape=record];
ContextualizationFactType[label="{ContextualizationFactType| | }"]
 ContextualizationFactType->SpecializationFactType[arrowhead=onormal,group=SpecializationFactType,minlen=2,constraint=true,]
;
 node[shape=record];
ContextualizedConcept[label="{ContextualizedConcept| | }"]
 ContextualizedConcept->NounConcept[arrowhead=onormal,group=NounConcept,minlen=2,constraint=true,]
;
 node[shape=record];
ContingencyStatement[label="{ContingencyStatement| | }"]
 ContingencyStatement->StatementOfAdviceOfPossibility[arrowhead=onormal,group=StatementOfAdviceOfPossibility,minlen=2,constraint=true,]
;
 node[shape=record];
StatementOfAdviceOfPossibility[label="{StatementOfAdviceOfPossibility| | }"]
 StatementOfAdviceOfPossibility->AdviceStatement[arrowhead=onormal,group=AdviceStatement,minlen=2,constraint=true,]
;
 node[shape=record];
DefiniteDescription[label="{DefiniteDescription| | }"]
 DefiniteDescription->IntensionalDefinition[arrowhead=onormal,group=IntensionalDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IntensionalDefinition[label="{IntensionalDefinition| | }"]
 IntensionalDefinition->Definition[arrowhead=onormal,group=Definition,minlen=2,constraint=true,]
;
 node[shape=record];
DerivableConcept[label="{DerivableConcept| | }"]
 DerivableConcept->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
Description[label="{Description| | }"]
 Description->Representation[arrowhead=onormal,group=Representation,minlen=2,constraint=true,]
;
 node[shape=record];
DescriptiveExample[label="{DescriptiveExample| | }"]
 DescriptiveExample->Representation[arrowhead=onormal,group=Representation,minlen=2,constraint=true,]
;
 node[shape=record];
Disjunction[label="{Disjunction| | }"]
 Disjunction->BinaryLogicalOperation[arrowhead=onormal,group=BinaryLogicalOperation,minlen=2,constraint=true,]
;
 node[shape=record];
Equivalence[label="{Equivalence| | }"]
 Equivalence->BinaryLogicalOperation[arrowhead=onormal,group=BinaryLogicalOperation,minlen=2,constraint=true,]
;
 node[shape=record];
ExactlynQuantification[label="{ExactlynQuantification| | }"]
 ExactlynQuantification->NonnegativeInteger[arrowhead=vee,arrowtail=none,headlabel="cardinality",group=NonnegativeInteger,minlen=2,constraint=false,]
 ExactlynQuantification->Quantification[arrowhead=onormal,group=Quantification,minlen=2,constraint=true,]
;
 node[shape=record];
ExactlyoneQuantification[label="{ExactlyoneQuantification| | }"]
 ExactlyoneQuantification->ExactlynQuantification[arrowhead=onormal,group=ExactlynQuantification,minlen=2,constraint=true,]
;
 node[shape=record];
ExclusiveDisjunction[label="{ExclusiveDisjunction| | }"]
 ExclusiveDisjunction->BinaryLogicalOperation[arrowhead=onormal,group=BinaryLogicalOperation,minlen=2,constraint=true,]
;
 node[shape=record];
ExistentialQuantification[label="{ExistentialQuantification| | }"]
 ExistentialQuantification->AtleastnQuantification[arrowhead=onormal,group=AtleastnQuantification,minlen=2,constraint=true,]
;
 node[shape=record];
ExplicitnessOfRepresentation[label="{ExplicitnessOfRepresentation| | }"]
 ExplicitnessOfRepresentation->CategorizationScheme[arrowhead=onormal,group=CategorizationScheme,minlen=2,constraint=true,]
;
 node[shape=record];
ExtensionalDefinition[label="{ExtensionalDefinition| | }"]
 ExtensionalDefinition->Definition[arrowhead=onormal,group=Definition,minlen=2,constraint=true,]
;
 node[shape=record];
Facet[label="{Facet| | }"]
 Facet->ContextualizedConcept[arrowhead=onormal,group=ContextualizedConcept,minlen=2,constraint=true,]
;
 node[shape=record];
Fact[label="{Fact| | }"]
 Fact->Proposition[arrowhead=onormal,group=Proposition,minlen=2,constraint=true,]
;
 node[shape=record];
FactModel[label="{FactModel| | }"]
 FactModel->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
FactSymbol[label="{FactSymbol| | }"]
 FactSymbol->Designation[arrowhead=onormal,group=Designation,minlen=2,constraint=true,]
;
 node[shape=record];
FactTypeHasFactInFactModel[label="{FactTypeHasFactInFactModel| | }"]
 FactTypeHasFactInFactModel->FactType[arrowhead=vee,arrowtail=none,headlabel="factType",group=FactType,minlen=2,constraint=false,]
 FactTypeHasFactInFactModel->Fact[arrowhead=vee,arrowtail=none,headlabel="fact",group=Fact,minlen=2,constraint=false,]
 FactTypeHasFactInFactModel->FactModel[arrowhead=vee,arrowtail=none,headlabel="factModel",group=FactModel,minlen=2,constraint=false,]
;
 node[shape=record];
FactTypeNominalization[label="{FactTypeNominalization| | }"]
 FactTypeNominalization->ProjectingFormulation[arrowhead=onormal,group=ProjectingFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
FactTypeRoleDesignation[label="{FactTypeRoleDesignation| | }"]
 FactTypeRoleDesignation->Designation[arrowhead=onormal,group=Designation,minlen=2,constraint=true,]
;
 node[shape=record];
FactTypeTemplating[label="{FactTypeTemplating| | }"]
 FactTypeTemplating->CategorizationScheme[arrowhead=onormal,group=CategorizationScheme,minlen=2,constraint=true,]
;
 node[shape=record];
FormalRepresentation[label="{FormalRepresentation| | }"]
 FormalRepresentation->Representation[arrowhead=onormal,group=Representation,minlen=2,constraint=true,]
;
 node[shape=record];
FundamentalConcept[label="{FundamentalConcept| | }"]
 FundamentalConcept->ObjectType[arrowhead=onormal,group=ObjectType,minlen=2,constraint=true,]
;
 node[shape=record];
Icon[label="{Icon| | }"]
 Icon->NonverbalDesignation[arrowhead=onormal,group=NonverbalDesignation,minlen=2,constraint=true,]
;
 node[shape=record];
NonverbalDesignation[label="{NonverbalDesignation| | }"]
 NonverbalDesignation->Designation[arrowhead=onormal,group=Designation,minlen=2,constraint=true,]
;
 node[shape=record];
Implication[label="{Implication| | }"]
 Implication->LogicalFormulation[arrowhead=vee,arrowtail=none,headlabel="consequent[*]",group=LogicalFormulation,minlen=2,constraint=false,]
 Implication->LogicalFormulation[arrowhead=vee,arrowtail=none,headlabel="antecedent[*]",group=LogicalFormulation,minlen=2,constraint=false,]
 Implication->BinaryLogicalOperation[arrowhead=onormal,group=BinaryLogicalOperation,minlen=2,constraint=true,]
;
 node[shape=record];
ImpossibilityStatement[label="{ImpossibilityStatement| | }"]
 ImpossibilityStatement->StructuralRuleStatement[arrowhead=onormal,group=StructuralRuleStatement,minlen=2,constraint=true,]
;
 node[shape=record];
StructuralRuleStatement[label="{StructuralRuleStatement| | }"]
 StructuralRuleStatement->RuleStatement[arrowhead=onormal,group=RuleStatement,minlen=2,constraint=true,]
;
 node[shape=record];
RuleStatement[label="{RuleStatement| | }"]
 RuleStatement->GuidanceStatement[arrowhead=onormal,group=GuidanceStatement,minlen=2,constraint=true,]
;
 node[shape=record];
IndividualConcept[label="{IndividualConcept| | }"]
 IndividualConcept->NounConcept[arrowhead=onormal,group=NounConcept,minlen=2,constraint=true,]
 IndividualConcept->BindableTarget[arrowhead=onormal,group=BindableTarget,minlen=2,constraint=true,]
;
 node[shape=record];
InformalRepresentation[label="{InformalRepresentation| | }"]
 InformalRepresentation->Representation[arrowhead=onormal,group=Representation,minlen=2,constraint=true,]
;
 node[shape=record];
InstantiationFormulation[label="{InstantiationFormulation| | }"]
 InstantiationFormulation->LogicalFormulation[arrowhead=onormal,group=LogicalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
IsfacetofFactType[label="{IsfacetofFactType| | }"]
 IsfacetofFactType->ContextualizationFactType[arrowhead=onormal,group=ContextualizationFactType,minlen=2,constraint=true,]
;
 node[shape=record];
IspropertyofFactType[label="{IspropertyofFactType| | }"]
 IspropertyofFactType->AssociativeFactType[arrowhead=onormal,group=AssociativeFactType,minlen=2,constraint=true,]
;
 node[shape=record];
IsroleofFactType[label="{IsroleofFactType| | }"]
 IsroleofFactType->FactType[arrowhead=onormal,group=FactType,minlen=2,constraint=true,]
;
 node[shape=record];
KindOfGuidanceStatement[label="{KindOfGuidanceStatement| | }"]
 KindOfGuidanceStatement->CategorizationScheme[arrowhead=onormal,group=CategorizationScheme,minlen=2,constraint=true,]
;
 node[shape=record];
Language[label="{Language| | }"]
 Language->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
LevelOfEnforcement[label="{LevelOfEnforcement| | }"]
 LevelOfEnforcement->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
LogicalFormulationKind[label="{LogicalFormulationKind| | }"]
 LogicalFormulationKind->ObjectType[arrowhead=onormal,group=ObjectType,minlen=2,constraint=true,]
;
 node[shape=record];
LogicalNegation[label="{LogicalNegation| | }"]
 LogicalNegation->LogicalOperation[arrowhead=onormal,group=LogicalOperation,minlen=2,constraint=true,]
;
 node[shape=record];
ModalFormulation[label="{ModalFormulation| | }"]
 ModalFormulation->LogicalFormulation[arrowhead=onormal,group=LogicalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
NandFormulation[label="{NandFormulation| | }"]
 NandFormulation->BinaryLogicalOperation[arrowhead=onormal,group=BinaryLogicalOperation,minlen=2,constraint=true,]
;
 node[shape=record];
NecessityFormulation[label="{NecessityFormulation| | }"]
 NecessityFormulation->ModalFormulation[arrowhead=onormal,group=ModalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
NecessityStatement[label="{NecessityStatement| | }"]
 NecessityStatement->StructuralRuleStatement[arrowhead=onormal,group=StructuralRuleStatement,minlen=2,constraint=true,]
;
 node[shape=record];
NonnecessityStatement[label="{NonnecessityStatement| | }"]
 NonnecessityStatement->StatementOfAdviceOfPossibility[arrowhead=onormal,group=StatementOfAdviceOfPossibility,minlen=2,constraint=true,]
;
 node[shape=record];
NonobligationStatement[label="{NonobligationStatement| | }"]
 NonobligationStatement->StatementOfAdviceOfPermission[arrowhead=onormal,group=StatementOfAdviceOfPermission,minlen=2,constraint=true,]
;
 node[shape=record];
StatementOfAdviceOfPermission[label="{StatementOfAdviceOfPermission| | }"]
 StatementOfAdviceOfPermission->AdviceStatement[arrowhead=onormal,group=AdviceStatement,minlen=2,constraint=true,]
;
 node[shape=record];
NorFormulation[label="{NorFormulation| | }"]
 NorFormulation->BinaryLogicalOperation[arrowhead=onormal,group=BinaryLogicalOperation,minlen=2,constraint=true,]
;
 node[shape=record];
Note[label="{Note| | }"]
 Note->Representation[arrowhead=onormal,group=Representation,minlen=2,constraint=true,]
;
 node[shape=record];
NounConceptNominalization[label="{NounConceptNominalization| | }"]
 NounConceptNominalization->ProjectingFormulation[arrowhead=onormal,group=ProjectingFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
NounForm[label="{NounForm| | }"]
 NounForm->FactTypeForm[arrowhead=onormal,group=FactTypeForm,minlen=2,constraint=true,]
;
 node[shape=record];
NumericRangeQuantification[label="{NumericRangeQuantification| | }"]
 NumericRangeQuantification->NonnegativeInteger[arrowhead=vee,arrowtail=none,headlabel="maximumCardinality",group=NonnegativeInteger,minlen=2,constraint=false,]
 NumericRangeQuantification->NonnegativeInteger[arrowhead=vee,arrowtail=none,headlabel="minimumCardinality",group=NonnegativeInteger,minlen=2,constraint=false,]
 NumericRangeQuantification->Quantification[arrowhead=onormal,group=Quantification,minlen=2,constraint=true,]
;
 node[shape=record];
Objectification[label="{Objectification| | }"]
 Objectification->LogicalFormulation[arrowhead=onormal,group=LogicalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
ObligationFormulation[label="{ObligationFormulation| | }"]
 ObligationFormulation->ModalFormulation[arrowhead=onormal,group=ModalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
ObligationStatement[label="{ObligationStatement| | }"]
 ObligationStatement->OperativeBusinessRuleStatement[arrowhead=onormal,group=OperativeBusinessRuleStatement,minlen=2,constraint=true,]
;
 node[shape=record];
OperativeBusinessRuleStatement[label="{OperativeBusinessRuleStatement| | }"]
 OperativeBusinessRuleStatement->RuleStatement[arrowhead=onormal,group=RuleStatement,minlen=2,constraint=true,]
;
 node[shape=record];
OperativeBusinessRule[label="{OperativeBusinessRule| | }"]
 OperativeBusinessRule->LevelOfEnforcement[arrowhead=vee,arrowtail=none,headlabel="levelOfEnforcement[*]",group=LevelOfEnforcement,minlen=2,constraint=false,]
 OperativeBusinessRule->ElementOfGovernance[arrowhead=onormal,group=ElementOfGovernance,minlen=2,constraint=true,]
 OperativeBusinessRule->BusinessRule[arrowhead=onormal,group=BusinessRule,minlen=2,constraint=true,]
;
 node[shape=record];
OptionalityStatement[label="{OptionalityStatement| | }"]
 OptionalityStatement->StatementOfAdviceOfPermission[arrowhead=onormal,group=StatementOfAdviceOfPermission,minlen=2,constraint=true,]
;
 node[shape=record];
OwnedDefinition[label="{OwnedDefinition| | }"]
 OwnedDefinition->Definition[arrowhead=onormal,group=Definition,minlen=2,constraint=true,]
;
 node[shape=record];
PartitiveFactType[label="{PartitiveFactType| | }"]
 PartitiveFactType->BinaryFactType[arrowhead=onormal,group=BinaryFactType,minlen=2,constraint=true,]
;
 node[shape=record];
PermissibilityFormulation[label="{PermissibilityFormulation| | }"]
 PermissibilityFormulation->ModalFormulation[arrowhead=onormal,group=ModalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
PermissionStatement[label="{PermissionStatement| | }"]
 PermissionStatement->StatementOfAdviceOfPermission[arrowhead=onormal,group=StatementOfAdviceOfPermission,minlen=2,constraint=true,]
;
 node[shape=record];
PossibilityFormulation[label="{PossibilityFormulation| | }"]
 PossibilityFormulation->ModalFormulation[arrowhead=onormal,group=ModalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
PossibilityStatement[label="{PossibilityStatement| | }"]
 PossibilityStatement->StatementOfAdviceOfPossibility[arrowhead=onormal,group=StatementOfAdviceOfPossibility,minlen=2,constraint=true,]
;
 node[shape=record];
PreferredDesignation[label="{PreferredDesignation| | }"]
 PreferredDesignation->Designation[arrowhead=onormal,group=Designation,minlen=2,constraint=true,]
;
 node[shape=record];
ProhibitedDesignation[label="{ProhibitedDesignation| | }"]
 ProhibitedDesignation->Designation[arrowhead=onormal,group=Designation,minlen=2,constraint=true,]
;
 node[shape=record];
ProhibitionStatement[label="{ProhibitionStatement| | }"]
 ProhibitionStatement->OperativeBusinessRuleStatement[arrowhead=onormal,group=OperativeBusinessRuleStatement,minlen=2,constraint=true,]
;
 node[shape=record];
PropositionNominalization[label="{PropositionNominalization| | }"]
 PropositionNominalization->LogicalFormulation[arrowhead=onormal,group=LogicalFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
Question[label="{Question| | }"]
 Question->Meaning[arrowhead=onormal,group=Meaning,minlen=2,constraint=true,]
;
 node[shape=record];
QuestionNominalization[label="{QuestionNominalization| | }"]
 QuestionNominalization->ProjectingFormulation[arrowhead=onormal,group=ProjectingFormulation,minlen=2,constraint=true,]
;
 node[shape=record];
RealworldNumericalCorrespondence[label="{RealworldNumericalCorrespondence| | }"]
 RealworldNumericalCorrespondence->CategorizationScheme[arrowhead=onormal,group=CategorizationScheme,minlen=2,constraint=true,]
;
 node[shape=record];
Reference[label="{Reference| | }"]
 Reference->Representation[arrowhead=onormal,group=Representation,minlen=2,constraint=true,]
;
 node[shape=record];
RepresentationFormality[label="{RepresentationFormality| | }"]
 RepresentationFormality->Segmentation[arrowhead=onormal,group=Segmentation,minlen=2,constraint=true,]
;
 node[shape=record];
Res[label="{Res| | }"]
 Res->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
RestrictedPermissionStatement[label="{RestrictedPermissionStatement| | }"]
 RestrictedPermissionStatement->OperativeBusinessRuleStatement[arrowhead=onormal,group=OperativeBusinessRuleStatement,minlen=2,constraint=true,]
;
 node[shape=record];
RestrictedPossibilityStatement[label="{RestrictedPossibilityStatement| | }"]
 RestrictedPossibilityStatement->StructuralRuleStatement[arrowhead=onormal,group=StructuralRuleStatement,minlen=2,constraint=true,]
;
 node[shape=record];
Rulebook[label="{Rulebook| | }"]
 Rulebook->Set[arrowhead=onormal,group=Set,minlen=2,constraint=true,]
;
 node[shape=record];
SemanticCommunity[label="{SemanticCommunity| | }"]
 SemanticCommunity->SpeechCommunity[arrowhead=vee,arrowtail=none,headlabel="speechCommunity[*]",group=SpeechCommunity,minlen=2,constraint=false,]
 SemanticCommunity->Community[arrowhead=onormal,group=Community,minlen=2,constraint=true,]
;
 node[shape=record];
SpeechCommunity[label="{SpeechCommunity| | }"]
 SpeechCommunity->Community[arrowhead=onormal,group=Community,minlen=2,constraint=true,]
;
 node[shape=record];
SententialForm[label="{SententialForm| | }"]
 SententialForm->FactTypeForm[arrowhead=onormal,group=FactTypeForm,minlen=2,constraint=true,]
;
 node[shape=record];
SetProjection[label="{SetProjection| | }"]
 SetProjection->Projection[arrowhead=onormal,group=Projection,minlen=2,constraint=true,]
;
 node[shape=record];
Situation[label="{Situation| | }"]
 Situation->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
SituationalRole[label="{SituationalRole| | }"]
 SituationalRole->ObjectType[arrowhead=onormal,group=ObjectType,minlen=2,constraint=true,]
 SituationalRole->Role[arrowhead=onormal,group=Role,minlen=2,constraint=true,]
;
 node[shape=record];
SpeechCommunityAdoptsAdoptedDefinitionCitingReference[label="{SpeechCommunityAdoptsAdoptedDefinitionCitingReference| | }"]
 SpeechCommunityAdoptsAdoptedDefinitionCitingReference->SpeechCommunity[arrowhead=vee,arrowtail=none,headlabel="speechCommunity",group=SpeechCommunity,minlen=2,constraint=false,]
 SpeechCommunityAdoptsAdoptedDefinitionCitingReference->AdoptedDefinition[arrowhead=vee,arrowtail=none,headlabel="adoptedDefinition",group=AdoptedDefinition,minlen=2,constraint=false,]
 SpeechCommunityAdoptsAdoptedDefinitionCitingReference->Reference[arrowhead=vee,arrowtail=none,headlabel="reference",group=Reference,minlen=2,constraint=false,]
;
 node[shape=record];
StateOfAffairsInvolvesThingInRole[label="{StateOfAffairsInvolvesThingInRole| | }"]
 StateOfAffairsInvolvesThingInRole->StateOfAffairs[arrowhead=vee,arrowtail=none,headlabel="stateOfAffairs",group=StateOfAffairs,minlen=2,constraint=false,]
 StateOfAffairsInvolvesThingInRole->Thing[arrowhead=vee,arrowtail=none,headlabel="thing",group=Thing,minlen=2,constraint=false,]
 StateOfAffairsInvolvesThingInRole->Role[arrowhead=vee,arrowtail=none,headlabel="role",group=Role,minlen=2,constraint=false,]
;
 node[shape=record];
StructuralBusinessRule[label="{StructuralBusinessRule| | }"]
 StructuralBusinessRule->BusinessRule[arrowhead=onormal,group=BusinessRule,minlen=2,constraint=true,]
 StructuralBusinessRule->StructuralRule[arrowhead=onormal,group=StructuralRule,minlen=2,constraint=true,]
;
 node[shape=record];
StructuralRule[label="{StructuralRule| | }"]
 StructuralRule->Rule[arrowhead=onormal,group=Rule,minlen=2,constraint=true,]
;
 node[shape=record];
SubjectField[label="{SubjectField| | }"]
 SubjectField->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
Term[label="{Term| | }"]
 Term->Designation[arrowhead=onormal,group=Designation,minlen=2,constraint=true,]
;
 node[shape=record];
TerminologicalDictionary[label="{TerminologicalDictionary| | }"]
 TerminologicalDictionary->Uri[arrowhead=vee,arrowtail=diamond,headlabel="uri[*]",group=Uri,minlen=2,constraint=true,]
 TerminologicalDictionary->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
ThingInContext[label="{ThingInContext| | }"]
 ThingInContext->Segmentation[arrowhead=onormal,group=Segmentation,minlen=2,constraint=true,]
;
 node[shape=record];
UniversalQuantification[label="{UniversalQuantification| | }"]
 UniversalQuantification->Quantification[arrowhead=onormal,group=Quantification,minlen=2,constraint=true,]
;
 node[shape=record];
Viewpoint[label="{Viewpoint| | }"]
 Viewpoint->Thing[arrowhead=onormal,group=Thing,minlen=2,constraint=true,]
;
 node[shape=record];
VocabularyNamespace[label="{VocabularyNamespace| | }"]
 VocabularyNamespace->Namespace[arrowhead=onormal,group=Namespace,minlen=2,constraint=true,]
;
 node[shape=record];
WhetherornotFormulation[label="{WhetherornotFormulation| | }"]
 WhetherornotFormulation->LogicalFormulation[arrowhead=vee,arrowtail=none,headlabel="inconsequent[*]",group=LogicalFormulation,minlen=2,constraint=false,]
 WhetherornotFormulation->LogicalFormulation[arrowhead=vee,arrowtail=none,headlabel="consequent[*]",group=LogicalFormulation,minlen=2,constraint=false,]
 WhetherornotFormulation->BinaryLogicalOperation[arrowhead=onormal,group=BinaryLogicalOperation,minlen=2,constraint=true,]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
integer[label="{&#171;DataType&#187;\ninteger|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;
 node[shape=record];
Double[label="{&#171;DataType&#187;\nDouble|}"]
;

}
}