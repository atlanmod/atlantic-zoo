digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;
 node[shape=record];
Double[label="{&#171;DataType&#187;\nDouble|}"]
;

} subgraph "cluster_DOT"{
labelloc=t
color=black
label=DOT
 node[shape=record];
Label[label="{/Label/| | }"]
 Label->GraphElement[arrowhead=diamond,arrowtail=none,headlabel="element",taillabel="label[0-1]",group=GraphElement,minlen=2,constraint=true,]
;
 node[shape=record];
SimpleLabel[label="{SimpleLabel|content : String| }"]
 SimpleLabel->Label[arrowhead=onormal,group=Label,minlen=2,constraint=true,]
;
 node[shape=record];
ComplexLabel[label="{ComplexLabel| | }"]
 ComplexLabel->Label[arrowhead=onormal,group=Label,minlen=2,constraint=true,]
;
 node[shape=record];
Compartment[label="{/Compartment/| | }"]
 Compartment->ComplexLabel[arrowhead=diamond,arrowtail=none,headlabel="complexLabel",taillabel="compartments[1-*]{ordered}",group=ComplexLabel,minlen=2,constraint=true,]
 Compartment->Compartment[arrowhead=vee,arrowtail=diamond,headlabel="compartments[0-1]",group=Compartment,minlen=2,constraint=true,]
;
 node[shape=record];
VerticalCompartment[label="{VerticalCompartment| | }"]
 VerticalCompartment->Compartment[arrowhead=onormal,group=Compartment,minlen=2,constraint=true,]
;
 node[shape=record];
HorizontalCompartment[label="{HorizontalCompartment| | }"]
 HorizontalCompartment->Compartment[arrowhead=onormal,group=Compartment,minlen=2,constraint=true,]
;
 node[shape=record];
SimpleCompartment[label="{SimpleCompartment|content : String| }"]
 SimpleCompartment->Compartment[arrowhead=onormal,group=Compartment,minlen=2,constraint=true,]
;
 node[shape=record];
Anchor[label="{Anchor|name : String| }"]
 Anchor->Compartment[arrowhead=none,arrowtail=none,headlabel="source[0-1]",taillabel="anchor[0-1]",group=Compartment,minlen=2,constraint=false,]
;
 node[shape=record];
GraphElement[label="{/GraphElement/|name : String\nstyle[0-1] : String\ncolor[0-1] : String| }"]
;
 node[shape=record];
Graph[label="{Graph|type : String\nrankDir[0-1] : String\nlabeljust[0-1] : String\nlabelloc[0-1] : String\nconcentrate[0-1] : Boolean\nboundingBox[0-1] : String\ncompound[0-1] : Boolean\nnodeSeparation[0-1] : Double\nordering[0-1] : String\nsize[0-1] : String\nratio[0-1] : String\ncenter[0-1] : Boolean| }"]
 Graph->GraphElement[arrowhead=onormal,group=GraphElement,minlen=2,constraint=true,]
;
 node[shape=record];
Layer[label="{Layer|layerSeparator[0-1] : String| }"]
 Layer->Nodelike[arrowhead=none,arrowtail=none,headlabel="nodes[*]",taillabel="layers[*]",group=Nodelike,minlen=2,constraint=false,]
 Layer->Arc[arrowhead=none,arrowtail=none,headlabel="arcs[*]",taillabel="layers[*]",group=Arc,minlen=2,constraint=false,]
 Layer->Graph[arrowhead=diamond,arrowtail=none,headlabel="graph",taillabel="layers[*]",group=Graph,minlen=2,constraint=true,]
 Layer->GraphElement[arrowhead=onormal,group=GraphElement,minlen=2,constraint=true,]
;
 node[shape=record];
Nodelike[label="{/Nodelike/| | }"]
 Nodelike->SubGraph[arrowhead=diamond,arrowtail=none,headlabel="owner[0-1]",taillabel="nodes[*]{ordered}",group=SubGraph,minlen=2,constraint=true,]
 Nodelike->Arc[arrowhead=none,arrowtail=none,headlabel="refers[*]",taillabel="fromNode",group=Arc,minlen=2,constraint=false,]
 Nodelike->Graph[arrowhead=diamond,arrowtail=none,headlabel="graph[0-1]",taillabel="nodes[*]{ordered}",group=Graph,minlen=2,constraint=true,]
 Nodelike->GraphElement[arrowhead=onormal,group=GraphElement,minlen=2,constraint=true,]
;
 node[shape=record];
SubGraph[label="{SubGraph|labelloc[0-1] : String| }"]
 SubGraph->Nodelike[arrowhead=onormal,group=Nodelike,minlen=2,constraint=true,]
;
 node[shape=record];
Node[label="{Node|fixedSize[0-1] : Boolean\nfontname[0-1] : String\nfontsize[0-1] : Integer\nheight[0-1] : Integer\nwidth[0-1] : Integer| }"]
 Node->NodeShape[arrowhead=vee,arrowtail=diamond,headlabel="shape[0-1]",group=NodeShape,minlen=2,constraint=true,]
 Node->Nodelike[arrowhead=onormal,group=Nodelike,minlen=2,constraint=true,]
;
 node[shape=record];
Arc[label="{/Arc/|constraint[0-1] : Boolean\ngroup[0-1] : String\nminlen[0-1] : Integer\nsameHead[0-1] : String\nsameTail[0-1] : String\ndecorate[0-1] : Boolean| }"]
 Arc->Nodelike[arrowhead=none,arrowtail=none,headlabel="toNode",taillabel="referredBy[*]",group=Nodelike,minlen=2,constraint=false,]
 Arc->Nodelike[arrowhead=vee,arrowtail=none,headlabel="lhead[0-1]",group=Nodelike,minlen=2,constraint=false,]
 Arc->Nodelike[arrowhead=vee,arrowtail=none,headlabel="ltail[0-1]",group=Nodelike,minlen=2,constraint=false,]
 Arc->GraphElement[arrowhead=onormal,group=GraphElement,minlen=2,constraint=true,]
;
 node[shape=record];
DirectedArc[label="{DirectedArc|tail_lp[0-1] : Double\nhead_lp[0-1] : Double| }"]
 DirectedArc->ArrowShape[arrowhead=vee,arrowtail=diamond,headlabel="arrowHead[0-1]",group=ArrowShape,minlen=2,constraint=true,]
 DirectedArc->Label[arrowhead=vee,arrowtail=none,headlabel="headlabel[0-1]",group=Label,minlen=2,constraint=false,]
 DirectedArc->Label[arrowhead=vee,arrowtail=none,headlabel="taillabel[0-1]",group=Label,minlen=2,constraint=false,]
 DirectedArc->ArrowShape[arrowhead=vee,arrowtail=diamond,headlabel="arrowTail[0-1]",group=ArrowShape,minlen=2,constraint=true,]
 DirectedArc->Arc[arrowhead=onormal,group=Arc,minlen=2,constraint=true,]
;
 node[shape=record];
UndirectedArc[label="{UndirectedArc| | }"]
 UndirectedArc->Arc[arrowhead=onormal,group=Arc,minlen=2,constraint=true,]
;
 node[shape=record];
Shape[label="{/Shape/|width : Integer\nheight : Integer\nperipheries : Integer| }"]
 Shape->GraphElement[arrowhead=onormal,group=GraphElement,minlen=2,constraint=true,]
;
 node[shape=record];
NodeShape[label="{/NodeShape/| | }"]
 NodeShape->Shape[arrowhead=onormal,group=Shape,minlen=2,constraint=true,]
;
 node[shape=record];
SimpleNodeShape[label="{SimpleNodeShape| | }"]
 SimpleNodeShape->NodeShape[arrowhead=onormal,group=NodeShape,minlen=2,constraint=true,]
;
 node[shape=record];
PointNodeShape[label="{PointNodeShape| | }"]
 PointNodeShape->NodeShape[arrowhead=onormal,group=NodeShape,minlen=2,constraint=true,]
;
 node[shape=record];
ComplexNodeShape[label="{/ComplexNodeShape/| | }"]
 ComplexNodeShape->NodeShape[arrowhead=onormal,group=NodeShape,minlen=2,constraint=true,]
;
 node[shape=record];
PolygonNodeShape[label="{PolygonNodeShape|sides : Integer\nskew : Integer\ndistortion : Integer\nisRegular : Boolean\norientation : Integer| }"]
 PolygonNodeShape->ComplexNodeShape[arrowhead=onormal,group=ComplexNodeShape,minlen=2,constraint=true,]
;
 node[shape=record];
MNodeShape[label="{MNodeShape| | }"]
 MNodeShape->Label[arrowhead=vee,arrowtail=diamond,headlabel="toplabel[0-1]",group=Label,minlen=2,constraint=true,]
 MNodeShape->Label[arrowhead=vee,arrowtail=diamond,headlabel="bottomlabel[0-1]",group=Label,minlen=2,constraint=true,]
 MNodeShape->ComplexNodeShape[arrowhead=onormal,group=ComplexNodeShape,minlen=2,constraint=true,]
;
 node[shape=record];
RecordNodeShape[label="{RecordNodeShape| | }"]
 RecordNodeShape->ComplexNodeShape[arrowhead=onormal,group=ComplexNodeShape,minlen=2,constraint=true,]
;
 node[shape=record];
ArrowShape[label="{ArrowShape|clipping : String\nisPlain : Boolean\nsize : Integer| }"]
 ArrowShape->Shape[arrowhead=onormal,group=Shape,minlen=2,constraint=true,]
;

}
}