digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_OCLExpression"{
labelloc=t
color=black
label=OCLExpression
 node[shape=record];
PreCondition[label="{PreCondition| | }"]
 PreCondition->Constraint[arrowhead=onormal,group=Constraint,minlen=2,constraint=true,]
;
 node[shape=record];
PortCondition[label="{PortCondition| | }"]
 PortCondition->Constraint[arrowhead=onormal,group=Constraint,minlen=2,constraint=true,]
;
 node[shape=record];
Invariant[label="{Invariant| | }"]
 Invariant->Constraint[arrowhead=onormal,group=Constraint,minlen=2,constraint=true,]
;
 node[shape=record];
Guard[label="{Guard| | }"]
 Guard->Constraint[arrowhead=onormal,group=Constraint,minlen=2,constraint=true,]
;
 subgraph "cluster_Core"{
labelloc=t
color=black
label=Core
 node[shape=record];
ModelElement[label="{/ModelElement/| | }"]
 ModelElement->Constraint[arrowhead=none,arrowtail=none,headlabel="constraint[1-*]{ordered}",taillabel="constrainedElement[1-*]{ordered}",group=Constraint,minlen=2,constraint=false,]
;
 node[shape=record];
Constraint[label="{Constraint| | }"]
 Constraint->BooleanExpression[arrowhead=diamond,arrowtail=none,headlabel="body",taillabel="constraint[0-1]",group=BooleanExpression,minlen=2,constraint=true,]
 Constraint->ModelElement[arrowhead=onormal,group=ModelElement,minlen=2,constraint=true,]
;

} subgraph "cluster_DataTypes"{
labelloc=t
color=black
label=DataTypes
 node[shape=record];
Expression[label="{Expression| | }"]
;
 node[shape=record];
BooleanExpression[label="{BooleanExpression| | }"]
 BooleanExpression->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;

} subgraph "cluster_OCl"{
labelloc=t
color=black
label=OCl
 node[shape=record];
OCLExpression[label="{/OCLExpression/| | }"]
 OCLExpression->Expression[arrowhead=none,arrowtail=none,headlabel="owner[0-1]",taillabel="body[0-1]",group=Expression,minlen=2,constraint=false,]
;

}
} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;

}
}