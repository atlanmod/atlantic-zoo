digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_SBVRvoc"{
labelloc=t
color=black
label=SBVRvoc
 node[shape=record];
LocatedElement[label="{/LocatedElement/|location[0-1] : String\ncommentsBefore[*] : String\ncommentsAfter[*] : String| }"]
;
 node[shape=record];
Root[label="{Root| | }"]
 Root->VocabularyEntry[arrowhead=vee,arrowtail=diamond,headlabel="entries[*]{ordered}",group=VocabularyEntry,minlen=2,constraint=true,]
 Root->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
VocabularyEntry[label="{VocabularyEntry| | }"]
 VocabularyEntry->PrimaryRepresentation[arrowhead=vee,arrowtail=diamond,headlabel="primaryRep",group=PrimaryRepresentation,minlen=2,constraint=true,]
 VocabularyEntry->Caption[arrowhead=vee,arrowtail=diamond,headlabel="caption[*]",group=Caption,minlen=2,constraint=true,]
 VocabularyEntry->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Caption[label="{/Caption/| | }"]
 Caption->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
DefCaption[label="{DefCaption| | }"]
 DefCaption->ConceptDefinition[arrowhead=vee,arrowtail=diamond,headlabel="definition",group=ConceptDefinition,minlen=2,constraint=true,]
 DefCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
DescCaption[label="{DescCaption| | }"]
 DescCaption->Note[arrowhead=vee,arrowtail=diamond,headlabel="description",group=Note,minlen=2,constraint=true,]
 DescCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
SrcCaption[label="{SrcCaption| | }"]
 SrcCaption->ConceptSource[arrowhead=vee,arrowtail=diamond,headlabel="source",group=ConceptSource,minlen=2,constraint=true,]
 SrcCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
DBCaption[label="{DBCaption| | }"]
 DBCaption->ConceptSource[arrowhead=vee,arrowtail=diamond,headlabel="dictionaryBasis",group=ConceptSource,minlen=2,constraint=true,]
 DBCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
GenCCaption[label="{GenCCaption| | }"]
 GenCCaption->PrimaryRepresentation[arrowhead=vee,arrowtail=diamond,headlabel="generalConcept",group=PrimaryRepresentation,minlen=2,constraint=true,]
 GenCCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
CTypCaption[label="{CTypCaption| | }"]
 CTypCaption->PrimaryRepresentation[arrowhead=vee,arrowtail=diamond,headlabel="conceptType[*]",group=PrimaryRepresentation,minlen=2,constraint=true,]
 CTypCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
Necessity[label="{Necessity| | }"]
 Necessity->SBVRExpression[arrowhead=vee,arrowtail=diamond,headlabel="exp",group=SBVRExpression,minlen=2,constraint=true,]
 Necessity->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
Possibility[label="{Possibility| | }"]
 Possibility->SBVRExpression[arrowhead=vee,arrowtail=diamond,headlabel="exp",group=SBVRExpression,minlen=2,constraint=true,]
 Possibility->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
RefSCaption[label="{RefSCaption| | }"]
 RefSCaption->PrimaryRepresentation[arrowhead=vee,arrowtail=diamond,headlabel="referenceScheme",group=PrimaryRepresentation,minlen=2,constraint=true,]
 RefSCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
NoteCaption[label="{NoteCaption| | }"]
 NoteCaption->Note[arrowhead=vee,arrowtail=diamond,headlabel="note",group=Note,minlen=2,constraint=true,]
 NoteCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
ExCaption[label="{ExCaption| | }"]
 ExCaption->SBVRExpression[arrowhead=vee,arrowtail=diamond,headlabel="example[*]{ordered}",group=SBVRExpression,minlen=2,constraint=true,]
 ExCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
SynCaption[label="{SynCaption| | }"]
 SynCaption->PrimaryRepresentation[arrowhead=vee,arrowtail=diamond,headlabel="synonym[*]{ordered}",group=PrimaryRepresentation,minlen=2,constraint=true,]
 SynCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
SynFCaption[label="{SynFCaption| | }"]
 SynFCaption->SBVRExpression[arrowhead=vee,arrowtail=diamond,headlabel="synonymousForm[*]",group=SBVRExpression,minlen=2,constraint=true,]
 SynFCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
SeeCaption[label="{SeeCaption| | }"]
 SeeCaption->PrimaryRepresentation[arrowhead=vee,arrowtail=diamond,headlabel="see[0-1]",group=PrimaryRepresentation,minlen=2,constraint=true,]
 SeeCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
SFCaption[label="{SFCaption| | }"]
 SFCaption->PrimaryRepresentation[arrowhead=vee,arrowtail=diamond,headlabel="subjectField[0-1]",group=PrimaryRepresentation,minlen=2,constraint=true,]
 SFCaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
NSURICaption[label="{NSURICaption| | }"]
 NSURICaption->NameSpaceURI[arrowhead=vee,arrowtail=diamond,headlabel="namespaceURI[0-1]",group=NameSpaceURI,minlen=2,constraint=true,]
 NSURICaption->Caption[arrowhead=onormal,group=Caption,minlen=2,constraint=true,]
;
 node[shape=record];
PrimaryRepresentation[label="{/PrimaryRepresentation/| | }"]
 PrimaryRepresentation->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
NotFactTypeRepresentation[label="{/NotFactTypeRepresentation/| | }"]
 NotFactTypeRepresentation->PrimaryRepresentation[arrowhead=onormal,group=PrimaryRepresentation,minlen=2,constraint=true,]
;
 node[shape=record];
TermRepresentation[label="{TermRepresentation| | }"]
 TermRepresentation->StringWord[arrowhead=vee,arrowtail=diamond,headlabel="term[1-*]{ordered}",group=StringWord,minlen=2,constraint=true,]
 TermRepresentation->NotFactTypeRepresentation[arrowhead=onormal,group=NotFactTypeRepresentation,minlen=2,constraint=true,]
;
 node[shape=record];
NameRepresentation[label="{NameRepresentation|hasThe : Boolean| }"]
 NameRepresentation->NameWord[arrowhead=vee,arrowtail=diamond,headlabel="name[1-*]{ordered}",group=NameWord,minlen=2,constraint=true,]
 NameRepresentation->NotFactTypeRepresentation[arrowhead=onormal,group=NotFactTypeRepresentation,minlen=2,constraint=true,]
;
 node[shape=record];
FactTypeFormRepresentation[label="{FactTypeFormRepresentation|verbExp[1-*] : Verb| }"]
 FactTypeFormRepresentation->NotFactTypeRepresentation[arrowhead=vee,arrowtail=diamond,headlabel="primaryRep1",group=NotFactTypeRepresentation,minlen=2,constraint=true,]
 FactTypeFormRepresentation->NotFactTypeRepresentation[arrowhead=vee,arrowtail=diamond,headlabel="primaryRep2",group=NotFactTypeRepresentation,minlen=2,constraint=true,]
 FactTypeFormRepresentation->PrimaryRepresentation[arrowhead=onormal,group=PrimaryRepresentation,minlen=2,constraint=true,]
;
 node[shape=record];
ConceptDefinition[label="{ConceptDefinition| | }"]
 ConceptDefinition->Concept[arrowhead=vee,arrowtail=diamond,headlabel="exp",group=Concept,minlen=2,constraint=true,]
 ConceptDefinition->ConjConcept[arrowhead=vee,arrowtail=diamond,headlabel="conjexp[*]",group=ConjConcept,minlen=2,constraint=true,]
 ConceptDefinition->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
ConceptSource[label="{ConceptSource| | }"]
 ConceptSource->Word[arrowhead=vee,arrowtail=diamond,headlabel="source[1-*]{ordered}",group=Word,minlen=2,constraint=true,]
 ConceptSource->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Note[label="{Note| | }"]
 Note->Sentence[arrowhead=vee,arrowtail=diamond,headlabel="sentences[1-*]{ordered}",group=Sentence,minlen=2,constraint=true,]
 Note->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Sentence[label="{Sentence| | }"]
 Sentence->Word[arrowhead=vee,arrowtail=diamond,headlabel="words[1-*]{ordered}",group=Word,minlen=2,constraint=true,]
 Sentence->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
NameSpaceURI[label="{NameSpaceURI| | }"]
 NameSpaceURI->Word[arrowhead=vee,arrowtail=diamond,headlabel="URI[1-*]{ordered}",group=Word,minlen=2,constraint=true,]
 NameSpaceURI->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Word[label="{/Word/|val : String| }"]
 Word->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
StringWord[label="{StringWord| | }"]
 StringWord->Word[arrowhead=onormal,group=Word,minlen=2,constraint=true,]
;
 node[shape=record];
QuotedStringWord[label="{QuotedStringWord| | }"]
 QuotedStringWord->Word[arrowhead=onormal,group=Word,minlen=2,constraint=true,]
;
 node[shape=record];
NameWord[label="{NameWord| | }"]
 NameWord->Word[arrowhead=onormal,group=Word,minlen=2,constraint=true,]
;
 node[shape=record];
SBVRExpression[label="{SBVRExpression|hasPoint : Boolean| }"]
 SBVRExpression->SimpleSBVRProp[arrowhead=vee,arrowtail=diamond,headlabel="firstProposition",group=SimpleSBVRProp,minlen=2,constraint=true,]
 SBVRExpression->SBVRPropWithKW[arrowhead=vee,arrowtail=diamond,headlabel="nextProposition[*]",group=SBVRPropWithKW,minlen=2,constraint=true,]
 SBVRExpression->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
SBVRPropWithKW[label="{SBVRPropWithKW|conjonction : ConjonctionnalKeyWord\nendConj : EndOperator| }"]
 SBVRPropWithKW->SimpleSBVRProp[arrowhead=vee,arrowtail=diamond,headlabel="proposition",group=SimpleSBVRProp,minlen=2,constraint=true,]
 SBVRPropWithKW->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
ModalForm[label="{ModalForm|modal : ModalVerb\nisNeg : Boolean| }"]
 ModalForm->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
SimpleSBVRProp[label="{SimpleSBVRProp|verbs[1-*] : Verb| }"]
 SimpleSBVRProp->ModalBegin[arrowhead=vee,arrowtail=diamond,headlabel="modal[0-1]",group=ModalBegin,minlen=2,constraint=true,]
 SimpleSBVRProp->Concept[arrowhead=vee,arrowtail=diamond,headlabel="concept1",group=Concept,minlen=2,constraint=true,]
 SimpleSBVRProp->ModalForm[arrowhead=vee,arrowtail=diamond,headlabel="modalVerb[0-1]",group=ModalForm,minlen=2,constraint=true,]
 SimpleSBVRProp->Concept[arrowhead=vee,arrowtail=diamond,headlabel="concept2",group=Concept,minlen=2,constraint=true,]
 SimpleSBVRProp->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
SubSBVRProp[label="{SubSBVRProp|join : Join\nmodalVerb[0-1] : ModalVerb\nverbs[1-*] : Verb| }"]
 SubSBVRProp->Concept[arrowhead=vee,arrowtail=diamond,headlabel="concept2",group=Concept,minlen=2,constraint=true,]
 SubSBVRProp->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
LinkSBVRConcept[label="{LinkSBVRConcept|link : Link| }"]
 LinkSBVRConcept->Concept[arrowhead=vee,arrowtail=diamond,headlabel="concept",group=Concept,minlen=2,constraint=true,]
 LinkSBVRConcept->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
ConjConcept[label="{ConjConcept|conjonction : ConjonctionnalKeyWord| }"]
 ConjConcept->Concept[arrowhead=vee,arrowtail=diamond,headlabel="concept",group=Concept,minlen=2,constraint=true,]
 ConjConcept->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Concept[label="{/Concept/| | }"]
 Concept->SubSBVRProp[arrowhead=vee,arrowtail=diamond,headlabel="subProp[0-1]",group=SubSBVRProp,minlen=2,constraint=true,]
 Concept->LinkSBVRConcept[arrowhead=vee,arrowtail=diamond,headlabel="linkedConcept[0-1]",group=LinkSBVRConcept,minlen=2,constraint=true,]
 Concept->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
NameConcept[label="{NameConcept|the[0-1] : Qualif| }"]
 NameConcept->NameWord[arrowhead=vee,arrowtail=diamond,headlabel="name[1-*]",group=NameWord,minlen=2,constraint=true,]
 NameConcept->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
ObjectConcept[label="{ObjectConcept| | }"]
 ObjectConcept->NounConcept[arrowhead=vee,arrowtail=diamond,headlabel="operatoredConcept",group=NounConcept,minlen=2,constraint=true,]
 ObjectConcept->Qualification[arrowhead=vee,arrowtail=diamond,headlabel="qualify[0-1]",group=Qualification,minlen=2,constraint=true,]
 ObjectConcept->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
StringConcept[label="{StringConcept| | }"]
 StringConcept->QuotedStringWord[arrowhead=vee,arrowtail=diamond,headlabel="stringWord[1-*]",group=QuotedStringWord,minlen=2,constraint=true,]
 StringConcept->Concept[arrowhead=onormal,group=Concept,minlen=2,constraint=true,]
;
 node[shape=record];
NounConcept[label="{NounConcept| | }"]
 NounConcept->Qualifier[arrowhead=vee,arrowtail=diamond,headlabel="qualif[0-1]",group=Qualifier,minlen=2,constraint=true,]
 NounConcept->StringWord[arrowhead=vee,arrowtail=diamond,headlabel="noun[1-*]",group=StringWord,minlen=2,constraint=true,]
 NounConcept->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Qualification[label="{Qualification| | }"]
 Qualification->GeneralConcept[arrowhead=vee,arrowtail=diamond,headlabel="generalConcept[1-*]",group=GeneralConcept,minlen=2,constraint=true,]
 Qualification->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
GeneralConcept[label="{/GeneralConcept/| | }"]
 GeneralConcept->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
NameGConcept[label="{NameGConcept| | }"]
 NameGConcept->NameConcept[arrowhead=vee,arrowtail=diamond,headlabel="name",group=NameConcept,minlen=2,constraint=true,]
 NameGConcept->GeneralConcept[arrowhead=onormal,group=GeneralConcept,minlen=2,constraint=true,]
;
 node[shape=record];
NounGConcept[label="{NounGConcept| | }"]
 NounGConcept->StringWord[arrowhead=vee,arrowtail=diamond,headlabel="noun[1-*]",group=StringWord,minlen=2,constraint=true,]
 NounGConcept->GeneralConcept[arrowhead=onormal,group=GeneralConcept,minlen=2,constraint=true,]
;
 node[shape=record];
Qualifier[label="{Qualifier|op : Qualif\nendOperator : EndOperator| }"]
 Qualifier->StringWord[arrowhead=vee,arrowtail=diamond,headlabel="min[0-1]",group=StringWord,minlen=2,constraint=true,]
 Qualifier->StringWord[arrowhead=vee,arrowtail=diamond,headlabel="max[0-1]",group=StringWord,minlen=2,constraint=true,]
 Qualifier->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
ModalBegin[label="{ModalBegin|endOperator : EndOperator| }"]
 ModalBegin->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
ModalBeginC[label="{ModalBeginC| | }"]
 ModalBeginC->ModalBegin[arrowhead=onormal,group=ModalBegin,minlen=2,constraint=true,]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Double[label="{&#171;DataType&#187;\nDouble|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;

}
}