digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_Perceptory"{
labelloc=t
color=black
label=Perceptory
 node[shape=record];
Process[label="{/Process/| | }"]
;
 node[shape=record];
StopProcess[label="{StopProcess| | }"]
 StopProcess->Process[arrowhead=onormal,group=Process,minlen=2,constraint=true,]
;
 node[shape=record];
SkipProcess[label="{SkipProcess| | }"]
 SkipProcess->Process[arrowhead=onormal,group=Process,minlen=2,constraint=true,]
;
 node[shape=record];
Action[label="{/Action/| | }"]
 Action->Process[arrowhead=onormal,group=Process,minlen=2,constraint=true,]
;
 node[shape=record];
Construction[label="{Construction| | }"]
 Construction->Process[arrowhead=onormal,group=Process,minlen=2,constraint=true,]
;
 node[shape=record];
Instance[label="{Instance|name : String| }"]
 Instance->Process[arrowhead=onormal,group=Process,minlen=2,constraint=true,]
;
 node[shape=record];
Assignment[label="{Assignment| | }"]
 Assignment->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
Input[label="{Input| | }"]
 Input->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
Output[label="{Output| | }"]
 Output->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
Sequence[label="{/Sequence/| | }"]
 Sequence->Construction[arrowhead=onormal,group=Construction,minlen=2,constraint=true,]
;
 node[shape=record];
NormalSequence[label="{NormalSequence| | }"]
 NormalSequence->Sequence[arrowhead=onormal,group=Sequence,minlen=2,constraint=true,]
;
 node[shape=record];
ReplicatorSequence[label="{ReplicatorSequence| | }"]
 ReplicatorSequence->Sequence[arrowhead=onormal,group=Sequence,minlen=2,constraint=true,]
;
 node[shape=record];
Conditional[label="{/Conditional/| | }"]
 Conditional->Construction[arrowhead=onormal,group=Construction,minlen=2,constraint=true,]
;
 node[shape=record];
NormalConditional[label="{NormalConditional| | }"]
 NormalConditional->Conditional[arrowhead=onormal,group=Conditional,minlen=2,constraint=true,]
;
 node[shape=record];
ReplicatorConditional[label="{ReplicatorConditional| | }"]
 ReplicatorConditional->Conditional[arrowhead=onormal,group=Conditional,minlen=2,constraint=true,]
;
 node[shape=record];
Loop[label="{Loop| | }"]
 Loop->Construction[arrowhead=onormal,group=Construction,minlen=2,constraint=true,]
;
 node[shape=record];
Parallel[label="{/Parallel/| | }"]
 Parallel->Construction[arrowhead=onormal,group=Construction,minlen=2,constraint=true,]
;
 node[shape=record];
NormalParallel[label="{NormalParallel| | }"]
 NormalParallel->Parallel[arrowhead=onormal,group=Parallel,minlen=2,constraint=true,]
;
 node[shape=record];
ReplicatorParallel[label="{ReplicatorParallel| | }"]
 ReplicatorParallel->Parallel[arrowhead=onormal,group=Parallel,minlen=2,constraint=true,]
;
 node[shape=record];
Alternation[label="{Alternation| | }"]
 Alternation->Construction[arrowhead=onormal,group=Construction,minlen=2,constraint=true,]
;
 node[shape=record];
NormalAlternation[label="{NormalAlternation| | }"]
 NormalAlternation->Parallel[arrowhead=onormal,group=Parallel,minlen=2,constraint=true,]
;
 node[shape=record];
ReplicatorAlternation[label="{ReplicatorAlternation| | }"]
 ReplicatorAlternation->Parallel[arrowhead=onormal,group=Parallel,minlen=2,constraint=true,]
;
 node[shape=record];
Choice[label="{Choice| | }"]
;
 node[shape=record];
BooleanRef[label="{BooleanRef| | }"]
;
 node[shape=record];
Alternative[label="{Alternative| | }"]
;
 node[shape=record];
Guard[label="{/Guard/| | }"]
;
 node[shape=record];
InputGuard[label="{InputGuard| | }"]
 InputGuard->Guard[arrowhead=onormal,group=Guard,minlen=2,constraint=true,]
;
 node[shape=record];
BooleanGuard[label="{BooleanGuard| | }"]
 BooleanGuard->Guard[arrowhead=onormal,group=Guard,minlen=2,constraint=true,]
;
 node[shape=record];
Replicator[label="{Replicator|name : String| }"]
;
 node[shape=record];
Base[label="{Base| | }"]
;
 node[shape=record];
Count[label="{Count| | }"]
;
 node[shape=record];
Type[label="{Type| | }"]
;
 node[shape=record];
PrimitiveType[label="{PrimitiveType|isInt : Boolean\nisChan : Boolean| }"]
;
 node[shape=record];
Literal[label="{Literal|integer : Integer| }"]
;
 node[shape=record];
Element[label="{Element|name : String| }"]
;
 node[shape=record];
Subscript[label="{Subscript| | }"]
;
 node[shape=record];
Variable[label="{Variable| | }"]
;
 node[shape=record];
Channel[label="{Channel| | }"]
;
 node[shape=record];
Operand[label="{/Operand/| | }"]
;
 node[shape=record];
VariableOPerand[label="{VariableOPerand| | }"]
 VariableOPerand->Variable[arrowhead=onormal,group=Variable,minlen=2,constraint=true,]
;
 node[shape=record];
LiteralOperand[label="{LiteralOperand| | }"]
 LiteralOperand->Literal[arrowhead=onormal,group=Literal,minlen=2,constraint=true,]
;
 node[shape=record];
ExpressionOperand[label="{ExpressionOperand| | }"]
 ExpressionOperand->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
Expression[label="{/Expression/| | }"]
;
 node[shape=record];
MonadicExpression[label="{MonadicExpression| | }"]
 MonadicExpression->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
DyadicExpression[label="{DyadicExpression| | }"]
 DyadicExpression->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
SimpleExpression[label="{SimpleExpression| | }"]
 SimpleExpression->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
Specification[label="{/Specification/| | }"]
 Specification->Process[arrowhead=onormal,group=Process,minlen=2,constraint=true,]
;
 node[shape=record];
Declaration[label="{/Declaration/| | }"]
 Declaration->Specification[arrowhead=onormal,group=Specification,minlen=2,constraint=true,]
;
 node[shape=record];
TypeDeclaration[label="{TypeDeclaration| | }"]
 TypeDeclaration->Declaration[arrowhead=onormal,group=Declaration,minlen=2,constraint=true,]
;
 node[shape=record];
IntDeclaration[label="{IntDeclaration|name : String| }"]
 IntDeclaration->Declaration[arrowhead=onormal,group=Declaration,minlen=2,constraint=true,]
;
 node[shape=record];
ValDeclaration[label="{ValDeclaration|name : String| }"]
 ValDeclaration->Declaration[arrowhead=onormal,group=Declaration,minlen=2,constraint=true,]
;
 node[shape=record];
Definition[label="{Definition|name : String| }"]
 Definition->Specification[arrowhead=onormal,group=Specification,minlen=2,constraint=true,]
;
 node[shape=record];
Formal[label="{Formal|name : String| }"]
;
 node[shape=record];
ProcedureBody[label="{ProcedureBody|name : String| }"]
;
 node[shape=record];
Actual[label="{Actual| | }"]
;
 node[shape=record];
MonadicOperator[label="{MonadicOperator|minus : Boolean\nnot : Boolean| }"]
;
 node[shape=record];
DyadicOperator[label="{DyadicOperator|plus : Boolean\nminus : Boolean\nstar : Boolean\nslash : Boolean\nor : Boolean\ninverseSlash : Boolean\nand : Boolean\neq : Boolean\nne : Boolean\nlt : Boolean\ngt : Boolean\nle : Boolean\nge : Boolean| }"]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;

}
}