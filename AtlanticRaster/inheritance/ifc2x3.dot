digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_IFC2X3"{
labelloc=t
color=black
label=IFC2X3
 node[shape=record];
IfcActorSelect[label="{/IfcActorSelect/| | }"]
;
 node[shape=record];
IfcAxis2Placement[label="{/IfcAxis2Placement/| | }"]
;
 node[shape=record];
IfcBooleanOperand[label="{/IfcBooleanOperand/| | }"]
;
 node[shape=record];
IfcCharacterStyleSelect[label="{/IfcCharacterStyleSelect/| | }"]
;
 node[shape=record];
IfcClassificationNotationSelect[label="{/IfcClassificationNotationSelect/| | }"]
;
 node[shape=record];
IfcColour[label="{/IfcColour/| | }"]
 IfcColour->IfcSymbolStyleSelect[arrowhead=onormal,group=IfcSymbolStyleSelect,minlen=2,constraint=true,]
 IfcColour->IfcFillStyleSelect[arrowhead=onormal,group=IfcFillStyleSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCsgSelect[label="{/IfcCsgSelect/| | }"]
;
 node[shape=record];
IfcCurveFontOrScaledCurveFontSelect[label="{/IfcCurveFontOrScaledCurveFontSelect/| | }"]
;
 node[shape=record];
IfcCurveOrEdgeCurve[label="{/IfcCurveOrEdgeCurve/| | }"]
;
 node[shape=record];
IfcCurveStyleFontSelect[label="{/IfcCurveStyleFontSelect/| | }"]
 IfcCurveStyleFontSelect->IfcCurveFontOrScaledCurveFontSelect[arrowhead=onormal,group=IfcCurveFontOrScaledCurveFontSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDateTimeSelect[label="{/IfcDateTimeSelect/| | }"]
;
 node[shape=record];
IfcDefinedSymbolSelect[label="{/IfcDefinedSymbolSelect/| | }"]
;
 node[shape=record];
IfcDocumentSelect[label="{/IfcDocumentSelect/| | }"]
;
 node[shape=record];
IfcDraughtingCalloutElement[label="{/IfcDraughtingCalloutElement/| | }"]
;
 node[shape=record];
IfcFillAreaStyleTileShapeSelect[label="{/IfcFillAreaStyleTileShapeSelect/| | }"]
;
 node[shape=record];
IfcFillStyleSelect[label="{/IfcFillStyleSelect/| | }"]
;
 node[shape=record];
IfcGeometricSetSelect[label="{/IfcGeometricSetSelect/| | }"]
;
 node[shape=record];
IfcLayeredItem[label="{/IfcLayeredItem/| | }"]
;
 node[shape=record];
IfcLibrarySelect[label="{/IfcLibrarySelect/| | }"]
;
 node[shape=record];
IfcLightDistributionDataSourceSelect[label="{/IfcLightDistributionDataSourceSelect/| | }"]
;
 node[shape=record];
IfcMaterialSelect[label="{/IfcMaterialSelect/| | }"]
;
 node[shape=record];
IfcObjectReferenceSelect[label="{/IfcObjectReferenceSelect/| | }"]
;
 node[shape=record];
IfcPointOrVertexPoint[label="{/IfcPointOrVertexPoint/| | }"]
;
 node[shape=record];
IfcShell[label="{/IfcShell/| | }"]
;
 node[shape=record];
IfcStructuralActivityAssignmentSelect[label="{/IfcStructuralActivityAssignmentSelect/| | }"]
;
 node[shape=record];
IfcSurfaceOrFaceSurface[label="{/IfcSurfaceOrFaceSurface/| | }"]
;
 node[shape=record];
IfcSurfaceStyleElementSelect[label="{/IfcSurfaceStyleElementSelect/| | }"]
;
 node[shape=record];
IfcSymbolStyleSelect[label="{/IfcSymbolStyleSelect/| | }"]
;
 node[shape=record];
IfcTextFontSelect[label="{/IfcTextFontSelect/| | }"]
;
 node[shape=record];
IfcTextStyleSelect[label="{/IfcTextStyleSelect/| | }"]
;
 node[shape=record];
IfcUnit[label="{/IfcUnit/| | }"]
;
 node[shape=record];
IfcVectorOrDirection[label="{/IfcVectorOrDirection/| | }"]
;
 node[shape=record];
IfcValue[label="{IfcValue|IfcAbsorbedDoseMeasurevalue[0-1] : REAL\nIfcAccelerationMeasurevalue[0-1] : REAL\nIfcAmountOfSubstanceMeasurevalue[0-1] : REAL\nIfcAngularVelocityMeasurevalue[0-1] : REAL\nIfcAreaMeasurevalue[0-1] : REAL\nIfcBooleanvalue[0-1] : BOOLEAN\nIfcContextDependentMeasurevalue[0-1] : REAL\nIfcCountMeasurevalue[0-1] : NUMBER\nIfcCurvatureMeasurevalue[0-1] : REAL\nIfcDescriptiveMeasurevalue[0-1] : STRING\nIfcDoseEquivalentMeasurevalue[0-1] : REAL\nIfcDynamicViscosityMeasurevalue[0-1] : REAL\nIfcElectricCapacitanceMeasurevalue[0-1] : REAL\nIfcElectricChargeMeasurevalue[0-1] : REAL\nIfcElectricConductanceMeasurevalue[0-1] : REAL\nIfcElectricCurrentMeasurevalue[0-1] : REAL\nIfcElectricResistanceMeasurevalue[0-1] : REAL\nIfcElectricVoltageMeasurevalue[0-1] : REAL\nIfcEnergyMeasurevalue[0-1] : REAL\nIfcForceMeasurevalue[0-1] : REAL\nIfcFrequencyMeasurevalue[0-1] : REAL\nIfcHeatFluxDensityMeasurevalue[0-1] : REAL\nIfcHeatingValueMeasurevalue[0-1] : REAL\nIfcIdentifiervalue[0-1] : STRING\nIfcIlluminanceMeasurevalue[0-1] : REAL\nIfcInductanceMeasurevalue[0-1] : REAL\nIfcIntegervalue[0-1] : INTEGER\nIfcIntegerCountRateMeasurevalue[0-1] : INTEGER\nIfcIonConcentrationMeasurevalue[0-1] : REAL\nIfcIsothermalMoistureCapacityMeasurevalue[0-1] : REAL\nIfcKinematicViscosityMeasurevalue[0-1] : REAL\nIfcLabelvalue[0-1] : STRING\nIfcPositiveLengthMeasurevalue[0-1] : REAL\nIfcLengthMeasurevalue[0-1] : REAL\nIfcLinearForceMeasurevalue[0-1] : REAL\nIfcLinearMomentMeasurevalue[0-1] : REAL\nIfcLinearStiffnessMeasurevalue[0-1] : REAL\nIfcLinearVelocityMeasurevalue[0-1] : REAL\nIfcLogicalvalue[0-1] : LOGICAL\nIfcLuminousFluxMeasurevalue[0-1] : REAL\nIfcLuminousIntensityDistributionMeasurevalue[0-1] : REAL\nIfcLuminousIntensityMeasurevalue[0-1] : REAL\nIfcMagneticFluxDensityMeasurevalue[0-1] : REAL\nIfcMagneticFluxMeasurevalue[0-1] : REAL\nIfcMassDensityMeasurevalue[0-1] : REAL\nIfcMassFlowRateMeasurevalue[0-1] : REAL\nIfcMassMeasurevalue[0-1] : REAL\nIfcMassPerLengthMeasurevalue[0-1] : REAL\nIfcModulusOfElasticityMeasurevalue[0-1] : REAL\nIfcModulusOfLinearSubgradeReactionMeasurevalue[0-1] : REAL\nIfcModulusOfRotationalSubgradeReactionMeasurevalue[0-1] : REAL\nIfcModulusOfSubgradeReactionMeasurevalue[0-1] : REAL\nIfcMoistureDiffusivityMeasurevalue[0-1] : REAL\nIfcMolecularWeightMeasurevalue[0-1] : REAL\nIfcMomentOfInertiaMeasurevalue[0-1] : REAL\nIfcMonetaryMeasurevalue[0-1] : REAL\nIfcNormalisedRatioMeasurevalue[0-1] : REAL\nIfcNumericMeasurevalue[0-1] : NUMBER\nIfcPHMeasurevalue[0-1] : REAL\nIfcParameterValuevalue[0-1] : REAL\nIfcPlanarForceMeasurevalue[0-1] : REAL\nIfcPositivePlaneAngleMeasurevalue[0-1] : REAL\nIfcPlaneAngleMeasurevalue[0-1] : REAL\nIfcPositiveRatioMeasurevalue[0-1] : REAL\nIfcPowerMeasurevalue[0-1] : REAL\nIfcPressureMeasurevalue[0-1] : REAL\nIfcRadioActivityMeasurevalue[0-1] : REAL\nIfcRatioMeasurevalue[0-1] : REAL\nIfcRealvalue[0-1] : REAL\nIfcRotationalFrequencyMeasurevalue[0-1] : REAL\nIfcRotationalMassMeasurevalue[0-1] : REAL\nIfcRotationalStiffnessMeasurevalue[0-1] : REAL\nIfcSectionModulusMeasurevalue[0-1] : REAL\nIfcSectionalAreaIntegralMeasurevalue[0-1] : REAL\nIfcShearModulusMeasurevalue[0-1] : REAL\nIfcSolidAngleMeasurevalue[0-1] : REAL\nIfcSoundPowerMeasurevalue[0-1] : REAL\nIfcSoundPressureMeasurevalue[0-1] : REAL\nIfcSpecificHeatCapacityMeasurevalue[0-1] : REAL\nIfcTemperatureGradientMeasurevalue[0-1] : REAL\nIfcTextvalue[0-1] : STRING\nIfcThermalAdmittanceMeasurevalue[0-1] : REAL\nIfcThermalConductivityMeasurevalue[0-1] : REAL\nIfcThermalExpansionCoefficientMeasurevalue[0-1] : REAL\nIfcThermalResistanceMeasurevalue[0-1] : REAL\nIfcThermalTransmittanceMeasurevalue[0-1] : REAL\nIfcThermodynamicTemperatureMeasurevalue[0-1] : REAL\nIfcTimeMeasurevalue[0-1] : REAL\nIfcTimeStampvalue[0-1] : INTEGER\nIfcTorqueMeasurevalue[0-1] : REAL\nIfcVaporPermeabilityMeasurevalue[0-1] : REAL\nIfcVolumeMeasurevalue[0-1] : REAL\nIfcVolumetricFlowRateMeasurevalue[0-1] : REAL\nIfcWarpingConstantMeasurevalue[0-1] : REAL\nIfcWarpingMomentMeasurevalue[0-1] : REAL| }"]
;
 node[shape=record];
IfcTrimmingSelect[label="{IfcTrimmingSelect|IfcParameterValuevalue[0-1] : REAL| }"]
;
 node[shape=record];
IfcSpecularHighlightSelect[label="{IfcSpecularHighlightSelect|IfcSpecularRoughnessvalue[0-1] : REAL\nIfcSpecularExponentvalue[0-1] : REAL| }"]
;
 node[shape=record];
IfcSizeSelect[label="{IfcSizeSelect|IfcPositiveRatioMeasurevalue[0-1] : REAL\nIfcNormalisedRatioMeasurevalue[0-1] : REAL\nIfcPositiveLengthMeasurevalue[0-1] : REAL\nIfcDescriptiveMeasurevalue[0-1] : STRING\nIfcLengthMeasurevalue[0-1] : REAL\nIfcRatioMeasurevalue[0-1] : REAL| }"]
;
 node[shape=record];
IfcSimpleValue[label="{IfcSimpleValue|IfcLogicalvalue[0-1] : LOGICAL\nIfcLabelvalue[0-1] : STRING\nIfcTextvalue[0-1] : STRING\nIfcIdentifiervalue[0-1] : STRING\nIfcBooleanvalue[0-1] : BOOLEAN\nIfcRealvalue[0-1] : REAL\nIfcIntegervalue[0-1] : INTEGER| }"]
;
 node[shape=record];
IfcPresentationStyleSelect[label="{IfcPresentationStyleSelect|IfcNullStylevalue[0-1] : IfcNullStyle| }"]
;
 node[shape=record];
IfcOrientationSelect[label="{IfcOrientationSelect|IfcPlaneAngleMeasurevalue[0-1] : REAL| }"]
;
 node[shape=record];
IfcMetricValueSelect[label="{IfcMetricValueSelect|IfcTextvalue[0-1] : STRING| }"]
;
 node[shape=record];
IfcMeasureValue[label="{IfcMeasureValue|IfcNormalisedRatioMeasurevalue[0-1] : REAL\nIfcLuminousIntensityMeasurevalue[0-1] : REAL\nIfcAmountOfSubstanceMeasurevalue[0-1] : REAL\nIfcAreaMeasurevalue[0-1] : REAL\nIfcContextDependentMeasurevalue[0-1] : REAL\nIfcCountMeasurevalue[0-1] : NUMBER\nIfcDescriptiveMeasurevalue[0-1] : STRING\nIfcElectricCurrentMeasurevalue[0-1] : REAL\nIfcLengthMeasurevalue[0-1] : REAL\nIfcPositiveLengthMeasurevalue[0-1] : REAL\nIfcMassMeasurevalue[0-1] : REAL\nIfcNumericMeasurevalue[0-1] : NUMBER\nIfcParameterValuevalue[0-1] : REAL\nIfcPlaneAngleMeasurevalue[0-1] : REAL\nIfcPositivePlaneAngleMeasurevalue[0-1] : REAL\nIfcRatioMeasurevalue[0-1] : REAL\nIfcPositiveRatioMeasurevalue[0-1] : REAL\nIfcSolidAngleMeasurevalue[0-1] : REAL\nIfcThermodynamicTemperatureMeasurevalue[0-1] : REAL\nIfcTimeMeasurevalue[0-1] : REAL\nIfcVolumeMeasurevalue[0-1] : REAL| }"]
;
 node[shape=record];
IfcHatchLineDistanceSelect[label="{IfcHatchLineDistanceSelect|IfcPositiveLengthMeasurevalue[0-1] : REAL| }"]
;
 node[shape=record];
IfcDerivedMeasureValue[label="{IfcDerivedMeasureValue|IfcIonConcentrationMeasurevalue[0-1] : REAL\nIfcPHMeasurevalue[0-1] : REAL\nIfcHeatingValueMeasurevalue[0-1] : REAL\nIfcSoundPressureMeasurevalue[0-1] : REAL\nIfcSoundPowerMeasurevalue[0-1] : REAL\nIfcWarpingMomentMeasurevalue[0-1] : REAL\nIfcWarpingConstantMeasurevalue[0-1] : REAL\nIfcThermalExpansionCoefficientMeasurevalue[0-1] : REAL\nIfcTemperatureGradientMeasurevalue[0-1] : REAL\nIfcSectionModulusMeasurevalue[0-1] : REAL\nIfcSectionalAreaIntegralMeasurevalue[0-1] : REAL\nIfcRotationalMassMeasurevalue[0-1] : REAL\nIfcModulusOfRotationalSubgradeReactionMeasurevalue[0-1] : REAL\nIfcModulusOfLinearSubgradeReactionMeasurevalue[0-1] : REAL\nIfcMassPerLengthMeasurevalue[0-1] : REAL\nIfcCurvatureMeasurevalue[0-1] : REAL\nIfcLuminousIntensityDistributionMeasurevalue[0-1] : REAL\nIfcLinearMomentMeasurevalue[0-1] : REAL\nIfcShearModulusMeasurevalue[0-1] : REAL\nIfcRotationalStiffnessMeasurevalue[0-1] : REAL\nIfcPlanarForceMeasurevalue[0-1] : REAL\nIfcMomentOfInertiaMeasurevalue[0-1] : REAL\nIfcModulusOfElasticityMeasurevalue[0-1] : REAL\nIfcModulusOfSubgradeReactionMeasurevalue[0-1] : REAL\nIfcLinearStiffnessMeasurevalue[0-1] : REAL\nIfcLinearForceMeasurevalue[0-1] : REAL\nIfcAccelerationMeasurevalue[0-1] : REAL\nIfcTorqueMeasurevalue[0-1] : REAL\nIfcRotationalFrequencyMeasurevalue[0-1] : REAL\nIfcRadioActivityMeasurevalue[0-1] : REAL\nIfcAbsorbedDoseMeasurevalue[0-1] : REAL\nIfcElectricCapacitanceMeasurevalue[0-1] : REAL\nIfcDoseEquivalentMeasurevalue[0-1] : REAL\nIfcElectricChargeMeasurevalue[0-1] : REAL\nIfcElectricConductanceMeasurevalue[0-1] : REAL\nIfcElectricResistanceMeasurevalue[0-1] : REAL\nIfcIlluminanceMeasurevalue[0-1] : REAL\nIfcInductanceMeasurevalue[0-1] : REAL\nIfcForceMeasurevalue[0-1] : REAL\nIfcLuminousFluxMeasurevalue[0-1] : REAL\nIfcMagneticFluxMeasurevalue[0-1] : REAL\nIfcMagneticFluxDensityMeasurevalue[0-1] : REAL\nIfcMonetaryMeasurevalue[0-1] : REAL\nIfcSpecificHeatCapacityMeasurevalue[0-1] : REAL\nIfcIsothermalMoistureCapacityMeasurevalue[0-1] : REAL\nIfcMoistureDiffusivityMeasurevalue[0-1] : REAL\nIfcVaporPermeabilityMeasurevalue[0-1] : REAL\nIfcMolecularWeightMeasurevalue[0-1] : REAL\nIfcThermalConductivityMeasurevalue[0-1] : REAL\nIfcAngularVelocityMeasurevalue[0-1] : REAL\nIfcDynamicViscosityMeasurevalue[0-1] : REAL\nIfcElectricVoltageMeasurevalue[0-1] : REAL\nIfcEnergyMeasurevalue[0-1] : REAL\nIfcFrequencyMeasurevalue[0-1] : REAL\nIfcHeatFluxDensityMeasurevalue[0-1] : REAL\nIfcIntegerCountRateMeasurevalue[0-1] : INTEGER\nIfcKinematicViscosityMeasurevalue[0-1] : REAL\nIfcLinearVelocityMeasurevalue[0-1] : REAL\nIfcMassDensityMeasurevalue[0-1] : REAL\nIfcMassFlowRateMeasurevalue[0-1] : REAL\nIfcPowerMeasurevalue[0-1] : REAL\nIfcPressureMeasurevalue[0-1] : REAL\nIfcThermalAdmittanceMeasurevalue[0-1] : REAL\nIfcThermalResistanceMeasurevalue[0-1] : REAL\nIfcThermalTransmittanceMeasurevalue[0-1] : REAL\nIfcTimeStampvalue[0-1] : INTEGER\nIfcVolumetricFlowRateMeasurevalue[0-1] : REAL| }"]
;
 node[shape=record];
IfcConditionCriterionSelect[label="{IfcConditionCriterionSelect|IfcLabelvalue[0-1] : STRING| }"]
;
 node[shape=record];
IfcColourOrFactor[label="{IfcColourOrFactor|IfcNormalisedRatioMeasurevalue[0-1] : REAL| }"]
;
 node[shape=record];
IfcAppliedValueSelect[label="{IfcAppliedValueSelect|IfcMonetaryMeasurevalue[0-1] : REAL\nIfcRatioMeasurevalue[0-1] : REAL| }"]
;
 node[shape=record];
Ifc2DCompositeCurve[label="{Ifc2DCompositeCurve| | }"]
 Ifc2DCompositeCurve->IfcCompositeCurve[arrowhead=onormal,group=IfcCompositeCurve,minlen=2,constraint=true,]
;
 node[shape=record];
IfcActionRequest[label="{IfcActionRequest|RequestID : STRING| }"]
 IfcActionRequest->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcActor[label="{IfcActor| | }"]
 IfcActor->IfcObject[arrowhead=onormal,group=IfcObject,minlen=2,constraint=true,]
;
 node[shape=record];
IfcActorRole[label="{IfcActorRole|Role : IfcRoleEnum\nUserDefinedRole[0-1] : STRING\nDescription[0-1] : STRING| }"]
;
 node[shape=record];
IfcActuatorType[label="{IfcActuatorType|PredefinedType : IfcActuatorTypeEnum| }"]
 IfcActuatorType->IfcDistributionControlElementType[arrowhead=onormal,group=IfcDistributionControlElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAddress[label="{IfcAddress|Purpose[0-1] : IfcAddressTypeEnum\nDescription[0-1] : STRING\nUserDefinedPurpose[0-1] : STRING| }"]
 IfcAddress->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAirTerminalBoxType[label="{IfcAirTerminalBoxType|PredefinedType : IfcAirTerminalBoxTypeEnum| }"]
 IfcAirTerminalBoxType->IfcFlowControllerType[arrowhead=onormal,group=IfcFlowControllerType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAirTerminalType[label="{IfcAirTerminalType|PredefinedType : IfcAirTerminalTypeEnum| }"]
 IfcAirTerminalType->IfcFlowTerminalType[arrowhead=onormal,group=IfcFlowTerminalType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAirToAirHeatRecoveryType[label="{IfcAirToAirHeatRecoveryType|PredefinedType : IfcAirToAirHeatRecoveryTypeEnum| }"]
 IfcAirToAirHeatRecoveryType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAlarmType[label="{IfcAlarmType|PredefinedType : IfcAlarmTypeEnum| }"]
 IfcAlarmType->IfcDistributionControlElementType[arrowhead=onormal,group=IfcDistributionControlElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAngularDimension[label="{IfcAngularDimension| | }"]
 IfcAngularDimension->IfcDimensionCurveDirectedCallout[arrowhead=onormal,group=IfcDimensionCurveDirectedCallout,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAnnotation[label="{IfcAnnotation| | }"]
 IfcAnnotation->IfcProduct[arrowhead=onormal,group=IfcProduct,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAnnotationCurveOccurrence[label="{IfcAnnotationCurveOccurrence| | }"]
 IfcAnnotationCurveOccurrence->IfcDraughtingCalloutElement[arrowhead=onormal,group=IfcDraughtingCalloutElement,minlen=2,constraint=true,]
 IfcAnnotationCurveOccurrence->IfcAnnotationOccurrence[arrowhead=onormal,group=IfcAnnotationOccurrence,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAnnotationFillArea[label="{IfcAnnotationFillArea| | }"]
 IfcAnnotationFillArea->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAnnotationFillAreaOccurrence[label="{IfcAnnotationFillAreaOccurrence|GlobalOrLocal[0-1] : IfcGlobalOrLocalEnum| }"]
 IfcAnnotationFillAreaOccurrence->IfcAnnotationOccurrence[arrowhead=onormal,group=IfcAnnotationOccurrence,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAnnotationOccurrence[label="{IfcAnnotationOccurrence| | }"]
 IfcAnnotationOccurrence->IfcStyledItem[arrowhead=onormal,group=IfcStyledItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAnnotationSurface[label="{IfcAnnotationSurface| | }"]
 IfcAnnotationSurface->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAnnotationSurfaceOccurrence[label="{IfcAnnotationSurfaceOccurrence| | }"]
 IfcAnnotationSurfaceOccurrence->IfcAnnotationOccurrence[arrowhead=onormal,group=IfcAnnotationOccurrence,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAnnotationSymbolOccurrence[label="{IfcAnnotationSymbolOccurrence| | }"]
 IfcAnnotationSymbolOccurrence->IfcDraughtingCalloutElement[arrowhead=onormal,group=IfcDraughtingCalloutElement,minlen=2,constraint=true,]
 IfcAnnotationSymbolOccurrence->IfcAnnotationOccurrence[arrowhead=onormal,group=IfcAnnotationOccurrence,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAnnotationTextOccurrence[label="{IfcAnnotationTextOccurrence| | }"]
 IfcAnnotationTextOccurrence->IfcDraughtingCalloutElement[arrowhead=onormal,group=IfcDraughtingCalloutElement,minlen=2,constraint=true,]
 IfcAnnotationTextOccurrence->IfcAnnotationOccurrence[arrowhead=onormal,group=IfcAnnotationOccurrence,minlen=2,constraint=true,]
;
 node[shape=record];
IfcApplication[label="{IfcApplication|Version : STRING\nApplicationFullName : STRING\nApplicationIdentifier : STRING| }"]
;
 node[shape=record];
IfcAppliedValue[label="{IfcAppliedValue|Name[0-1] : STRING\nDescription[0-1] : STRING| }"]
 IfcAppliedValue->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAppliedValueRelationship[label="{IfcAppliedValueRelationship|ArithmeticOperator : IfcArithmeticOperatorEnum\nName[0-1] : STRING\nDescription[0-1] : STRING| }"]
;
 node[shape=record];
IfcApproval[label="{IfcApproval|Description[0-1] : STRING\nApprovalStatus[0-1] : STRING\nApprovalLevel[0-1] : STRING\nApprovalQualifier[0-1] : STRING\nName : STRING\nIdentifier : STRING| }"]
;
 node[shape=record];
IfcApprovalActorRelationship[label="{IfcApprovalActorRelationship| | }"]
;
 node[shape=record];
IfcApprovalPropertyRelationship[label="{IfcApprovalPropertyRelationship| | }"]
;
 node[shape=record];
IfcApprovalRelationship[label="{IfcApprovalRelationship|Description[0-1] : STRING\nName : STRING| }"]
;
 node[shape=record];
IfcArbitraryClosedProfileDef[label="{IfcArbitraryClosedProfileDef| | }"]
 IfcArbitraryClosedProfileDef->IfcProfileDef[arrowhead=onormal,group=IfcProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcArbitraryOpenProfileDef[label="{IfcArbitraryOpenProfileDef| | }"]
 IfcArbitraryOpenProfileDef->IfcProfileDef[arrowhead=onormal,group=IfcProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcArbitraryProfileDefWithVoids[label="{IfcArbitraryProfileDefWithVoids| | }"]
 IfcArbitraryProfileDefWithVoids->IfcArbitraryClosedProfileDef[arrowhead=onormal,group=IfcArbitraryClosedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAsset[label="{IfcAsset|AssetID : STRING| }"]
 IfcAsset->IfcGroup[arrowhead=onormal,group=IfcGroup,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAsymmetricIShapeProfileDef[label="{IfcAsymmetricIShapeProfileDef|TopFlangeWidth : REAL\nTopFlangeThickness[0-1] : REAL\nTopFlangeFilletRadius[0-1] : REAL\nCentreOfGravityInY[0-1] : REAL| }"]
 IfcAsymmetricIShapeProfileDef->IfcIShapeProfileDef[arrowhead=onormal,group=IfcIShapeProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAxis1Placement[label="{IfcAxis1Placement| | }"]
 IfcAxis1Placement->IfcPlacement[arrowhead=onormal,group=IfcPlacement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAxis2Placement2D[label="{IfcAxis2Placement2D| | }"]
 IfcAxis2Placement2D->IfcAxis2Placement[arrowhead=onormal,group=IfcAxis2Placement,minlen=2,constraint=true,]
 IfcAxis2Placement2D->IfcPlacement[arrowhead=onormal,group=IfcPlacement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcAxis2Placement3D[label="{IfcAxis2Placement3D| | }"]
 IfcAxis2Placement3D->IfcAxis2Placement[arrowhead=onormal,group=IfcAxis2Placement,minlen=2,constraint=true,]
 IfcAxis2Placement3D->IfcPlacement[arrowhead=onormal,group=IfcPlacement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBSplineCurve[label="{IfcBSplineCurve|Degree : INTEGER\nCurveForm : IfcBSplineCurveForm\nClosedCurve : LOGICAL\nSelfIntersect : LOGICAL| }"]
 IfcBSplineCurve->IfcBoundedCurve[arrowhead=onormal,group=IfcBoundedCurve,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBeam[label="{IfcBeam| | }"]
 IfcBeam->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBeamType[label="{IfcBeamType|PredefinedType : IfcBeamTypeEnum| }"]
 IfcBeamType->IfcBuildingElementType[arrowhead=onormal,group=IfcBuildingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBezierCurve[label="{IfcBezierCurve| | }"]
 IfcBezierCurve->IfcBSplineCurve[arrowhead=onormal,group=IfcBSplineCurve,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBlobTexture[label="{IfcBlobTexture|RasterFormat : STRING\nRasterCode : BOOLEAN| }"]
 IfcBlobTexture->IfcSurfaceTexture[arrowhead=onormal,group=IfcSurfaceTexture,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBlock[label="{IfcBlock|XLength : REAL\nYLength : REAL\nZLength : REAL| }"]
 IfcBlock->IfcCsgPrimitive3D[arrowhead=onormal,group=IfcCsgPrimitive3D,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBoilerType[label="{IfcBoilerType|PredefinedType : IfcBoilerTypeEnum| }"]
 IfcBoilerType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBooleanClippingResult[label="{IfcBooleanClippingResult| | }"]
 IfcBooleanClippingResult->IfcBooleanResult[arrowhead=onormal,group=IfcBooleanResult,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBooleanResult[label="{IfcBooleanResult|Operator : IfcBooleanOperator| }"]
 IfcBooleanResult->IfcBooleanOperand[arrowhead=onormal,group=IfcBooleanOperand,minlen=2,constraint=true,]
 IfcBooleanResult->IfcCsgSelect[arrowhead=onormal,group=IfcCsgSelect,minlen=2,constraint=true,]
 IfcBooleanResult->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBoundaryCondition[label="{IfcBoundaryCondition|Name[0-1] : STRING| }"]
;
 node[shape=record];
IfcBoundaryEdgeCondition[label="{IfcBoundaryEdgeCondition|LinearStiffnessByLengthX[0-1] : REAL\nLinearStiffnessByLengthY[0-1] : REAL\nLinearStiffnessByLengthZ[0-1] : REAL\nRotationalStiffnessByLengthX[0-1] : REAL\nRotationalStiffnessByLengthY[0-1] : REAL\nRotationalStiffnessByLengthZ[0-1] : REAL| }"]
 IfcBoundaryEdgeCondition->IfcBoundaryCondition[arrowhead=onormal,group=IfcBoundaryCondition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBoundaryFaceCondition[label="{IfcBoundaryFaceCondition|LinearStiffnessByAreaX[0-1] : REAL\nLinearStiffnessByAreaY[0-1] : REAL\nLinearStiffnessByAreaZ[0-1] : REAL| }"]
 IfcBoundaryFaceCondition->IfcBoundaryCondition[arrowhead=onormal,group=IfcBoundaryCondition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBoundaryNodeCondition[label="{IfcBoundaryNodeCondition|LinearStiffnessX[0-1] : REAL\nLinearStiffnessY[0-1] : REAL\nLinearStiffnessZ[0-1] : REAL\nRotationalStiffnessX[0-1] : REAL\nRotationalStiffnessY[0-1] : REAL\nRotationalStiffnessZ[0-1] : REAL| }"]
 IfcBoundaryNodeCondition->IfcBoundaryCondition[arrowhead=onormal,group=IfcBoundaryCondition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBoundaryNodeConditionWarping[label="{IfcBoundaryNodeConditionWarping|WarpingStiffness[0-1] : REAL| }"]
 IfcBoundaryNodeConditionWarping->IfcBoundaryNodeCondition[arrowhead=onormal,group=IfcBoundaryNodeCondition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBoundedCurve[label="{IfcBoundedCurve| | }"]
 IfcBoundedCurve->IfcCurveOrEdgeCurve[arrowhead=onormal,group=IfcCurveOrEdgeCurve,minlen=2,constraint=true,]
 IfcBoundedCurve->IfcCurve[arrowhead=onormal,group=IfcCurve,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBoundedSurface[label="{IfcBoundedSurface| | }"]
 IfcBoundedSurface->IfcSurface[arrowhead=onormal,group=IfcSurface,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBoundingBox[label="{IfcBoundingBox|XDim : REAL\nYDim : REAL\nZDim : REAL| }"]
 IfcBoundingBox->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBoxedHalfSpace[label="{IfcBoxedHalfSpace| | }"]
 IfcBoxedHalfSpace->IfcHalfSpaceSolid[arrowhead=onormal,group=IfcHalfSpaceSolid,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBuilding[label="{IfcBuilding|ElevationOfRefHeight[0-1] : REAL\nElevationOfTerrain[0-1] : REAL| }"]
 IfcBuilding->IfcSpatialStructureElement[arrowhead=onormal,group=IfcSpatialStructureElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBuildingElement[label="{IfcBuildingElement| | }"]
 IfcBuildingElement->IfcElement[arrowhead=onormal,group=IfcElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBuildingElementComponent[label="{IfcBuildingElementComponent| | }"]
 IfcBuildingElementComponent->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBuildingElementPart[label="{IfcBuildingElementPart| | }"]
 IfcBuildingElementPart->IfcBuildingElementComponent[arrowhead=onormal,group=IfcBuildingElementComponent,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBuildingElementProxy[label="{IfcBuildingElementProxy|CompositionType[0-1] : IfcElementCompositionEnum| }"]
 IfcBuildingElementProxy->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBuildingElementProxyType[label="{IfcBuildingElementProxyType|PredefinedType : IfcBuildingElementProxyTypeEnum| }"]
 IfcBuildingElementProxyType->IfcBuildingElementType[arrowhead=onormal,group=IfcBuildingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBuildingElementType[label="{IfcBuildingElementType| | }"]
 IfcBuildingElementType->IfcElementType[arrowhead=onormal,group=IfcElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcBuildingStorey[label="{IfcBuildingStorey|Elevation[0-1] : REAL| }"]
 IfcBuildingStorey->IfcSpatialStructureElement[arrowhead=onormal,group=IfcSpatialStructureElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCShapeProfileDef[label="{IfcCShapeProfileDef|Depth : REAL\nWidth : REAL\nWallThickness : REAL\nGirth : REAL\nInternalFilletRadius[0-1] : REAL\nCentreOfGravityInX[0-1] : REAL| }"]
 IfcCShapeProfileDef->IfcParameterizedProfileDef[arrowhead=onormal,group=IfcParameterizedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCableCarrierFittingType[label="{IfcCableCarrierFittingType|PredefinedType : IfcCableCarrierFittingTypeEnum| }"]
 IfcCableCarrierFittingType->IfcFlowFittingType[arrowhead=onormal,group=IfcFlowFittingType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCableCarrierSegmentType[label="{IfcCableCarrierSegmentType|PredefinedType : IfcCableCarrierSegmentTypeEnum| }"]
 IfcCableCarrierSegmentType->IfcFlowSegmentType[arrowhead=onormal,group=IfcFlowSegmentType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCableSegmentType[label="{IfcCableSegmentType|PredefinedType : IfcCableSegmentTypeEnum| }"]
 IfcCableSegmentType->IfcFlowSegmentType[arrowhead=onormal,group=IfcFlowSegmentType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCalendarDate[label="{IfcCalendarDate|DayComponent : INTEGER\nMonthComponent : INTEGER\nYearComponent : INTEGER| }"]
 IfcCalendarDate->IfcDateTimeSelect[arrowhead=onormal,group=IfcDateTimeSelect,minlen=2,constraint=true,]
 IfcCalendarDate->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCartesianPoint[label="{IfcCartesianPoint|Coordinates[13] : REAL| }"]
 IfcCartesianPoint->IfcPoint[arrowhead=onormal,group=IfcPoint,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCartesianTransformationOperator[label="{IfcCartesianTransformationOperator|Scale[0-1] : REAL| }"]
 IfcCartesianTransformationOperator->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCartesianTransformationOperator2D[label="{IfcCartesianTransformationOperator2D| | }"]
 IfcCartesianTransformationOperator2D->IfcCartesianTransformationOperator[arrowhead=onormal,group=IfcCartesianTransformationOperator,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCartesianTransformationOperator2DnonUniform[label="{IfcCartesianTransformationOperator2DnonUniform|Scale2[0-1] : REAL| }"]
 IfcCartesianTransformationOperator2DnonUniform->IfcCartesianTransformationOperator2D[arrowhead=onormal,group=IfcCartesianTransformationOperator2D,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCartesianTransformationOperator3D[label="{IfcCartesianTransformationOperator3D| | }"]
 IfcCartesianTransformationOperator3D->IfcCartesianTransformationOperator[arrowhead=onormal,group=IfcCartesianTransformationOperator,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCartesianTransformationOperator3DnonUniform[label="{IfcCartesianTransformationOperator3DnonUniform|Scale2[0-1] : REAL\nScale3[0-1] : REAL| }"]
 IfcCartesianTransformationOperator3DnonUniform->IfcCartesianTransformationOperator3D[arrowhead=onormal,group=IfcCartesianTransformationOperator3D,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCenterLineProfileDef[label="{IfcCenterLineProfileDef|Thickness : REAL| }"]
 IfcCenterLineProfileDef->IfcArbitraryOpenProfileDef[arrowhead=onormal,group=IfcArbitraryOpenProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcChamferEdgeFeature[label="{IfcChamferEdgeFeature|Width[0-1] : REAL\nHeight[0-1] : REAL| }"]
 IfcChamferEdgeFeature->IfcEdgeFeature[arrowhead=onormal,group=IfcEdgeFeature,minlen=2,constraint=true,]
;
 node[shape=record];
IfcChillerType[label="{IfcChillerType|PredefinedType : IfcChillerTypeEnum| }"]
 IfcChillerType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCircle[label="{IfcCircle|Radius : REAL| }"]
 IfcCircle->IfcConic[arrowhead=onormal,group=IfcConic,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCircleHollowProfileDef[label="{IfcCircleHollowProfileDef|WallThickness : REAL| }"]
 IfcCircleHollowProfileDef->IfcCircleProfileDef[arrowhead=onormal,group=IfcCircleProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCircleProfileDef[label="{IfcCircleProfileDef|Radius : REAL| }"]
 IfcCircleProfileDef->IfcParameterizedProfileDef[arrowhead=onormal,group=IfcParameterizedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcClassification[label="{IfcClassification|Source : STRING\nEdition : STRING\nName : STRING| }"]
;
 node[shape=record];
IfcClassificationItem[label="{IfcClassificationItem|Title : STRING| }"]
;
 node[shape=record];
IfcClassificationItemRelationship[label="{IfcClassificationItemRelationship| | }"]
;
 node[shape=record];
IfcClassificationNotation[label="{IfcClassificationNotation| | }"]
 IfcClassificationNotation->IfcClassificationNotationSelect[arrowhead=onormal,group=IfcClassificationNotationSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcClassificationNotationFacet[label="{IfcClassificationNotationFacet|NotationValue : STRING| }"]
;
 node[shape=record];
IfcClassificationReference[label="{IfcClassificationReference| | }"]
 IfcClassificationReference->IfcClassificationNotationSelect[arrowhead=onormal,group=IfcClassificationNotationSelect,minlen=2,constraint=true,]
 IfcClassificationReference->IfcExternalReference[arrowhead=onormal,group=IfcExternalReference,minlen=2,constraint=true,]
;
 node[shape=record];
IfcClosedShell[label="{IfcClosedShell| | }"]
 IfcClosedShell->IfcShell[arrowhead=onormal,group=IfcShell,minlen=2,constraint=true,]
 IfcClosedShell->IfcConnectedFaceSet[arrowhead=onormal,group=IfcConnectedFaceSet,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCoilType[label="{IfcCoilType|PredefinedType : IfcCoilTypeEnum| }"]
 IfcCoilType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcColourRgb[label="{IfcColourRgb|Red : REAL\nGreen : REAL\nBlue : REAL| }"]
 IfcColourRgb->IfcColourSpecification[arrowhead=onormal,group=IfcColourSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
IfcColourSpecification[label="{IfcColourSpecification|Name[0-1] : STRING| }"]
 IfcColourSpecification->IfcColour[arrowhead=onormal,group=IfcColour,minlen=2,constraint=true,]
;
 node[shape=record];
IfcColumn[label="{IfcColumn| | }"]
 IfcColumn->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcColumnType[label="{IfcColumnType|PredefinedType : IfcColumnTypeEnum| }"]
 IfcColumnType->IfcBuildingElementType[arrowhead=onormal,group=IfcBuildingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcComplexProperty[label="{IfcComplexProperty|UsageName : STRING| }"]
 IfcComplexProperty->IfcProperty[arrowhead=onormal,group=IfcProperty,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCompositeCurve[label="{IfcCompositeCurve|SelfIntersect : LOGICAL| }"]
 IfcCompositeCurve->IfcBoundedCurve[arrowhead=onormal,group=IfcBoundedCurve,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCompositeCurveSegment[label="{IfcCompositeCurveSegment|Transition : IfcTransitionCode\nSameSense : BOOLEAN| }"]
 IfcCompositeCurveSegment->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCompositeProfileDef[label="{IfcCompositeProfileDef|Label[0-1] : STRING| }"]
 IfcCompositeProfileDef->IfcProfileDef[arrowhead=onormal,group=IfcProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCompressorType[label="{IfcCompressorType|PredefinedType : IfcCompressorTypeEnum| }"]
 IfcCompressorType->IfcFlowMovingDeviceType[arrowhead=onormal,group=IfcFlowMovingDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCondenserType[label="{IfcCondenserType|PredefinedType : IfcCondenserTypeEnum| }"]
 IfcCondenserType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCondition[label="{IfcCondition| | }"]
 IfcCondition->IfcGroup[arrowhead=onormal,group=IfcGroup,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConditionCriterion[label="{IfcConditionCriterion| | }"]
 IfcConditionCriterion->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConic[label="{IfcConic| | }"]
 IfcConic->IfcCurve[arrowhead=onormal,group=IfcCurve,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConnectedFaceSet[label="{IfcConnectedFaceSet| | }"]
 IfcConnectedFaceSet->IfcTopologicalRepresentationItem[arrowhead=onormal,group=IfcTopologicalRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConnectionCurveGeometry[label="{IfcConnectionCurveGeometry| | }"]
 IfcConnectionCurveGeometry->IfcConnectionGeometry[arrowhead=onormal,group=IfcConnectionGeometry,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConnectionGeometry[label="{IfcConnectionGeometry| | }"]
;
 node[shape=record];
IfcConnectionPointEccentricity[label="{IfcConnectionPointEccentricity|EccentricityInX[0-1] : REAL\nEccentricityInY[0-1] : REAL\nEccentricityInZ[0-1] : REAL| }"]
 IfcConnectionPointEccentricity->IfcConnectionPointGeometry[arrowhead=onormal,group=IfcConnectionPointGeometry,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConnectionPointGeometry[label="{IfcConnectionPointGeometry| | }"]
 IfcConnectionPointGeometry->IfcConnectionGeometry[arrowhead=onormal,group=IfcConnectionGeometry,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConnectionPortGeometry[label="{IfcConnectionPortGeometry| | }"]
 IfcConnectionPortGeometry->IfcConnectionGeometry[arrowhead=onormal,group=IfcConnectionGeometry,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConnectionSurfaceGeometry[label="{IfcConnectionSurfaceGeometry| | }"]
 IfcConnectionSurfaceGeometry->IfcConnectionGeometry[arrowhead=onormal,group=IfcConnectionGeometry,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConstraint[label="{IfcConstraint|Name : STRING\nDescription[0-1] : STRING\nConstraintGrade : IfcConstraintEnum\nConstraintSource[0-1] : STRING\nUserDefinedGrade[0-1] : STRING| }"]
;
 node[shape=record];
IfcConstraintAggregationRelationship[label="{IfcConstraintAggregationRelationship|Name[0-1] : STRING\nDescription[0-1] : STRING\nLogicalAggregator : IfcLogicalOperatorEnum| }"]
;
 node[shape=record];
IfcConstraintClassificationRelationship[label="{IfcConstraintClassificationRelationship| | }"]
;
 node[shape=record];
IfcConstraintRelationship[label="{IfcConstraintRelationship|Name[0-1] : STRING\nDescription[0-1] : STRING| }"]
;
 node[shape=record];
IfcConstructionEquipmentResource[label="{IfcConstructionEquipmentResource| | }"]
 IfcConstructionEquipmentResource->IfcConstructionResource[arrowhead=onormal,group=IfcConstructionResource,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConstructionMaterialResource[label="{IfcConstructionMaterialResource|UsageRatio[0-1] : REAL| }"]
 IfcConstructionMaterialResource->IfcConstructionResource[arrowhead=onormal,group=IfcConstructionResource,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConstructionProductResource[label="{IfcConstructionProductResource| | }"]
 IfcConstructionProductResource->IfcConstructionResource[arrowhead=onormal,group=IfcConstructionResource,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConstructionResource[label="{IfcConstructionResource|ResourceIdentifier[0-1] : STRING\nResourceGroup[0-1] : STRING\nResourceConsumption[0-1] : IfcResourceConsumptionEnum| }"]
 IfcConstructionResource->IfcResource[arrowhead=onormal,group=IfcResource,minlen=2,constraint=true,]
;
 node[shape=record];
IfcContextDependentUnit[label="{IfcContextDependentUnit|Name : STRING| }"]
 IfcContextDependentUnit->IfcNamedUnit[arrowhead=onormal,group=IfcNamedUnit,minlen=2,constraint=true,]
;
 node[shape=record];
IfcControl[label="{IfcControl| | }"]
 IfcControl->IfcObject[arrowhead=onormal,group=IfcObject,minlen=2,constraint=true,]
;
 node[shape=record];
IfcControllerType[label="{IfcControllerType|PredefinedType : IfcControllerTypeEnum| }"]
 IfcControllerType->IfcDistributionControlElementType[arrowhead=onormal,group=IfcDistributionControlElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcConversionBasedUnit[label="{IfcConversionBasedUnit|Name : STRING| }"]
 IfcConversionBasedUnit->IfcNamedUnit[arrowhead=onormal,group=IfcNamedUnit,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCooledBeamType[label="{IfcCooledBeamType|PredefinedType : IfcCooledBeamTypeEnum| }"]
 IfcCooledBeamType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCoolingTowerType[label="{IfcCoolingTowerType|PredefinedType : IfcCoolingTowerTypeEnum| }"]
 IfcCoolingTowerType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCoordinatedUniversalTimeOffset[label="{IfcCoordinatedUniversalTimeOffset|HourOffset : INTEGER\nMinuteOffset[0-1] : INTEGER\nSense : IfcAheadOrBehind| }"]
;
 node[shape=record];
IfcCostItem[label="{IfcCostItem| | }"]
 IfcCostItem->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCostSchedule[label="{IfcCostSchedule|Status[0-1] : STRING\nID : STRING\nPredefinedType : IfcCostScheduleTypeEnum| }"]
 IfcCostSchedule->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCostValue[label="{IfcCostValue|CostType : STRING\nCondition[0-1] : STRING| }"]
 IfcCostValue->IfcAppliedValue[arrowhead=onormal,group=IfcAppliedValue,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCovering[label="{IfcCovering|PredefinedType[0-1] : IfcCoveringTypeEnum| }"]
 IfcCovering->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCoveringType[label="{IfcCoveringType|PredefinedType : IfcCoveringTypeEnum| }"]
 IfcCoveringType->IfcBuildingElementType[arrowhead=onormal,group=IfcBuildingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCraneRailAShapeProfileDef[label="{IfcCraneRailAShapeProfileDef|OverallHeight : REAL\nBaseWidth2 : REAL\nRadius[0-1] : REAL\nHeadWidth : REAL\nHeadDepth2 : REAL\nHeadDepth3 : REAL\nWebThickness : REAL\nBaseWidth4 : REAL\nBaseDepth1 : REAL\nBaseDepth2 : REAL\nBaseDepth3 : REAL\nCentreOfGravityInY[0-1] : REAL| }"]
 IfcCraneRailAShapeProfileDef->IfcParameterizedProfileDef[arrowhead=onormal,group=IfcParameterizedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCraneRailFShapeProfileDef[label="{IfcCraneRailFShapeProfileDef|OverallHeight : REAL\nHeadWidth : REAL\nRadius[0-1] : REAL\nHeadDepth2 : REAL\nHeadDepth3 : REAL\nWebThickness : REAL\nBaseDepth1 : REAL\nBaseDepth2 : REAL\nCentreOfGravityInY[0-1] : REAL| }"]
 IfcCraneRailFShapeProfileDef->IfcParameterizedProfileDef[arrowhead=onormal,group=IfcParameterizedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCrewResource[label="{IfcCrewResource| | }"]
 IfcCrewResource->IfcConstructionResource[arrowhead=onormal,group=IfcConstructionResource,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCsgPrimitive3D[label="{IfcCsgPrimitive3D| | }"]
 IfcCsgPrimitive3D->IfcBooleanOperand[arrowhead=onormal,group=IfcBooleanOperand,minlen=2,constraint=true,]
 IfcCsgPrimitive3D->IfcCsgSelect[arrowhead=onormal,group=IfcCsgSelect,minlen=2,constraint=true,]
 IfcCsgPrimitive3D->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCsgSolid[label="{IfcCsgSolid| | }"]
 IfcCsgSolid->IfcSolidModel[arrowhead=onormal,group=IfcSolidModel,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCurrencyRelationship[label="{IfcCurrencyRelationship|ExchangeRate : REAL| }"]
;
 node[shape=record];
IfcCurtainWall[label="{IfcCurtainWall| | }"]
 IfcCurtainWall->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCurtainWallType[label="{IfcCurtainWallType|PredefinedType : IfcCurtainWallTypeEnum| }"]
 IfcCurtainWallType->IfcBuildingElementType[arrowhead=onormal,group=IfcBuildingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCurve[label="{IfcCurve| | }"]
 IfcCurve->IfcGeometricSetSelect[arrowhead=onormal,group=IfcGeometricSetSelect,minlen=2,constraint=true,]
 IfcCurve->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCurveBoundedPlane[label="{IfcCurveBoundedPlane| | }"]
 IfcCurveBoundedPlane->IfcBoundedSurface[arrowhead=onormal,group=IfcBoundedSurface,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCurveStyle[label="{IfcCurveStyle| | }"]
 IfcCurveStyle->IfcPresentationStyle[arrowhead=onormal,group=IfcPresentationStyle,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCurveStyleFont[label="{IfcCurveStyleFont|Name[0-1] : STRING| }"]
 IfcCurveStyleFont->IfcCurveStyleFontSelect[arrowhead=onormal,group=IfcCurveStyleFontSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCurveStyleFontAndScaling[label="{IfcCurveStyleFontAndScaling|Name[0-1] : STRING\nCurveFontScaling : REAL| }"]
 IfcCurveStyleFontAndScaling->IfcCurveFontOrScaledCurveFontSelect[arrowhead=onormal,group=IfcCurveFontOrScaledCurveFontSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcCurveStyleFontPattern[label="{IfcCurveStyleFontPattern|VisibleSegmentLength : REAL\nInvisibleSegmentLength : REAL| }"]
;
 node[shape=record];
IfcDamperType[label="{IfcDamperType|PredefinedType : IfcDamperTypeEnum| }"]
 IfcDamperType->IfcFlowControllerType[arrowhead=onormal,group=IfcFlowControllerType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDateAndTime[label="{IfcDateAndTime| | }"]
 IfcDateAndTime->IfcDateTimeSelect[arrowhead=onormal,group=IfcDateTimeSelect,minlen=2,constraint=true,]
 IfcDateAndTime->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDefinedSymbol[label="{IfcDefinedSymbol| | }"]
 IfcDefinedSymbol->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDerivedProfileDef[label="{IfcDerivedProfileDef|Label[0-1] : STRING| }"]
 IfcDerivedProfileDef->IfcProfileDef[arrowhead=onormal,group=IfcProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDerivedUnit[label="{IfcDerivedUnit|UnitType : IfcDerivedUnitEnum\nUserDefinedType[0-1] : STRING| }"]
 IfcDerivedUnit->IfcUnit[arrowhead=onormal,group=IfcUnit,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDerivedUnitElement[label="{IfcDerivedUnitElement|Exponent : INTEGER| }"]
;
 node[shape=record];
IfcDiameterDimension[label="{IfcDiameterDimension| | }"]
 IfcDiameterDimension->IfcDimensionCurveDirectedCallout[arrowhead=onormal,group=IfcDimensionCurveDirectedCallout,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDimensionCalloutRelationship[label="{IfcDimensionCalloutRelationship| | }"]
 IfcDimensionCalloutRelationship->IfcDraughtingCalloutRelationship[arrowhead=onormal,group=IfcDraughtingCalloutRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDimensionCurve[label="{IfcDimensionCurve| | }"]
 IfcDimensionCurve->IfcAnnotationCurveOccurrence[arrowhead=onormal,group=IfcAnnotationCurveOccurrence,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDimensionCurveDirectedCallout[label="{IfcDimensionCurveDirectedCallout| | }"]
 IfcDimensionCurveDirectedCallout->IfcDraughtingCallout[arrowhead=onormal,group=IfcDraughtingCallout,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDimensionCurveTerminator[label="{IfcDimensionCurveTerminator|Role : IfcDimensionExtentUsage| }"]
 IfcDimensionCurveTerminator->IfcTerminatorSymbol[arrowhead=onormal,group=IfcTerminatorSymbol,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDimensionPair[label="{IfcDimensionPair| | }"]
 IfcDimensionPair->IfcDraughtingCalloutRelationship[arrowhead=onormal,group=IfcDraughtingCalloutRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDimensionalExponents[label="{IfcDimensionalExponents|LengthExponent : INTEGER\nMassExponent : INTEGER\nTimeExponent : INTEGER\nElectricCurrentExponent : INTEGER\nThermodynamicTemperatureExponent : INTEGER\nAmountOfSubstanceExponent : INTEGER\nLuminousIntensityExponent : INTEGER| }"]
;
 node[shape=record];
IfcDirection[label="{IfcDirection|DirectionRatios[23] : REAL| }"]
 IfcDirection->IfcVectorOrDirection[arrowhead=onormal,group=IfcVectorOrDirection,minlen=2,constraint=true,]
 IfcDirection->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDiscreteAccessory[label="{IfcDiscreteAccessory| | }"]
 IfcDiscreteAccessory->IfcElementComponent[arrowhead=onormal,group=IfcElementComponent,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDiscreteAccessoryType[label="{IfcDiscreteAccessoryType| | }"]
 IfcDiscreteAccessoryType->IfcElementComponentType[arrowhead=onormal,group=IfcElementComponentType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDistributionChamberElement[label="{IfcDistributionChamberElement| | }"]
 IfcDistributionChamberElement->IfcDistributionFlowElement[arrowhead=onormal,group=IfcDistributionFlowElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDistributionChamberElementType[label="{IfcDistributionChamberElementType|PredefinedType : IfcDistributionChamberElementTypeEnum| }"]
 IfcDistributionChamberElementType->IfcDistributionFlowElementType[arrowhead=onormal,group=IfcDistributionFlowElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDistributionControlElement[label="{IfcDistributionControlElement|ControlElementId[0-1] : STRING| }"]
 IfcDistributionControlElement->IfcDistributionElement[arrowhead=onormal,group=IfcDistributionElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDistributionControlElementType[label="{IfcDistributionControlElementType| | }"]
 IfcDistributionControlElementType->IfcDistributionElementType[arrowhead=onormal,group=IfcDistributionElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDistributionElement[label="{IfcDistributionElement| | }"]
 IfcDistributionElement->IfcElement[arrowhead=onormal,group=IfcElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDistributionElementType[label="{IfcDistributionElementType| | }"]
 IfcDistributionElementType->IfcElementType[arrowhead=onormal,group=IfcElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDistributionFlowElement[label="{IfcDistributionFlowElement| | }"]
 IfcDistributionFlowElement->IfcDistributionElement[arrowhead=onormal,group=IfcDistributionElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDistributionFlowElementType[label="{IfcDistributionFlowElementType| | }"]
 IfcDistributionFlowElementType->IfcDistributionElementType[arrowhead=onormal,group=IfcDistributionElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDistributionPort[label="{IfcDistributionPort|FlowDirection[0-1] : IfcFlowDirectionEnum| }"]
 IfcDistributionPort->IfcPort[arrowhead=onormal,group=IfcPort,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDocumentElectronicFormat[label="{IfcDocumentElectronicFormat|FileExtension[0-1] : STRING\nMimeContentType[0-1] : STRING\nMimeSubtype[0-1] : STRING| }"]
;
 node[shape=record];
IfcDocumentInformation[label="{IfcDocumentInformation|DocumentId : STRING\nName : STRING\nDescription[0-1] : STRING\nPurpose[0-1] : STRING\nIntendedUse[0-1] : STRING\nScope[0-1] : STRING\nRevision[0-1] : STRING\nConfidentiality[0-1] : IfcDocumentConfidentialityEnum\nStatus[0-1] : IfcDocumentStatusEnum| }"]
 IfcDocumentInformation->IfcDocumentSelect[arrowhead=onormal,group=IfcDocumentSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDocumentInformationRelationship[label="{IfcDocumentInformationRelationship|RelationshipType[0-1] : STRING| }"]
;
 node[shape=record];
IfcDocumentReference[label="{IfcDocumentReference| | }"]
 IfcDocumentReference->IfcDocumentSelect[arrowhead=onormal,group=IfcDocumentSelect,minlen=2,constraint=true,]
 IfcDocumentReference->IfcExternalReference[arrowhead=onormal,group=IfcExternalReference,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDoor[label="{IfcDoor|OverallHeight[0-1] : REAL\nOverallWidth[0-1] : REAL| }"]
 IfcDoor->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDoorLiningProperties[label="{IfcDoorLiningProperties|LiningDepth[0-1] : REAL\nLiningThickness[0-1] : REAL\nThresholdDepth[0-1] : REAL\nThresholdThickness[0-1] : REAL\nTransomThickness[0-1] : REAL\nTransomOffset[0-1] : REAL\nLiningOffset[0-1] : REAL\nThresholdOffset[0-1] : REAL\nCasingThickness[0-1] : REAL\nCasingDepth[0-1] : REAL| }"]
 IfcDoorLiningProperties->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDoorPanelProperties[label="{IfcDoorPanelProperties|PanelDepth[0-1] : REAL\nPanelOperation : IfcDoorPanelOperationEnum\nPanelWidth[0-1] : REAL\nPanelPosition : IfcDoorPanelPositionEnum| }"]
 IfcDoorPanelProperties->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDoorStyle[label="{IfcDoorStyle|OperationType : IfcDoorStyleOperationEnum\nConstructionType : IfcDoorStyleConstructionEnum\nParameterTakesPrecedence : BOOLEAN\nSizeable : BOOLEAN| }"]
 IfcDoorStyle->IfcTypeProduct[arrowhead=onormal,group=IfcTypeProduct,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDraughtingCallout[label="{IfcDraughtingCallout| | }"]
 IfcDraughtingCallout->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDraughtingCalloutRelationship[label="{IfcDraughtingCalloutRelationship|Name[0-1] : STRING\nDescription[0-1] : STRING| }"]
;
 node[shape=record];
IfcDraughtingPreDefinedColour[label="{IfcDraughtingPreDefinedColour| | }"]
 IfcDraughtingPreDefinedColour->IfcPreDefinedColour[arrowhead=onormal,group=IfcPreDefinedColour,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDraughtingPreDefinedCurveFont[label="{IfcDraughtingPreDefinedCurveFont| | }"]
 IfcDraughtingPreDefinedCurveFont->IfcPreDefinedCurveFont[arrowhead=onormal,group=IfcPreDefinedCurveFont,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDraughtingPreDefinedTextFont[label="{IfcDraughtingPreDefinedTextFont| | }"]
 IfcDraughtingPreDefinedTextFont->IfcPreDefinedTextFont[arrowhead=onormal,group=IfcPreDefinedTextFont,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDuctFittingType[label="{IfcDuctFittingType|PredefinedType : IfcDuctFittingTypeEnum| }"]
 IfcDuctFittingType->IfcFlowFittingType[arrowhead=onormal,group=IfcFlowFittingType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDuctSegmentType[label="{IfcDuctSegmentType|PredefinedType : IfcDuctSegmentTypeEnum| }"]
 IfcDuctSegmentType->IfcFlowSegmentType[arrowhead=onormal,group=IfcFlowSegmentType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcDuctSilencerType[label="{IfcDuctSilencerType|PredefinedType : IfcDuctSilencerTypeEnum| }"]
 IfcDuctSilencerType->IfcFlowTreatmentDeviceType[arrowhead=onormal,group=IfcFlowTreatmentDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEdge[label="{IfcEdge| | }"]
 IfcEdge->IfcTopologicalRepresentationItem[arrowhead=onormal,group=IfcTopologicalRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEdgeCurve[label="{IfcEdgeCurve|SameSense : BOOLEAN| }"]
 IfcEdgeCurve->IfcCurveOrEdgeCurve[arrowhead=onormal,group=IfcCurveOrEdgeCurve,minlen=2,constraint=true,]
 IfcEdgeCurve->IfcEdge[arrowhead=onormal,group=IfcEdge,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEdgeFeature[label="{IfcEdgeFeature|FeatureLength[0-1] : REAL| }"]
 IfcEdgeFeature->IfcFeatureElementSubtraction[arrowhead=onormal,group=IfcFeatureElementSubtraction,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEdgeLoop[label="{IfcEdgeLoop| | }"]
 IfcEdgeLoop->IfcLoop[arrowhead=onormal,group=IfcLoop,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElectricApplianceType[label="{IfcElectricApplianceType|PredefinedType : IfcElectricApplianceTypeEnum| }"]
 IfcElectricApplianceType->IfcFlowTerminalType[arrowhead=onormal,group=IfcFlowTerminalType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElectricDistributionPoint[label="{IfcElectricDistributionPoint|DistributionPointFunction : IfcElectricDistributionPointFunctionEnum\nUserDefinedFunction[0-1] : STRING| }"]
 IfcElectricDistributionPoint->IfcFlowController[arrowhead=onormal,group=IfcFlowController,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElectricFlowStorageDeviceType[label="{IfcElectricFlowStorageDeviceType|PredefinedType : IfcElectricFlowStorageDeviceTypeEnum| }"]
 IfcElectricFlowStorageDeviceType->IfcFlowStorageDeviceType[arrowhead=onormal,group=IfcFlowStorageDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElectricGeneratorType[label="{IfcElectricGeneratorType|PredefinedType : IfcElectricGeneratorTypeEnum| }"]
 IfcElectricGeneratorType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElectricHeaterType[label="{IfcElectricHeaterType|PredefinedType : IfcElectricHeaterTypeEnum| }"]
 IfcElectricHeaterType->IfcFlowTerminalType[arrowhead=onormal,group=IfcFlowTerminalType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElectricMotorType[label="{IfcElectricMotorType|PredefinedType : IfcElectricMotorTypeEnum| }"]
 IfcElectricMotorType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElectricTimeControlType[label="{IfcElectricTimeControlType|PredefinedType : IfcElectricTimeControlTypeEnum| }"]
 IfcElectricTimeControlType->IfcFlowControllerType[arrowhead=onormal,group=IfcFlowControllerType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElectricalBaseProperties[label="{IfcElectricalBaseProperties|ElectricCurrentType[0-1] : IfcElectricCurrentEnum\nInputVoltage : REAL\nInputFrequency : REAL\nFullLoadCurrent[0-1] : REAL\nMinimumCircuitCurrent[0-1] : REAL\nMaximumPowerInput[0-1] : REAL\nRatedPowerInput[0-1] : REAL\nInputPhase : INTEGER| }"]
 IfcElectricalBaseProperties->IfcEnergyProperties[arrowhead=onormal,group=IfcEnergyProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElectricalCircuit[label="{IfcElectricalCircuit| | }"]
 IfcElectricalCircuit->IfcSystem[arrowhead=onormal,group=IfcSystem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElectricalElement[label="{IfcElectricalElement| | }"]
 IfcElectricalElement->IfcElement[arrowhead=onormal,group=IfcElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElement[label="{IfcElement|Tag[0-1] : STRING| }"]
 IfcElement->IfcStructuralActivityAssignmentSelect[arrowhead=onormal,group=IfcStructuralActivityAssignmentSelect,minlen=2,constraint=true,]
 IfcElement->IfcProduct[arrowhead=onormal,group=IfcProduct,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElementAssembly[label="{IfcElementAssembly|AssemblyPlace[0-1] : IfcAssemblyPlaceEnum\nPredefinedType : IfcElementAssemblyTypeEnum| }"]
 IfcElementAssembly->IfcElement[arrowhead=onormal,group=IfcElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElementComponent[label="{IfcElementComponent| | }"]
 IfcElementComponent->IfcElement[arrowhead=onormal,group=IfcElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElementComponentType[label="{IfcElementComponentType| | }"]
 IfcElementComponentType->IfcElementType[arrowhead=onormal,group=IfcElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElementQuantity[label="{IfcElementQuantity|MethodOfMeasurement[0-1] : STRING| }"]
 IfcElementQuantity->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElementType[label="{IfcElementType|ElementType[0-1] : STRING| }"]
 IfcElementType->IfcTypeProduct[arrowhead=onormal,group=IfcTypeProduct,minlen=2,constraint=true,]
;
 node[shape=record];
IfcElementarySurface[label="{IfcElementarySurface| | }"]
 IfcElementarySurface->IfcSurface[arrowhead=onormal,group=IfcSurface,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEllipse[label="{IfcEllipse|SemiAxis1 : REAL\nSemiAxis2 : REAL| }"]
 IfcEllipse->IfcConic[arrowhead=onormal,group=IfcConic,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEllipseProfileDef[label="{IfcEllipseProfileDef|SemiAxis1 : REAL\nSemiAxis2 : REAL| }"]
 IfcEllipseProfileDef->IfcParameterizedProfileDef[arrowhead=onormal,group=IfcParameterizedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEnergyConversionDevice[label="{IfcEnergyConversionDevice| | }"]
 IfcEnergyConversionDevice->IfcDistributionFlowElement[arrowhead=onormal,group=IfcDistributionFlowElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEnergyConversionDeviceType[label="{IfcEnergyConversionDeviceType| | }"]
 IfcEnergyConversionDeviceType->IfcDistributionFlowElementType[arrowhead=onormal,group=IfcDistributionFlowElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEnergyProperties[label="{IfcEnergyProperties|EnergySequence[0-1] : IfcEnergySequenceEnum\nUserDefinedEnergySequence[0-1] : STRING| }"]
 IfcEnergyProperties->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEnvironmentalImpactValue[label="{IfcEnvironmentalImpactValue|ImpactType : STRING\nCategory : IfcEnvironmentalImpactCategoryEnum\nUserDefinedCategory[0-1] : STRING| }"]
 IfcEnvironmentalImpactValue->IfcAppliedValue[arrowhead=onormal,group=IfcAppliedValue,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEquipmentElement[label="{IfcEquipmentElement| | }"]
 IfcEquipmentElement->IfcElement[arrowhead=onormal,group=IfcElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEquipmentStandard[label="{IfcEquipmentStandard| | }"]
 IfcEquipmentStandard->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEvaporativeCoolerType[label="{IfcEvaporativeCoolerType|PredefinedType : IfcEvaporativeCoolerTypeEnum| }"]
 IfcEvaporativeCoolerType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcEvaporatorType[label="{IfcEvaporatorType|PredefinedType : IfcEvaporatorTypeEnum| }"]
 IfcEvaporatorType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcExtendedMaterialProperties[label="{IfcExtendedMaterialProperties|Description[0-1] : STRING\nName : STRING| }"]
 IfcExtendedMaterialProperties->IfcMaterialProperties[arrowhead=onormal,group=IfcMaterialProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcExternalReference[label="{IfcExternalReference|Location[0-1] : STRING\nItemReference[0-1] : STRING\nName[0-1] : STRING| }"]
 IfcExternalReference->IfcLightDistributionDataSourceSelect[arrowhead=onormal,group=IfcLightDistributionDataSourceSelect,minlen=2,constraint=true,]
 IfcExternalReference->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcExternallyDefinedHatchStyle[label="{IfcExternallyDefinedHatchStyle| | }"]
 IfcExternallyDefinedHatchStyle->IfcFillStyleSelect[arrowhead=onormal,group=IfcFillStyleSelect,minlen=2,constraint=true,]
 IfcExternallyDefinedHatchStyle->IfcExternalReference[arrowhead=onormal,group=IfcExternalReference,minlen=2,constraint=true,]
;
 node[shape=record];
IfcExternallyDefinedSurfaceStyle[label="{IfcExternallyDefinedSurfaceStyle| | }"]
 IfcExternallyDefinedSurfaceStyle->IfcSurfaceStyleElementSelect[arrowhead=onormal,group=IfcSurfaceStyleElementSelect,minlen=2,constraint=true,]
 IfcExternallyDefinedSurfaceStyle->IfcExternalReference[arrowhead=onormal,group=IfcExternalReference,minlen=2,constraint=true,]
;
 node[shape=record];
IfcExternallyDefinedSymbol[label="{IfcExternallyDefinedSymbol| | }"]
 IfcExternallyDefinedSymbol->IfcDefinedSymbolSelect[arrowhead=onormal,group=IfcDefinedSymbolSelect,minlen=2,constraint=true,]
 IfcExternallyDefinedSymbol->IfcExternalReference[arrowhead=onormal,group=IfcExternalReference,minlen=2,constraint=true,]
;
 node[shape=record];
IfcExternallyDefinedTextFont[label="{IfcExternallyDefinedTextFont| | }"]
 IfcExternallyDefinedTextFont->IfcTextFontSelect[arrowhead=onormal,group=IfcTextFontSelect,minlen=2,constraint=true,]
 IfcExternallyDefinedTextFont->IfcExternalReference[arrowhead=onormal,group=IfcExternalReference,minlen=2,constraint=true,]
;
 node[shape=record];
IfcExtrudedAreaSolid[label="{IfcExtrudedAreaSolid|Depth : REAL| }"]
 IfcExtrudedAreaSolid->IfcSweptAreaSolid[arrowhead=onormal,group=IfcSweptAreaSolid,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFace[label="{IfcFace| | }"]
 IfcFace->IfcTopologicalRepresentationItem[arrowhead=onormal,group=IfcTopologicalRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFaceBasedSurfaceModel[label="{IfcFaceBasedSurfaceModel| | }"]
 IfcFaceBasedSurfaceModel->IfcSurfaceOrFaceSurface[arrowhead=onormal,group=IfcSurfaceOrFaceSurface,minlen=2,constraint=true,]
 IfcFaceBasedSurfaceModel->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFaceBound[label="{IfcFaceBound|Orientation : BOOLEAN| }"]
 IfcFaceBound->IfcTopologicalRepresentationItem[arrowhead=onormal,group=IfcTopologicalRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFaceOuterBound[label="{IfcFaceOuterBound| | }"]
 IfcFaceOuterBound->IfcFaceBound[arrowhead=onormal,group=IfcFaceBound,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFaceSurface[label="{IfcFaceSurface|SameSense : BOOLEAN| }"]
 IfcFaceSurface->IfcSurfaceOrFaceSurface[arrowhead=onormal,group=IfcSurfaceOrFaceSurface,minlen=2,constraint=true,]
 IfcFaceSurface->IfcFace[arrowhead=onormal,group=IfcFace,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFacetedBrep[label="{IfcFacetedBrep| | }"]
 IfcFacetedBrep->IfcManifoldSolidBrep[arrowhead=onormal,group=IfcManifoldSolidBrep,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFacetedBrepWithVoids[label="{IfcFacetedBrepWithVoids| | }"]
 IfcFacetedBrepWithVoids->IfcManifoldSolidBrep[arrowhead=onormal,group=IfcManifoldSolidBrep,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFailureConnectionCondition[label="{IfcFailureConnectionCondition|TensionFailureX[0-1] : REAL\nTensionFailureY[0-1] : REAL\nTensionFailureZ[0-1] : REAL\nCompressionFailureX[0-1] : REAL\nCompressionFailureY[0-1] : REAL\nCompressionFailureZ[0-1] : REAL| }"]
 IfcFailureConnectionCondition->IfcStructuralConnectionCondition[arrowhead=onormal,group=IfcStructuralConnectionCondition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFanType[label="{IfcFanType|PredefinedType : IfcFanTypeEnum| }"]
 IfcFanType->IfcFlowMovingDeviceType[arrowhead=onormal,group=IfcFlowMovingDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFastener[label="{IfcFastener| | }"]
 IfcFastener->IfcElementComponent[arrowhead=onormal,group=IfcElementComponent,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFastenerType[label="{IfcFastenerType| | }"]
 IfcFastenerType->IfcElementComponentType[arrowhead=onormal,group=IfcElementComponentType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFeatureElement[label="{IfcFeatureElement| | }"]
 IfcFeatureElement->IfcElement[arrowhead=onormal,group=IfcElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFeatureElementAddition[label="{IfcFeatureElementAddition| | }"]
 IfcFeatureElementAddition->IfcFeatureElement[arrowhead=onormal,group=IfcFeatureElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFeatureElementSubtraction[label="{IfcFeatureElementSubtraction| | }"]
 IfcFeatureElementSubtraction->IfcFeatureElement[arrowhead=onormal,group=IfcFeatureElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFillAreaStyle[label="{IfcFillAreaStyle| | }"]
 IfcFillAreaStyle->IfcPresentationStyle[arrowhead=onormal,group=IfcPresentationStyle,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFillAreaStyleHatching[label="{IfcFillAreaStyleHatching|HatchLineAngle : REAL| }"]
 IfcFillAreaStyleHatching->IfcFillStyleSelect[arrowhead=onormal,group=IfcFillStyleSelect,minlen=2,constraint=true,]
 IfcFillAreaStyleHatching->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFillAreaStyleTileSymbolWithStyle[label="{IfcFillAreaStyleTileSymbolWithStyle| | }"]
 IfcFillAreaStyleTileSymbolWithStyle->IfcFillAreaStyleTileShapeSelect[arrowhead=onormal,group=IfcFillAreaStyleTileShapeSelect,minlen=2,constraint=true,]
 IfcFillAreaStyleTileSymbolWithStyle->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFillAreaStyleTiles[label="{IfcFillAreaStyleTiles|TilingScale : REAL| }"]
 IfcFillAreaStyleTiles->IfcFillStyleSelect[arrowhead=onormal,group=IfcFillStyleSelect,minlen=2,constraint=true,]
 IfcFillAreaStyleTiles->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFilterType[label="{IfcFilterType|PredefinedType : IfcFilterTypeEnum| }"]
 IfcFilterType->IfcFlowTreatmentDeviceType[arrowhead=onormal,group=IfcFlowTreatmentDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFireSuppressionTerminalType[label="{IfcFireSuppressionTerminalType|PredefinedType : IfcFireSuppressionTerminalTypeEnum| }"]
 IfcFireSuppressionTerminalType->IfcFlowTerminalType[arrowhead=onormal,group=IfcFlowTerminalType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowController[label="{IfcFlowController| | }"]
 IfcFlowController->IfcDistributionFlowElement[arrowhead=onormal,group=IfcDistributionFlowElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowControllerType[label="{IfcFlowControllerType| | }"]
 IfcFlowControllerType->IfcDistributionFlowElementType[arrowhead=onormal,group=IfcDistributionFlowElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowFitting[label="{IfcFlowFitting| | }"]
 IfcFlowFitting->IfcDistributionFlowElement[arrowhead=onormal,group=IfcDistributionFlowElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowFittingType[label="{IfcFlowFittingType| | }"]
 IfcFlowFittingType->IfcDistributionFlowElementType[arrowhead=onormal,group=IfcDistributionFlowElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowInstrumentType[label="{IfcFlowInstrumentType|PredefinedType : IfcFlowInstrumentTypeEnum| }"]
 IfcFlowInstrumentType->IfcDistributionControlElementType[arrowhead=onormal,group=IfcDistributionControlElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowMeterType[label="{IfcFlowMeterType|PredefinedType : IfcFlowMeterTypeEnum| }"]
 IfcFlowMeterType->IfcFlowControllerType[arrowhead=onormal,group=IfcFlowControllerType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowMovingDevice[label="{IfcFlowMovingDevice| | }"]
 IfcFlowMovingDevice->IfcDistributionFlowElement[arrowhead=onormal,group=IfcDistributionFlowElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowMovingDeviceType[label="{IfcFlowMovingDeviceType| | }"]
 IfcFlowMovingDeviceType->IfcDistributionFlowElementType[arrowhead=onormal,group=IfcDistributionFlowElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowSegment[label="{IfcFlowSegment| | }"]
 IfcFlowSegment->IfcDistributionFlowElement[arrowhead=onormal,group=IfcDistributionFlowElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowSegmentType[label="{IfcFlowSegmentType| | }"]
 IfcFlowSegmentType->IfcDistributionFlowElementType[arrowhead=onormal,group=IfcDistributionFlowElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowStorageDevice[label="{IfcFlowStorageDevice| | }"]
 IfcFlowStorageDevice->IfcDistributionFlowElement[arrowhead=onormal,group=IfcDistributionFlowElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowStorageDeviceType[label="{IfcFlowStorageDeviceType| | }"]
 IfcFlowStorageDeviceType->IfcDistributionFlowElementType[arrowhead=onormal,group=IfcDistributionFlowElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowTerminal[label="{IfcFlowTerminal| | }"]
 IfcFlowTerminal->IfcDistributionFlowElement[arrowhead=onormal,group=IfcDistributionFlowElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowTerminalType[label="{IfcFlowTerminalType| | }"]
 IfcFlowTerminalType->IfcDistributionFlowElementType[arrowhead=onormal,group=IfcDistributionFlowElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowTreatmentDevice[label="{IfcFlowTreatmentDevice| | }"]
 IfcFlowTreatmentDevice->IfcDistributionFlowElement[arrowhead=onormal,group=IfcDistributionFlowElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFlowTreatmentDeviceType[label="{IfcFlowTreatmentDeviceType| | }"]
 IfcFlowTreatmentDeviceType->IfcDistributionFlowElementType[arrowhead=onormal,group=IfcDistributionFlowElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFluidFlowProperties[label="{IfcFluidFlowProperties|PropertySource : IfcPropertySourceEnum\nUserDefinedPropertySource[0-1] : STRING\nTemperatureSingleValue[0-1] : REAL\nWetBulbTemperatureSingleValue[0-1] : REAL\nFlowConditionSingleValue[0-1] : REAL\nVelocitySingleValue[0-1] : REAL\nPressureSingleValue[0-1] : REAL| }"]
 IfcFluidFlowProperties->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFooting[label="{IfcFooting|PredefinedType : IfcFootingTypeEnum| }"]
 IfcFooting->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFuelProperties[label="{IfcFuelProperties|CombustionTemperature[0-1] : REAL\nCarbonContent[0-1] : REAL\nLowerHeatingValue[0-1] : REAL\nHigherHeatingValue[0-1] : REAL| }"]
 IfcFuelProperties->IfcMaterialProperties[arrowhead=onormal,group=IfcMaterialProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFurnishingElement[label="{IfcFurnishingElement| | }"]
 IfcFurnishingElement->IfcElement[arrowhead=onormal,group=IfcElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFurnishingElementType[label="{IfcFurnishingElementType| | }"]
 IfcFurnishingElementType->IfcElementType[arrowhead=onormal,group=IfcElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFurnitureStandard[label="{IfcFurnitureStandard| | }"]
 IfcFurnitureStandard->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcFurnitureType[label="{IfcFurnitureType|AssemblyPlace : IfcAssemblyPlaceEnum| }"]
 IfcFurnitureType->IfcFurnishingElementType[arrowhead=onormal,group=IfcFurnishingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcGasTerminalType[label="{IfcGasTerminalType|PredefinedType : IfcGasTerminalTypeEnum| }"]
 IfcGasTerminalType->IfcFlowTerminalType[arrowhead=onormal,group=IfcFlowTerminalType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcGeneralMaterialProperties[label="{IfcGeneralMaterialProperties|MolecularWeight[0-1] : REAL\nPorosity[0-1] : REAL\nMassDensity[0-1] : REAL| }"]
 IfcGeneralMaterialProperties->IfcMaterialProperties[arrowhead=onormal,group=IfcMaterialProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcGeneralProfileProperties[label="{IfcGeneralProfileProperties|PhysicalWeight[0-1] : REAL\nPerimeter[0-1] : REAL\nMinimumPlateThickness[0-1] : REAL\nMaximumPlateThickness[0-1] : REAL\nCrossSectionArea[0-1] : REAL| }"]
 IfcGeneralProfileProperties->IfcProfileProperties[arrowhead=onormal,group=IfcProfileProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcGeometricCurveSet[label="{IfcGeometricCurveSet| | }"]
 IfcGeometricCurveSet->IfcGeometricSet[arrowhead=onormal,group=IfcGeometricSet,minlen=2,constraint=true,]
;
 node[shape=record];
IfcGeometricRepresentationContext[label="{IfcGeometricRepresentationContext|CoordinateSpaceDimension : INTEGER\nPrecision[0-1] : REAL| }"]
 IfcGeometricRepresentationContext->IfcRepresentationContext[arrowhead=onormal,group=IfcRepresentationContext,minlen=2,constraint=true,]
;
 node[shape=record];
IfcGeometricRepresentationItem[label="{IfcGeometricRepresentationItem| | }"]
 IfcGeometricRepresentationItem->IfcRepresentationItem[arrowhead=onormal,group=IfcRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcGeometricRepresentationSubContext[label="{IfcGeometricRepresentationSubContext|TargetScale[0-1] : REAL\nTargetView : IfcGeometricProjectionEnum\nUserDefinedTargetView[0-1] : STRING| }"]
 IfcGeometricRepresentationSubContext->IfcGeometricRepresentationContext[arrowhead=onormal,group=IfcGeometricRepresentationContext,minlen=2,constraint=true,]
;
 node[shape=record];
IfcGeometricSet[label="{IfcGeometricSet| | }"]
 IfcGeometricSet->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcGrid[label="{IfcGrid| | }"]
 IfcGrid->IfcProduct[arrowhead=onormal,group=IfcProduct,minlen=2,constraint=true,]
;
 node[shape=record];
IfcGridAxis[label="{IfcGridAxis|AxisTag[0-1] : STRING\nSameSense : BOOLEAN| }"]
;
 node[shape=record];
IfcGridPlacement[label="{IfcGridPlacement| | }"]
 IfcGridPlacement->IfcObjectPlacement[arrowhead=onormal,group=IfcObjectPlacement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcGroup[label="{IfcGroup| | }"]
 IfcGroup->IfcObject[arrowhead=onormal,group=IfcObject,minlen=2,constraint=true,]
;
 node[shape=record];
IfcHalfSpaceSolid[label="{IfcHalfSpaceSolid|AgreementFlag : BOOLEAN| }"]
 IfcHalfSpaceSolid->IfcBooleanOperand[arrowhead=onormal,group=IfcBooleanOperand,minlen=2,constraint=true,]
 IfcHalfSpaceSolid->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcHeatExchangerType[label="{IfcHeatExchangerType|PredefinedType : IfcHeatExchangerTypeEnum| }"]
 IfcHeatExchangerType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcHumidifierType[label="{IfcHumidifierType|PredefinedType : IfcHumidifierTypeEnum| }"]
 IfcHumidifierType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcHygroscopicMaterialProperties[label="{IfcHygroscopicMaterialProperties|UpperVaporResistanceFactor[0-1] : REAL\nLowerVaporResistanceFactor[0-1] : REAL\nIsothermalMoistureCapacity[0-1] : REAL\nVaporPermeability[0-1] : REAL\nMoistureDiffusivity[0-1] : REAL| }"]
 IfcHygroscopicMaterialProperties->IfcMaterialProperties[arrowhead=onormal,group=IfcMaterialProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcIShapeProfileDef[label="{IfcIShapeProfileDef|OverallWidth : REAL\nOverallDepth : REAL\nWebThickness : REAL\nFlangeThickness : REAL\nFilletRadius[0-1] : REAL| }"]
 IfcIShapeProfileDef->IfcParameterizedProfileDef[arrowhead=onormal,group=IfcParameterizedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcImageTexture[label="{IfcImageTexture|UrlReference : STRING| }"]
 IfcImageTexture->IfcSurfaceTexture[arrowhead=onormal,group=IfcSurfaceTexture,minlen=2,constraint=true,]
;
 node[shape=record];
IfcInventory[label="{IfcInventory|InventoryType : IfcInventoryTypeEnum| }"]
 IfcInventory->IfcGroup[arrowhead=onormal,group=IfcGroup,minlen=2,constraint=true,]
;
 node[shape=record];
IfcIrregularTimeSeries[label="{IfcIrregularTimeSeries| | }"]
 IfcIrregularTimeSeries->IfcTimeSeries[arrowhead=onormal,group=IfcTimeSeries,minlen=2,constraint=true,]
;
 node[shape=record];
IfcIrregularTimeSeriesValue[label="{IfcIrregularTimeSeriesValue| | }"]
;
 node[shape=record];
IfcJunctionBoxType[label="{IfcJunctionBoxType|PredefinedType : IfcJunctionBoxTypeEnum| }"]
 IfcJunctionBoxType->IfcFlowFittingType[arrowhead=onormal,group=IfcFlowFittingType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLShapeProfileDef[label="{IfcLShapeProfileDef|Depth : REAL\nWidth[0-1] : REAL\nThickness : REAL\nFilletRadius[0-1] : REAL\nEdgeRadius[0-1] : REAL\nLegSlope[0-1] : REAL\nCentreOfGravityInX[0-1] : REAL\nCentreOfGravityInY[0-1] : REAL| }"]
 IfcLShapeProfileDef->IfcParameterizedProfileDef[arrowhead=onormal,group=IfcParameterizedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLaborResource[label="{IfcLaborResource|SkillSet[0-1] : STRING| }"]
 IfcLaborResource->IfcConstructionResource[arrowhead=onormal,group=IfcConstructionResource,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLampType[label="{IfcLampType|PredefinedType : IfcLampTypeEnum| }"]
 IfcLampType->IfcFlowTerminalType[arrowhead=onormal,group=IfcFlowTerminalType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLibraryInformation[label="{IfcLibraryInformation|Name : STRING\nVersion[0-1] : STRING| }"]
 IfcLibraryInformation->IfcLibrarySelect[arrowhead=onormal,group=IfcLibrarySelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLibraryReference[label="{IfcLibraryReference| | }"]
 IfcLibraryReference->IfcLibrarySelect[arrowhead=onormal,group=IfcLibrarySelect,minlen=2,constraint=true,]
 IfcLibraryReference->IfcExternalReference[arrowhead=onormal,group=IfcExternalReference,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLightDistributionData[label="{IfcLightDistributionData|MainPlaneAngle : REAL\nSecondaryPlaneAngle[1-*] : REAL\nLuminousIntensity[1-*] : REAL| }"]
;
 node[shape=record];
IfcLightFixtureType[label="{IfcLightFixtureType|PredefinedType : IfcLightFixtureTypeEnum| }"]
 IfcLightFixtureType->IfcFlowTerminalType[arrowhead=onormal,group=IfcFlowTerminalType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLightIntensityDistribution[label="{IfcLightIntensityDistribution|LightDistributionCurve : IfcLightDistributionCurveEnum| }"]
 IfcLightIntensityDistribution->IfcLightDistributionDataSourceSelect[arrowhead=onormal,group=IfcLightDistributionDataSourceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLightSource[label="{IfcLightSource|Name[0-1] : STRING\nAmbientIntensity[0-1] : REAL\nIntensity[0-1] : REAL| }"]
 IfcLightSource->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLightSourceAmbient[label="{IfcLightSourceAmbient| | }"]
 IfcLightSourceAmbient->IfcLightSource[arrowhead=onormal,group=IfcLightSource,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLightSourceDirectional[label="{IfcLightSourceDirectional| | }"]
 IfcLightSourceDirectional->IfcLightSource[arrowhead=onormal,group=IfcLightSource,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLightSourceGoniometric[label="{IfcLightSourceGoniometric|ColourTemperature : REAL\nLuminousFlux : REAL\nLightEmissionSource : IfcLightEmissionSourceEnum| }"]
 IfcLightSourceGoniometric->IfcLightSource[arrowhead=onormal,group=IfcLightSource,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLightSourcePositional[label="{IfcLightSourcePositional|Radius : REAL\nConstantAttenuation : REAL\nDistanceAttenuation : REAL\nQuadricAttenuation : REAL| }"]
 IfcLightSourcePositional->IfcLightSource[arrowhead=onormal,group=IfcLightSource,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLightSourceSpot[label="{IfcLightSourceSpot|ConcentrationExponent[0-1] : REAL\nSpreadAngle : REAL\nBeamWidthAngle : REAL| }"]
 IfcLightSourceSpot->IfcLightSourcePositional[arrowhead=onormal,group=IfcLightSourcePositional,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLine[label="{IfcLine| | }"]
 IfcLine->IfcCurve[arrowhead=onormal,group=IfcCurve,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLinearDimension[label="{IfcLinearDimension| | }"]
 IfcLinearDimension->IfcDimensionCurveDirectedCallout[arrowhead=onormal,group=IfcDimensionCurveDirectedCallout,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLocalPlacement[label="{IfcLocalPlacement| | }"]
 IfcLocalPlacement->IfcObjectPlacement[arrowhead=onormal,group=IfcObjectPlacement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLocalTime[label="{IfcLocalTime|HourComponent : INTEGER\nMinuteComponent[0-1] : INTEGER\nSecondComponent[0-1] : REAL\nDaylightSavingOffset[0-1] : INTEGER| }"]
 IfcLocalTime->IfcDateTimeSelect[arrowhead=onormal,group=IfcDateTimeSelect,minlen=2,constraint=true,]
 IfcLocalTime->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcLoop[label="{IfcLoop| | }"]
 IfcLoop->IfcTopologicalRepresentationItem[arrowhead=onormal,group=IfcTopologicalRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcManifoldSolidBrep[label="{IfcManifoldSolidBrep| | }"]
 IfcManifoldSolidBrep->IfcSolidModel[arrowhead=onormal,group=IfcSolidModel,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMappedItem[label="{IfcMappedItem| | }"]
 IfcMappedItem->IfcRepresentationItem[arrowhead=onormal,group=IfcRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMaterial[label="{IfcMaterial|Name : STRING| }"]
 IfcMaterial->IfcMaterialSelect[arrowhead=onormal,group=IfcMaterialSelect,minlen=2,constraint=true,]
 IfcMaterial->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMaterialClassificationRelationship[label="{IfcMaterialClassificationRelationship| | }"]
;
 node[shape=record];
IfcMaterialDefinitionRepresentation[label="{IfcMaterialDefinitionRepresentation| | }"]
 IfcMaterialDefinitionRepresentation->IfcProductRepresentation[arrowhead=onormal,group=IfcProductRepresentation,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMaterialLayer[label="{IfcMaterialLayer|LayerThickness : REAL\nIsVentilated[0-1] : LOGICAL| }"]
 IfcMaterialLayer->IfcMaterialSelect[arrowhead=onormal,group=IfcMaterialSelect,minlen=2,constraint=true,]
 IfcMaterialLayer->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMaterialLayerSet[label="{IfcMaterialLayerSet|LayerSetName[0-1] : STRING| }"]
 IfcMaterialLayerSet->IfcMaterialSelect[arrowhead=onormal,group=IfcMaterialSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMaterialLayerSetUsage[label="{IfcMaterialLayerSetUsage|LayerSetDirection : IfcLayerSetDirectionEnum\nDirectionSense : IfcDirectionSenseEnum\nOffsetFromReferenceLine : REAL| }"]
 IfcMaterialLayerSetUsage->IfcMaterialSelect[arrowhead=onormal,group=IfcMaterialSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMaterialList[label="{IfcMaterialList| | }"]
 IfcMaterialList->IfcMaterialSelect[arrowhead=onormal,group=IfcMaterialSelect,minlen=2,constraint=true,]
 IfcMaterialList->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMaterialProperties[label="{IfcMaterialProperties| | }"]
;
 node[shape=record];
IfcMeasureWithUnit[label="{IfcMeasureWithUnit| | }"]
;
 node[shape=record];
IfcMechanicalConcreteMaterialProperties[label="{IfcMechanicalConcreteMaterialProperties|CompressiveStrength[0-1] : REAL\nMaxAggregateSize[0-1] : REAL\nAdmixturesDescription[0-1] : STRING\nWorkability[0-1] : STRING\nProtectivePoreRatio[0-1] : REAL\nWaterImpermeability[0-1] : STRING| }"]
 IfcMechanicalConcreteMaterialProperties->IfcMechanicalMaterialProperties[arrowhead=onormal,group=IfcMechanicalMaterialProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMechanicalFastener[label="{IfcMechanicalFastener|NominalDiameter[0-1] : REAL\nNominalLength[0-1] : REAL| }"]
 IfcMechanicalFastener->IfcFastener[arrowhead=onormal,group=IfcFastener,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMechanicalFastenerType[label="{IfcMechanicalFastenerType| | }"]
 IfcMechanicalFastenerType->IfcFastenerType[arrowhead=onormal,group=IfcFastenerType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMechanicalMaterialProperties[label="{IfcMechanicalMaterialProperties|DynamicViscosity[0-1] : REAL\nYoungModulus[0-1] : REAL\nShearModulus[0-1] : REAL\nPoissonRatio[0-1] : REAL\nThermalExpansionCoefficient[0-1] : REAL| }"]
 IfcMechanicalMaterialProperties->IfcMaterialProperties[arrowhead=onormal,group=IfcMaterialProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMechanicalSteelMaterialProperties[label="{IfcMechanicalSteelMaterialProperties|YieldStress[0-1] : REAL\nUltimateStress[0-1] : REAL\nUltimateStrain[0-1] : REAL\nHardeningModule[0-1] : REAL\nProportionalStress[0-1] : REAL\nPlasticStrain[0-1] : REAL| }"]
 IfcMechanicalSteelMaterialProperties->IfcMechanicalMaterialProperties[arrowhead=onormal,group=IfcMechanicalMaterialProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMember[label="{IfcMember| | }"]
 IfcMember->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMemberType[label="{IfcMemberType|PredefinedType : IfcMemberTypeEnum| }"]
 IfcMemberType->IfcBuildingElementType[arrowhead=onormal,group=IfcBuildingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMetric[label="{IfcMetric|Benchmark : IfcBenchmarkEnum\nValueSource[0-1] : STRING| }"]
 IfcMetric->IfcConstraint[arrowhead=onormal,group=IfcConstraint,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMonetaryUnit[label="{IfcMonetaryUnit|Currency : IfcCurrencyEnum| }"]
 IfcMonetaryUnit->IfcUnit[arrowhead=onormal,group=IfcUnit,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMotorConnectionType[label="{IfcMotorConnectionType|PredefinedType : IfcMotorConnectionTypeEnum| }"]
 IfcMotorConnectionType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcMove[label="{IfcMove|PunchList[*] : STRING| }"]
 IfcMove->IfcTask[arrowhead=onormal,group=IfcTask,minlen=2,constraint=true,]
;
 node[shape=record];
IfcNamedUnit[label="{IfcNamedUnit|UnitType : IfcUnitEnum| }"]
 IfcNamedUnit->IfcUnit[arrowhead=onormal,group=IfcUnit,minlen=2,constraint=true,]
;
 node[shape=record];
IfcObject[label="{IfcObject|ObjectType[0-1] : STRING| }"]
 IfcObject->IfcObjectDefinition[arrowhead=onormal,group=IfcObjectDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcObjectDefinition[label="{IfcObjectDefinition| | }"]
 IfcObjectDefinition->IfcRoot[arrowhead=onormal,group=IfcRoot,minlen=2,constraint=true,]
;
 node[shape=record];
IfcObjectPlacement[label="{IfcObjectPlacement| | }"]
;
 node[shape=record];
IfcObjective[label="{IfcObjective|ObjectiveQualifier : IfcObjectiveEnum\nUserDefinedQualifier[0-1] : STRING| }"]
 IfcObjective->IfcConstraint[arrowhead=onormal,group=IfcConstraint,minlen=2,constraint=true,]
;
 node[shape=record];
IfcOccupant[label="{IfcOccupant|PredefinedType : IfcOccupantTypeEnum| }"]
 IfcOccupant->IfcActor[arrowhead=onormal,group=IfcActor,minlen=2,constraint=true,]
;
 node[shape=record];
IfcOffsetCurve2D[label="{IfcOffsetCurve2D|Distance : REAL\nSelfIntersect : LOGICAL| }"]
 IfcOffsetCurve2D->IfcCurve[arrowhead=onormal,group=IfcCurve,minlen=2,constraint=true,]
;
 node[shape=record];
IfcOffsetCurve3D[label="{IfcOffsetCurve3D|Distance : REAL\nSelfIntersect : LOGICAL| }"]
 IfcOffsetCurve3D->IfcCurve[arrowhead=onormal,group=IfcCurve,minlen=2,constraint=true,]
;
 node[shape=record];
IfcOneDirectionRepeatFactor[label="{IfcOneDirectionRepeatFactor| | }"]
 IfcOneDirectionRepeatFactor->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcOpenShell[label="{IfcOpenShell| | }"]
 IfcOpenShell->IfcShell[arrowhead=onormal,group=IfcShell,minlen=2,constraint=true,]
 IfcOpenShell->IfcConnectedFaceSet[arrowhead=onormal,group=IfcConnectedFaceSet,minlen=2,constraint=true,]
;
 node[shape=record];
IfcOpeningElement[label="{IfcOpeningElement| | }"]
 IfcOpeningElement->IfcFeatureElementSubtraction[arrowhead=onormal,group=IfcFeatureElementSubtraction,minlen=2,constraint=true,]
;
 node[shape=record];
IfcOpticalMaterialProperties[label="{IfcOpticalMaterialProperties|VisibleTransmittance[0-1] : REAL\nSolarTransmittance[0-1] : REAL\nThermalIrTransmittance[0-1] : REAL\nThermalIrEmissivityBack[0-1] : REAL\nThermalIrEmissivityFront[0-1] : REAL\nVisibleReflectanceBack[0-1] : REAL\nVisibleReflectanceFront[0-1] : REAL\nSolarReflectanceFront[0-1] : REAL\nSolarReflectanceBack[0-1] : REAL| }"]
 IfcOpticalMaterialProperties->IfcMaterialProperties[arrowhead=onormal,group=IfcMaterialProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcOrderAction[label="{IfcOrderAction|ActionID : STRING| }"]
 IfcOrderAction->IfcTask[arrowhead=onormal,group=IfcTask,minlen=2,constraint=true,]
;
 node[shape=record];
IfcOrganization[label="{IfcOrganization|Id[0-1] : STRING\nName : STRING\nDescription[0-1] : STRING| }"]
 IfcOrganization->IfcActorSelect[arrowhead=onormal,group=IfcActorSelect,minlen=2,constraint=true,]
 IfcOrganization->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcOrganizationRelationship[label="{IfcOrganizationRelationship|Name : STRING\nDescription[0-1] : STRING| }"]
;
 node[shape=record];
IfcOrientedEdge[label="{IfcOrientedEdge|Orientation : BOOLEAN| }"]
 IfcOrientedEdge->IfcEdge[arrowhead=onormal,group=IfcEdge,minlen=2,constraint=true,]
;
 node[shape=record];
IfcOutletType[label="{IfcOutletType|PredefinedType : IfcOutletTypeEnum| }"]
 IfcOutletType->IfcFlowTerminalType[arrowhead=onormal,group=IfcFlowTerminalType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcOwnerHistory[label="{IfcOwnerHistory|State[0-1] : IfcStateEnum\nChangeAction : IfcChangeActionEnum\nLastModifiedDate[0-1] : INTEGER\nCreationDate : INTEGER| }"]
;
 node[shape=record];
IfcParameterizedProfileDef[label="{IfcParameterizedProfileDef| | }"]
 IfcParameterizedProfileDef->IfcProfileDef[arrowhead=onormal,group=IfcProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPath[label="{IfcPath| | }"]
 IfcPath->IfcTopologicalRepresentationItem[arrowhead=onormal,group=IfcTopologicalRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPerformanceHistory[label="{IfcPerformanceHistory|LifeCyclePhase : STRING| }"]
 IfcPerformanceHistory->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPermeableCoveringProperties[label="{IfcPermeableCoveringProperties|OperationType : IfcPermeableCoveringOperationEnum\nPanelPosition : IfcWindowPanelPositionEnum\nFrameDepth[0-1] : REAL\nFrameThickness[0-1] : REAL| }"]
 IfcPermeableCoveringProperties->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPermit[label="{IfcPermit|PermitID : STRING| }"]
 IfcPermit->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPerson[label="{IfcPerson|Id[0-1] : STRING\nFamilyName[0-1] : STRING\nGivenName[0-1] : STRING\nMiddleNames[*] : STRING\nPrefixTitles[*] : STRING\nSuffixTitles[*] : STRING| }"]
 IfcPerson->IfcActorSelect[arrowhead=onormal,group=IfcActorSelect,minlen=2,constraint=true,]
 IfcPerson->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPersonAndOrganization[label="{IfcPersonAndOrganization| | }"]
 IfcPersonAndOrganization->IfcActorSelect[arrowhead=onormal,group=IfcActorSelect,minlen=2,constraint=true,]
 IfcPersonAndOrganization->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPhysicalComplexQuantity[label="{IfcPhysicalComplexQuantity|Discrimination : STRING\nQuality[0-1] : STRING\nUsage[0-1] : STRING| }"]
 IfcPhysicalComplexQuantity->IfcPhysicalQuantity[arrowhead=onormal,group=IfcPhysicalQuantity,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPhysicalQuantity[label="{IfcPhysicalQuantity|Name : STRING\nDescription[0-1] : STRING| }"]
;
 node[shape=record];
IfcPhysicalSimpleQuantity[label="{IfcPhysicalSimpleQuantity| | }"]
 IfcPhysicalSimpleQuantity->IfcPhysicalQuantity[arrowhead=onormal,group=IfcPhysicalQuantity,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPile[label="{IfcPile|PredefinedType : IfcPileTypeEnum\nConstructionType[0-1] : IfcPileConstructionEnum| }"]
 IfcPile->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPipeFittingType[label="{IfcPipeFittingType|PredefinedType : IfcPipeFittingTypeEnum| }"]
 IfcPipeFittingType->IfcFlowFittingType[arrowhead=onormal,group=IfcFlowFittingType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPipeSegmentType[label="{IfcPipeSegmentType|PredefinedType : IfcPipeSegmentTypeEnum| }"]
 IfcPipeSegmentType->IfcFlowSegmentType[arrowhead=onormal,group=IfcFlowSegmentType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPixelTexture[label="{IfcPixelTexture|Width : INTEGER\nHeight : INTEGER\nColourComponents : INTEGER\nPixel[1-*] : BINARY| }"]
 IfcPixelTexture->IfcSurfaceTexture[arrowhead=onormal,group=IfcSurfaceTexture,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPlacement[label="{IfcPlacement| | }"]
 IfcPlacement->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPlanarBox[label="{IfcPlanarBox| | }"]
 IfcPlanarBox->IfcPlanarExtent[arrowhead=onormal,group=IfcPlanarExtent,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPlanarExtent[label="{IfcPlanarExtent|SizeInX : REAL\nSizeInY : REAL| }"]
 IfcPlanarExtent->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPlane[label="{IfcPlane| | }"]
 IfcPlane->IfcElementarySurface[arrowhead=onormal,group=IfcElementarySurface,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPlate[label="{IfcPlate| | }"]
 IfcPlate->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPlateType[label="{IfcPlateType|PredefinedType : IfcPlateTypeEnum| }"]
 IfcPlateType->IfcBuildingElementType[arrowhead=onormal,group=IfcBuildingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPoint[label="{IfcPoint| | }"]
 IfcPoint->IfcGeometricSetSelect[arrowhead=onormal,group=IfcGeometricSetSelect,minlen=2,constraint=true,]
 IfcPoint->IfcPointOrVertexPoint[arrowhead=onormal,group=IfcPointOrVertexPoint,minlen=2,constraint=true,]
 IfcPoint->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPointOnCurve[label="{IfcPointOnCurve|PointParameter : REAL| }"]
 IfcPointOnCurve->IfcPoint[arrowhead=onormal,group=IfcPoint,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPointOnSurface[label="{IfcPointOnSurface|PointParameterU : REAL\nPointParameterV : REAL| }"]
 IfcPointOnSurface->IfcPoint[arrowhead=onormal,group=IfcPoint,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPolyLoop[label="{IfcPolyLoop| | }"]
 IfcPolyLoop->IfcLoop[arrowhead=onormal,group=IfcLoop,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPolygonalBoundedHalfSpace[label="{IfcPolygonalBoundedHalfSpace| | }"]
 IfcPolygonalBoundedHalfSpace->IfcHalfSpaceSolid[arrowhead=onormal,group=IfcHalfSpaceSolid,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPolyline[label="{IfcPolyline| | }"]
 IfcPolyline->IfcBoundedCurve[arrowhead=onormal,group=IfcBoundedCurve,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPort[label="{IfcPort| | }"]
 IfcPort->IfcProduct[arrowhead=onormal,group=IfcProduct,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPostalAddress[label="{IfcPostalAddress|InternalLocation[0-1] : STRING\nAddressLines[*] : STRING\nPostalBox[0-1] : STRING\nTown[0-1] : STRING\nRegion[0-1] : STRING\nPostalCode[0-1] : STRING\nCountry[0-1] : STRING| }"]
 IfcPostalAddress->IfcAddress[arrowhead=onormal,group=IfcAddress,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPreDefinedColour[label="{IfcPreDefinedColour| | }"]
 IfcPreDefinedColour->IfcColour[arrowhead=onormal,group=IfcColour,minlen=2,constraint=true,]
 IfcPreDefinedColour->IfcPreDefinedItem[arrowhead=onormal,group=IfcPreDefinedItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPreDefinedCurveFont[label="{IfcPreDefinedCurveFont| | }"]
 IfcPreDefinedCurveFont->IfcCurveStyleFontSelect[arrowhead=onormal,group=IfcCurveStyleFontSelect,minlen=2,constraint=true,]
 IfcPreDefinedCurveFont->IfcPreDefinedItem[arrowhead=onormal,group=IfcPreDefinedItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPreDefinedDimensionSymbol[label="{IfcPreDefinedDimensionSymbol| | }"]
 IfcPreDefinedDimensionSymbol->IfcPreDefinedSymbol[arrowhead=onormal,group=IfcPreDefinedSymbol,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPreDefinedItem[label="{IfcPreDefinedItem|Name : STRING| }"]
;
 node[shape=record];
IfcPreDefinedPointMarkerSymbol[label="{IfcPreDefinedPointMarkerSymbol| | }"]
 IfcPreDefinedPointMarkerSymbol->IfcPreDefinedSymbol[arrowhead=onormal,group=IfcPreDefinedSymbol,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPreDefinedSymbol[label="{IfcPreDefinedSymbol| | }"]
 IfcPreDefinedSymbol->IfcDefinedSymbolSelect[arrowhead=onormal,group=IfcDefinedSymbolSelect,minlen=2,constraint=true,]
 IfcPreDefinedSymbol->IfcPreDefinedItem[arrowhead=onormal,group=IfcPreDefinedItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPreDefinedTerminatorSymbol[label="{IfcPreDefinedTerminatorSymbol| | }"]
 IfcPreDefinedTerminatorSymbol->IfcPreDefinedSymbol[arrowhead=onormal,group=IfcPreDefinedSymbol,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPreDefinedTextFont[label="{IfcPreDefinedTextFont| | }"]
 IfcPreDefinedTextFont->IfcTextFontSelect[arrowhead=onormal,group=IfcTextFontSelect,minlen=2,constraint=true,]
 IfcPreDefinedTextFont->IfcPreDefinedItem[arrowhead=onormal,group=IfcPreDefinedItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPresentationLayerAssignment[label="{IfcPresentationLayerAssignment|Name : STRING\nDescription[0-1] : STRING\nIdentifier[0-1] : STRING| }"]
;
 node[shape=record];
IfcPresentationLayerWithStyle[label="{IfcPresentationLayerWithStyle|LayerOn : LOGICAL\nLayerFrozen : LOGICAL\nLayerBlocked : LOGICAL| }"]
 IfcPresentationLayerWithStyle->IfcPresentationLayerAssignment[arrowhead=onormal,group=IfcPresentationLayerAssignment,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPresentationStyle[label="{IfcPresentationStyle|Name[0-1] : STRING| }"]
;
 node[shape=record];
IfcPresentationStyleAssignment[label="{IfcPresentationStyleAssignment| | }"]
;
 node[shape=record];
IfcProcedure[label="{IfcProcedure|ProcedureID : STRING\nProcedureType : IfcProcedureTypeEnum\nUserDefinedProcedureType[0-1] : STRING| }"]
 IfcProcedure->IfcProcess[arrowhead=onormal,group=IfcProcess,minlen=2,constraint=true,]
;
 node[shape=record];
IfcProcess[label="{IfcProcess| | }"]
 IfcProcess->IfcObject[arrowhead=onormal,group=IfcObject,minlen=2,constraint=true,]
;
 node[shape=record];
IfcProduct[label="{IfcProduct| | }"]
 IfcProduct->IfcObject[arrowhead=onormal,group=IfcObject,minlen=2,constraint=true,]
;
 node[shape=record];
IfcProductDefinitionShape[label="{IfcProductDefinitionShape| | }"]
 IfcProductDefinitionShape->IfcProductRepresentation[arrowhead=onormal,group=IfcProductRepresentation,minlen=2,constraint=true,]
;
 node[shape=record];
IfcProductRepresentation[label="{IfcProductRepresentation|Name[0-1] : STRING\nDescription[0-1] : STRING| }"]
;
 node[shape=record];
IfcProductsOfCombustionProperties[label="{IfcProductsOfCombustionProperties|SpecificHeatCapacity[0-1] : REAL\nN20Content[0-1] : REAL\nCOContent[0-1] : REAL\nCO2Content[0-1] : REAL| }"]
 IfcProductsOfCombustionProperties->IfcMaterialProperties[arrowhead=onormal,group=IfcMaterialProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcProfileDef[label="{IfcProfileDef|ProfileType : IfcProfileTypeEnum\nProfileName[0-1] : STRING| }"]
;
 node[shape=record];
IfcProfileProperties[label="{IfcProfileProperties|ProfileName[0-1] : STRING| }"]
;
 node[shape=record];
IfcProject[label="{IfcProject|LongName[0-1] : STRING\nPhase[0-1] : STRING| }"]
 IfcProject->IfcObject[arrowhead=onormal,group=IfcObject,minlen=2,constraint=true,]
;
 node[shape=record];
IfcProjectOrder[label="{IfcProjectOrder|ID : STRING\nPredefinedType : IfcProjectOrderTypeEnum\nStatus[0-1] : STRING| }"]
 IfcProjectOrder->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcProjectOrderRecord[label="{IfcProjectOrderRecord|PredefinedType : IfcProjectOrderRecordTypeEnum| }"]
 IfcProjectOrderRecord->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcProjectionCurve[label="{IfcProjectionCurve| | }"]
 IfcProjectionCurve->IfcAnnotationCurveOccurrence[arrowhead=onormal,group=IfcAnnotationCurveOccurrence,minlen=2,constraint=true,]
;
 node[shape=record];
IfcProjectionElement[label="{IfcProjectionElement| | }"]
 IfcProjectionElement->IfcFeatureElementAddition[arrowhead=onormal,group=IfcFeatureElementAddition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcProperty[label="{IfcProperty|Name : STRING\nDescription[0-1] : STRING| }"]
;
 node[shape=record];
IfcPropertyBoundedValue[label="{IfcPropertyBoundedValue| | }"]
 IfcPropertyBoundedValue->IfcSimpleProperty[arrowhead=onormal,group=IfcSimpleProperty,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPropertyConstraintRelationship[label="{IfcPropertyConstraintRelationship|Name[0-1] : STRING\nDescription[0-1] : STRING| }"]
;
 node[shape=record];
IfcPropertyDefinition[label="{IfcPropertyDefinition| | }"]
 IfcPropertyDefinition->IfcRoot[arrowhead=onormal,group=IfcRoot,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPropertyDependencyRelationship[label="{IfcPropertyDependencyRelationship|Name[0-1] : STRING\nDescription[0-1] : STRING\nExpression[0-1] : STRING| }"]
;
 node[shape=record];
IfcPropertyEnumeratedValue[label="{IfcPropertyEnumeratedValue| | }"]
 IfcPropertyEnumeratedValue->IfcSimpleProperty[arrowhead=onormal,group=IfcSimpleProperty,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPropertyEnumeration[label="{IfcPropertyEnumeration|Name : STRING| }"]
;
 node[shape=record];
IfcPropertyListValue[label="{IfcPropertyListValue| | }"]
 IfcPropertyListValue->IfcSimpleProperty[arrowhead=onormal,group=IfcSimpleProperty,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPropertyReferenceValue[label="{IfcPropertyReferenceValue|UsageName[0-1] : STRING| }"]
 IfcPropertyReferenceValue->IfcSimpleProperty[arrowhead=onormal,group=IfcSimpleProperty,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPropertySet[label="{IfcPropertySet| | }"]
 IfcPropertySet->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPropertySetDefinition[label="{IfcPropertySetDefinition| | }"]
 IfcPropertySetDefinition->IfcPropertyDefinition[arrowhead=onormal,group=IfcPropertyDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPropertySingleValue[label="{IfcPropertySingleValue| | }"]
 IfcPropertySingleValue->IfcSimpleProperty[arrowhead=onormal,group=IfcSimpleProperty,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPropertyTableValue[label="{IfcPropertyTableValue|Expression[0-1] : STRING| }"]
 IfcPropertyTableValue->IfcSimpleProperty[arrowhead=onormal,group=IfcSimpleProperty,minlen=2,constraint=true,]
;
 node[shape=record];
IfcProtectiveDeviceType[label="{IfcProtectiveDeviceType|PredefinedType : IfcProtectiveDeviceTypeEnum| }"]
 IfcProtectiveDeviceType->IfcFlowControllerType[arrowhead=onormal,group=IfcFlowControllerType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcProxy[label="{IfcProxy|ProxyType : IfcObjectTypeEnum\nTag[0-1] : STRING| }"]
 IfcProxy->IfcProduct[arrowhead=onormal,group=IfcProduct,minlen=2,constraint=true,]
;
 node[shape=record];
IfcPumpType[label="{IfcPumpType|PredefinedType : IfcPumpTypeEnum| }"]
 IfcPumpType->IfcFlowMovingDeviceType[arrowhead=onormal,group=IfcFlowMovingDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcQuantityArea[label="{IfcQuantityArea|AreaValue : REAL| }"]
 IfcQuantityArea->IfcPhysicalSimpleQuantity[arrowhead=onormal,group=IfcPhysicalSimpleQuantity,minlen=2,constraint=true,]
;
 node[shape=record];
IfcQuantityCount[label="{IfcQuantityCount|CountValue : NUMBER| }"]
 IfcQuantityCount->IfcPhysicalSimpleQuantity[arrowhead=onormal,group=IfcPhysicalSimpleQuantity,minlen=2,constraint=true,]
;
 node[shape=record];
IfcQuantityLength[label="{IfcQuantityLength|LengthValue : REAL| }"]
 IfcQuantityLength->IfcPhysicalSimpleQuantity[arrowhead=onormal,group=IfcPhysicalSimpleQuantity,minlen=2,constraint=true,]
;
 node[shape=record];
IfcQuantityTime[label="{IfcQuantityTime|TimeValue : REAL| }"]
 IfcQuantityTime->IfcPhysicalSimpleQuantity[arrowhead=onormal,group=IfcPhysicalSimpleQuantity,minlen=2,constraint=true,]
;
 node[shape=record];
IfcQuantityVolume[label="{IfcQuantityVolume|VolumeValue : REAL| }"]
 IfcQuantityVolume->IfcPhysicalSimpleQuantity[arrowhead=onormal,group=IfcPhysicalSimpleQuantity,minlen=2,constraint=true,]
;
 node[shape=record];
IfcQuantityWeight[label="{IfcQuantityWeight|WeightValue : REAL| }"]
 IfcQuantityWeight->IfcPhysicalSimpleQuantity[arrowhead=onormal,group=IfcPhysicalSimpleQuantity,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRadiusDimension[label="{IfcRadiusDimension| | }"]
 IfcRadiusDimension->IfcDimensionCurveDirectedCallout[arrowhead=onormal,group=IfcDimensionCurveDirectedCallout,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRailing[label="{IfcRailing|PredefinedType[0-1] : IfcRailingTypeEnum| }"]
 IfcRailing->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRailingType[label="{IfcRailingType|PredefinedType : IfcRailingTypeEnum| }"]
 IfcRailingType->IfcBuildingElementType[arrowhead=onormal,group=IfcBuildingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRamp[label="{IfcRamp|ShapeType : IfcRampTypeEnum| }"]
 IfcRamp->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRampFlight[label="{IfcRampFlight| | }"]
 IfcRampFlight->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRampFlightType[label="{IfcRampFlightType|PredefinedType : IfcRampFlightTypeEnum| }"]
 IfcRampFlightType->IfcBuildingElementType[arrowhead=onormal,group=IfcBuildingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRationalBezierCurve[label="{IfcRationalBezierCurve|WeightsData[2-*] : REAL| }"]
 IfcRationalBezierCurve->IfcBezierCurve[arrowhead=onormal,group=IfcBezierCurve,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRectangleHollowProfileDef[label="{IfcRectangleHollowProfileDef|WallThickness : REAL\nInnerFilletRadius[0-1] : REAL\nOuterFilletRadius[0-1] : REAL| }"]
 IfcRectangleHollowProfileDef->IfcRectangleProfileDef[arrowhead=onormal,group=IfcRectangleProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRectangleProfileDef[label="{IfcRectangleProfileDef|XDim : REAL\nYDim : REAL| }"]
 IfcRectangleProfileDef->IfcParameterizedProfileDef[arrowhead=onormal,group=IfcParameterizedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRectangularPyramid[label="{IfcRectangularPyramid|XLength : REAL\nYLength : REAL\nHeight : REAL| }"]
 IfcRectangularPyramid->IfcCsgPrimitive3D[arrowhead=onormal,group=IfcCsgPrimitive3D,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRectangularTrimmedSurface[label="{IfcRectangularTrimmedSurface|U1 : REAL\nV1 : REAL\nU2 : REAL\nV2 : REAL\nUsense : BOOLEAN\nVsense : BOOLEAN| }"]
 IfcRectangularTrimmedSurface->IfcBoundedSurface[arrowhead=onormal,group=IfcBoundedSurface,minlen=2,constraint=true,]
;
 node[shape=record];
IfcReferencesValueDocument[label="{IfcReferencesValueDocument|Name[0-1] : STRING\nDescription[0-1] : STRING| }"]
;
 node[shape=record];
IfcRegularTimeSeries[label="{IfcRegularTimeSeries|TimeStep : REAL| }"]
 IfcRegularTimeSeries->IfcTimeSeries[arrowhead=onormal,group=IfcTimeSeries,minlen=2,constraint=true,]
;
 node[shape=record];
IfcReinforcementBarProperties[label="{IfcReinforcementBarProperties|TotalCrossSectionArea : REAL\nSteelGrade : STRING\nBarSurface[0-1] : IfcReinforcingBarSurfaceEnum\nEffectiveDepth[0-1] : REAL\nNominalBarDiameter[0-1] : REAL\nBarCount[0-1] : NUMBER| }"]
;
 node[shape=record];
IfcReinforcementDefinitionProperties[label="{IfcReinforcementDefinitionProperties|DefinitionType[0-1] : STRING| }"]
 IfcReinforcementDefinitionProperties->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcReinforcingBar[label="{IfcReinforcingBar|NominalDiameter : REAL\nCrossSectionArea : REAL\nBarLength[0-1] : REAL\nBarRole : IfcReinforcingBarRoleEnum\nBarSurface[0-1] : IfcReinforcingBarSurfaceEnum| }"]
 IfcReinforcingBar->IfcReinforcingElement[arrowhead=onormal,group=IfcReinforcingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcReinforcingElement[label="{IfcReinforcingElement|SteelGrade[0-1] : STRING| }"]
 IfcReinforcingElement->IfcBuildingElementComponent[arrowhead=onormal,group=IfcBuildingElementComponent,minlen=2,constraint=true,]
;
 node[shape=record];
IfcReinforcingMesh[label="{IfcReinforcingMesh|MeshLength[0-1] : REAL\nMeshWidth[0-1] : REAL\nLongitudinalBarNominalDiameter : REAL\nTransverseBarNominalDiameter : REAL\nLongitudinalBarCrossSectionArea : REAL\nTransverseBarCrossSectionArea : REAL\nLongitudinalBarSpacing : REAL\nTransverseBarSpacing : REAL| }"]
 IfcReinforcingMesh->IfcReinforcingElement[arrowhead=onormal,group=IfcReinforcingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAggregates[label="{IfcRelAggregates| | }"]
 IfcRelAggregates->IfcRelDecomposes[arrowhead=onormal,group=IfcRelDecomposes,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssigns[label="{IfcRelAssigns|RelatedObjectsType[0-1] : IfcObjectTypeEnum| }"]
 IfcRelAssigns->IfcRelationship[arrowhead=onormal,group=IfcRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssignsTasks[label="{IfcRelAssignsTasks| | }"]
 IfcRelAssignsTasks->IfcRelAssignsToControl[arrowhead=onormal,group=IfcRelAssignsToControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssignsToActor[label="{IfcRelAssignsToActor| | }"]
 IfcRelAssignsToActor->IfcRelAssigns[arrowhead=onormal,group=IfcRelAssigns,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssignsToControl[label="{IfcRelAssignsToControl| | }"]
 IfcRelAssignsToControl->IfcRelAssigns[arrowhead=onormal,group=IfcRelAssigns,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssignsToGroup[label="{IfcRelAssignsToGroup| | }"]
 IfcRelAssignsToGroup->IfcRelAssigns[arrowhead=onormal,group=IfcRelAssigns,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssignsToProcess[label="{IfcRelAssignsToProcess| | }"]
 IfcRelAssignsToProcess->IfcRelAssigns[arrowhead=onormal,group=IfcRelAssigns,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssignsToProduct[label="{IfcRelAssignsToProduct| | }"]
 IfcRelAssignsToProduct->IfcRelAssigns[arrowhead=onormal,group=IfcRelAssigns,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssignsToProjectOrder[label="{IfcRelAssignsToProjectOrder| | }"]
 IfcRelAssignsToProjectOrder->IfcRelAssignsToControl[arrowhead=onormal,group=IfcRelAssignsToControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssignsToResource[label="{IfcRelAssignsToResource| | }"]
 IfcRelAssignsToResource->IfcRelAssigns[arrowhead=onormal,group=IfcRelAssigns,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssociates[label="{IfcRelAssociates| | }"]
 IfcRelAssociates->IfcRelationship[arrowhead=onormal,group=IfcRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssociatesAppliedValue[label="{IfcRelAssociatesAppliedValue| | }"]
 IfcRelAssociatesAppliedValue->IfcRelAssociates[arrowhead=onormal,group=IfcRelAssociates,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssociatesApproval[label="{IfcRelAssociatesApproval| | }"]
 IfcRelAssociatesApproval->IfcRelAssociates[arrowhead=onormal,group=IfcRelAssociates,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssociatesClassification[label="{IfcRelAssociatesClassification| | }"]
 IfcRelAssociatesClassification->IfcRelAssociates[arrowhead=onormal,group=IfcRelAssociates,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssociatesConstraint[label="{IfcRelAssociatesConstraint|Intent : STRING| }"]
 IfcRelAssociatesConstraint->IfcRelAssociates[arrowhead=onormal,group=IfcRelAssociates,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssociatesDocument[label="{IfcRelAssociatesDocument| | }"]
 IfcRelAssociatesDocument->IfcRelAssociates[arrowhead=onormal,group=IfcRelAssociates,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssociatesLibrary[label="{IfcRelAssociatesLibrary| | }"]
 IfcRelAssociatesLibrary->IfcRelAssociates[arrowhead=onormal,group=IfcRelAssociates,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssociatesMaterial[label="{IfcRelAssociatesMaterial| | }"]
 IfcRelAssociatesMaterial->IfcRelAssociates[arrowhead=onormal,group=IfcRelAssociates,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelAssociatesProfileProperties[label="{IfcRelAssociatesProfileProperties| | }"]
 IfcRelAssociatesProfileProperties->IfcRelAssociates[arrowhead=onormal,group=IfcRelAssociates,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelConnects[label="{IfcRelConnects| | }"]
 IfcRelConnects->IfcRelationship[arrowhead=onormal,group=IfcRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelConnectsElements[label="{IfcRelConnectsElements| | }"]
 IfcRelConnectsElements->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelConnectsPathElements[label="{IfcRelConnectsPathElements|RelatingPriorities[*] : INTEGER\nRelatedPriorities[*] : INTEGER\nRelatedConnectionType : IfcConnectionTypeEnum\nRelatingConnectionType : IfcConnectionTypeEnum| }"]
 IfcRelConnectsPathElements->IfcRelConnectsElements[arrowhead=onormal,group=IfcRelConnectsElements,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelConnectsPortToElement[label="{IfcRelConnectsPortToElement| | }"]
 IfcRelConnectsPortToElement->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelConnectsPorts[label="{IfcRelConnectsPorts| | }"]
 IfcRelConnectsPorts->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelConnectsStructuralActivity[label="{IfcRelConnectsStructuralActivity| | }"]
 IfcRelConnectsStructuralActivity->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelConnectsStructuralElement[label="{IfcRelConnectsStructuralElement| | }"]
 IfcRelConnectsStructuralElement->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelConnectsStructuralMember[label="{IfcRelConnectsStructuralMember|SupportedLength[0-1] : REAL| }"]
 IfcRelConnectsStructuralMember->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelConnectsWithEccentricity[label="{IfcRelConnectsWithEccentricity| | }"]
 IfcRelConnectsWithEccentricity->IfcRelConnectsStructuralMember[arrowhead=onormal,group=IfcRelConnectsStructuralMember,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelConnectsWithRealizingElements[label="{IfcRelConnectsWithRealizingElements|ConnectionType[0-1] : STRING| }"]
 IfcRelConnectsWithRealizingElements->IfcRelConnectsElements[arrowhead=onormal,group=IfcRelConnectsElements,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelContainedInSpatialStructure[label="{IfcRelContainedInSpatialStructure| | }"]
 IfcRelContainedInSpatialStructure->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelCoversBldgElements[label="{IfcRelCoversBldgElements| | }"]
 IfcRelCoversBldgElements->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelCoversSpaces[label="{IfcRelCoversSpaces| | }"]
 IfcRelCoversSpaces->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelDecomposes[label="{IfcRelDecomposes| | }"]
 IfcRelDecomposes->IfcRelationship[arrowhead=onormal,group=IfcRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelDefines[label="{IfcRelDefines| | }"]
 IfcRelDefines->IfcRelationship[arrowhead=onormal,group=IfcRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelDefinesByProperties[label="{IfcRelDefinesByProperties| | }"]
 IfcRelDefinesByProperties->IfcRelDefines[arrowhead=onormal,group=IfcRelDefines,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelDefinesByType[label="{IfcRelDefinesByType| | }"]
 IfcRelDefinesByType->IfcRelDefines[arrowhead=onormal,group=IfcRelDefines,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelFillsElement[label="{IfcRelFillsElement| | }"]
 IfcRelFillsElement->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelFlowControlElements[label="{IfcRelFlowControlElements| | }"]
 IfcRelFlowControlElements->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelInteractionRequirements[label="{IfcRelInteractionRequirements|DailyInteraction[0-1] : NUMBER\nImportanceRating[0-1] : REAL| }"]
 IfcRelInteractionRequirements->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelNests[label="{IfcRelNests| | }"]
 IfcRelNests->IfcRelDecomposes[arrowhead=onormal,group=IfcRelDecomposes,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelOccupiesSpaces[label="{IfcRelOccupiesSpaces| | }"]
 IfcRelOccupiesSpaces->IfcRelAssignsToActor[arrowhead=onormal,group=IfcRelAssignsToActor,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelOverridesProperties[label="{IfcRelOverridesProperties| | }"]
 IfcRelOverridesProperties->IfcRelDefinesByProperties[arrowhead=onormal,group=IfcRelDefinesByProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelProjectsElement[label="{IfcRelProjectsElement| | }"]
 IfcRelProjectsElement->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelReferencedInSpatialStructure[label="{IfcRelReferencedInSpatialStructure| | }"]
 IfcRelReferencedInSpatialStructure->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelSchedulesCostItems[label="{IfcRelSchedulesCostItems| | }"]
 IfcRelSchedulesCostItems->IfcRelAssignsToControl[arrowhead=onormal,group=IfcRelAssignsToControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelSequence[label="{IfcRelSequence|TimeLag : REAL\nSequenceType : IfcSequenceEnum| }"]
 IfcRelSequence->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelServicesBuildings[label="{IfcRelServicesBuildings| | }"]
 IfcRelServicesBuildings->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelSpaceBoundary[label="{IfcRelSpaceBoundary|PhysicalOrVirtualBoundary : IfcPhysicalOrVirtualEnum\nInternalOrExternalBoundary : IfcInternalOrExternalEnum| }"]
 IfcRelSpaceBoundary->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelVoidsElement[label="{IfcRelVoidsElement| | }"]
 IfcRelVoidsElement->IfcRelConnects[arrowhead=onormal,group=IfcRelConnects,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelationship[label="{IfcRelationship| | }"]
 IfcRelationship->IfcRoot[arrowhead=onormal,group=IfcRoot,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRelaxation[label="{IfcRelaxation|RelaxationValue : REAL\nInitialStress : REAL| }"]
;
 node[shape=record];
IfcRepresentation[label="{IfcRepresentation|RepresentationIdentifier[0-1] : STRING\nRepresentationType[0-1] : STRING| }"]
 IfcRepresentation->IfcLayeredItem[arrowhead=onormal,group=IfcLayeredItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRepresentationContext[label="{IfcRepresentationContext|ContextIdentifier[0-1] : STRING\nContextType[0-1] : STRING| }"]
;
 node[shape=record];
IfcRepresentationItem[label="{IfcRepresentationItem| | }"]
 IfcRepresentationItem->IfcLayeredItem[arrowhead=onormal,group=IfcLayeredItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRepresentationMap[label="{IfcRepresentationMap| | }"]
;
 node[shape=record];
IfcResource[label="{IfcResource| | }"]
 IfcResource->IfcObject[arrowhead=onormal,group=IfcObject,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRevolvedAreaSolid[label="{IfcRevolvedAreaSolid|Angle : REAL| }"]
 IfcRevolvedAreaSolid->IfcSweptAreaSolid[arrowhead=onormal,group=IfcSweptAreaSolid,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRibPlateProfileProperties[label="{IfcRibPlateProfileProperties|Thickness[0-1] : REAL\nRibHeight[0-1] : REAL\nRibWidth[0-1] : REAL\nRibSpacing[0-1] : REAL\nDirection : IfcRibPlateDirectionEnum| }"]
 IfcRibPlateProfileProperties->IfcProfileProperties[arrowhead=onormal,group=IfcProfileProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRightCircularCone[label="{IfcRightCircularCone|Height : REAL\nBottomRadius : REAL| }"]
 IfcRightCircularCone->IfcCsgPrimitive3D[arrowhead=onormal,group=IfcCsgPrimitive3D,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRightCircularCylinder[label="{IfcRightCircularCylinder|Height : REAL\nRadius : REAL| }"]
 IfcRightCircularCylinder->IfcCsgPrimitive3D[arrowhead=onormal,group=IfcCsgPrimitive3D,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRoof[label="{IfcRoof|ShapeType : IfcRoofTypeEnum| }"]
 IfcRoof->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRoot[label="{IfcRoot|GlobalId : STRING\nName[0-1] : STRING\nDescription[0-1] : STRING| }"]
;
 node[shape=record];
IfcRoundedEdgeFeature[label="{IfcRoundedEdgeFeature|Radius[0-1] : REAL| }"]
 IfcRoundedEdgeFeature->IfcEdgeFeature[arrowhead=onormal,group=IfcEdgeFeature,minlen=2,constraint=true,]
;
 node[shape=record];
IfcRoundedRectangleProfileDef[label="{IfcRoundedRectangleProfileDef|RoundingRadius : REAL| }"]
 IfcRoundedRectangleProfileDef->IfcRectangleProfileDef[arrowhead=onormal,group=IfcRectangleProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSIUnit[label="{IfcSIUnit|Prefix[0-1] : IfcSIPrefix\nName : IfcSIUnitName| }"]
 IfcSIUnit->IfcNamedUnit[arrowhead=onormal,group=IfcNamedUnit,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSanitaryTerminalType[label="{IfcSanitaryTerminalType|PredefinedType : IfcSanitaryTerminalTypeEnum| }"]
 IfcSanitaryTerminalType->IfcFlowTerminalType[arrowhead=onormal,group=IfcFlowTerminalType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcScheduleTimeControl[label="{IfcScheduleTimeControl|ScheduleDuration[0-1] : REAL\nActualDuration[0-1] : REAL\nRemainingTime[0-1] : REAL\nFreeFloat[0-1] : REAL\nTotalFloat[0-1] : REAL\nIsCritical[0-1] : BOOLEAN\nStartFloat[0-1] : REAL\nFinishFloat[0-1] : REAL\nCompletion[0-1] : REAL| }"]
 IfcScheduleTimeControl->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSectionProperties[label="{IfcSectionProperties|SectionType : IfcSectionTypeEnum| }"]
;
 node[shape=record];
IfcSectionReinforcementProperties[label="{IfcSectionReinforcementProperties|LongitudinalStartPosition : REAL\nLongitudinalEndPosition : REAL\nTransversePosition[0-1] : REAL\nReinforcementRole : IfcReinforcingBarRoleEnum| }"]
;
 node[shape=record];
IfcSectionedSpine[label="{IfcSectionedSpine| | }"]
 IfcSectionedSpine->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSensorType[label="{IfcSensorType|PredefinedType : IfcSensorTypeEnum| }"]
 IfcSensorType->IfcDistributionControlElementType[arrowhead=onormal,group=IfcDistributionControlElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcServiceLife[label="{IfcServiceLife|ServiceLifeType : IfcServiceLifeTypeEnum\nServiceLifeDuration : REAL| }"]
 IfcServiceLife->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcServiceLifeFactor[label="{IfcServiceLifeFactor|PredefinedType : IfcServiceLifeFactorTypeEnum| }"]
 IfcServiceLifeFactor->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcShapeAspect[label="{IfcShapeAspect|Name[0-1] : STRING\nDescription[0-1] : STRING\nProductDefinitional : LOGICAL| }"]
;
 node[shape=record];
IfcShapeModel[label="{IfcShapeModel| | }"]
 IfcShapeModel->IfcRepresentation[arrowhead=onormal,group=IfcRepresentation,minlen=2,constraint=true,]
;
 node[shape=record];
IfcShapeRepresentation[label="{IfcShapeRepresentation| | }"]
 IfcShapeRepresentation->IfcShapeModel[arrowhead=onormal,group=IfcShapeModel,minlen=2,constraint=true,]
;
 node[shape=record];
IfcShellBasedSurfaceModel[label="{IfcShellBasedSurfaceModel| | }"]
 IfcShellBasedSurfaceModel->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSimpleProperty[label="{IfcSimpleProperty| | }"]
 IfcSimpleProperty->IfcProperty[arrowhead=onormal,group=IfcProperty,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSite[label="{IfcSite|RefLatitude[0-3] : INTEGER\nRefLongitude[0-3] : INTEGER\nRefElevation[0-1] : REAL\nLandTitleNumber[0-1] : STRING| }"]
 IfcSite->IfcSpatialStructureElement[arrowhead=onormal,group=IfcSpatialStructureElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSlab[label="{IfcSlab|PredefinedType[0-1] : IfcSlabTypeEnum| }"]
 IfcSlab->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSlabType[label="{IfcSlabType|PredefinedType : IfcSlabTypeEnum| }"]
 IfcSlabType->IfcBuildingElementType[arrowhead=onormal,group=IfcBuildingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSlippageConnectionCondition[label="{IfcSlippageConnectionCondition|SlippageX[0-1] : REAL\nSlippageY[0-1] : REAL\nSlippageZ[0-1] : REAL| }"]
 IfcSlippageConnectionCondition->IfcStructuralConnectionCondition[arrowhead=onormal,group=IfcStructuralConnectionCondition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSolidModel[label="{IfcSolidModel| | }"]
 IfcSolidModel->IfcBooleanOperand[arrowhead=onormal,group=IfcBooleanOperand,minlen=2,constraint=true,]
 IfcSolidModel->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSoundProperties[label="{IfcSoundProperties|IsAttenuating : BOOLEAN\nSoundScale[0-1] : IfcSoundScaleEnum| }"]
 IfcSoundProperties->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSoundValue[label="{IfcSoundValue|Frequency : REAL| }"]
 IfcSoundValue->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSpace[label="{IfcSpace|InteriorOrExteriorSpace : IfcInternalOrExternalEnum\nElevationWithFlooring[0-1] : REAL| }"]
 IfcSpace->IfcSpatialStructureElement[arrowhead=onormal,group=IfcSpatialStructureElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSpaceHeaterType[label="{IfcSpaceHeaterType|PredefinedType : IfcSpaceHeaterTypeEnum| }"]
 IfcSpaceHeaterType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSpaceProgram[label="{IfcSpaceProgram|SpaceProgramIdentifier : STRING\nMaxRequiredArea[0-1] : REAL\nMinRequiredArea[0-1] : REAL\nStandardRequiredArea : REAL| }"]
 IfcSpaceProgram->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSpaceThermalLoadProperties[label="{IfcSpaceThermalLoadProperties|ApplicableValueRatio[0-1] : REAL\nThermalLoadSource : IfcThermalLoadSourceEnum\nPropertySource : IfcPropertySourceEnum\nSourceDescription[0-1] : STRING\nMaximumValue : REAL\nMinimumValue[0-1] : REAL\nUserDefinedThermalLoadSource[0-1] : STRING\nUserDefinedPropertySource[0-1] : STRING\nThermalLoadType : IfcThermalLoadTypeEnum| }"]
 IfcSpaceThermalLoadProperties->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSpaceType[label="{IfcSpaceType|PredefinedType : IfcSpaceTypeEnum| }"]
 IfcSpaceType->IfcSpatialStructureElementType[arrowhead=onormal,group=IfcSpatialStructureElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSpatialStructureElement[label="{IfcSpatialStructureElement|LongName[0-1] : STRING\nCompositionType : IfcElementCompositionEnum| }"]
 IfcSpatialStructureElement->IfcProduct[arrowhead=onormal,group=IfcProduct,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSpatialStructureElementType[label="{IfcSpatialStructureElementType| | }"]
 IfcSpatialStructureElementType->IfcElementType[arrowhead=onormal,group=IfcElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSphere[label="{IfcSphere|Radius : REAL| }"]
 IfcSphere->IfcCsgPrimitive3D[arrowhead=onormal,group=IfcCsgPrimitive3D,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStackTerminalType[label="{IfcStackTerminalType|PredefinedType : IfcStackTerminalTypeEnum| }"]
 IfcStackTerminalType->IfcFlowTerminalType[arrowhead=onormal,group=IfcFlowTerminalType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStair[label="{IfcStair|ShapeType : IfcStairTypeEnum| }"]
 IfcStair->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStairFlight[label="{IfcStairFlight|NumberOfRiser[0-1] : INTEGER\nNumberOfTreads[0-1] : INTEGER\nRiserHeight[0-1] : REAL\nTreadLength[0-1] : REAL| }"]
 IfcStairFlight->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStairFlightType[label="{IfcStairFlightType|PredefinedType : IfcStairFlightTypeEnum| }"]
 IfcStairFlightType->IfcBuildingElementType[arrowhead=onormal,group=IfcBuildingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralAction[label="{IfcStructuralAction|DestabilizingLoad : BOOLEAN| }"]
 IfcStructuralAction->IfcStructuralActivity[arrowhead=onormal,group=IfcStructuralActivity,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralActivity[label="{IfcStructuralActivity|GlobalOrLocal : IfcGlobalOrLocalEnum| }"]
 IfcStructuralActivity->IfcProduct[arrowhead=onormal,group=IfcProduct,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralAnalysisModel[label="{IfcStructuralAnalysisModel|PredefinedType : IfcAnalysisModelTypeEnum| }"]
 IfcStructuralAnalysisModel->IfcSystem[arrowhead=onormal,group=IfcSystem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralConnection[label="{IfcStructuralConnection| | }"]
 IfcStructuralConnection->IfcStructuralItem[arrowhead=onormal,group=IfcStructuralItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralConnectionCondition[label="{IfcStructuralConnectionCondition|Name[0-1] : STRING| }"]
;
 node[shape=record];
IfcStructuralCurveConnection[label="{IfcStructuralCurveConnection| | }"]
 IfcStructuralCurveConnection->IfcStructuralConnection[arrowhead=onormal,group=IfcStructuralConnection,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralCurveMember[label="{IfcStructuralCurveMember|PredefinedType : IfcStructuralCurveTypeEnum| }"]
 IfcStructuralCurveMember->IfcStructuralMember[arrowhead=onormal,group=IfcStructuralMember,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralCurveMemberVarying[label="{IfcStructuralCurveMemberVarying| | }"]
 IfcStructuralCurveMemberVarying->IfcStructuralCurveMember[arrowhead=onormal,group=IfcStructuralCurveMember,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralItem[label="{IfcStructuralItem| | }"]
 IfcStructuralItem->IfcStructuralActivityAssignmentSelect[arrowhead=onormal,group=IfcStructuralActivityAssignmentSelect,minlen=2,constraint=true,]
 IfcStructuralItem->IfcProduct[arrowhead=onormal,group=IfcProduct,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralLinearAction[label="{IfcStructuralLinearAction|ProjectedOrTrue : IfcProjectedOrTrueLengthEnum| }"]
 IfcStructuralLinearAction->IfcStructuralAction[arrowhead=onormal,group=IfcStructuralAction,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralLinearActionVarying[label="{IfcStructuralLinearActionVarying| | }"]
 IfcStructuralLinearActionVarying->IfcStructuralLinearAction[arrowhead=onormal,group=IfcStructuralLinearAction,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralLoad[label="{IfcStructuralLoad|Name[0-1] : STRING| }"]
;
 node[shape=record];
IfcStructuralLoadGroup[label="{IfcStructuralLoadGroup|PredefinedType : IfcLoadGroupTypeEnum\nActionType : IfcActionTypeEnum\nActionSource : IfcActionSourceTypeEnum\nCoefficient[0-1] : REAL\nPurpose[0-1] : STRING| }"]
 IfcStructuralLoadGroup->IfcGroup[arrowhead=onormal,group=IfcGroup,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralLoadLinearForce[label="{IfcStructuralLoadLinearForce|LinearForceX[0-1] : REAL\nLinearForceY[0-1] : REAL\nLinearForceZ[0-1] : REAL\nLinearMomentX[0-1] : REAL\nLinearMomentY[0-1] : REAL\nLinearMomentZ[0-1] : REAL| }"]
 IfcStructuralLoadLinearForce->IfcStructuralLoadStatic[arrowhead=onormal,group=IfcStructuralLoadStatic,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralLoadPlanarForce[label="{IfcStructuralLoadPlanarForce|PlanarForceX[0-1] : REAL\nPlanarForceY[0-1] : REAL\nPlanarForceZ[0-1] : REAL| }"]
 IfcStructuralLoadPlanarForce->IfcStructuralLoadStatic[arrowhead=onormal,group=IfcStructuralLoadStatic,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralLoadSingleDisplacement[label="{IfcStructuralLoadSingleDisplacement|DisplacementX[0-1] : REAL\nDisplacementY[0-1] : REAL\nDisplacementZ[0-1] : REAL\nRotationalDisplacementRX[0-1] : REAL\nRotationalDisplacementRY[0-1] : REAL\nRotationalDisplacementRZ[0-1] : REAL| }"]
 IfcStructuralLoadSingleDisplacement->IfcStructuralLoadStatic[arrowhead=onormal,group=IfcStructuralLoadStatic,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralLoadSingleDisplacementDistortion[label="{IfcStructuralLoadSingleDisplacementDistortion|Distortion[0-1] : REAL| }"]
 IfcStructuralLoadSingleDisplacementDistortion->IfcStructuralLoadSingleDisplacement[arrowhead=onormal,group=IfcStructuralLoadSingleDisplacement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralLoadSingleForce[label="{IfcStructuralLoadSingleForce|ForceX[0-1] : REAL\nForceY[0-1] : REAL\nForceZ[0-1] : REAL\nMomentX[0-1] : REAL\nMomentY[0-1] : REAL\nMomentZ[0-1] : REAL| }"]
 IfcStructuralLoadSingleForce->IfcStructuralLoadStatic[arrowhead=onormal,group=IfcStructuralLoadStatic,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralLoadSingleForceWarping[label="{IfcStructuralLoadSingleForceWarping|WarpingMoment[0-1] : REAL| }"]
 IfcStructuralLoadSingleForceWarping->IfcStructuralLoadSingleForce[arrowhead=onormal,group=IfcStructuralLoadSingleForce,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralLoadStatic[label="{IfcStructuralLoadStatic| | }"]
 IfcStructuralLoadStatic->IfcStructuralLoad[arrowhead=onormal,group=IfcStructuralLoad,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralLoadTemperature[label="{IfcStructuralLoadTemperature|DeltaT_Constant[0-1] : REAL\nDeltaT_Y[0-1] : REAL\nDeltaT_Z[0-1] : REAL| }"]
 IfcStructuralLoadTemperature->IfcStructuralLoadStatic[arrowhead=onormal,group=IfcStructuralLoadStatic,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralMember[label="{IfcStructuralMember| | }"]
 IfcStructuralMember->IfcStructuralItem[arrowhead=onormal,group=IfcStructuralItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralPlanarAction[label="{IfcStructuralPlanarAction|ProjectedOrTrue : IfcProjectedOrTrueLengthEnum| }"]
 IfcStructuralPlanarAction->IfcStructuralAction[arrowhead=onormal,group=IfcStructuralAction,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralPlanarActionVarying[label="{IfcStructuralPlanarActionVarying| | }"]
 IfcStructuralPlanarActionVarying->IfcStructuralPlanarAction[arrowhead=onormal,group=IfcStructuralPlanarAction,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralPointAction[label="{IfcStructuralPointAction| | }"]
 IfcStructuralPointAction->IfcStructuralAction[arrowhead=onormal,group=IfcStructuralAction,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralPointConnection[label="{IfcStructuralPointConnection| | }"]
 IfcStructuralPointConnection->IfcStructuralConnection[arrowhead=onormal,group=IfcStructuralConnection,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralPointReaction[label="{IfcStructuralPointReaction| | }"]
 IfcStructuralPointReaction->IfcStructuralReaction[arrowhead=onormal,group=IfcStructuralReaction,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralProfileProperties[label="{IfcStructuralProfileProperties|TorsionalConstantX[0-1] : REAL\nMomentOfInertiaYZ[0-1] : REAL\nMomentOfInertiaY[0-1] : REAL\nMomentOfInertiaZ[0-1] : REAL\nWarpingConstant[0-1] : REAL\nShearCentreZ[0-1] : REAL\nShearCentreY[0-1] : REAL\nShearDeformationAreaZ[0-1] : REAL\nShearDeformationAreaY[0-1] : REAL\nMaximumSectionModulusY[0-1] : REAL\nMinimumSectionModulusY[0-1] : REAL\nMaximumSectionModulusZ[0-1] : REAL\nMinimumSectionModulusZ[0-1] : REAL\nTorsionalSectionModulus[0-1] : REAL\nCentreOfGravityInX[0-1] : REAL\nCentreOfGravityInY[0-1] : REAL| }"]
 IfcStructuralProfileProperties->IfcGeneralProfileProperties[arrowhead=onormal,group=IfcGeneralProfileProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralReaction[label="{IfcStructuralReaction| | }"]
 IfcStructuralReaction->IfcStructuralActivity[arrowhead=onormal,group=IfcStructuralActivity,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralResultGroup[label="{IfcStructuralResultGroup|TheoryType : IfcAnalysisTheoryTypeEnum\nIsLinear : BOOLEAN| }"]
 IfcStructuralResultGroup->IfcGroup[arrowhead=onormal,group=IfcGroup,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralSteelProfileProperties[label="{IfcStructuralSteelProfileProperties|ShearAreaZ[0-1] : REAL\nShearAreaY[0-1] : REAL\nPlasticShapeFactorY[0-1] : REAL\nPlasticShapeFactorZ[0-1] : REAL| }"]
 IfcStructuralSteelProfileProperties->IfcStructuralProfileProperties[arrowhead=onormal,group=IfcStructuralProfileProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralSurfaceConnection[label="{IfcStructuralSurfaceConnection| | }"]
 IfcStructuralSurfaceConnection->IfcStructuralConnection[arrowhead=onormal,group=IfcStructuralConnection,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralSurfaceMember[label="{IfcStructuralSurfaceMember|PredefinedType : IfcStructuralSurfaceTypeEnum\nThickness[0-1] : REAL| }"]
 IfcStructuralSurfaceMember->IfcStructuralMember[arrowhead=onormal,group=IfcStructuralMember,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuralSurfaceMemberVarying[label="{IfcStructuralSurfaceMemberVarying|SubsequentThickness[2-*] : REAL| }"]
 IfcStructuralSurfaceMemberVarying->IfcStructuralSurfaceMember[arrowhead=onormal,group=IfcStructuralSurfaceMember,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStructuredDimensionCallout[label="{IfcStructuredDimensionCallout| | }"]
 IfcStructuredDimensionCallout->IfcDraughtingCallout[arrowhead=onormal,group=IfcDraughtingCallout,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStyleModel[label="{IfcStyleModel| | }"]
 IfcStyleModel->IfcRepresentation[arrowhead=onormal,group=IfcRepresentation,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStyledItem[label="{IfcStyledItem|Name[0-1] : STRING| }"]
 IfcStyledItem->IfcRepresentationItem[arrowhead=onormal,group=IfcRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcStyledRepresentation[label="{IfcStyledRepresentation| | }"]
 IfcStyledRepresentation->IfcStyleModel[arrowhead=onormal,group=IfcStyleModel,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSubContractResource[label="{IfcSubContractResource|JobDescription[0-1] : STRING| }"]
 IfcSubContractResource->IfcConstructionResource[arrowhead=onormal,group=IfcConstructionResource,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSubedge[label="{IfcSubedge| | }"]
 IfcSubedge->IfcEdge[arrowhead=onormal,group=IfcEdge,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSurface[label="{IfcSurface| | }"]
 IfcSurface->IfcGeometricSetSelect[arrowhead=onormal,group=IfcGeometricSetSelect,minlen=2,constraint=true,]
 IfcSurface->IfcSurfaceOrFaceSurface[arrowhead=onormal,group=IfcSurfaceOrFaceSurface,minlen=2,constraint=true,]
 IfcSurface->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSurfaceCurveSweptAreaSolid[label="{IfcSurfaceCurveSweptAreaSolid|StartParam : REAL\nEndParam : REAL| }"]
 IfcSurfaceCurveSweptAreaSolid->IfcSweptAreaSolid[arrowhead=onormal,group=IfcSweptAreaSolid,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSurfaceOfLinearExtrusion[label="{IfcSurfaceOfLinearExtrusion|Depth : REAL| }"]
 IfcSurfaceOfLinearExtrusion->IfcSweptSurface[arrowhead=onormal,group=IfcSweptSurface,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSurfaceOfRevolution[label="{IfcSurfaceOfRevolution| | }"]
 IfcSurfaceOfRevolution->IfcSweptSurface[arrowhead=onormal,group=IfcSweptSurface,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSurfaceStyle[label="{IfcSurfaceStyle|Side : IfcSurfaceSide| }"]
 IfcSurfaceStyle->IfcPresentationStyle[arrowhead=onormal,group=IfcPresentationStyle,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSurfaceStyleLighting[label="{IfcSurfaceStyleLighting| | }"]
 IfcSurfaceStyleLighting->IfcSurfaceStyleElementSelect[arrowhead=onormal,group=IfcSurfaceStyleElementSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSurfaceStyleRefraction[label="{IfcSurfaceStyleRefraction|RefractionIndex[0-1] : REAL\nDispersionFactor[0-1] : REAL| }"]
 IfcSurfaceStyleRefraction->IfcSurfaceStyleElementSelect[arrowhead=onormal,group=IfcSurfaceStyleElementSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSurfaceStyleRendering[label="{IfcSurfaceStyleRendering|Transparency[0-1] : REAL\nReflectanceMethod : IfcReflectanceMethodEnum| }"]
 IfcSurfaceStyleRendering->IfcSurfaceStyleShading[arrowhead=onormal,group=IfcSurfaceStyleShading,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSurfaceStyleShading[label="{IfcSurfaceStyleShading| | }"]
 IfcSurfaceStyleShading->IfcSurfaceStyleElementSelect[arrowhead=onormal,group=IfcSurfaceStyleElementSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSurfaceStyleWithTextures[label="{IfcSurfaceStyleWithTextures| | }"]
 IfcSurfaceStyleWithTextures->IfcSurfaceStyleElementSelect[arrowhead=onormal,group=IfcSurfaceStyleElementSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSurfaceTexture[label="{IfcSurfaceTexture|RepeatS : BOOLEAN\nRepeatT : BOOLEAN\nTextureType : IfcSurfaceTextureEnum| }"]
;
 node[shape=record];
IfcSweptAreaSolid[label="{IfcSweptAreaSolid| | }"]
 IfcSweptAreaSolid->IfcSolidModel[arrowhead=onormal,group=IfcSolidModel,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSweptDiskSolid[label="{IfcSweptDiskSolid|Radius : REAL\nInnerRadius[0-1] : REAL\nStartParam : REAL\nEndParam : REAL| }"]
 IfcSweptDiskSolid->IfcSolidModel[arrowhead=onormal,group=IfcSolidModel,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSweptSurface[label="{IfcSweptSurface| | }"]
 IfcSweptSurface->IfcSurface[arrowhead=onormal,group=IfcSurface,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSwitchingDeviceType[label="{IfcSwitchingDeviceType|PredefinedType : IfcSwitchingDeviceTypeEnum| }"]
 IfcSwitchingDeviceType->IfcFlowControllerType[arrowhead=onormal,group=IfcFlowControllerType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSymbolStyle[label="{IfcSymbolStyle| | }"]
 IfcSymbolStyle->IfcPresentationStyle[arrowhead=onormal,group=IfcPresentationStyle,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSystem[label="{IfcSystem| | }"]
 IfcSystem->IfcGroup[arrowhead=onormal,group=IfcGroup,minlen=2,constraint=true,]
;
 node[shape=record];
IfcSystemFurnitureElementType[label="{IfcSystemFurnitureElementType| | }"]
 IfcSystemFurnitureElementType->IfcFurnishingElementType[arrowhead=onormal,group=IfcFurnishingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTShapeProfileDef[label="{IfcTShapeProfileDef|Depth : REAL\nFlangeWidth : REAL\nWebThickness : REAL\nFlangeThickness : REAL\nFilletRadius[0-1] : REAL\nFlangeEdgeRadius[0-1] : REAL\nWebEdgeRadius[0-1] : REAL\nWebSlope[0-1] : REAL\nFlangeSlope[0-1] : REAL\nCentreOfGravityInY[0-1] : REAL| }"]
 IfcTShapeProfileDef->IfcParameterizedProfileDef[arrowhead=onormal,group=IfcParameterizedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTable[label="{IfcTable|Name : STRING| }"]
;
 node[shape=record];
IfcTableRow[label="{IfcTableRow|IsHeading : BOOLEAN| }"]
;
 node[shape=record];
IfcTankType[label="{IfcTankType|PredefinedType : IfcTankTypeEnum| }"]
 IfcTankType->IfcFlowStorageDeviceType[arrowhead=onormal,group=IfcFlowStorageDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTask[label="{IfcTask|TaskId : STRING\nStatus[0-1] : STRING\nWorkMethod[0-1] : STRING\nIsMilestone : BOOLEAN\nPriority[0-1] : INTEGER| }"]
 IfcTask->IfcProcess[arrowhead=onormal,group=IfcProcess,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTelecomAddress[label="{IfcTelecomAddress|TelephoneNumbers[*] : STRING\nFacsimileNumbers[*] : STRING\nPagerNumber[0-1] : STRING\nElectronicMailAddresses[*] : STRING\nWWWHomePageURL[0-1] : STRING| }"]
 IfcTelecomAddress->IfcAddress[arrowhead=onormal,group=IfcAddress,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTendon[label="{IfcTendon|PredefinedType : IfcTendonTypeEnum\nNominalDiameter : REAL\nCrossSectionArea : REAL\nTensionForce[0-1] : REAL\nPreStress[0-1] : REAL\nFrictionCoefficient[0-1] : REAL\nAnchorageSlip[0-1] : REAL\nMinCurvatureRadius[0-1] : REAL| }"]
 IfcTendon->IfcReinforcingElement[arrowhead=onormal,group=IfcReinforcingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTendonAnchor[label="{IfcTendonAnchor| | }"]
 IfcTendonAnchor->IfcReinforcingElement[arrowhead=onormal,group=IfcReinforcingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTerminatorSymbol[label="{IfcTerminatorSymbol| | }"]
 IfcTerminatorSymbol->IfcAnnotationSymbolOccurrence[arrowhead=onormal,group=IfcAnnotationSymbolOccurrence,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTextLiteral[label="{IfcTextLiteral|Literal : STRING\nPath : IfcTextPath| }"]
 IfcTextLiteral->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTextLiteralWithExtent[label="{IfcTextLiteralWithExtent|BoxAlignment : STRING| }"]
 IfcTextLiteralWithExtent->IfcTextLiteral[arrowhead=onormal,group=IfcTextLiteral,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTextStyle[label="{IfcTextStyle| | }"]
 IfcTextStyle->IfcPresentationStyle[arrowhead=onormal,group=IfcPresentationStyle,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTextStyleFontModel[label="{IfcTextStyleFontModel|FontFamily[*] : STRING\nFontStyle[0-1] : STRING\nFontVariant[0-1] : STRING\nFontWeight[0-1] : STRING| }"]
 IfcTextStyleFontModel->IfcPreDefinedTextFont[arrowhead=onormal,group=IfcPreDefinedTextFont,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTextStyleForDefinedFont[label="{IfcTextStyleForDefinedFont| | }"]
 IfcTextStyleForDefinedFont->IfcCharacterStyleSelect[arrowhead=onormal,group=IfcCharacterStyleSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTextStyleTextModel[label="{IfcTextStyleTextModel|TextAlign[0-1] : STRING\nTextDecoration[0-1] : STRING\nTextTransform[0-1] : STRING| }"]
 IfcTextStyleTextModel->IfcTextStyleSelect[arrowhead=onormal,group=IfcTextStyleSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTextStyleWithBoxCharacteristics[label="{IfcTextStyleWithBoxCharacteristics|BoxHeight[0-1] : REAL\nBoxWidth[0-1] : REAL\nBoxSlantAngle[0-1] : REAL\nBoxRotateAngle[0-1] : REAL| }"]
 IfcTextStyleWithBoxCharacteristics->IfcTextStyleSelect[arrowhead=onormal,group=IfcTextStyleSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTextureCoordinate[label="{IfcTextureCoordinate| | }"]
;
 node[shape=record];
IfcTextureCoordinateGenerator[label="{IfcTextureCoordinateGenerator|Mode : STRING| }"]
 IfcTextureCoordinateGenerator->IfcTextureCoordinate[arrowhead=onormal,group=IfcTextureCoordinate,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTextureMap[label="{IfcTextureMap| | }"]
 IfcTextureMap->IfcTextureCoordinate[arrowhead=onormal,group=IfcTextureCoordinate,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTextureVertex[label="{IfcTextureVertex|Coordinates[22] : REAL| }"]
;
 node[shape=record];
IfcThermalMaterialProperties[label="{IfcThermalMaterialProperties|SpecificHeatCapacity[0-1] : REAL\nBoilingPoint[0-1] : REAL\nFreezingPoint[0-1] : REAL\nThermalConductivity[0-1] : REAL| }"]
 IfcThermalMaterialProperties->IfcMaterialProperties[arrowhead=onormal,group=IfcMaterialProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTimeSeries[label="{IfcTimeSeries|Name : STRING\nDescription[0-1] : STRING\nTimeSeriesDataType : IfcTimeSeriesDataTypeEnum\nDataOrigin : IfcDataOriginEnum\nUserDefinedDataOrigin[0-1] : STRING| }"]
 IfcTimeSeries->IfcObjectReferenceSelect[arrowhead=onormal,group=IfcObjectReferenceSelect,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTimeSeriesReferenceRelationship[label="{IfcTimeSeriesReferenceRelationship| | }"]
;
 node[shape=record];
IfcTimeSeriesSchedule[label="{IfcTimeSeriesSchedule|TimeSeriesScheduleType : IfcTimeSeriesScheduleTypeEnum| }"]
 IfcTimeSeriesSchedule->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTimeSeriesValue[label="{IfcTimeSeriesValue| | }"]
;
 node[shape=record];
IfcTopologicalRepresentationItem[label="{IfcTopologicalRepresentationItem| | }"]
 IfcTopologicalRepresentationItem->IfcRepresentationItem[arrowhead=onormal,group=IfcRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTopologyRepresentation[label="{IfcTopologyRepresentation| | }"]
 IfcTopologyRepresentation->IfcShapeModel[arrowhead=onormal,group=IfcShapeModel,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTransformerType[label="{IfcTransformerType|PredefinedType : IfcTransformerTypeEnum| }"]
 IfcTransformerType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTransportElement[label="{IfcTransportElement|OperationType[0-1] : IfcTransportElementTypeEnum\nCapacityByWeight[0-1] : REAL\nCapacityByNumber[0-1] : NUMBER| }"]
 IfcTransportElement->IfcElement[arrowhead=onormal,group=IfcElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTransportElementType[label="{IfcTransportElementType|PredefinedType : IfcTransportElementTypeEnum| }"]
 IfcTransportElementType->IfcElementType[arrowhead=onormal,group=IfcElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTrapeziumProfileDef[label="{IfcTrapeziumProfileDef|BottomXDim : REAL\nTopXDim : REAL\nYDim : REAL\nTopXOffset : REAL| }"]
 IfcTrapeziumProfileDef->IfcParameterizedProfileDef[arrowhead=onormal,group=IfcParameterizedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTrimmedCurve[label="{IfcTrimmedCurve|SenseAgreement : BOOLEAN\nMasterRepresentation : IfcTrimmingPreference| }"]
 IfcTrimmedCurve->IfcBoundedCurve[arrowhead=onormal,group=IfcBoundedCurve,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTubeBundleType[label="{IfcTubeBundleType|PredefinedType : IfcTubeBundleTypeEnum| }"]
 IfcTubeBundleType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTwoDirectionRepeatFactor[label="{IfcTwoDirectionRepeatFactor| | }"]
 IfcTwoDirectionRepeatFactor->IfcOneDirectionRepeatFactor[arrowhead=onormal,group=IfcOneDirectionRepeatFactor,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTypeObject[label="{IfcTypeObject|ApplicableOccurrence[0-1] : STRING| }"]
 IfcTypeObject->IfcObjectDefinition[arrowhead=onormal,group=IfcObjectDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcTypeProduct[label="{IfcTypeProduct|Tag[0-1] : STRING| }"]
 IfcTypeProduct->IfcTypeObject[arrowhead=onormal,group=IfcTypeObject,minlen=2,constraint=true,]
;
 node[shape=record];
IfcUShapeProfileDef[label="{IfcUShapeProfileDef|Depth : REAL\nFlangeWidth : REAL\nWebThickness : REAL\nFlangeThickness : REAL\nFilletRadius[0-1] : REAL\nEdgeRadius[0-1] : REAL\nFlangeSlope[0-1] : REAL\nCentreOfGravityInX[0-1] : REAL| }"]
 IfcUShapeProfileDef->IfcParameterizedProfileDef[arrowhead=onormal,group=IfcParameterizedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcUnitAssignment[label="{IfcUnitAssignment| | }"]
;
 node[shape=record];
IfcUnitaryEquipmentType[label="{IfcUnitaryEquipmentType|PredefinedType : IfcUnitaryEquipmentTypeEnum| }"]
 IfcUnitaryEquipmentType->IfcEnergyConversionDeviceType[arrowhead=onormal,group=IfcEnergyConversionDeviceType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcValveType[label="{IfcValveType|PredefinedType : IfcValveTypeEnum| }"]
 IfcValveType->IfcFlowControllerType[arrowhead=onormal,group=IfcFlowControllerType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcVector[label="{IfcVector|Magnitude : REAL| }"]
 IfcVector->IfcVectorOrDirection[arrowhead=onormal,group=IfcVectorOrDirection,minlen=2,constraint=true,]
 IfcVector->IfcGeometricRepresentationItem[arrowhead=onormal,group=IfcGeometricRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcVertex[label="{IfcVertex| | }"]
 IfcVertex->IfcTopologicalRepresentationItem[arrowhead=onormal,group=IfcTopologicalRepresentationItem,minlen=2,constraint=true,]
;
 node[shape=record];
IfcVertexBasedTextureMap[label="{IfcVertexBasedTextureMap| | }"]
;
 node[shape=record];
IfcVertexLoop[label="{IfcVertexLoop| | }"]
 IfcVertexLoop->IfcLoop[arrowhead=onormal,group=IfcLoop,minlen=2,constraint=true,]
;
 node[shape=record];
IfcVertexPoint[label="{IfcVertexPoint| | }"]
 IfcVertexPoint->IfcPointOrVertexPoint[arrowhead=onormal,group=IfcPointOrVertexPoint,minlen=2,constraint=true,]
 IfcVertexPoint->IfcVertex[arrowhead=onormal,group=IfcVertex,minlen=2,constraint=true,]
;
 node[shape=record];
IfcVibrationIsolatorType[label="{IfcVibrationIsolatorType|PredefinedType : IfcVibrationIsolatorTypeEnum| }"]
 IfcVibrationIsolatorType->IfcDiscreteAccessoryType[arrowhead=onormal,group=IfcDiscreteAccessoryType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcVirtualElement[label="{IfcVirtualElement| | }"]
 IfcVirtualElement->IfcElement[arrowhead=onormal,group=IfcElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcVirtualGridIntersection[label="{IfcVirtualGridIntersection|OffsetDistances[23] : REAL| }"]
;
 node[shape=record];
IfcWall[label="{IfcWall| | }"]
 IfcWall->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcWallStandardCase[label="{IfcWallStandardCase| | }"]
 IfcWallStandardCase->IfcWall[arrowhead=onormal,group=IfcWall,minlen=2,constraint=true,]
;
 node[shape=record];
IfcWallType[label="{IfcWallType|PredefinedType : IfcWallTypeEnum| }"]
 IfcWallType->IfcBuildingElementType[arrowhead=onormal,group=IfcBuildingElementType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcWasteTerminalType[label="{IfcWasteTerminalType|PredefinedType : IfcWasteTerminalTypeEnum| }"]
 IfcWasteTerminalType->IfcFlowTerminalType[arrowhead=onormal,group=IfcFlowTerminalType,minlen=2,constraint=true,]
;
 node[shape=record];
IfcWaterProperties[label="{IfcWaterProperties|IsPotable[0-1] : BOOLEAN\nHardness[0-1] : REAL\nAlkalinityConcentration[0-1] : REAL\nAcidityConcentration[0-1] : REAL\nImpuritiesContent[0-1] : REAL\nPHLevel[0-1] : REAL\nDissolvedSolidsContent[0-1] : REAL| }"]
 IfcWaterProperties->IfcMaterialProperties[arrowhead=onormal,group=IfcMaterialProperties,minlen=2,constraint=true,]
;
 node[shape=record];
IfcWindow[label="{IfcWindow|OverallHeight[0-1] : REAL\nOverallWidth[0-1] : REAL| }"]
 IfcWindow->IfcBuildingElement[arrowhead=onormal,group=IfcBuildingElement,minlen=2,constraint=true,]
;
 node[shape=record];
IfcWindowLiningProperties[label="{IfcWindowLiningProperties|LiningDepth[0-1] : REAL\nLiningThickness[0-1] : REAL\nTransomThickness[0-1] : REAL\nMullionThickness[0-1] : REAL\nFirstTransomOffset[0-1] : REAL\nSecondTransomOffset[0-1] : REAL\nFirstMullionOffset[0-1] : REAL\nSecondMullionOffset[0-1] : REAL| }"]
 IfcWindowLiningProperties->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcWindowPanelProperties[label="{IfcWindowPanelProperties|OperationType : IfcWindowPanelOperationEnum\nPanelPosition : IfcWindowPanelPositionEnum\nFrameDepth[0-1] : REAL\nFrameThickness[0-1] : REAL| }"]
 IfcWindowPanelProperties->IfcPropertySetDefinition[arrowhead=onormal,group=IfcPropertySetDefinition,minlen=2,constraint=true,]
;
 node[shape=record];
IfcWindowStyle[label="{IfcWindowStyle|ConstructionType : IfcWindowStyleConstructionEnum\nOperationType : IfcWindowStyleOperationEnum\nParameterTakesPrecedence : BOOLEAN\nSizeable : BOOLEAN| }"]
 IfcWindowStyle->IfcTypeProduct[arrowhead=onormal,group=IfcTypeProduct,minlen=2,constraint=true,]
;
 node[shape=record];
IfcWorkControl[label="{IfcWorkControl|Identifier : STRING\nPurpose[0-1] : STRING\nDuration[0-1] : REAL\nTotalFloat[0-1] : REAL\nWorkControlType[0-1] : IfcWorkControlTypeEnum\nUserDefinedControlType[0-1] : STRING| }"]
 IfcWorkControl->IfcControl[arrowhead=onormal,group=IfcControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcWorkPlan[label="{IfcWorkPlan| | }"]
 IfcWorkPlan->IfcWorkControl[arrowhead=onormal,group=IfcWorkControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcWorkSchedule[label="{IfcWorkSchedule| | }"]
 IfcWorkSchedule->IfcWorkControl[arrowhead=onormal,group=IfcWorkControl,minlen=2,constraint=true,]
;
 node[shape=record];
IfcZShapeProfileDef[label="{IfcZShapeProfileDef|Depth : REAL\nFlangeWidth : REAL\nWebThickness : REAL\nFlangeThickness : REAL\nFilletRadius[0-1] : REAL\nEdgeRadius[0-1] : REAL| }"]
 IfcZShapeProfileDef->IfcParameterizedProfileDef[arrowhead=onormal,group=IfcParameterizedProfileDef,minlen=2,constraint=true,]
;
 node[shape=record];
IfcZone[label="{IfcZone| | }"]
 IfcZone->IfcGroup[arrowhead=onormal,group=IfcGroup,minlen=2,constraint=true,]
;
 node[shape=record];
REAL[label="{&#171;DataType&#187;\nREAL|}"]
;
 node[shape=record];
BOOLEAN[label="{&#171;DataType&#187;\nBOOLEAN|}"]
;
 node[shape=record];
LOGICAL[label="{&#171;DataType&#187;\nLOGICAL|}"]
;
 node[shape=record];
INTEGER[label="{&#171;DataType&#187;\nINTEGER|}"]
;
 node[shape=record];
NUMBER[label="{&#171;DataType&#187;\nNUMBER|}"]
;
 node[shape=record];
STRING[label="{&#171;DataType&#187;\nSTRING|}"]
;
 node[shape=record];
BINARY[label="{&#171;DataType&#187;\nBINARY|}"]
;

}
}