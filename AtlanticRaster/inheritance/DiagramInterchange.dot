digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_DiagramInterchange"{
labelloc=t
color=black
label=DiagramInterchange
 node[shape=record];
Dimension[label="{Dimension|width : Double\nheigth : Double| }"]
;
 node[shape=record];
Point[label="{Point|x : Double\ny : Double| }"]
;
 node[shape=record];
BezierPoint[label="{BezierPoint| | }"]
 BezierPoint->Point[arrowhead=onormal,group=Point,minlen=2,constraint=true,]
;
 node[shape=record];
Property[label="{Property|key : String\nvalue : String| }"]
;
 node[shape=record];
DiagramElement[label="{/DiagramElement/|isVisible : Boolean| }"]
;
 node[shape=record];
Reference[label="{Reference|isIndividualRepresentation : Boolean| }"]
 Reference->DiagramElement[arrowhead=onormal,group=DiagramElement,minlen=2,constraint=true,]
;
 node[shape=record];
GraphElement[label="{/GraphElement/| | }"]
 GraphElement->DiagramElement[arrowhead=onormal,group=DiagramElement,minlen=2,constraint=true,]
;
 node[shape=record];
GraphEdge[label="{GraphEdge| | }"]
 GraphEdge->GraphElement[arrowhead=onormal,group=GraphElement,minlen=2,constraint=true,]
;
 node[shape=record];
GraphNode[label="{GraphNode| | }"]
 GraphNode->GraphElement[arrowhead=onormal,group=GraphElement,minlen=2,constraint=true,]
;
 node[shape=record];
GraphConnector[label="{GraphConnector| | }"]
;
 node[shape=record];
DiagramLink[label="{DiagramLink|zoom : Double| }"]
;
 node[shape=record];
SemanticModelBridge[label="{/SemanticModelBridge/|presentation : String| }"]
;
 node[shape=record];
Diagram[label="{Diagram|name : String\nzoom : Double| }"]
 Diagram->GraphNode[arrowhead=onormal,group=GraphNode,minlen=2,constraint=true,]
;
 node[shape=record];
SimpleSemanticModelElement[label="{SimpleSemanticModelElement|typeInfo : String| }"]
 SimpleSemanticModelElement->SemanticModelBridge[arrowhead=onormal,group=SemanticModelBridge,minlen=2,constraint=true,]
;
 node[shape=record];
UML1SemanticModelBridge[label="{UML1SemanticModelBridge| | }"]
 UML1SemanticModelBridge->SemanticModelBridge[arrowhead=onormal,group=SemanticModelBridge,minlen=2,constraint=true,]
;
 node[shape=record];
CoreSemanticModelBridge[label="{CoreSemanticModelBridge| | }"]
 CoreSemanticModelBridge->SemanticModelBridge[arrowhead=onormal,group=SemanticModelBridge,minlen=2,constraint=true,]
;
 node[shape=record];
CoreElement[label="{CoreElement| | }"]
;
 node[shape=record];
ElementsElement[label="{ElementsElement| | }"]
;
 node[shape=record];
LeafElement[label="{/LeafElement/| | }"]
 LeafElement->DiagramElement[arrowhead=onormal,group=DiagramElement,minlen=2,constraint=true,]
;
 node[shape=record];
TextElement[label="{TextElement|text : String| }"]
 TextElement->LeafElement[arrowhead=onormal,group=LeafElement,minlen=2,constraint=true,]
;
 node[shape=record];
Image[label="{Image|uri : String\nmimeType : String| }"]
 Image->LeafElement[arrowhead=onormal,group=LeafElement,minlen=2,constraint=true,]
;
 node[shape=record];
GraphicPrimitive[label="{/GraphicPrimitive/| | }"]
 GraphicPrimitive->LeafElement[arrowhead=onormal,group=LeafElement,minlen=2,constraint=true,]
;
 node[shape=record];
Polyline[label="{Polyline|closed : Boolean| }"]
 Polyline->GraphicPrimitive[arrowhead=onormal,group=GraphicPrimitive,minlen=2,constraint=true,]
;
 node[shape=record];
Ellipse[label="{Ellipse|radiusX : Double\nradiusY : Double\nrotation : Double\nstartAngle : Double\nendAngle : Double| }"]
 Ellipse->GraphicPrimitive[arrowhead=onormal,group=GraphicPrimitive,minlen=2,constraint=true,]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Double[label="{&#171;DataType&#187;\nDouble|}"]
;

}
}