digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_Maude"{
labelloc=t
color=black
label=Maude
 node[shape=record];
MaudeSpec[label="{MaudeSpec| | }"]
;
 node[shape=record];
MaudeTopEl[label="{/MaudeTopEl/|name : String| }"]
;
 node[shape=record];
ModExpression[label="{/ModExpression/| | }"]
;
 node[shape=record];
InstModExp[label="{InstModExp| | }"]
 InstModExp->ModExpression[arrowhead=onormal,group=ModExpression,minlen=2,constraint=true,]
;
 node[shape=record];
RenModExp[label="{RenModExp| | }"]
 RenModExp->ModExpression[arrowhead=onormal,group=ModExpression,minlen=2,constraint=true,]
;
 node[shape=record];
CompModExp[label="{CompModExp| | }"]
 CompModExp->ModExpression[arrowhead=onormal,group=ModExpression,minlen=2,constraint=true,]
;
 node[shape=record];
ModuleIdModExp[label="{ModuleIdModExp| | }"]
 ModuleIdModExp->ModExpression[arrowhead=onormal,group=ModExpression,minlen=2,constraint=true,]
;
 node[shape=record];
TheoryIdModExp[label="{TheoryIdModExp| | }"]
 TheoryIdModExp->ModExpression[arrowhead=onormal,group=ModExpression,minlen=2,constraint=true,]
;
 node[shape=record];
Parameter[label="{Parameter|label : String| }"]
 Parameter->ModExpression[arrowhead=onormal,group=ModExpression,minlen=2,constraint=true,]
;
 node[shape=record];
Theory[label="{/Theory/| | }"]
 Theory->MaudeTopEl[arrowhead=onormal,group=MaudeTopEl,minlen=2,constraint=true,]
;
 node[shape=record];
FTheory[label="{FTheory| | }"]
 FTheory->Theory[arrowhead=onormal,group=Theory,minlen=2,constraint=true,]
;
 node[shape=record];
STheory[label="{STheory| | }"]
 STheory->Theory[arrowhead=onormal,group=Theory,minlen=2,constraint=true,]
;
 node[shape=record];
Module[label="{/Module/| | }"]
 Module->MaudeTopEl[arrowhead=onormal,group=MaudeTopEl,minlen=2,constraint=true,]
;
 node[shape=record];
FModule[label="{FModule| | }"]
 FModule->Module[arrowhead=onormal,group=Module,minlen=2,constraint=true,]
;
 node[shape=record];
SModule[label="{SModule| | }"]
 SModule->Module[arrowhead=onormal,group=Module,minlen=2,constraint=true,]
;
 node[shape=record];
ModElement[label="{/ModElement/| | }"]
;
 node[shape=record];
ModImportation[label="{ModImportation|mode : ImportationMode| }"]
 ModImportation->ModElement[arrowhead=onormal,group=ModElement,minlen=2,constraint=true,]
;
 node[shape=record];
Type[label="{/Type/|name : String| }"]
;
 node[shape=record];
Sort[label="{Sort| | }"]
 Sort->Type[arrowhead=onormal,group=Type,minlen=2,constraint=true,]
 Sort->ModElement[arrowhead=onormal,group=ModElement,minlen=2,constraint=true,]
;
 node[shape=record];
Kind[label="{Kind| | }"]
 Kind->Type[arrowhead=onormal,group=Type,minlen=2,constraint=true,]
;
 node[shape=record];
SubsortRel[label="{SubsortRel| | }"]
 SubsortRel->ModElement[arrowhead=onormal,group=ModElement,minlen=2,constraint=true,]
;
 node[shape=record];
Operation[label="{Operation|name : String\natts[*] : String| }"]
 Operation->ModElement[arrowhead=onormal,group=ModElement,minlen=2,constraint=true,]
;
 node[shape=record];
Statement[label="{/Statement/|label[0-1] : String\natts[*] : String| }"]
 Statement->ModElement[arrowhead=onormal,group=ModElement,minlen=2,constraint=true,]
;
 node[shape=record];
Membership[label="{Membership| | }"]
 Membership->Statement[arrowhead=onormal,group=Statement,minlen=2,constraint=true,]
;
 node[shape=record];
Equation[label="{Equation| | }"]
 Equation->Statement[arrowhead=onormal,group=Statement,minlen=2,constraint=true,]
;
 node[shape=record];
Rule[label="{Rule| | }"]
 Rule->Statement[arrowhead=onormal,group=Statement,minlen=2,constraint=true,]
;
 node[shape=record];
Condition[label="{/Condition/| | }"]
;
 node[shape=record];
EquationalCond[label="{/EquationalCond/| | }"]
 EquationalCond->Condition[arrowhead=onormal,group=Condition,minlen=2,constraint=true,]
;
 node[shape=record];
RewriteCond[label="{RewriteCond| | }"]
 RewriteCond->Condition[arrowhead=onormal,group=Condition,minlen=2,constraint=true,]
;
 node[shape=record];
MembershipCond[label="{MembershipCond| | }"]
 MembershipCond->EquationalCond[arrowhead=onormal,group=EquationalCond,minlen=2,constraint=true,]
;
 node[shape=record];
BooleanCond[label="{BooleanCond| | }"]
 BooleanCond->EquationalCond[arrowhead=onormal,group=EquationalCond,minlen=2,constraint=true,]
;
 node[shape=record];
MatchingCond[label="{MatchingCond| | }"]
 MatchingCond->EquationalCond[arrowhead=onormal,group=EquationalCond,minlen=2,constraint=true,]
;
 node[shape=record];
EqualCond[label="{EqualCond| | }"]
 EqualCond->EquationalCond[arrowhead=onormal,group=EquationalCond,minlen=2,constraint=true,]
;
 node[shape=record];
Term[label="{/Term/| | }"]
;
 node[shape=record];
Constant[label="{Constant|op : String| }"]
 Constant->Term[arrowhead=onormal,group=Term,minlen=2,constraint=true,]
;
 node[shape=record];
RecTerm[label="{RecTerm|op : String| }"]
 RecTerm->Term[arrowhead=onormal,group=Term,minlen=2,constraint=true,]
;
 node[shape=record];
Variable[label="{Variable|name : String| }"]
 Variable->Term[arrowhead=onormal,group=Term,minlen=2,constraint=true,]
;
 node[shape=record];
View[label="{View| | }"]
 View->MaudeTopEl[arrowhead=onormal,group=MaudeTopEl,minlen=2,constraint=true,]
;
 node[shape=record];
ViewMapping[label="{/ViewMapping/| | }"]
;
 node[shape=record];
RenMapping[label="{/RenMapping/| | }"]
 RenMapping->ViewMapping[arrowhead=onormal,group=ViewMapping,minlen=2,constraint=true,]
;
 node[shape=record];
TermMapping[label="{TermMapping| | }"]
 TermMapping->ViewMapping[arrowhead=onormal,group=ViewMapping,minlen=2,constraint=true,]
;
 node[shape=record];
SortMapping[label="{SortMapping|to : String| }"]
 SortMapping->RenMapping[arrowhead=onormal,group=RenMapping,minlen=2,constraint=true,]
;
 node[shape=record];
OpTypedMapping[label="{OpTypedMapping|to : String\natts[*] : String| }"]
 OpTypedMapping->RenMapping[arrowhead=onormal,group=RenMapping,minlen=2,constraint=true,]
;
 node[shape=record];
OpMapping[label="{OpMapping|to : String| }"]
 OpMapping->RenMapping[arrowhead=onormal,group=RenMapping,minlen=2,constraint=true,]
;
 node[shape=record];
LabelMapping[label="{LabelMapping|from : String\nto : String| }"]
 LabelMapping->RenMapping[arrowhead=onormal,group=RenMapping,minlen=2,constraint=true,]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;

}
}