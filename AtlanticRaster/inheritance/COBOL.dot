digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_COBOL"{
labelloc=t
color=black
label=COBOL
 node[shape=record];
COBOLElement[label="{COBOLElement|level : String\nrefined : Boolean\nname : String| }"]
;
 node[shape=record];
COBOLClassifier[label="{COBOLClassifier|typeded : Boolean\nname : String| }"]
;
 node[shape=record];
COBOLSimpleType[label="{COBOLSimpleType|usageValue : COBOLUsageValue\npictureString : String\nusage : Boolean| }"]
 COBOLSimpleType->COBOLClassifier[arrowhead=onormal,group=COBOLClassifier,minlen=2,constraint=true,]
;
 node[shape=record];
COBOLComposedType[label="{COBOLComposedType| | }"]
 COBOLComposedType->COBOLClassifier[arrowhead=onormal,group=COBOLClassifier,minlen=2,constraint=true,]
;
 node[shape=record];
COBOLElementInitialValue[label="{COBOLElementInitialValue|initVal : String\nvalueKind : COBOLInitialValueKind| }"]
;
 node[shape=record];
COBOL88Element[label="{COBOL88Element|name : String| }"]
;
 node[shape=record];
COBOL88ElementValue[label="{COBOL88ElementValue|lowerLimit : String\nupperLimit : String\nrange : Boolean| }"]
;
 node[shape=record];
COBOLRedefiningElement[label="{COBOLRedefiningElement| | }"]
 COBOLRedefiningElement->COBOLElement[arrowhead=onormal,group=COBOLElement,minlen=2,constraint=true,]
;
 node[shape=record];
COBOL66Element[label="{COBOL66Element|name : String| }"]
;
 node[shape=record];
COBOLSourceText[label="{COBOLSourceText|source : String\nfileName : String| }"]
;
 node[shape=record];
COBOLFixedLengthArray[label="{COBOLFixedLengthArray|maxUpper : Integer| }"]
;
 node[shape=record];
COBOLVariableLengthArray[label="{COBOLVariableLengthArray|minUpper : Integer| }"]
 COBOLVariableLengthArray->COBOLFixedLengthArray[arrowhead=onormal,group=COBOLFixedLengthArray,minlen=2,constraint=true,]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Double[label="{&#171;DataType&#187;\nDouble|}"]
;

}
}