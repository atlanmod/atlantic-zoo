digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_OCLExpression"{
labelloc=t
color=black
label=OCLExpression
 node[shape=record];
ModelElement[label="{/ModelElement/| | }"]
;
 node[shape=record];
SyncChart[label="{SyncChart| | }"]
;
 node[shape=record];
ReferenceState[label="{ReferenceState| | }"]
;
 node[shape=record];
Arc[label="{/Arc/|isImmediate : Boolean\npriority : Integer| }"]
 Arc->ModelElement[arrowhead=onormal,group=ModelElement,minlen=2,constraint=true,]
;
 node[shape=record];
Vertex[label="{/Vertex/| | }"]
 Vertex->ModelElement[arrowhead=onormal,group=ModelElement,minlen=2,constraint=true,]
;
 node[shape=record];
PseudoState[label="{PseudoState| | }"]
 PseudoState->Vertex[arrowhead=onormal,group=Vertex,minlen=2,constraint=true,]
;
 node[shape=record];
PseudoStateKind[label="{PseudoStateKind| | }"]
;
 node[shape=record];
State[label="{State|isFinal : Boolean| }"]
 State->Vertex[arrowhead=onormal,group=Vertex,minlen=2,constraint=true,]
;
 node[shape=record];
SimpleState[label="{SimpleState| | }"]
 SimpleState->State[arrowhead=onormal,group=State,minlen=2,constraint=true,]
;
 node[shape=record];
CompositeState[label="{CompositeState|canTerminate : Boolean\nisSuspendable : Boolean| }"]
 CompositeState->State[arrowhead=onormal,group=State,minlen=2,constraint=true,]
 CompositeState->ReferenceState[arrowhead=onormal,group=ReferenceState,minlen=2,constraint=true,]
;
 node[shape=record];
Stg[label="{Stg|withFinal : Boolean| }"]
;
 node[shape=record];
Transition[label="{Transition| | }"]
 Transition->Arc[arrowhead=onormal,group=Arc,minlen=2,constraint=true,]
;
 node[shape=record];
TransitionKind[label="{TransitionKind| | }"]
;
 node[shape=record];
PseudoTransition[label="{PseudoTransition| | }"]
 PseudoTransition->Arc[arrowhead=onormal,group=Arc,minlen=2,constraint=true,]
;
 node[shape=record];
PseudoTransitionKind[label="{PseudoTransitionKind| | }"]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;

}
}