digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_express"{
labelloc=t
color=black
label=express
 node[shape=record];
Dummy[label="{&#171;DataType&#187;\nDummy|}"]
;
 subgraph "cluster_rules"{
labelloc=t
color=black
label=rules
 node[shape=record];
ONEOFConstraint[label="{ONEOFConstraint| | }"]
 ONEOFConstraint->SubtypeConstraint[arrowhead=onormal,group=SubtypeConstraint,minlen=2,constraint=true,]
;
 node[shape=record];
SupertypeRule[label="{SupertypeRule|assertsAbstract : Boolean| }"]
 SupertypeRule->CommonElement[arrowhead=onormal,group=CommonElement,minlen=2,constraint=true,]
;
 node[shape=record];
SubtypeConstraint[label="{SubtypeConstraint| | }"]
;
 node[shape=record];
Extent[label="{Extent| | }"]
 Extent->SETValue[arrowhead=onormal,group=SETValue,minlen=2,constraint=true,]
;
 node[shape=record];
TOTAL_OVERConstraint[label="{TOTAL_OVERConstraint| | }"]
 TOTAL_OVERConstraint->SubtypeConstraint[arrowhead=onormal,group=SubtypeConstraint,minlen=2,constraint=true,]
;
 node[shape=record];
ANDConstraint[label="{ANDConstraint| | }"]
 ANDConstraint->SubtypeConstraint[arrowhead=onormal,group=SubtypeConstraint,minlen=2,constraint=true,]
;
 node[shape=record];
GlobalRule[label="{GlobalRule| | }"]
 GlobalRule->SchemaElement[arrowhead=onormal,group=SchemaElement,minlen=2,constraint=true,]
 GlobalRule->AlgorithmScope[arrowhead=onormal,group=AlgorithmScope,minlen=2,constraint=true,]
;
 node[shape=record];
NamedRule[label="{NamedRule|position : Integer| }"]
 NamedRule->LocalElement[arrowhead=onormal,group=LocalElement,minlen=2,constraint=true,]
;

} subgraph "cluster_statements"{
labelloc=t
color=black
label=statements
 node[shape=record];
ProcedureCall[label="{ProcedureCall| | }"]
 ProcedureCall->Statement[arrowhead=onormal,group=Statement,minlen=2,constraint=true,]
;
 node[shape=record];
SkipStatement[label="{SkipStatement| | }"]
 SkipStatement->ControlStatement[arrowhead=onormal,group=ControlStatement,minlen=2,constraint=true,]
;
 node[shape=record];
AliasStatement[label="{AliasStatement| | }"]
 AliasStatement->Statement[arrowhead=onormal,group=Statement,minlen=2,constraint=true,]
 AliasStatement->LocalScope[arrowhead=onormal,group=LocalScope,minlen=2,constraint=true,]
;
 node[shape=record];
ControlVariable[label="{ControlVariable| | }"]
 ControlVariable->NamedVariable[arrowhead=onormal,group=NamedVariable,minlen=2,constraint=true,]
;
 node[shape=record];
AliasVariable[label="{AliasVariable| | }"]
 AliasVariable->NamedVariable[arrowhead=onormal,group=NamedVariable,minlen=2,constraint=true,]
 AliasVariable->VARVariable[arrowhead=onormal,group=VARVariable,minlen=2,constraint=true,]
;
 node[shape=record];
ControlStatement[label="{/ControlStatement/| | }"]
 ControlStatement->Statement[arrowhead=onormal,group=Statement,minlen=2,constraint=true,]
;
 node[shape=record];
VARCell[label="{VARCell|id : Identifier| }"]
 VARCell->VARExpression[arrowhead=onormal,group=VARExpression,minlen=2,constraint=true,]
;
 node[shape=record];
NullStatement[label="{NullStatement| | }"]
 NullStatement->ControlStatement[arrowhead=onormal,group=ControlStatement,minlen=2,constraint=true,]
;
 node[shape=record];
VARExpression[label="{/VARExpression/|text[0-1] : ExpressText| }"]
;
 node[shape=record];
AttributeCell[label="{AttributeCell|id : Identifier| }"]
 AttributeCell->VARExpression[arrowhead=onormal,group=VARExpression,minlen=2,constraint=true,]
;
 node[shape=record];
StatementBlock[label="{StatementBlock|delimited : Boolean| }"]
 StatementBlock->Statement[arrowhead=onormal,group=Statement,minlen=2,constraint=true,]
;
 node[shape=record];
CaseAction[label="{CaseAction|isDefault : Boolean| }"]
;
 node[shape=record];
MemberCell[label="{MemberCell| | }"]
 MemberCell->VARExpression[arrowhead=onormal,group=VARExpression,minlen=2,constraint=true,]
;
 node[shape=record];
RepeatStatement[label="{RepeatStatement| | }"]
 RepeatStatement->Statement[arrowhead=onormal,group=Statement,minlen=2,constraint=true,]
 RepeatStatement->LocalScope[arrowhead=onormal,group=LocalScope,minlen=2,constraint=true,]
;
 node[shape=record];
GroupCell[label="{GroupCell|id : Identifier| }"]
 GroupCell->VARExpression[arrowhead=onormal,group=VARExpression,minlen=2,constraint=true,]
;
 node[shape=record];
VariableCell[label="{VariableCell|id : Identifier| }"]
 VariableCell->VARExpression[arrowhead=onormal,group=VARExpression,minlen=2,constraint=true,]
;
 node[shape=record];
CaseStatement[label="{CaseStatement| | }"]
 CaseStatement->Statement[arrowhead=onormal,group=Statement,minlen=2,constraint=true,]
;
 node[shape=record];
IfStatement[label="{IfStatement| | }"]
 IfStatement->Statement[arrowhead=onormal,group=Statement,minlen=2,constraint=true,]
;
 node[shape=record];
EscapeStatement[label="{EscapeStatement| | }"]
 EscapeStatement->ControlStatement[arrowhead=onormal,group=ControlStatement,minlen=2,constraint=true,]
;
 node[shape=record];
ReturnStatement[label="{ReturnStatement| | }"]
 ReturnStatement->ControlStatement[arrowhead=onormal,group=ControlStatement,minlen=2,constraint=true,]
;
 node[shape=record];
Assignment[label="{Assignment| | }"]
 Assignment->Statement[arrowhead=onormal,group=Statement,minlen=2,constraint=true,]
;

} subgraph "cluster_mof"{
labelloc=t
color=black
label=mof
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;

} subgraph "cluster_expressions"{
labelloc=t
color=black
label=expressions
 node[shape=record];
Selector[label="{/Selector/| | }"]
 Selector->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
RepeatCount[label="{RepeatCount| | }"]
;
 node[shape=record];
EnumItemRef[label="{EnumItemRef|id : Identifier| }"]
 EnumItemRef->Primary[arrowhead=onormal,group=Primary,minlen=2,constraint=true,]
;
 node[shape=record];
Literal[label="{Literal| | }"]
 Literal->Primary[arrowhead=onormal,group=Primary,minlen=2,constraint=true,]
;
 node[shape=record];
BinaryIndex[label="{BinaryIndex| | }"]
 BinaryIndex->IndexOperation[arrowhead=onormal,group=IndexOperation,minlen=2,constraint=true,]
;
 node[shape=record];
IndeterminateRef[label="{IndeterminateRef| | }"]
 IndeterminateRef->Primary[arrowhead=onormal,group=Primary,minlen=2,constraint=true,]
;
 node[shape=record];
SELFRef[label="{SELFRef| | }"]
 SELFRef->Primary[arrowhead=onormal,group=Primary,minlen=2,constraint=true,]
;
 node[shape=record];
IndexOperation[label="{/IndexOperation/| | }"]
 IndexOperation->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
BinaryOperation[label="{BinaryOperation|operator : BinaryOperator| }"]
 BinaryOperation->Operation[arrowhead=onormal,group=Operation,minlen=2,constraint=true,]
;
 node[shape=record];
AggregateInitializer[label="{AggregateInitializer| | }"]
 AggregateInitializer->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
StringIndex[label="{StringIndex| | }"]
 StringIndex->IndexOperation[arrowhead=onormal,group=IndexOperation,minlen=2,constraint=true,]
;
 node[shape=record];
PartialEntityConstructor[label="{PartialEntityConstructor|id : Identifier| }"]
 PartialEntityConstructor->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
Coercion[label="{Coercion| | }"]
 Coercion->Operation[arrowhead=onormal,group=Operation,minlen=2,constraint=true,]
;
 node[shape=record];
Primary[label="{/Primary/| | }"]
 Primary->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
ActualParameter[label="{ActualParameter|position : Integer| }"]
;
 node[shape=record];
ParameterRef[label="{ParameterRef|id : Identifier| }"]
 ParameterRef->Primary[arrowhead=onormal,group=Primary,minlen=2,constraint=true,]
;
 node[shape=record];
AttributeRef[label="{AttributeRef|id : Identifier| }"]
 AttributeRef->Selector[arrowhead=onormal,group=Selector,minlen=2,constraint=true,]
;
 node[shape=record];
AggregateIndex[label="{AggregateIndex| | }"]
 AggregateIndex->IndexOperation[arrowhead=onormal,group=IndexOperation,minlen=2,constraint=true,]
;
 node[shape=record];
GroupRef[label="{GroupRef|id : Identifier| }"]
 GroupRef->Selector[arrowhead=onormal,group=Selector,minlen=2,constraint=true,]
;
 node[shape=record];
UnaryOperation[label="{UnaryOperation|operator : UnaryOperator| }"]
 UnaryOperation->Operation[arrowhead=onormal,group=Operation,minlen=2,constraint=true,]
;
 node[shape=record];
UsedInRef[label="{UsedInRef| | }"]
 UsedInRef->Selector[arrowhead=onormal,group=Selector,minlen=2,constraint=true,]
;
 node[shape=record];
ConstantRef[label="{ConstantRef|id : Identifier| }"]
 ConstantRef->Primary[arrowhead=onormal,group=Primary,minlen=2,constraint=true,]
;
 node[shape=record];
QueryExpression[label="{QueryExpression| | }"]
 QueryExpression->LocalScope[arrowhead=onormal,group=LocalScope,minlen=2,constraint=true,]
 QueryExpression->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
QueryVariable[label="{QueryVariable| | }"]
 QueryVariable->NamedVariable[arrowhead=onormal,group=NamedVariable,minlen=2,constraint=true,]
;
 node[shape=record];
Operation[label="{/Operation/| | }"]
 Operation->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
AttributeBinding[label="{AttributeBinding|position : Integer| }"]
;
 node[shape=record];
FunctionCall[label="{FunctionCall| | }"]
 FunctionCall->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
MemberBinding[label="{MemberBinding|position : Integer| }"]
;
 node[shape=record];
ExtentRef[label="{ExtentRef|id : Identifier| }"]
 ExtentRef->Primary[arrowhead=onormal,group=Primary,minlen=2,constraint=true,]
;
 node[shape=record];
VariableRef[label="{VariableRef|id : Identifier| }"]
 VariableRef->Primary[arrowhead=onormal,group=Primary,minlen=2,constraint=true,]
;
 node[shape=record];
UnaryOperator[label="{&#171;DataType&#187;\nUnaryOperator|}"]
;
 node[shape=record];
BinaryOperator[label="{&#171;DataType&#187;\nBinaryOperator|}"]
;

} subgraph "cluster_core"{
labelloc=t
color=black
label=core
 node[shape=record];
TypeElement[label="{/TypeElement/| | }"]
 TypeElement->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
SingleEntityType[label="{SingleEntityType| | }"]
;
 node[shape=record];
AGGREGATEType[label="{AGGREGATEType| | }"]
 AGGREGATEType->GeneralizedType[arrowhead=onormal,group=GeneralizedType,minlen=2,constraint=true,]
;
 node[shape=record];
GeneralBAGType[label="{GeneralBAGType| | }"]
 GeneralBAGType->GeneralAggregationType[arrowhead=onormal,group=GeneralAggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
DomainRule[label="{DomainRule|position : Integer| }"]
 DomainRule->DomainConstraint[arrowhead=onormal,group=DomainConstraint,minlen=2,constraint=true,]
 DomainRule->TypeElement[arrowhead=onormal,group=TypeElement,minlen=2,constraint=true,]
;
 node[shape=record];
GeneralAggregationType[label="{/GeneralAggregationType/| | }"]
 GeneralAggregationType->GeneralizedType[arrowhead=onormal,group=GeneralizedType,minlen=2,constraint=true,]
 GeneralAggregationType->AggregationType[arrowhead=onormal,group=AggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
ConcreteType[label="{/ConcreteType/| | }"]
 ConcreteType->InstantiableType[arrowhead=onormal,group=InstantiableType,minlen=2,constraint=true,]
;
 node[shape=record];
Expression[label="{Expression|text[0-1] : ExpressText| }"]
;
 node[shape=record];
InverseAttribute[label="{InverseAttribute|isUnique : Boolean| }"]
 InverseAttribute->Attribute[arrowhead=onormal,group=Attribute,minlen=2,constraint=true,]
;
 node[shape=record];
EnumerationType[label="{EnumerationType|isExtensible : Boolean| }"]
 EnumerationType->DefinedType[arrowhead=onormal,group=DefinedType,minlen=2,constraint=true,]
;
 node[shape=record];
VariableType[label="{/VariableType/| | }"]
 VariableType->DataType[arrowhead=onormal,group=DataType,minlen=2,constraint=true,]
 VariableType->AttributeType[arrowhead=onormal,group=AttributeType,minlen=2,constraint=true,]
;
 node[shape=record];
ArrayBound[label="{ArrayBound|bound[0-1] : Integer| }"]
;
 node[shape=record];
GeneralSETType[label="{GeneralSETType| | }"]
 GeneralSETType->GeneralAggregationType[arrowhead=onormal,group=GeneralAggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
LISTType[label="{LISTType| | }"]
 LISTType->ConcreteAggregationType[arrowhead=onormal,group=ConcreteAggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
Redeclaration[label="{Redeclaration|position : Integer\nisMandatory[0-1] : Boolean| }"]
;
 node[shape=record];
EntityType[label="{EntityType|isAbstract : Boolean| }"]
 EntityType->NamedType[arrowhead=onormal,group=NamedType,minlen=2,constraint=true,]
 EntityType->InstantiableType[arrowhead=onormal,group=InstantiableType,minlen=2,constraint=true,]
;
 node[shape=record];
DataType[label="{/DataType/| | }"]
;
 node[shape=record];
PartialEntityType[label="{PartialEntityType| | }"]
 PartialEntityType->DataType[arrowhead=onormal,group=DataType,minlen=2,constraint=true,]
;
 node[shape=record];
Schema[label="{Schema|name : Identifier\nversion[0-1] : Identifier| }"]
 Schema->Scope[arrowhead=onormal,group=Scope,minlen=2,constraint=true,]
;
 node[shape=record];
InvertibleAttribute[label="{InvertibleAttribute| | }"]
 InvertibleAttribute->ExplicitAttribute[arrowhead=onormal,group=ExplicitAttribute,minlen=2,constraint=true,]
;
 node[shape=record];
GeneralizedType[label="{/GeneralizedType/| | }"]
 GeneralizedType->ParameterType[arrowhead=onormal,group=ParameterType,minlen=2,constraint=true,]
 GeneralizedType->AttributeType[arrowhead=onormal,group=AttributeType,minlen=2,constraint=true,]
;
 node[shape=record];
InterfacedElement[label="{InterfacedElement|isUSE : Boolean| }"]
;
 node[shape=record];
NumericType[label="{NumericType| | }"]
 NumericType->SimpleType[arrowhead=onormal,group=SimpleType,minlen=2,constraint=true,]
;
 node[shape=record];
DefinedType[label="{/DefinedType/| | }"]
 DefinedType->NamedType[arrowhead=onormal,group=NamedType,minlen=2,constraint=true,]
 DefinedType->ConcreteType[arrowhead=onormal,group=ConcreteType,minlen=2,constraint=true,]
;
 node[shape=record];
UniqueRule[label="{UniqueRule|position : Integer| }"]
 UniqueRule->TypeElement[arrowhead=onormal,group=TypeElement,minlen=2,constraint=true,]
;
 node[shape=record];
DomainRole[label="{DomainRole| | }"]
 DomainRole->Role[arrowhead=onormal,group=Role,minlen=2,constraint=true,]
;
 node[shape=record];
DomainConstraint[label="{/DomainConstraint/| | }"]
;
 node[shape=record];
InstantiableType[label="{/InstantiableType/| | }"]
 InstantiableType->ParameterType[arrowhead=onormal,group=ParameterType,minlen=2,constraint=true,]
 InstantiableType->VariableType[arrowhead=onormal,group=VariableType,minlen=2,constraint=true,]
;
 node[shape=record];
GeneralLISTType[label="{GeneralLISTType| | }"]
 GeneralLISTType->GeneralAggregationType[arrowhead=onormal,group=GeneralAggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
NamedElement[label="{/NamedElement/| | }"]
;
 node[shape=record];
Attribute[label="{/Attribute/|isAbstract : Boolean\nposition : Integer| }"]
 Attribute->TypeElement[arrowhead=onormal,group=TypeElement,minlen=2,constraint=true,]
;
 node[shape=record];
BAGType[label="{BAGType| | }"]
 BAGType->ConcreteAggregationType[arrowhead=onormal,group=ConcreteAggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
RealType[label="{RealType|precision[0-1] : Integer| }"]
 RealType->NumericType[arrowhead=onormal,group=NumericType,minlen=2,constraint=true,]
;
 node[shape=record];
LogicType[label="{LogicType| | }"]
 LogicType->SimpleType[arrowhead=onormal,group=SimpleType,minlen=2,constraint=true,]
;
 node[shape=record];
GenericType[label="{GenericType|isEntity : Boolean| }"]
 GenericType->GeneralizedType[arrowhead=onormal,group=GeneralizedType,minlen=2,constraint=true,]
;
 node[shape=record];
StringType[label="{StringType| | }"]
 StringType->SimpleType[arrowhead=onormal,group=SimpleType,minlen=2,constraint=true,]
;
 node[shape=record];
AnonymousType[label="{/AnonymousType/| | }"]
 AnonymousType->ConcreteType[arrowhead=onormal,group=ConcreteType,minlen=2,constraint=true,]
 AnonymousType->InstantiableType[arrowhead=onormal,group=InstantiableType,minlen=2,constraint=true,]
;
 node[shape=record];
AlgorithmScope[label="{/AlgorithmScope/| | }"]
 AlgorithmScope->LocalScope[arrowhead=onormal,group=LocalScope,minlen=2,constraint=true,]
;
 node[shape=record];
Instance[label="{/Instance/| | }"]
;
 node[shape=record];
AttributeType[label="{/AttributeType/| | }"]
;
 node[shape=record];
DerivedAttribute[label="{DerivedAttribute| | }"]
 DerivedAttribute->Attribute[arrowhead=onormal,group=Attribute,minlen=2,constraint=true,]
;
 node[shape=record];
RangeRole[label="{RangeRole| | }"]
 RangeRole->Role[arrowhead=onormal,group=Role,minlen=2,constraint=true,]
;
 node[shape=record];
LocalElement[label="{/LocalElement/| | }"]
 LocalElement->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Remark[label="{Remark|isTagged : Boolean\nisTail : Boolean\ntext : ExpressText| }"]
;
 node[shape=record];
SizeConstraint[label="{SizeConstraint|bound[0-1] : Integer| }"]
 SizeConstraint->DomainConstraint[arrowhead=onormal,group=DomainConstraint,minlen=2,constraint=true,]
;
 node[shape=record];
Role[label="{/Role/| | }"]
;
 node[shape=record];
SETType[label="{SETType| | }"]
 SETType->ConcreteAggregationType[arrowhead=onormal,group=ConcreteAggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
SpecializedType[label="{SpecializedType| | }"]
 SpecializedType->DefinedType[arrowhead=onormal,group=DefinedType,minlen=2,constraint=true,]
;
 node[shape=record];
GeneralARRAYType[label="{GeneralARRAYType|isOptional : Boolean| }"]
 GeneralARRAYType->GeneralAggregationType[arrowhead=onormal,group=GeneralAggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
Relationship[label="{Relationship| | }"]
;
 node[shape=record];
LengthConstraint[label="{LengthConstraint|maxLength[0-1] : Integer\nisFixed : Boolean| }"]
 LengthConstraint->DomainConstraint[arrowhead=onormal,group=DomainConstraint,minlen=2,constraint=true,]
;
 node[shape=record];
LocalScope[label="{/LocalScope/| | }"]
 LocalScope->Scope[arrowhead=onormal,group=Scope,minlen=2,constraint=true,]
;
 node[shape=record];
NamedType[label="{/NamedType/| | }"]
 NamedType->InstantiableType[arrowhead=onormal,group=InstantiableType,minlen=2,constraint=true,]
 NamedType->Scope[arrowhead=onormal,group=Scope,minlen=2,constraint=true,]
 NamedType->CommonElement[arrowhead=onormal,group=CommonElement,minlen=2,constraint=true,]
 NamedType->AttributeType[arrowhead=onormal,group=AttributeType,minlen=2,constraint=true,]
;
 node[shape=record];
BinaryType[label="{BinaryType| | }"]
 BinaryType->SimpleType[arrowhead=onormal,group=SimpleType,minlen=2,constraint=true,]
;
 node[shape=record];
ScopedId[label="{ScopedId|localName : Identifier| }"]
;
 node[shape=record];
AggregationType[label="{/AggregationType/|isUnique : Boolean\nordering : OrderingKind| }"]
;
 node[shape=record];
Scope[label="{/Scope/| | }"]
;
 node[shape=record];
ParameterType[label="{/ParameterType/| | }"]
;
 node[shape=record];
SelectType[label="{SelectType|isExtensible : Boolean\nisEntity : Boolean| }"]
 SelectType->DefinedType[arrowhead=onormal,group=DefinedType,minlen=2,constraint=true,]
;
 node[shape=record];
ActualType[label="{/ActualType/| | }"]
 ActualType->VariableType[arrowhead=onormal,group=VariableType,minlen=2,constraint=true,]
;
 node[shape=record];
ExplicitAttribute[label="{ExplicitAttribute|isOptional : Boolean| }"]
 ExplicitAttribute->Attribute[arrowhead=onormal,group=Attribute,minlen=2,constraint=true,]
;
 node[shape=record];
SimpleType[label="{/SimpleType/|id : Keyword| }"]
 SimpleType->AnonymousType[arrowhead=onormal,group=AnonymousType,minlen=2,constraint=true,]
;
 node[shape=record];
CommonElement[label="{/CommonElement/| | }"]
 CommonElement->SchemaElement[arrowhead=onormal,group=SchemaElement,minlen=2,constraint=true,]
;
 node[shape=record];
SchemaElement[label="{/SchemaElement/| | }"]
 SchemaElement->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
ConcreteAggregationType[label="{/ConcreteAggregationType/| | }"]
 ConcreteAggregationType->AnonymousType[arrowhead=onormal,group=AnonymousType,minlen=2,constraint=true,]
 ConcreteAggregationType->AggregationType[arrowhead=onormal,group=AggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
ARRAYType[label="{ARRAYType|isOptional : Boolean| }"]
 ARRAYType->ConcreteAggregationType[arrowhead=onormal,group=ConcreteAggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
Keyword[label="{&#171;DataType&#187;\nKeyword|}"]
;
 node[shape=record];
ExpressText[label="{&#171;DataType&#187;\nExpressText|}"]
;
 node[shape=record];
Identifier[label="{&#171;DataType&#187;\nIdentifier|}"]
;
 node[shape=record];
OrderingKind[label="{&#171;DataType&#187;\nOrderingKind|}"]
;

} subgraph "cluster_java"{
labelloc=t
color=black
label=java
 subgraph "cluster_lang"{
labelloc=t
color=black
label=lang
 node[shape=record];
int[label="{&#171;DataType&#187;\nint|}"]
;
 node[shape=record];
void[label="{&#171;DataType&#187;\nvoid|}"]
;

}
} subgraph "cluster_algorithms"{
labelloc=t
color=black
label=algorithms
 node[shape=record];
ActualTypeConstraint[label="{ActualTypeConstraint|label : Identifier| }"]
;
 node[shape=record];
FunctionResult[label="{FunctionResult| | }"]
 FunctionResult->Variable[arrowhead=onormal,group=Variable,minlen=2,constraint=true,]
;
 node[shape=record];
Function[label="{Function| | }"]
 Function->Algorithm[arrowhead=onormal,group=Algorithm,minlen=2,constraint=true,]
;
 node[shape=record];
InParameter[label="{InParameter| | }"]
 InParameter->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
LocalVariable[label="{LocalVariable| | }"]
 LocalVariable->Variable[arrowhead=onormal,group=Variable,minlen=2,constraint=true,]
;
 node[shape=record];
ActualStructure[label="{ActualStructure| | }"]
 ActualStructure->GenericElement[arrowhead=onormal,group=GenericElement,minlen=2,constraint=true,]
 ActualStructure->AGGREGATEType[arrowhead=onormal,group=AGGREGATEType,minlen=2,constraint=true,]
;
 node[shape=record];
ActualGenericType[label="{ActualGenericType|isEntity : Boolean\nlabel : Identifier| }"]
 ActualGenericType->ActualType[arrowhead=onormal,group=ActualType,minlen=2,constraint=true,]
;
 node[shape=record];
Statement[label="{Statement|text[0-1] : ExpressText| }"]
;
 node[shape=record];
NamedVariable[label="{/NamedVariable/| | }"]
 NamedVariable->LocalElement[arrowhead=onormal,group=LocalElement,minlen=2,constraint=true,]
;
 node[shape=record];
InVariable[label="{InVariable| | }"]
 InVariable->Variable[arrowhead=onormal,group=Variable,minlen=2,constraint=true,]
;
 node[shape=record];
Procedure[label="{Procedure| | }"]
 Procedure->Algorithm[arrowhead=onormal,group=Algorithm,minlen=2,constraint=true,]
;
 node[shape=record];
ActualARRAYType[label="{ActualARRAYType|isOptional : Boolean| }"]
 ActualARRAYType->ActualAggregationType[arrowhead=onormal,group=ActualAggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
ActualSETType[label="{ActualSETType| | }"]
 ActualSETType->ActualAggregationType[arrowhead=onormal,group=ActualAggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
ActualAGGREGATEType[label="{ActualAGGREGATEType|label : Identifier| }"]
 ActualAGGREGATEType->ActualType[arrowhead=onormal,group=ActualType,minlen=2,constraint=true,]
;
 node[shape=record];
Parameter[label="{/Parameter/|inout : Boolean\nposition : Integer| }"]
 Parameter->LocalElement[arrowhead=onormal,group=LocalElement,minlen=2,constraint=true,]
;
 node[shape=record];
ActualStructureConstraint[label="{ActualStructureConstraint|label : Identifier| }"]
;
 node[shape=record];
Algorithm[label="{/Algorithm/| | }"]
 Algorithm->AlgorithmScope[arrowhead=onormal,group=AlgorithmScope,minlen=2,constraint=true,]
 Algorithm->CommonElement[arrowhead=onormal,group=CommonElement,minlen=2,constraint=true,]
;
 node[shape=record];
ActualAggregationType[label="{/ActualAggregationType/| | }"]
 ActualAggregationType->ActualType[arrowhead=onormal,group=ActualType,minlen=2,constraint=true,]
 ActualAggregationType->AggregationType[arrowhead=onormal,group=AggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
VARVariable[label="{/VARVariable/| | }"]
;
 node[shape=record];
ActualLISTType[label="{ActualLISTType| | }"]
 ActualLISTType->ActualAggregationType[arrowhead=onormal,group=ActualAggregationType,minlen=2,constraint=true,]
;
 node[shape=record];
Variable[label="{/Variable/| | }"]
 Variable->NamedVariable[arrowhead=onormal,group=NamedVariable,minlen=2,constraint=true,]
;
 node[shape=record];
GenericElement[label="{/GenericElement/| | }"]
 GenericElement->LocalElement[arrowhead=onormal,group=LocalElement,minlen=2,constraint=true,]
;
 node[shape=record];
VARParameter[label="{VARParameter| | }"]
 VARParameter->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
 VARParameter->VARVariable[arrowhead=onormal,group=VARVariable,minlen=2,constraint=true,]
;
 node[shape=record];
ActualDataType[label="{ActualDataType| | }"]
 ActualDataType->GenericType[arrowhead=onormal,group=GenericType,minlen=2,constraint=true,]
 ActualDataType->GenericElement[arrowhead=onormal,group=GenericElement,minlen=2,constraint=true,]
;
 node[shape=record];
ActualBAGType[label="{ActualBAGType| | }"]
 ActualBAGType->ActualAggregationType[arrowhead=onormal,group=ActualAggregationType,minlen=2,constraint=true,]
;

} subgraph "cluster_instances"{
labelloc=t
color=black
label=instances
 node[shape=record];
AttributeValue[label="{AttributeValue| | }"]
;
 node[shape=record];
ARRAYValue[label="{ARRAYValue| | }"]
 ARRAYValue->AggregateValue[arrowhead=onormal,group=AggregateValue,minlen=2,constraint=true,]
;
 node[shape=record];
RoleName[label="{RoleName| | }"]
 RoleName->StringValue[arrowhead=onormal,group=StringValue,minlen=2,constraint=true,]
;
 node[shape=record];
EntityInstance[label="{EntityInstance|id : EntityName| }"]
 EntityInstance->TypedInstance[arrowhead=onormal,group=TypedInstance,minlen=2,constraint=true,]
;
 node[shape=record];
IntegerValue[label="{IntegerValue| | }"]
 IntegerValue->RealValue[arrowhead=onormal,group=RealValue,minlen=2,constraint=true,]
;
 node[shape=record];
AggregateValue[label="{/AggregateValue/| | }"]
 AggregateValue->ConcreteValue[arrowhead=onormal,group=ConcreteValue,minlen=2,constraint=true,]
;
 node[shape=record];
Constant[label="{Constant| | }"]
 Constant->CommonElement[arrowhead=onormal,group=CommonElement,minlen=2,constraint=true,]
;
 node[shape=record];
LogicalValue[label="{LogicalValue| | }"]
 LogicalValue->SimpleValue[arrowhead=onormal,group=SimpleValue,minlen=2,constraint=true,]
;
 node[shape=record];
TypedInstance[label="{/TypedInstance/| | }"]
 TypedInstance->Instance[arrowhead=onormal,group=Instance,minlen=2,constraint=true,]
;
 node[shape=record];
ListMember[label="{ListMember|position : Integer| }"]
;
 node[shape=record];
BagMember[label="{BagMember|count : Integer| }"]
;
 node[shape=record];
SingleEntityValue[label="{SingleEntityValue| | }"]
;
 node[shape=record];
Indeterminate[label="{Indeterminate| | }"]
 Indeterminate->Instance[arrowhead=onormal,group=Instance,minlen=2,constraint=true,]
;
 node[shape=record];
SingleLeafInstance[label="{SingleLeafInstance| | }"]
 SingleLeafInstance->EntityInstance[arrowhead=onormal,group=EntityInstance,minlen=2,constraint=true,]
;
 node[shape=record];
GenericAggregate[label="{GenericAggregate| | }"]
 GenericAggregate->LISTValue[arrowhead=onormal,group=LISTValue,minlen=2,constraint=true,]
;
 node[shape=record];
BinaryValue[label="{BinaryValue| | }"]
 BinaryValue->SimpleValue[arrowhead=onormal,group=SimpleValue,minlen=2,constraint=true,]
;
 node[shape=record];
SpecializedValue[label="{SpecializedValue| | }"]
 SpecializedValue->TypedInstance[arrowhead=onormal,group=TypedInstance,minlen=2,constraint=true,]
;
 node[shape=record];
BAGValue[label="{BAGValue| | }"]
 BAGValue->AggregateValue[arrowhead=onormal,group=AggregateValue,minlen=2,constraint=true,]
;
 node[shape=record];
EnumerationItem[label="{EnumerationItem|position : Integer| }"]
 EnumerationItem->TypeElement[arrowhead=onormal,group=TypeElement,minlen=2,constraint=true,]
 EnumerationItem->TypedInstance[arrowhead=onormal,group=TypedInstance,minlen=2,constraint=true,]
 EnumerationItem->ConcreteValue[arrowhead=onormal,group=ConcreteValue,minlen=2,constraint=true,]
;
 node[shape=record];
EntityValue[label="{EntityValue| | }"]
 EntityValue->PartialEntityValue[arrowhead=onormal,group=PartialEntityValue,minlen=2,constraint=true,]
;
 node[shape=record];
SETValue[label="{SETValue| | }"]
 SETValue->AggregateValue[arrowhead=onormal,group=AggregateValue,minlen=2,constraint=true,]
;
 node[shape=record];
ArrayMember[label="{ArrayMember|index : Integer| }"]
;
 node[shape=record];
Population[label="{Population| | }"]
;
 node[shape=record];
RealValue[label="{RealValue| | }"]
 RealValue->NumberValue[arrowhead=onormal,group=NumberValue,minlen=2,constraint=true,]
;
 node[shape=record];
BooleanValue[label="{BooleanValue| | }"]
 BooleanValue->LogicalValue[arrowhead=onormal,group=LogicalValue,minlen=2,constraint=true,]
;
 node[shape=record];
LISTValue[label="{LISTValue| | }"]
 LISTValue->Instance[arrowhead=onormal,group=Instance,minlen=2,constraint=true,]
 LISTValue->AggregateValue[arrowhead=onormal,group=AggregateValue,minlen=2,constraint=true,]
;
 node[shape=record];
StringValue[label="{StringValue| | }"]
 StringValue->SimpleValue[arrowhead=onormal,group=SimpleValue,minlen=2,constraint=true,]
;
 node[shape=record];
TypeName[label="{TypeName| | }"]
 TypeName->StringValue[arrowhead=onormal,group=StringValue,minlen=2,constraint=true,]
;
 node[shape=record];
PartialEntityValue[label="{PartialEntityValue| | }"]
 PartialEntityValue->Instance[arrowhead=onormal,group=Instance,minlen=2,constraint=true,]
;
 node[shape=record];
NumberValue[label="{NumberValue| | }"]
 NumberValue->SimpleValue[arrowhead=onormal,group=SimpleValue,minlen=2,constraint=true,]
;
 node[shape=record];
MultiLeafInstance[label="{MultiLeafInstance| | }"]
 MultiLeafInstance->EntityInstance[arrowhead=onormal,group=EntityInstance,minlen=2,constraint=true,]
;
 node[shape=record];
SimpleValue[label="{/SimpleValue/|name : String| }"]
 SimpleValue->ConcreteValue[arrowhead=onormal,group=ConcreteValue,minlen=2,constraint=true,]
;
 node[shape=record];
ConcreteValue[label="{/ConcreteValue/| | }"]
 ConcreteValue->Instance[arrowhead=onormal,group=Instance,minlen=2,constraint=true,]
;
 node[shape=record];
EntityName[label="{&#171;DataType&#187;\nEntityName|}"]
;

}
}
}