digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_GraphML"{
labelloc=t
color=black
label=GraphML
 node[shape=record];
LocatedElement[label="{/LocatedElement/|location[0-1] : String\ncommentsBefore[*] : String\ncommentsAfter[*] : String| }"]
;
 node[shape=record];
Root[label="{Root| | }"]
 Root->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Element[label="{Element|id : String| }"]
 Element->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Key[label="{Key|for : ElemType\nattrName : String\ntype : AttrType\ndefValue : String| }"]
 Key->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
Graph[label="{Graph|edgeDefault : EdgeType| }"]
 Graph->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
Edge[label="{Edge| | }"]
 Edge->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
HyperEdge[label="{HyperEdge| | }"]
 HyperEdge->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
Node[label="{Node| | }"]
 Node->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
Port[label="{Port|name : String| }"]
 Port->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
EndPoint[label="{EndPoint| | }"]
 EndPoint->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Data[label="{Data|key : String\nvalue : String| }"]
 Data->LocatedElement[arrowhead=onormal,group=LocatedElement,minlen=2,constraint=true,]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
double[label="{&#171;DataType&#187;\ndouble|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;

}
}