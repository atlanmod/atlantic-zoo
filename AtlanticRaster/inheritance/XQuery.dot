digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_XQuery"{
labelloc=t
color=black
label=XQuery
 node[shape=record];
XQueryProgram[label="{XQueryProgram| | }"]
;
 node[shape=record];
Expression[label="{Expression| | }"]
;
 node[shape=record];
ExecutableExpression[label="{ExecutableExpression| | }"]
 ExecutableExpression->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
Node[label="{Node|name : String| }"]
 Node->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
FLWOR[label="{FLWOR| | }"]
 FLWOR->ExecutableExpression[arrowhead=onormal,group=ExecutableExpression,minlen=2,constraint=true,]
;
 node[shape=record];
FunctionCall[label="{FunctionCall|name : String| }"]
 FunctionCall->ExecutableExpression[arrowhead=onormal,group=ExecutableExpression,minlen=2,constraint=true,]
;
 node[shape=record];
FunctionDeclaration[label="{FunctionDeclaration|name : String| }"]
 FunctionDeclaration->ExecutableExpression[arrowhead=onormal,group=ExecutableExpression,minlen=2,constraint=true,]
;
 node[shape=record];
ElementNode[label="{ElementNode| | }"]
 ElementNode->Node[arrowhead=onormal,group=Node,minlen=2,constraint=true,]
;
 node[shape=record];
AttributeNode[label="{AttributeNode|value : String| }"]
 AttributeNode->Node[arrowhead=onormal,group=Node,minlen=2,constraint=true,]
;
 node[shape=record];
TextNode[label="{TextNode| | }"]
 TextNode->ElementNode[arrowhead=onormal,group=ElementNode,minlen=2,constraint=true,]
;
 node[shape=record];
ReturnXPath[label="{ReturnXPath|value : String| }"]
 ReturnXPath->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
XPath[label="{XPath| | }"]
 XPath->ReturnXPath[arrowhead=onormal,group=ReturnXPath,minlen=2,constraint=true,]
;
 node[shape=record];
BooleanExp[label="{BooleanExp| | }"]
 BooleanExp->XPath[arrowhead=onormal,group=XPath,minlen=2,constraint=true,]
;
 node[shape=record];
For[label="{For|var : String| }"]
;
 node[shape=record];
Let[label="{Let|var : String| }"]
;
 node[shape=record];
Where[label="{Where| | }"]
;
 node[shape=record];
OrderBy[label="{OrderBy| | }"]
;
 node[shape=record];
Return[label="{Return| | }"]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;

}
}