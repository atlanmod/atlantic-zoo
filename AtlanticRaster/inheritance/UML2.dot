digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;
 node[shape=record];
UnlimitedNatural[label="{&#171;DataType&#187;\nUnlimitedNatural|}"]
;
 node[shape=record];
Sequence[label="{&#171;DataType&#187;\nSequence|}"]
;
 node[shape=record];
Set[label="{&#171;DataType&#187;\nSet|}"]
;

} subgraph "cluster_uml2"{
labelloc=t
color=black
label=uml2
 node[shape=record];
Element[label="{/Element/| | }"]
;
 node[shape=record];
MultiplicityElement[label="{/MultiplicityElement/|isOrdered[0-1] : Boolean\nisUnique[0-1] : Boolean\nlower[0-1] : Integer\nupper[0-1] : UnlimitedNatural| }"]
 MultiplicityElement->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
NamedElement[label="{/NamedElement/|name[0-1] : String\nqualifiedName[0-1] : String\nvisibility[0-1] : VisibilityKind| }"]
 NamedElement->TemplateableElement[arrowhead=onormal,group=TemplateableElement,minlen=2,constraint=true,]
;
 node[shape=record];
Namespace[label="{/Namespace/| | }"]
 Namespace->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
OpaqueExpression[label="{OpaqueExpression|body[0-1] : String\nlanguage[0-1] : String| }"]
 OpaqueExpression->ValueSpecification[arrowhead=onormal,group=ValueSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
ValueSpecification[label="{/ValueSpecification/| | }"]
 ValueSpecification->TypedElement[arrowhead=onormal,group=TypedElement,minlen=2,constraint=true,]
 ValueSpecification->ParameterableElement[arrowhead=onormal,group=ParameterableElement,minlen=2,constraint=true,]
;
 node[shape=record];
Expression[label="{Expression|symbol[0-1] : String| }"]
 Expression->OpaqueExpression[arrowhead=onormal,group=OpaqueExpression,minlen=2,constraint=true,]
;
 node[shape=record];
Comment[label="{Comment|body[0-1] : String| }"]
 Comment->TemplateableElement[arrowhead=onormal,group=TemplateableElement,minlen=2,constraint=true,]
;
 node[shape=record];
DirectedRelationship[label="{/DirectedRelationship/| | }"]
 DirectedRelationship->Relationship[arrowhead=onormal,group=Relationship,minlen=2,constraint=true,]
;
 node[shape=record];
Relationship[label="{/Relationship/| | }"]
 Relationship->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
Class[label="{Class|isActive[0-1] : Boolean| }"]
 Class->BehavioredClassifier[arrowhead=onormal,group=BehavioredClassifier,minlen=2,constraint=true,]
 Class->EncapsulatedClassifier[arrowhead=onormal,group=EncapsulatedClassifier,minlen=2,constraint=true,]
;
 node[shape=record];
Type[label="{/Type/| | }"]
 Type->PackageableElement[arrowhead=onormal,group=PackageableElement,minlen=2,constraint=true,]
;
 node[shape=record];
Property[label="{Property|default[0-1] : String\nisComposite[0-1] : Boolean\nisDerived[0-1] : Boolean\nisDerivedUnion[0-1] : Boolean\naggregation[0-1] : AggregationKind| }"]
 Property->StructuralFeature[arrowhead=onormal,group=StructuralFeature,minlen=2,constraint=true,]
 Property->ConnectableElement[arrowhead=onormal,group=ConnectableElement,minlen=2,constraint=true,]
 Property->DeploymentTarget[arrowhead=onormal,group=DeploymentTarget,minlen=2,constraint=true,]
;
 node[shape=record];
Operation[label="{Operation|isQuery[0-1] : Boolean| }"]
 Operation->BehavioralFeature[arrowhead=onormal,group=BehavioralFeature,minlen=2,constraint=true,]
 Operation->TypedElement[arrowhead=onormal,group=TypedElement,minlen=2,constraint=true,]
 Operation->MultiplicityElement[arrowhead=onormal,group=MultiplicityElement,minlen=2,constraint=true,]
 Operation->ParameterableElement[arrowhead=onormal,group=ParameterableElement,minlen=2,constraint=true,]
;
 node[shape=record];
TypedElement[label="{/TypedElement/| | }"]
 TypedElement->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Parameter[label="{Parameter|default[0-1] : String\ndirection[0-1] : ParameterDirectionKind\nisException[0-1] : Boolean\nisStream[0-1] : Boolean\neffect[0-1] : ParameterEffectKind| }"]
 Parameter->ConnectableElement[arrowhead=onormal,group=ConnectableElement,minlen=2,constraint=true,]
 Parameter->TypedElement[arrowhead=onormal,group=TypedElement,minlen=2,constraint=true,]
 Parameter->MultiplicityElement[arrowhead=onormal,group=MultiplicityElement,minlen=2,constraint=true,]
;
 node[shape=record];
Package[label="{Package| | }"]
 Package->Namespace[arrowhead=onormal,group=Namespace,minlen=2,constraint=true,]
 Package->PackageableElement[arrowhead=onormal,group=PackageableElement,minlen=2,constraint=true,]
;
 node[shape=record];
Enumeration[label="{Enumeration| | }"]
 Enumeration->DataType[arrowhead=onormal,group=DataType,minlen=2,constraint=true,]
;
 node[shape=record];
DataType[label="{DataType| | }"]
 DataType->Classifier[arrowhead=onormal,group=Classifier,minlen=2,constraint=true,]
;
 node[shape=record];
EnumerationLiteral[label="{EnumerationLiteral| | }"]
 EnumerationLiteral->InstanceSpecification[arrowhead=onormal,group=InstanceSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
PrimitiveType[label="{PrimitiveType| | }"]
 PrimitiveType->DataType[arrowhead=onormal,group=DataType,minlen=2,constraint=true,]
;
 node[shape=record];
Classifier[label="{/Classifier/|isAbstract[0-1] : Boolean| }"]
 Classifier->Namespace[arrowhead=onormal,group=Namespace,minlen=2,constraint=true,]
 Classifier->Type[arrowhead=onormal,group=Type,minlen=2,constraint=true,]
 Classifier->RedefinableElement[arrowhead=onormal,group=RedefinableElement,minlen=2,constraint=true,]
;
 node[shape=record];
Feature[label="{/Feature/|isStatic[0-1] : Boolean| }"]
 Feature->RedefinableElement[arrowhead=onormal,group=RedefinableElement,minlen=2,constraint=true,]
;
 node[shape=record];
Constraint[label="{Constraint| | }"]
 Constraint->PackageableElement[arrowhead=onormal,group=PackageableElement,minlen=2,constraint=true,]
;
 node[shape=record];
LiteralBoolean[label="{LiteralBoolean|value[0-1] : Boolean| }"]
 LiteralBoolean->LiteralSpecification[arrowhead=onormal,group=LiteralSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
LiteralSpecification[label="{/LiteralSpecification/| | }"]
 LiteralSpecification->ValueSpecification[arrowhead=onormal,group=ValueSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
LiteralString[label="{LiteralString|value[0-1] : String| }"]
 LiteralString->LiteralSpecification[arrowhead=onormal,group=LiteralSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
LiteralNull[label="{LiteralNull| | }"]
 LiteralNull->LiteralSpecification[arrowhead=onormal,group=LiteralSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
LiteralInteger[label="{LiteralInteger|value[0-1] : Integer| }"]
 LiteralInteger->LiteralSpecification[arrowhead=onormal,group=LiteralSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
LiteralUnlimitedNatural[label="{LiteralUnlimitedNatural|value[0-1] : UnlimitedNatural| }"]
 LiteralUnlimitedNatural->LiteralSpecification[arrowhead=onormal,group=LiteralSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
BehavioralFeature[label="{/BehavioralFeature/|isAbstract[0-1] : Boolean\nconcurrency[0-1] : CallConcurrencyKind| }"]
 BehavioralFeature->Namespace[arrowhead=onormal,group=Namespace,minlen=2,constraint=true,]
 BehavioralFeature->Feature[arrowhead=onormal,group=Feature,minlen=2,constraint=true,]
;
 node[shape=record];
StructuralFeature[label="{/StructuralFeature/|isReadOnly[0-1] : Boolean| }"]
 StructuralFeature->Feature[arrowhead=onormal,group=Feature,minlen=2,constraint=true,]
 StructuralFeature->TypedElement[arrowhead=onormal,group=TypedElement,minlen=2,constraint=true,]
 StructuralFeature->MultiplicityElement[arrowhead=onormal,group=MultiplicityElement,minlen=2,constraint=true,]
;
 node[shape=record];
InstanceSpecification[label="{InstanceSpecification| | }"]
 InstanceSpecification->PackageableElement[arrowhead=onormal,group=PackageableElement,minlen=2,constraint=true,]
 InstanceSpecification->DeploymentTarget[arrowhead=onormal,group=DeploymentTarget,minlen=2,constraint=true,]
 InstanceSpecification->DeployedArtifact[arrowhead=onormal,group=DeployedArtifact,minlen=2,constraint=true,]
;
 node[shape=record];
Slot[label="{Slot| | }"]
 Slot->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
InstanceValue[label="{InstanceValue| | }"]
 InstanceValue->ValueSpecification[arrowhead=onormal,group=ValueSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
RedefinableElement[label="{/RedefinableElement/|isLeaf[0-1] : Boolean| }"]
 RedefinableElement->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Generalization[label="{Generalization|isSubstitutable[0-1] : Boolean| }"]
 Generalization->DirectedRelationship[arrowhead=onormal,group=DirectedRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
PackageableElement[label="{/PackageableElement/|packageableElement_visibility[0-1] : VisibilityKind| }"]
 PackageableElement->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
 PackageableElement->ParameterableElement[arrowhead=onormal,group=ParameterableElement,minlen=2,constraint=true,]
;
 node[shape=record];
ElementImport[label="{ElementImport|visibility[0-1] : VisibilityKind\nalias[0-1] : String| }"]
 ElementImport->DirectedRelationship[arrowhead=onormal,group=DirectedRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
PackageImport[label="{PackageImport|visibility[0-1] : VisibilityKind| }"]
 PackageImport->DirectedRelationship[arrowhead=onormal,group=DirectedRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
Association[label="{Association|isDerived[0-1] : Boolean| }"]
 Association->Classifier[arrowhead=onormal,group=Classifier,minlen=2,constraint=true,]
 Association->Relationship[arrowhead=onormal,group=Relationship,minlen=2,constraint=true,]
;
 node[shape=record];
PackageMerge[label="{PackageMerge| | }"]
 PackageMerge->DirectedRelationship[arrowhead=onormal,group=DirectedRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
Stereotype[label="{Stereotype| | }"]
 Stereotype->Class[arrowhead=onormal,group=Class,minlen=2,constraint=true,]
;
 node[shape=record];
Profile[label="{Profile| | }"]
 Profile->Package[arrowhead=onormal,group=Package,minlen=2,constraint=true,]
;
 node[shape=record];
ProfileApplication[label="{ProfileApplication| | }"]
 ProfileApplication->PackageImport[arrowhead=onormal,group=PackageImport,minlen=2,constraint=true,]
;
 node[shape=record];
Extension[label="{Extension|isRequired[0-1] : Boolean| }"]
 Extension->Association[arrowhead=onormal,group=Association,minlen=2,constraint=true,]
;
 node[shape=record];
ExtensionEnd[label="{ExtensionEnd| | }"]
 ExtensionEnd->Property[arrowhead=onormal,group=Property,minlen=2,constraint=true,]
;
 node[shape=record];
Behavior[label="{/Behavior/|isReentrant[0-1] : Boolean| }"]
 Behavior->Class[arrowhead=onormal,group=Class,minlen=2,constraint=true,]
;
 node[shape=record];
BehavioredClassifier[label="{/BehavioredClassifier/| | }"]
 BehavioredClassifier->Classifier[arrowhead=onormal,group=Classifier,minlen=2,constraint=true,]
;
 node[shape=record];
Activity[label="{Activity|body[0-1] : String\nlanguage[0-1] : String\nisSingleExecution[0-1] : Boolean\nisReadOnly[0-1] : Boolean| }"]
 Activity->Behavior[arrowhead=onormal,group=Behavior,minlen=2,constraint=true,]
;
 node[shape=record];
Permission[label="{Permission| | }"]
 Permission->Dependency[arrowhead=onormal,group=Dependency,minlen=2,constraint=true,]
;
 node[shape=record];
Dependency[label="{Dependency| | }"]
 Dependency->PackageableElement[arrowhead=onormal,group=PackageableElement,minlen=2,constraint=true,]
 Dependency->DirectedRelationship[arrowhead=onormal,group=DirectedRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
Usage[label="{Usage| | }"]
 Usage->Dependency[arrowhead=onormal,group=Dependency,minlen=2,constraint=true,]
;
 node[shape=record];
Abstraction[label="{Abstraction| | }"]
 Abstraction->Dependency[arrowhead=onormal,group=Dependency,minlen=2,constraint=true,]
;
 node[shape=record];
Realization[label="{Realization| | }"]
 Realization->Abstraction[arrowhead=onormal,group=Abstraction,minlen=2,constraint=true,]
;
 node[shape=record];
Substitution[label="{Substitution| | }"]
 Substitution->Realization[arrowhead=onormal,group=Realization,minlen=2,constraint=true,]
;
 node[shape=record];
GeneralizationSet[label="{GeneralizationSet|isCovering[0-1] : Boolean\nisDisjoint[0-1] : Boolean| }"]
 GeneralizationSet->PackageableElement[arrowhead=onormal,group=PackageableElement,minlen=2,constraint=true,]
;
 node[shape=record];
AssociationClass[label="{AssociationClass| | }"]
 AssociationClass->Class[arrowhead=onormal,group=Class,minlen=2,constraint=true,]
 AssociationClass->Association[arrowhead=onormal,group=Association,minlen=2,constraint=true,]
;
 node[shape=record];
InformationItem[label="{InformationItem| | }"]
 InformationItem->Classifier[arrowhead=onormal,group=Classifier,minlen=2,constraint=true,]
;
 node[shape=record];
InformationFlow[label="{InformationFlow| | }"]
 InformationFlow->PackageableElement[arrowhead=onormal,group=PackageableElement,minlen=2,constraint=true,]
 InformationFlow->DirectedRelationship[arrowhead=onormal,group=DirectedRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
Model[label="{Model|viewpoint[0-1] : String| }"]
 Model->Package[arrowhead=onormal,group=Package,minlen=2,constraint=true,]
;
 node[shape=record];
ConnectorEnd[label="{ConnectorEnd| | }"]
 ConnectorEnd->MultiplicityElement[arrowhead=onormal,group=MultiplicityElement,minlen=2,constraint=true,]
;
 node[shape=record];
ConnectableElement[label="{/ConnectableElement/| | }"]
 ConnectableElement->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
 ConnectableElement->ParameterableElement[arrowhead=onormal,group=ParameterableElement,minlen=2,constraint=true,]
;
 node[shape=record];
Connector[label="{Connector|kind[0-1] : ConnectorKind| }"]
 Connector->Feature[arrowhead=onormal,group=Feature,minlen=2,constraint=true,]
;
 node[shape=record];
StructuredClassifier[label="{/StructuredClassifier/| | }"]
 StructuredClassifier->Classifier[arrowhead=onormal,group=Classifier,minlen=2,constraint=true,]
;
 node[shape=record];
ActivityEdge[label="{/ActivityEdge/| | }"]
 ActivityEdge->RedefinableElement[arrowhead=onormal,group=RedefinableElement,minlen=2,constraint=true,]
;
 node[shape=record];
ActivityGroup[label="{/ActivityGroup/| | }"]
 ActivityGroup->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
ActivityNode[label="{/ActivityNode/| | }"]
 ActivityNode->RedefinableElement[arrowhead=onormal,group=RedefinableElement,minlen=2,constraint=true,]
;
 node[shape=record];
Action[label="{Action|effect[0-1] : String| }"]
 Action->ExecutableNode[arrowhead=onormal,group=ExecutableNode,minlen=2,constraint=true,]
;
 node[shape=record];
ObjectNode[label="{/ObjectNode/|ordering[0-1] : ObjectNodeOrderingKind| }"]
 ObjectNode->ActivityNode[arrowhead=onormal,group=ActivityNode,minlen=2,constraint=true,]
 ObjectNode->TypedElement[arrowhead=onormal,group=TypedElement,minlen=2,constraint=true,]
;
 node[shape=record];
ControlNode[label="{/ControlNode/| | }"]
 ControlNode->ActivityNode[arrowhead=onormal,group=ActivityNode,minlen=2,constraint=true,]
;
 node[shape=record];
ControlFlow[label="{ControlFlow| | }"]
 ControlFlow->ActivityEdge[arrowhead=onormal,group=ActivityEdge,minlen=2,constraint=true,]
;
 node[shape=record];
ObjectFlow[label="{ObjectFlow|isMulticast[0-1] : Boolean\nisMultireceive[0-1] : Boolean| }"]
 ObjectFlow->ActivityEdge[arrowhead=onormal,group=ActivityEdge,minlen=2,constraint=true,]
;
 node[shape=record];
InitialNode[label="{InitialNode| | }"]
 InitialNode->ControlNode[arrowhead=onormal,group=ControlNode,minlen=2,constraint=true,]
;
 node[shape=record];
FinalNode[label="{/FinalNode/| | }"]
 FinalNode->ControlNode[arrowhead=onormal,group=ControlNode,minlen=2,constraint=true,]
;
 node[shape=record];
ActivityFinalNode[label="{ActivityFinalNode| | }"]
 ActivityFinalNode->FinalNode[arrowhead=onormal,group=FinalNode,minlen=2,constraint=true,]
;
 node[shape=record];
DecisionNode[label="{DecisionNode| | }"]
 DecisionNode->ControlNode[arrowhead=onormal,group=ControlNode,minlen=2,constraint=true,]
;
 node[shape=record];
MergeNode[label="{MergeNode| | }"]
 MergeNode->ControlNode[arrowhead=onormal,group=ControlNode,minlen=2,constraint=true,]
;
 node[shape=record];
ExecutableNode[label="{/ExecutableNode/| | }"]
 ExecutableNode->ActivityNode[arrowhead=onormal,group=ActivityNode,minlen=2,constraint=true,]
;
 node[shape=record];
OutputPin[label="{OutputPin| | }"]
 OutputPin->Pin[arrowhead=onormal,group=Pin,minlen=2,constraint=true,]
;
 node[shape=record];
InputPin[label="{InputPin| | }"]
 InputPin->Pin[arrowhead=onormal,group=Pin,minlen=2,constraint=true,]
;
 node[shape=record];
Pin[label="{/Pin/| | }"]
 Pin->ObjectNode[arrowhead=onormal,group=ObjectNode,minlen=2,constraint=true,]
 Pin->MultiplicityElement[arrowhead=onormal,group=MultiplicityElement,minlen=2,constraint=true,]
;
 node[shape=record];
ActivityParameterNode[label="{ActivityParameterNode| | }"]
 ActivityParameterNode->ObjectNode[arrowhead=onormal,group=ObjectNode,minlen=2,constraint=true,]
;
 node[shape=record];
ValuePin[label="{ValuePin| | }"]
 ValuePin->InputPin[arrowhead=onormal,group=InputPin,minlen=2,constraint=true,]
;
 node[shape=record];
Interface[label="{Interface| | }"]
 Interface->Classifier[arrowhead=onormal,group=Classifier,minlen=2,constraint=true,]
;
 node[shape=record];
Implementation[label="{Implementation| | }"]
 Implementation->Realization[arrowhead=onormal,group=Realization,minlen=2,constraint=true,]
;
 node[shape=record];
Artifact[label="{Artifact|fileName[0-1] : String| }"]
 Artifact->Classifier[arrowhead=onormal,group=Classifier,minlen=2,constraint=true,]
 Artifact->DeployedArtifact[arrowhead=onormal,group=DeployedArtifact,minlen=2,constraint=true,]
;
 node[shape=record];
Manifestation[label="{Manifestation| | }"]
 Manifestation->Abstraction[arrowhead=onormal,group=Abstraction,minlen=2,constraint=true,]
;
 node[shape=record];
Actor[label="{Actor| | }"]
 Actor->Classifier[arrowhead=onormal,group=Classifier,minlen=2,constraint=true,]
;
 node[shape=record];
Extend[label="{Extend| | }"]
 Extend->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
 Extend->DirectedRelationship[arrowhead=onormal,group=DirectedRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
UseCase[label="{UseCase| | }"]
 UseCase->BehavioredClassifier[arrowhead=onormal,group=BehavioredClassifier,minlen=2,constraint=true,]
;
 node[shape=record];
ExtensionPoint[label="{ExtensionPoint| | }"]
 ExtensionPoint->RedefinableElement[arrowhead=onormal,group=RedefinableElement,minlen=2,constraint=true,]
;
 node[shape=record];
Include[label="{Include| | }"]
 Include->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
 Include->DirectedRelationship[arrowhead=onormal,group=DirectedRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
CollaborationOccurrence[label="{CollaborationOccurrence| | }"]
 CollaborationOccurrence->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Collaboration[label="{Collaboration| | }"]
 Collaboration->BehavioredClassifier[arrowhead=onormal,group=BehavioredClassifier,minlen=2,constraint=true,]
 Collaboration->StructuredClassifier[arrowhead=onormal,group=StructuredClassifier,minlen=2,constraint=true,]
;
 node[shape=record];
Port[label="{Port|isBehavior[0-1] : Boolean\nisService[0-1] : Boolean| }"]
 Port->Property[arrowhead=onormal,group=Property,minlen=2,constraint=true,]
;
 node[shape=record];
EncapsulatedClassifier[label="{/EncapsulatedClassifier/| | }"]
 EncapsulatedClassifier->StructuredClassifier[arrowhead=onormal,group=StructuredClassifier,minlen=2,constraint=true,]
;
 node[shape=record];
CallTrigger[label="{CallTrigger| | }"]
 CallTrigger->MessageTrigger[arrowhead=onormal,group=MessageTrigger,minlen=2,constraint=true,]
;
 node[shape=record];
MessageTrigger[label="{/MessageTrigger/| | }"]
 MessageTrigger->Trigger[arrowhead=onormal,group=Trigger,minlen=2,constraint=true,]
;
 node[shape=record];
ChangeTrigger[label="{ChangeTrigger| | }"]
 ChangeTrigger->Trigger[arrowhead=onormal,group=Trigger,minlen=2,constraint=true,]
;
 node[shape=record];
Trigger[label="{/Trigger/| | }"]
 Trigger->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Reception[label="{Reception| | }"]
 Reception->BehavioralFeature[arrowhead=onormal,group=BehavioralFeature,minlen=2,constraint=true,]
;
 node[shape=record];
Signal[label="{Signal| | }"]
 Signal->Classifier[arrowhead=onormal,group=Classifier,minlen=2,constraint=true,]
;
 node[shape=record];
SignalTrigger[label="{SignalTrigger| | }"]
 SignalTrigger->MessageTrigger[arrowhead=onormal,group=MessageTrigger,minlen=2,constraint=true,]
;
 node[shape=record];
TimeTrigger[label="{TimeTrigger|isRelative[0-1] : Boolean| }"]
 TimeTrigger->Trigger[arrowhead=onormal,group=Trigger,minlen=2,constraint=true,]
;
 node[shape=record];
AnyTrigger[label="{AnyTrigger| | }"]
 AnyTrigger->MessageTrigger[arrowhead=onormal,group=MessageTrigger,minlen=2,constraint=true,]
;
 node[shape=record];
Variable[label="{Variable| | }"]
 Variable->ConnectableElement[arrowhead=onormal,group=ConnectableElement,minlen=2,constraint=true,]
 Variable->TypedElement[arrowhead=onormal,group=TypedElement,minlen=2,constraint=true,]
 Variable->MultiplicityElement[arrowhead=onormal,group=MultiplicityElement,minlen=2,constraint=true,]
;
 node[shape=record];
StructuredActivityNode[label="{StructuredActivityNode|mustIsolate[0-1] : Boolean| }"]
 StructuredActivityNode->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
 StructuredActivityNode->Namespace[arrowhead=onormal,group=Namespace,minlen=2,constraint=true,]
 StructuredActivityNode->ActivityGroup[arrowhead=onormal,group=ActivityGroup,minlen=2,constraint=true,]
;
 node[shape=record];
ConditionalNode[label="{ConditionalNode|isDeterminate[0-1] : Boolean\nisAssured[0-1] : Boolean| }"]
 ConditionalNode->StructuredActivityNode[arrowhead=onormal,group=StructuredActivityNode,minlen=2,constraint=true,]
;
 node[shape=record];
Clause[label="{Clause| | }"]
 Clause->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
LoopNode[label="{LoopNode|isTestedFirst[0-1] : Boolean| }"]
 LoopNode->StructuredActivityNode[arrowhead=onormal,group=StructuredActivityNode,minlen=2,constraint=true,]
;
 node[shape=record];
Interaction[label="{Interaction| | }"]
 Interaction->Behavior[arrowhead=onormal,group=Behavior,minlen=2,constraint=true,]
 Interaction->InteractionFragment[arrowhead=onormal,group=InteractionFragment,minlen=2,constraint=true,]
;
 node[shape=record];
InteractionFragment[label="{/InteractionFragment/| | }"]
 InteractionFragment->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Lifeline[label="{Lifeline| | }"]
 Lifeline->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Message[label="{Message|messageKind[0-1] : MessageKind\nmessageSort[0-1] : MessageSort| }"]
 Message->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
GeneralOrdering[label="{GeneralOrdering| | }"]
 GeneralOrdering->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
MessageEnd[label="{/MessageEnd/| | }"]
 MessageEnd->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
EventOccurrence[label="{EventOccurrence| | }"]
 EventOccurrence->InteractionFragment[arrowhead=onormal,group=InteractionFragment,minlen=2,constraint=true,]
 EventOccurrence->MessageEnd[arrowhead=onormal,group=MessageEnd,minlen=2,constraint=true,]
;
 node[shape=record];
ExecutionOccurrence[label="{ExecutionOccurrence| | }"]
 ExecutionOccurrence->InteractionFragment[arrowhead=onormal,group=InteractionFragment,minlen=2,constraint=true,]
;
 node[shape=record];
StateInvariant[label="{StateInvariant| | }"]
 StateInvariant->InteractionFragment[arrowhead=onormal,group=InteractionFragment,minlen=2,constraint=true,]
;
 node[shape=record];
Stop[label="{Stop| | }"]
 Stop->EventOccurrence[arrowhead=onormal,group=EventOccurrence,minlen=2,constraint=true,]
;
 node[shape=record];
TemplateSignature[label="{TemplateSignature| | }"]
 TemplateSignature->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
TemplateParameter[label="{TemplateParameter| | }"]
 TemplateParameter->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
TemplateableElement[label="{/TemplateableElement/| | }"]
 TemplateableElement->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
StringExpression[label="{StringExpression| | }"]
 StringExpression->TemplateableElement[arrowhead=onormal,group=TemplateableElement,minlen=2,constraint=true,]
;
 node[shape=record];
ParameterableElement[label="{/ParameterableElement/| | }"]
 ParameterableElement->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
TemplateBinding[label="{TemplateBinding| | }"]
 TemplateBinding->DirectedRelationship[arrowhead=onormal,group=DirectedRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
TemplateParameterSubstitution[label="{TemplateParameterSubstitution| | }"]
 TemplateParameterSubstitution->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
OperationTemplateParameter[label="{OperationTemplateParameter| | }"]
 OperationTemplateParameter->TemplateParameter[arrowhead=onormal,group=TemplateParameter,minlen=2,constraint=true,]
;
 node[shape=record];
ClassifierTemplateParameter[label="{ClassifierTemplateParameter|allowSubstitutable[0-1] : Boolean| }"]
 ClassifierTemplateParameter->TemplateParameter[arrowhead=onormal,group=TemplateParameter,minlen=2,constraint=true,]
;
 node[shape=record];
ParameterableClassifier[label="{/ParameterableClassifier/| | }"]
 ParameterableClassifier->Classifier[arrowhead=onormal,group=Classifier,minlen=2,constraint=true,]
;
 node[shape=record];
RedefinableTemplateSignature[label="{RedefinableTemplateSignature| | }"]
 RedefinableTemplateSignature->RedefinableElement[arrowhead=onormal,group=RedefinableElement,minlen=2,constraint=true,]
 RedefinableTemplateSignature->TemplateSignature[arrowhead=onormal,group=TemplateSignature,minlen=2,constraint=true,]
;
 node[shape=record];
TemplateableClassifier[label="{/TemplateableClassifier/| | }"]
 TemplateableClassifier->Classifier[arrowhead=onormal,group=Classifier,minlen=2,constraint=true,]
;
 node[shape=record];
ConnectableElementTemplateParameter[label="{ConnectableElementTemplateParameter| | }"]
 ConnectableElementTemplateParameter->TemplateParameter[arrowhead=onormal,group=TemplateParameter,minlen=2,constraint=true,]
;
 node[shape=record];
ForkNode[label="{ForkNode| | }"]
 ForkNode->ControlNode[arrowhead=onormal,group=ControlNode,minlen=2,constraint=true,]
;
 node[shape=record];
JoinNode[label="{JoinNode|isCombineDuplicate[0-1] : Boolean| }"]
 JoinNode->ControlNode[arrowhead=onormal,group=ControlNode,minlen=2,constraint=true,]
;
 node[shape=record];
FlowFinalNode[label="{FlowFinalNode| | }"]
 FlowFinalNode->FinalNode[arrowhead=onormal,group=FinalNode,minlen=2,constraint=true,]
;
 node[shape=record];
CentralBufferNode[label="{CentralBufferNode| | }"]
 CentralBufferNode->ObjectNode[arrowhead=onormal,group=ObjectNode,minlen=2,constraint=true,]
;
 node[shape=record];
ActivityPartition[label="{ActivityPartition|isDimension[0-1] : Boolean\nisExternal[0-1] : Boolean| }"]
 ActivityPartition->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
 ActivityPartition->ActivityGroup[arrowhead=onormal,group=ActivityGroup,minlen=2,constraint=true,]
;
 node[shape=record];
ExpansionNode[label="{ExpansionNode| | }"]
 ExpansionNode->ObjectNode[arrowhead=onormal,group=ObjectNode,minlen=2,constraint=true,]
;
 node[shape=record];
ExpansionRegion[label="{ExpansionRegion|mode[0-1] : ExpansionKind| }"]
 ExpansionRegion->StructuredActivityNode[arrowhead=onormal,group=StructuredActivityNode,minlen=2,constraint=true,]
;
 node[shape=record];
ExceptionHandler[label="{ExceptionHandler| | }"]
 ExceptionHandler->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
InteractionOccurrence[label="{InteractionOccurrence| | }"]
 InteractionOccurrence->InteractionFragment[arrowhead=onormal,group=InteractionFragment,minlen=2,constraint=true,]
;
 node[shape=record];
Gate[label="{Gate| | }"]
 Gate->MessageEnd[arrowhead=onormal,group=MessageEnd,minlen=2,constraint=true,]
;
 node[shape=record];
PartDecomposition[label="{PartDecomposition| | }"]
 PartDecomposition->InteractionOccurrence[arrowhead=onormal,group=InteractionOccurrence,minlen=2,constraint=true,]
;
 node[shape=record];
InteractionOperand[label="{InteractionOperand| | }"]
 InteractionOperand->Namespace[arrowhead=onormal,group=Namespace,minlen=2,constraint=true,]
 InteractionOperand->InteractionFragment[arrowhead=onormal,group=InteractionFragment,minlen=2,constraint=true,]
;
 node[shape=record];
InteractionConstraint[label="{InteractionConstraint| | }"]
 InteractionConstraint->Constraint[arrowhead=onormal,group=Constraint,minlen=2,constraint=true,]
;
 node[shape=record];
CombinedFragment[label="{CombinedFragment|interactionOperator[0-1] : InteractionOperator| }"]
 CombinedFragment->InteractionFragment[arrowhead=onormal,group=InteractionFragment,minlen=2,constraint=true,]
;
 node[shape=record];
Continuation[label="{Continuation|setting[0-1] : Boolean| }"]
 Continuation->InteractionFragment[arrowhead=onormal,group=InteractionFragment,minlen=2,constraint=true,]
;
 node[shape=record];
StateMachine[label="{StateMachine| | }"]
 StateMachine->Behavior[arrowhead=onormal,group=Behavior,minlen=2,constraint=true,]
;
 node[shape=record];
Region[label="{Region| | }"]
 Region->Namespace[arrowhead=onormal,group=Namespace,minlen=2,constraint=true,]
 Region->RedefinableElement[arrowhead=onormal,group=RedefinableElement,minlen=2,constraint=true,]
;
 node[shape=record];
Pseudostate[label="{Pseudostate|kind[0-1] : PseudostateKind| }"]
 Pseudostate->Vertex[arrowhead=onormal,group=Vertex,minlen=2,constraint=true,]
;
 node[shape=record];
State[label="{State|isComposite[0-1] : Boolean\nisOrthogonal[0-1] : Boolean\nisSimple[0-1] : Boolean\nisSubmachineState[0-1] : Boolean| }"]
 State->Namespace[arrowhead=onormal,group=Namespace,minlen=2,constraint=true,]
 State->RedefinableElement[arrowhead=onormal,group=RedefinableElement,minlen=2,constraint=true,]
 State->Vertex[arrowhead=onormal,group=Vertex,minlen=2,constraint=true,]
;
 node[shape=record];
Vertex[label="{/Vertex/| | }"]
 Vertex->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
ConnectionPointReference[label="{ConnectionPointReference| | }"]
 ConnectionPointReference->Vertex[arrowhead=onormal,group=Vertex,minlen=2,constraint=true,]
;
 node[shape=record];
Transition[label="{Transition|kind[0-1] : TransitionKind| }"]
 Transition->RedefinableElement[arrowhead=onormal,group=RedefinableElement,minlen=2,constraint=true,]
;
 node[shape=record];
FinalState[label="{FinalState| | }"]
 FinalState->State[arrowhead=onormal,group=State,minlen=2,constraint=true,]
;
 node[shape=record];
CreateObjectAction[label="{CreateObjectAction| | }"]
 CreateObjectAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
DestroyObjectAction[label="{DestroyObjectAction|isDestroyLinks[0-1] : Boolean\nisDestroyOwnedObjects[0-1] : Boolean| }"]
 DestroyObjectAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
TestIdentityAction[label="{TestIdentityAction| | }"]
 TestIdentityAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
ReadSelfAction[label="{ReadSelfAction| | }"]
 ReadSelfAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
StructuralFeatureAction[label="{/StructuralFeatureAction/| | }"]
 StructuralFeatureAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
ReadStructuralFeatureAction[label="{ReadStructuralFeatureAction| | }"]
 ReadStructuralFeatureAction->StructuralFeatureAction[arrowhead=onormal,group=StructuralFeatureAction,minlen=2,constraint=true,]
;
 node[shape=record];
WriteStructuralFeatureAction[label="{/WriteStructuralFeatureAction/| | }"]
 WriteStructuralFeatureAction->StructuralFeatureAction[arrowhead=onormal,group=StructuralFeatureAction,minlen=2,constraint=true,]
;
 node[shape=record];
ClearStructuralFeatureAction[label="{ClearStructuralFeatureAction| | }"]
 ClearStructuralFeatureAction->StructuralFeatureAction[arrowhead=onormal,group=StructuralFeatureAction,minlen=2,constraint=true,]
;
 node[shape=record];
RemoveStructuralFeatureValueAction[label="{RemoveStructuralFeatureValueAction| | }"]
 RemoveStructuralFeatureValueAction->WriteStructuralFeatureAction[arrowhead=onormal,group=WriteStructuralFeatureAction,minlen=2,constraint=true,]
;
 node[shape=record];
AddStructuralFeatureValueAction[label="{AddStructuralFeatureValueAction|isReplaceAll[0-1] : Boolean| }"]
 AddStructuralFeatureValueAction->WriteStructuralFeatureAction[arrowhead=onormal,group=WriteStructuralFeatureAction,minlen=2,constraint=true,]
;
 node[shape=record];
LinkAction[label="{/LinkAction/| | }"]
 LinkAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
LinkEndData[label="{LinkEndData| | }"]
 LinkEndData->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
ReadLinkAction[label="{ReadLinkAction| | }"]
 ReadLinkAction->LinkAction[arrowhead=onormal,group=LinkAction,minlen=2,constraint=true,]
;
 node[shape=record];
LinkEndCreationData[label="{LinkEndCreationData|isReplaceAll[0-1] : Boolean| }"]
 LinkEndCreationData->LinkEndData[arrowhead=onormal,group=LinkEndData,minlen=2,constraint=true,]
;
 node[shape=record];
CreateLinkAction[label="{CreateLinkAction| | }"]
 CreateLinkAction->WriteLinkAction[arrowhead=onormal,group=WriteLinkAction,minlen=2,constraint=true,]
;
 node[shape=record];
WriteLinkAction[label="{/WriteLinkAction/| | }"]
 WriteLinkAction->LinkAction[arrowhead=onormal,group=LinkAction,minlen=2,constraint=true,]
;
 node[shape=record];
DestroyLinkAction[label="{DestroyLinkAction| | }"]
 DestroyLinkAction->WriteLinkAction[arrowhead=onormal,group=WriteLinkAction,minlen=2,constraint=true,]
;
 node[shape=record];
ClearAssociationAction[label="{ClearAssociationAction| | }"]
 ClearAssociationAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
VariableAction[label="{/VariableAction/| | }"]
 VariableAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
ReadVariableAction[label="{ReadVariableAction| | }"]
 ReadVariableAction->VariableAction[arrowhead=onormal,group=VariableAction,minlen=2,constraint=true,]
;
 node[shape=record];
WriteVariableAction[label="{/WriteVariableAction/| | }"]
 WriteVariableAction->VariableAction[arrowhead=onormal,group=VariableAction,minlen=2,constraint=true,]
;
 node[shape=record];
ClearVariableAction[label="{ClearVariableAction| | }"]
 ClearVariableAction->VariableAction[arrowhead=onormal,group=VariableAction,minlen=2,constraint=true,]
;
 node[shape=record];
AddVariableValueAction[label="{AddVariableValueAction|isReplaceAll[0-1] : Boolean| }"]
 AddVariableValueAction->WriteVariableAction[arrowhead=onormal,group=WriteVariableAction,minlen=2,constraint=true,]
;
 node[shape=record];
RemoveVariableValueAction[label="{RemoveVariableValueAction| | }"]
 RemoveVariableValueAction->WriteVariableAction[arrowhead=onormal,group=WriteVariableAction,minlen=2,constraint=true,]
;
 node[shape=record];
ApplyFunctionAction[label="{ApplyFunctionAction| | }"]
 ApplyFunctionAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
PrimitiveFunction[label="{PrimitiveFunction|body[0-1] : String\nlanguage[0-1] : String| }"]
 PrimitiveFunction->PackageableElement[arrowhead=onormal,group=PackageableElement,minlen=2,constraint=true,]
;
 node[shape=record];
CallAction[label="{/CallAction/|isSynchronous[0-1] : Boolean| }"]
 CallAction->InvocationAction[arrowhead=onormal,group=InvocationAction,minlen=2,constraint=true,]
;
 node[shape=record];
InvocationAction[label="{/InvocationAction/| | }"]
 InvocationAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
SendSignalAction[label="{SendSignalAction| | }"]
 SendSignalAction->InvocationAction[arrowhead=onormal,group=InvocationAction,minlen=2,constraint=true,]
;
 node[shape=record];
BroadcastSignalAction[label="{BroadcastSignalAction| | }"]
 BroadcastSignalAction->InvocationAction[arrowhead=onormal,group=InvocationAction,minlen=2,constraint=true,]
;
 node[shape=record];
SendObjectAction[label="{SendObjectAction| | }"]
 SendObjectAction->InvocationAction[arrowhead=onormal,group=InvocationAction,minlen=2,constraint=true,]
;
 node[shape=record];
CallOperationAction[label="{CallOperationAction| | }"]
 CallOperationAction->CallAction[arrowhead=onormal,group=CallAction,minlen=2,constraint=true,]
;
 node[shape=record];
CallBehaviorAction[label="{CallBehaviorAction| | }"]
 CallBehaviorAction->CallAction[arrowhead=onormal,group=CallAction,minlen=2,constraint=true,]
;
 node[shape=record];
TimeExpression[label="{TimeExpression|firstTime[0-1] : Boolean| }"]
 TimeExpression->ValueSpecification[arrowhead=onormal,group=ValueSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
Duration[label="{Duration|firstTime[0-1] : Boolean| }"]
 Duration->ValueSpecification[arrowhead=onormal,group=ValueSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
TimeObservationAction[label="{TimeObservationAction| | }"]
 TimeObservationAction->WriteStructuralFeatureAction[arrowhead=onormal,group=WriteStructuralFeatureAction,minlen=2,constraint=true,]
;
 node[shape=record];
DurationInterval[label="{DurationInterval| | }"]
 DurationInterval->Interval[arrowhead=onormal,group=Interval,minlen=2,constraint=true,]
;
 node[shape=record];
Interval[label="{Interval| | }"]
 Interval->ValueSpecification[arrowhead=onormal,group=ValueSpecification,minlen=2,constraint=true,]
;
 node[shape=record];
TimeConstraint[label="{TimeConstraint| | }"]
 TimeConstraint->IntervalConstraint[arrowhead=onormal,group=IntervalConstraint,minlen=2,constraint=true,]
;
 node[shape=record];
IntervalConstraint[label="{IntervalConstraint| | }"]
 IntervalConstraint->Constraint[arrowhead=onormal,group=Constraint,minlen=2,constraint=true,]
;
 node[shape=record];
TimeInterval[label="{TimeInterval| | }"]
 TimeInterval->Interval[arrowhead=onormal,group=Interval,minlen=2,constraint=true,]
;
 node[shape=record];
DurationObservationAction[label="{DurationObservationAction| | }"]
 DurationObservationAction->WriteStructuralFeatureAction[arrowhead=onormal,group=WriteStructuralFeatureAction,minlen=2,constraint=true,]
;
 node[shape=record];
DurationConstraint[label="{DurationConstraint| | }"]
 DurationConstraint->IntervalConstraint[arrowhead=onormal,group=IntervalConstraint,minlen=2,constraint=true,]
;
 node[shape=record];
DataStoreNode[label="{DataStoreNode| | }"]
 DataStoreNode->CentralBufferNode[arrowhead=onormal,group=CentralBufferNode,minlen=2,constraint=true,]
;
 node[shape=record];
InterruptibleActivityRegion[label="{InterruptibleActivityRegion| | }"]
 InterruptibleActivityRegion->ActivityGroup[arrowhead=onormal,group=ActivityGroup,minlen=2,constraint=true,]
;
 node[shape=record];
ParameterSet[label="{ParameterSet| | }"]
 ParameterSet->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Component[label="{Component|isIndirectlyInstantiated[0-1] : Boolean| }"]
 Component->Class[arrowhead=onormal,group=Class,minlen=2,constraint=true,]
;
 node[shape=record];
Deployment[label="{Deployment| | }"]
 Deployment->Dependency[arrowhead=onormal,group=Dependency,minlen=2,constraint=true,]
;
 node[shape=record];
DeployedArtifact[label="{/DeployedArtifact/| | }"]
 DeployedArtifact->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
DeploymentTarget[label="{/DeploymentTarget/| | }"]
 DeploymentTarget->NamedElement[arrowhead=onormal,group=NamedElement,minlen=2,constraint=true,]
;
 node[shape=record];
Node[label="{Node| | }"]
 Node->Class[arrowhead=onormal,group=Class,minlen=2,constraint=true,]
 Node->DeploymentTarget[arrowhead=onormal,group=DeploymentTarget,minlen=2,constraint=true,]
;
 node[shape=record];
Device[label="{Device| | }"]
 Device->Node[arrowhead=onormal,group=Node,minlen=2,constraint=true,]
;
 node[shape=record];
ExecutionEnvironment[label="{ExecutionEnvironment| | }"]
 ExecutionEnvironment->Node[arrowhead=onormal,group=Node,minlen=2,constraint=true,]
;
 node[shape=record];
CommunicationPath[label="{CommunicationPath| | }"]
 CommunicationPath->Association[arrowhead=onormal,group=Association,minlen=2,constraint=true,]
;
 node[shape=record];
ProtocolConformance[label="{ProtocolConformance| | }"]
 ProtocolConformance->DirectedRelationship[arrowhead=onormal,group=DirectedRelationship,minlen=2,constraint=true,]
;
 node[shape=record];
ProtocolStateMachine[label="{ProtocolStateMachine| | }"]
 ProtocolStateMachine->StateMachine[arrowhead=onormal,group=StateMachine,minlen=2,constraint=true,]
;
 node[shape=record];
ProtocolTransition[label="{ProtocolTransition| | }"]
 ProtocolTransition->Transition[arrowhead=onormal,group=Transition,minlen=2,constraint=true,]
;
 node[shape=record];
ReadExtentAction[label="{ReadExtentAction| | }"]
 ReadExtentAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
ReclassifyObjectAction[label="{ReclassifyObjectAction|isReplaceAll[0-1] : Boolean| }"]
 ReclassifyObjectAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
ReadIsClassifiedObjectAction[label="{ReadIsClassifiedObjectAction|isDirect[0-1] : Boolean| }"]
 ReadIsClassifiedObjectAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
StartOwnedBehaviorAction[label="{StartOwnedBehaviorAction| | }"]
 StartOwnedBehaviorAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
QualifierValue[label="{QualifierValue| | }"]
 QualifierValue->Element[arrowhead=onormal,group=Element,minlen=2,constraint=true,]
;
 node[shape=record];
ReadLinkObjectEndAction[label="{ReadLinkObjectEndAction| | }"]
 ReadLinkObjectEndAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
ReadLinkObjectEndQualifierAction[label="{ReadLinkObjectEndQualifierAction| | }"]
 ReadLinkObjectEndQualifierAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
CreateLinkObjectAction[label="{CreateLinkObjectAction| | }"]
 CreateLinkObjectAction->CreateLinkAction[arrowhead=onormal,group=CreateLinkAction,minlen=2,constraint=true,]
;
 node[shape=record];
AcceptEventAction[label="{AcceptEventAction| | }"]
 AcceptEventAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
AcceptCallAction[label="{AcceptCallAction| | }"]
 AcceptCallAction->AcceptEventAction[arrowhead=onormal,group=AcceptEventAction,minlen=2,constraint=true,]
;
 node[shape=record];
ReplyAction[label="{ReplyAction| | }"]
 ReplyAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
RaiseExceptionAction[label="{RaiseExceptionAction| | }"]
 RaiseExceptionAction->Action[arrowhead=onormal,group=Action,minlen=2,constraint=true,]
;
 node[shape=record];
DeploymentSpecification[label="{DeploymentSpecification|deploymentLocation[0-1] : String\nexecutionLocation[0-1] : String| }"]
 DeploymentSpecification->Artifact[arrowhead=onormal,group=Artifact,minlen=2,constraint=true,]
;

}
}