digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_SEEDesign"{
labelloc=t
color=black
label=SEEDesign
 node[shape=record];
LogFile[label="{LogFile|file : String| }"]
;
 node[shape=record];
Logger[label="{Logger| | }"]
;
 node[shape=record];
Expression[label="{Expression|loggingOn : Boolean| }"]
;
 node[shape=record];
Literal[label="{Literal|value : Integer| }"]
 Literal->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
VariableExpression[label="{VariableExpression|name : String| }"]
 VariableExpression->Literal[arrowhead=onormal,group=Literal,minlen=2,constraint=true,]
;
 node[shape=record];
NumberExpression[label="{NumberExpression| | }"]
 NumberExpression->Literal[arrowhead=onormal,group=Literal,minlen=2,constraint=true,]
;
 node[shape=record];
UnaryOperator[label="{UnaryOperator| | }"]
 UnaryOperator->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
UnaryPlusOp[label="{UnaryPlusOp| | }"]
 UnaryPlusOp->UnaryOperator[arrowhead=onormal,group=UnaryOperator,minlen=2,constraint=true,]
;
 node[shape=record];
UnaryMinusOp[label="{UnaryMinusOp| | }"]
 UnaryMinusOp->UnaryOperator[arrowhead=onormal,group=UnaryOperator,minlen=2,constraint=true,]
;
 node[shape=record];
BinaryOperator[label="{BinaryOperator| | }"]
 BinaryOperator->Expression[arrowhead=onormal,group=Expression,minlen=2,constraint=true,]
;
 node[shape=record];
PlusOperator[label="{PlusOperator| | }"]
 PlusOperator->BinaryOperator[arrowhead=onormal,group=BinaryOperator,minlen=2,constraint=true,]
;
 node[shape=record];
MinusOperator[label="{MinusOperator| | }"]
 MinusOperator->BinaryOperator[arrowhead=onormal,group=BinaryOperator,minlen=2,constraint=true,]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
Boolean[label="{&#171;DataType&#187;\nBoolean|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;

}
}