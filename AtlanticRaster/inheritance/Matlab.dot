digraph "KM3 Model in DOT" {
graph[rankdir=BT,labeljust=l,labelloc=t,nodeSep=0.75,compound=true];
 subgraph "cluster_Matlab"{
labelloc=t
color=black
label=Matlab
 node[shape=record];
Matlab[label="{Matlab| | }"]
;
 node[shape=record];
BlockDefaults[label="{BlockDefaults|blockDefaults : String| }"]
;
 node[shape=record];
Model[label="{Model|name : String| }"]
;
 node[shape=record];
AnnotationDefaults[label="{AnnotationDefaults|annotationDefaults : String| }"]
;
 node[shape=record];
LineDefaults[label="{LineDefaults|lineDefaults : String| }"]
;
 node[shape=record];
System[label="{System|name : String| }"]
;
 node[shape=record];
Subsystem[label="{Subsystem| | }"]
 Subsystem->Block[arrowhead=onormal,group=Block,minlen=2,constraint=true,]
;
 node[shape=record];
Block[label="{Block|name : String\nblockType : String\ndescription : String\npriority : String\ntag : String\nposition : String| }"]
 Block->BlockDefaults[arrowhead=onormal,group=BlockDefaults,minlen=2,constraint=true,]
;
 node[shape=record];
Annotation[label="{Annotation|position : String\ntext : String| }"]
 Annotation->AnnotationDefaults[arrowhead=onormal,group=AnnotationDefaults,minlen=2,constraint=true,]
;
 node[shape=record];
Line[label="{Line|points : String\nid[0-1] : String| }"]
 Line->LineDefaults[arrowhead=onormal,group=LineDefaults,minlen=2,constraint=true,]
;
 node[shape=record];
DirectLine[label="{DirectLine| | }"]
 DirectLine->Line[arrowhead=onormal,group=Line,minlen=2,constraint=true,]
;
 node[shape=record];
InputPort[label="{InputPort| | }"]
 InputPort->Port[arrowhead=onormal,group=Port,minlen=2,constraint=true,]
;
 node[shape=record];
Branch[label="{Branch|points : String| }"]
;
 node[shape=record];
BranchedLine[label="{BranchedLine| | }"]
 BranchedLine->Line[arrowhead=onormal,group=Line,minlen=2,constraint=true,]
;
 node[shape=record];
Primitive[label="{Primitive|id[0-1] : String| }"]
 Primitive->Block[arrowhead=onormal,group=Block,minlen=2,constraint=true,]
;
 node[shape=record];
Port[label="{Port|id[0-1] : String\nnumber : String| }"]
;
 node[shape=record];
Reference[label="{Reference|sourceType : String\nsourceBlock : String| }"]
 Reference->Block[arrowhead=onormal,group=Block,minlen=2,constraint=true,]
;
 node[shape=record];
Masked[label="{Masked| | }"]
 Masked->Subsystem[arrowhead=onormal,group=Subsystem,minlen=2,constraint=true,]
;
 node[shape=record];
Normal[label="{Normal| | }"]
 Normal->Subsystem[arrowhead=onormal,group=Subsystem,minlen=2,constraint=true,]
;
 node[shape=record];
Parameter[label="{Parameter|name : String| }"]
;
 node[shape=record];
OutputPort[label="{OutputPort| | }"]
 OutputPort->Port[arrowhead=onormal,group=Port,minlen=2,constraint=true,]
;
 node[shape=record];
Type[label="{Type|value : String| }"]
 Type->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
Double[label="{Double|value : String| }"]
 Double->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
INteger[label="{INteger|value : String| }"]
 INteger->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
Enumeration[label="{Enumeration|value : String| }"]
 Enumeration->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
BOolean[label="{BOolean|value : TrueFalse| }"]
 BOolean->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
Text[label="{Text|value : String| }"]
 Text->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
Vector[label="{Vector|value : String| }"]
 Vector->Parameter[arrowhead=onormal,group=Parameter,minlen=2,constraint=true,]
;
 node[shape=record];
DirectBranch[label="{DirectBranch|id[0-1] : String| }"]
 DirectBranch->Branch[arrowhead=onormal,group=Branch,minlen=2,constraint=true,]
;
 node[shape=record];
NestedBranch[label="{NestedBranch| | }"]
 NestedBranch->Branch[arrowhead=onormal,group=Branch,minlen=2,constraint=true,]
;
 node[shape=record];
Machine[label="{Machine|name : String\nid : String| }"]
;
 node[shape=record];
Junction[label="{Junction|_id[0-1] : String\nid : String\ntype : String\nposition : String| }"]
;
 node[shape=record];
Transition[label="{Transition|_id[0-1] : String\ndataLimites : String\nid : String\ntrigger : String\ncondition : String\nconditionAction : String\naction : String| }"]
;
 node[shape=record];
Event[label="{Event|name : String\nid : String\nscope : String\ndescription : String\ntrigger : String| }"]
;
 node[shape=record];
Data[label="{Data|name : String\nid : String\nscope : String\ndescription : String\nunits : String\ndataType : String| }"]
;
 node[shape=record];
Instance[label="{Instance|_id[0-1] : String\nid : String\nname : String| }"]
;
 node[shape=record];
Target[label="{Target|name : String\nid : String\ncodeCommand : String\ndescription : String\nmakeCommand : String\ncodeFlags : String\nchecksumOld : String| }"]
;
 node[shape=record];
Chart[label="{Chart|name : String\nid : String\n_id[0-1] : String\ndecomposotion : String\nupdateMethode : String\nsampleTime : String| }"]
;
 node[shape=record];
State[label="{State|name : String\nid : String\n_id[0-1] : String\ntype : String\nentryAction : String\nexitAction : String\nduringAction : String\neventActions : String\ndecomposition : String\nposition : String| }"]
;
 node[shape=record];
Props[label="{Props|initialValue : String| }"]
;
 node[shape=record];
Range[label="{Range|maximum : String\nminimum : String| }"]
;
 node[shape=record];
Array[label="{Array|firstIndex : String\nsize : String| }"]
;
 node[shape=record];
StateFlow[label="{StateFlow|stateFlow : String| }"]
;
 node[shape=record];
TransitionTerminal[label="{TransitionTerminal|_id[0-1] : String| }"]
;
 node[shape=record];
Simulink[label="{Simulink|simulink[0-1] : String| }"]
;

} subgraph "cluster_PrimitiveTypes"{
labelloc=t
color=black
label=PrimitiveTypes
 node[shape=record];
String[label="{&#171;DataType&#187;\nString|}"]
;
 node[shape=record];
Integer[label="{&#171;DataType&#187;\nInteger|}"]
;

}
}