( defstruct LocatedElement :location )
( defstruct VB_LangElement :location )
( defstruct VB_Content :hasVersion :hasClass :hasBeginEnd :location )
( defstruct VB_GlobalVariable :name :value :location )
( defstruct VB_ContentElement :location )
( defstruct VB_FileAttribute :name :initialValue :location )
( defstruct VB_Option :name :hasEnablement :location )
( defstruct VB_Imports :imports :location )
( defstruct VB_Implements :implements :location )
( defstruct VB_Assembly :call :location )
( defstruct VB_Class :isFriend :hasVisibility :name :hasInherits :location :location )
( defstruct VB_Module :name :location )
( defstruct VB_Type :location )
( defstruct VB_Data :location )
( defstruct VB_SimpleType :name :location )
( defstruct VB_Enum :visibility :name :location )
( defstruct VB_PreprocIf :condition :location )
( defstruct VB_Feature :location :location )
( defstruct VB_Region :name :location :location )
( defstruct VB_Sub :hasAnnotation :isFriend :hasVisibility :isOverloads :isOverrides :name :hasHandles :location :location )
( defstruct VB_Function :isFriend :hasVisibility :name :location :location )
( defstruct VB_DeclareFunction :hasVisibility :isAuto :name :lib :isAlias :return :location :location )
( defstruct VB_DeclareSub :hasVisibility :isAuto :name :lib :isAlias :location :location )
( defstruct VB_Parameter :isOptional :hasQualifier :name :isArray :hasType :hasInitialValue :location )
( defstruct VB_Property :visibility :isShared :isGetOnly :isSet :isLet :name :location :location )
( defstruct VB_Modifier :location )
( defstruct VB_Set :hasParameters :location )
( defstruct VB_Get :hasParameters :location )
( defstruct VB_Attribute :hasVisibility :hasQualifier :isFriend :isWithEvents :isShared :name :isArray :hasType :hasInitialValue :hasNext :location :location )
( defstruct VB_GraphicalElement :type :name :location :location )
( defstruct VB_GraphicalField :location )
( defstruct VB_GraphicalPropertySet :name :hasArguments :hasBrackets :location )
( defstruct VB_GraphicalProperty :property :value :location :location )
( defstruct VB_Statement :location )
( defstruct VB_Call :expression :location )
( defstruct VB_CallArgument :location )
( defstruct VB_CallEmptyArgument :location )
( defstruct VB_CallExpressionArgument :expression :hasSeparator :location )
( defstruct VB_Case :values :hasSeparator :location )
( defstruct VB_RawBody :location )
( defstruct VB_Expression :location )
( defstruct VB_AssignmentExpression :variable :expression :location )
( defstruct VB_TypeOfExpression :variable :type :location )
( defstruct VB_OperatorExpression :leftHand :rightHand :location )
( defstruct VB_NewExpression :type :hasArguments :hasInitialization :location )
( defstruct VB_NotExpression :expression :location )
( defstruct VB_NegativeExpression :expression :location )
( defstruct VB_ParenthesisExpression :expression :location )
( defstruct VB_TabValuesExpression :location )
( defstruct VB_ByValExpression :value :location )
( defstruct VB_Value :location )
( defstruct VB_NegativeValue :value :location )
( defstruct VB_VariableSystem :name :location )
( defstruct VB_Literal :value :location )
( defstruct VB_Literal_Literal :value :location )
( defstruct VB_Literal_Number :value :location )
( defstruct VB_Literal_Value :value :location )
( defstruct VB_FullTypeRef :members :location )
( defstruct VB_TypeRef :type :typeValue :location )
( defstruct VB_FullDataRef :self :members :hasRecSet :location )
( defstruct VB_DataRef :data :dataValue :hasArguments :hasRefMarker :hasSubMarker :location )
( defstruct VB_LabelRef :label :labelValue :location )
