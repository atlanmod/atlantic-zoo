( defstruct ListString :value )
( defstruct ListInteger :value )
( defstruct Model :library :pathname :enumsBlock :model :coverageFileM :criterionFileM :root :application :name :runLine )
( defstruct Implementation :key :namedTypeI :name :runLine )
( defstruct ConstBlock :modelC :keyC :key :model :zoomCoeff :fromat :lanscape :defaultPageFormat :storageUnitE :DefinedIn :name :runLine )
( defstruct VarBlock :keyVB :key :model :zoomCoeff :fromat :lanscape :defaultPageFormat :storageUnitE :DefinedIn :name :runLine )
( defstruct GlobalVariable :kind :type :DefinedIn :name :runLine )
( defstruct TypeBlock :key :model :zoomCoeff :fromat :lanscape :defaultPageFormat :storageUnitE :DefinedIn :name :runLine )
( defstruct Session :descriptor :DefinedIn :loader )
( defstruct Descriptor :modelFileName :sernFileName :sernPersistAs :rnetFileName :rnetPersistAs :occBase :size :nameVerify :checked :modelD :name :runLine )
( defstruct StorageUnit :saoFileName :annFileName :persistAs :loaded :saoModified :annModified :fileRef :modelS :name :runLine )
( defstruct StorageElement :storageUnitE :DefinedIn :name :runLine )
( defstruct Object :name :runLine )
( defstruct Block :zoomCoeff :fromat :lanscape :defaultPageFormat :storageUnitE :DefinedIn :name :runLine )
( defstruct NodeBlock :node :zoomCoeff :fromat :lanscape :defaultPageFormat :storageUnitE :DefinedIn :name :runLine )
( defstruct ModelBlock :model :zoomCoeff :fromat :lanscape :defaultPageFormat :storageUnitE :DefinedIn :name :runLine )
( defstruct Expression :exprContactE :name :runLine )
( defstruct Label :expression :name :runLine )
( defstruct ExprNull :exprContactE :name :runLine )
( defstruct ConstValue :value :kind :exprContactE :name :runLine )
( defstruct ExprContact :boolAct :calledOpr :exprContactE :name :runLine )
( defstruct ExprCall :numOcc :predefOpr :exprContactEC :exprContactE :name :runLine )
( defstruct Operator :category :conversion :state :index :modelO :modelOp :operator :storageUnitE :DefinedIn :name :runLine )
( defstruct ExprId :exprContactEI :reference :exprContactE :name :runLine )
( defstruct LocalVariable :optional :const :probe :pure :initValue :kind :type :DefinedIn :name :runLine )
( defstruct Node :nodeKind :key :modelN :category :conversion :state :index :modelO :modelOp :operator :storageUnitE :DefinedIn :name :runLine )
( defstruct ParamBlock :key :array :node :zoomCoeff :fromat :lanscape :defaultPageFormat :storageUnitE :DefinedIn :name :runLine )
( defstruct ParamArray :paramBlock :operator :DefinedIn :name :runLine )
( defstruct ConstVar :kind :type :DefinedIn :name :runLine )
( defstruct Constant :imported :kind :type :DefinedIn :name :runLine )
( defstruct Variable :kind :type :DefinedIn :name :runLine )
( defstruct Type :model :DefinedIn :name :runLine )
( defstruct Table :size :model :DefinedIn :name :runLine )
( defstruct NamedType :kind :keyM :key :model :DefinedIn :name :runLine )
( defstruct Enumeration :value :model :DefinedIn :name :runLine )
( defstruct Composite :model :DefinedIn :name :runLine )
( defstruct CompositeElement :key :name :runLine )
( defstruct Structure :model :DefinedIn :name :runLine )
( defstruct Tuple :model :DefinedIn :name :runLine )
( defstruct EqBlock :equation :key :node :zoomCoeff :fromat :lanscape :defaultPageFormat :storageUnitE :DefinedIn :name :runLine )
( defstruct Equation :rotation :symetrical :terminator :eqBlock :DefinedIn :name :runLine )
( defstruct Assertion :expression :DefinedIn :name :runLine )
( defstruct Annotable :DefinedIn :name :runLine )
( defstruct Prop :name :entity )
( defstruct Configuration :name :projectC )
( defstruct Project :pathname :DefinedIn :name :runLine )
( defstruct Element :name :derived :ident :description :criterionE )
( defstruct FileRef :pathname :persistAs :DefinedIn :name :derived :ident :description :criterionE )
( defstruct Folder :extensions :name :derived :ident :description :criterionE )
( defstruct Reference )
( defstruct TypeReference )
( defstruct OperatorReference )
( defstruct VariableReference )
( defstruct Error )
( defstruct Edge :leftVarIndex :labelOrientation :leftVar :rightExpression :srcEquation :dstEquation :name :runLine )
( defstruct RPoint )
( defstruct RSize )
( defstruct Entity :DefinedIn )
( defstruct StateObj :DefinedIn )
( defstruct GraphicalObject :DefinedIn )
( defstruct StInputOutput :name :type :clock :const :optional :DefinedIn )
( defstruct StInitInput :name :type :clock :const :optional :DefinedIn )
( defstruct StInput :name :type :clock :const :optional :DefinedIn )
( defstruct StOutput :name :type :clock :const :optional :DefinedIn )
( defstruct Transition :conditions :transKind :state1 :state2 :DefinedIn )
( defstruct State :name :cx :cy :stOutput :DefinedIn )
( defstruct InitialStPtr :cx :cy :state :DefinedIn )
( defstruct StateMachine :initialStPtr :name :runLine )
( defstruct Base :DefineIn )
( defstruct StateBase :DefineIn )
( defstruct AnnNote :name :modified :annNoteType :annotable :annAttValue )
( defstruct AnnAttValue :annNote :annAttDefinition )
( defstruct AnnNoteType :name :key )
( defstruct AnnAttDefinition :name :type :annAttGroup :key )
( defstruct AnnAttIntValue :value :annNote :annAttDefinition )
( defstruct AnnAttBoolValue :value :annNote :annAttDefinition )
( defstruct AnnAttCharValue :value :annNote :annAttDefinition )
( defstruct AnnAttRealValue :value :annNote :annAttDefinition )
( defstruct AnnAttStringValue :value :annNote :annAttDefinition )
( defstruct AnnAttFileValue :value :annNote :annAttDefinition )
( defstruct AnnAttDateValue :value :annNote :annAttDefinition )
( defstruct AnnAttOidValue :value :annNote :annAttDefinition )
( defstruct AnnAttEnumValue :value :annNote :annAttDefinition )
( defstruct AnnProperty :name :type :key )
( defstruct AnnPropertyInt :value :name :type :key )
( defstruct AnnPropertyBool :value :name :type :key )
( defstruct AnnPropertyChar :value :name :type :key )
( defstruct AnnPropertyReal :value :name :type :key )
( defstruct AnnPropertyString :value :name :type :key )
( defstruct AnnPropertyEnum :value :name :type :key )
( defstruct AnnotSchema :pathname :annNoteType :annCategory )
( defstruct AnnCategory :name :key )
( defstruct Annotability :minCardinality :maxCardinality :defaultNote :annNoteType )
( defstruct AnnAttGroup :name :key )
( defstruct File )
( defstruct MtcApplication :modelM )
( defstruct CoverageFile :modelCov :application )
( defstruct CriterionFile :application :modelCri )
( defstruct MtcEntity )
( defstruct HistoryEntry )
( defstruct Criterion :ident :name :description :criterionFileC :operatorC )
( defstruct Instance :index :occ :modelI :operatorI :associationClassI :caller )
( defstruct AssociationClass :resultA )
( defstruct Result :elementCount :associationClassRs :record )
( defstruct Record :creator :name :date :author :description :key :associationClassRc :coverageFileR )
( defstruct Loader :session )
