( defstruct TimeBase :name )
( defstruct Instant :isBefore :owner :timeValue )
( defstruct TimeValue :ref )
( defstruct TimeInterval :endValues )
( defstruct Interval :includingMin :includingMax :base :timeInterval )
( defstruct SingleTimeBase :currentValue :currentInstant :name )
( defstruct SingleInstant :coPoint :isBefore :owner :timeValue )
( defstruct SingleInterval :first :last :includingMin :includingMax :base :timeInterval )
( defstruct SingleTimeValue :ref )
( defstruct SingleTimeInterval :start :end :endValues )
( defstruct DiscreteTimeBase :refEvent :name )
( defstruct DiscreteInstant :refOcc :isBefore :owner :timeValue )
( defstruct Event )
( defstruct EventOccurence )
( defstruct PhysicalTime )
( defstruct PhysicalInstant )
( defstruct Duration :start :end )
( defstruct MultipleTimeBase :bases :name )
( defstruct CoincidencePoint :coincidenceInstants :isBefore :owner :timeValue )
( defstruct MultipleInterval :first :last :includingMin :includingMax :base :timeInterval )
( defstruct MultipleTimeValue :values :ref )
( defstruct MetricTimeValue :ref )
( defstruct DiscreteTimeValue :ref )
( defstruct MetricTimeInterval :endValues )
( defstruct DiscreteTimeInterval :endValues )
( defstruct SimultaneousEventOccurrence :at :occurence )
( defstruct TimedEvent :timestamp )
( defstruct TimedEventOccurence :at :timestamp )
( defstruct TimedAction :behavior :steps :root :endToEndResponse )
( defstruct Delay :behavior :steps :root :endToEndResponse )
( defstruct TimingMechanism :stability :drift :skew :origin :resolution :refClock :state )
( defstruct Clock :accuracy :offset :refEvent :name :stability :drift :skew :origin :resolution :refClock :state )
( defstruct Timer :isPeriodic :duration :stability :drift :skew :origin :resolution :refClock :state )
( defstruct TimeOut )
( defstruct ClockInterrupt )
( defstruct System )
( defstruct Model )
( defstruct AnnotatedModel :conformsTo )
( defstruct ModelElement :owner )
( defstruct AnnotatedModelElement :owner )
( defstruct NFP :measurementQuantity :groupedBy )
( defstruct NFPLibrary )
( defstruct NFPCategory :setOf )
( defstruct ModelingConcern :annotedModel )
( defstruct AnalysisConcern :annotedModel )
( defstruct DesignConcern :annotedModel )
( defstruct Quantity )
( defstruct BasicQuantity )
( defstruct DerivedQuantity )
( defstruct QualitativeNFP :measurementQuantity :groupedBy )
( defstruct QuantitativeNFP :measurementQuantity :groupedBy )
( defstruct Realization :owner )
( defstruct Measure :appliesTo :owner )
( defstruct ComplexNFP :ownes :measurementQuantity :groupedBy )
( defstruct BasicNFP :statisticalQualifier :directon :typedBy )
( defstruct NFPType :valueSpecificationLanguage )
( defstruct NFPInstantType :value :valueSpecificationLanguage )
( defstruct NFPurationType :value :valueSpecificationLanguage )
( defstruct NFPRateType :value :valueSpecificationLanguage )
( defstruct NFPProbabilityType :value :valueSpecificationLanguage )
( defstruct NFPSizeType :value :valueSpecificationLanguage )
( defstruct NFPValueSpecification )
( defstruct NFPConstant )
( defstruct NFPListConstant )
( defstruct NFPStringConstant :body )
( defstruct NFPIntegerConstant :body )
( defstruct NFPRealConstant :bodyBeforeComa :bodyAfterComa )
( defstruct NFPBooleanConstant :body )
( defstruct NFPVariable :varName )
( defstruct NFPExpression :body )
( defstruct Classifier :owner )
( defstruct ResourceClassifier :offeredService :owner )
( defstruct ResourceServiceClassifier :resType :owner )
( defstruct InstanceSpecification :type :owner )
( defstruct ResourceInstanceSpecification :offeredServiceInstance :type :owner )
( defstruct ResourceServiceInstanceSpecification :resintSpec :type :owner )
( defstruct Hardware :owner )
( defstruct HardwareLibrary :owner )
( defstruct HardwareEntity :owner )
( defstruct HardwareDeployment :owner :contain )
( defstruct HardwareEntityInstance :owner )
( defstruct ECUInstance :owner )
( defstruct ChannelInstance :gateInstances :owner )
( defstruct ECUGateInstance :channel )
( defstruct ECU :contain :owner )
( defstruct ECUGate :owner :kindOf )
( defstruct Channel )
( defstruct AnalysisContext :usedResources )
( defstruct Workload :transaction )
( defstruct Transaction :workload :trigger :response )
( defstruct Trigger :arrivalPattern :effect )
( defstruct Response :efficiency :endToEndLatency :cause :behavior )
( defstruct Behavior :scenario )
( defstruct Scenario :behavior :steps :root :endToEndResponse )
( defstruct Step :behavior :steps :root :endToEndResponse )
( defstruct Resource )
( defstruct BasicResource )
( defstruct StructuredResource :basicResource )
( defstruct ProcessingResource :components :basicResource )
( defstruct Link )
( defstruct ProcessResource :components :basicResource )
( defstruct Component :process :interfaces )
( defstruct StructuredComponent :process :interfaces )
( defstruct BasicComponent :process :interfaces )
( defstruct LogicalResource :basicResource )
( defstruct ServerResource :services :basicResource )
( defstruct Service :resource :interface )
( defstruct Interface :service )
