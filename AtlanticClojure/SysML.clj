( defstruct Entity )
( defstruct NamedElement :name )
( defstruct Dependency :name )
( defstruct Conform :target :source :name )
( defstruct Package :name )
( defstruct View :conformsTo :name )
( defstruct Class :name )
( defstruct Viewpoint :purpose :name )
( defstruct Comment :content )
( defstruct Rationale :content )
( defstruct Problem :content )
( defstruct Block :isEncapsulated :name )
( defstruct ConstraintBlock :isEncapsulated :name )
( defstruct Property )
( defstruct BlockProperty )
( defstruct ConstraintProperty )
( defstruct DistributedProperty )
( defstruct DataType )
( defstruct ValueType )
( defstruct Unit )
( defstruct Dimension )
( defstruct ConnectorEnd )
( defstruct NestedConnectorEnd :propertyPath )
( defstruct Port :isBehavior )
( defstruct FlowPort :isAtomic :isBehavior )
( defstruct FlowProperty )
( defstruct Interface )
( defstruct FlowSpecification )
( defstruct Classifier )
( defstruct InformationItem )
( defstruct InformationFlow :conveyed :source :target )
( defstruct ItemFlow :conveyed :source :target )
( defstruct Parameter )
( defstruct ActivityEdge )
( defstruct ParameterSet )
( defstruct Optional )
( defstruct Rate :instance )
( defstruct InstanceSpecification )
( defstruct Continous :instance )
( defstruct Discrete :instance )
( defstruct Probability :probability )
( defstruct ValueSpecification )
( defstruct Behavior )
( defstruct Operation )
( defstruct ControlOperation )
( defstruct ObjectNode )
( defstruct NoBuffer )
( defstruct Overwrite )
( defstruct Abstraction )
( defstruct Allocate )
( defstruct Allocated :name )
( defstruct ActivityPartition )
( defstruct AllocateActivityPartition )
( defstruct Trace )
( defstruct DeriveReqt )
( defstruct Verify )
( defstruct Copy )
( defstruct Realization )
( defstruct Satisfy )
( defstruct Requirement :text :id :master :name )
( defstruct TestCase )
( defstruct RequirementRelated :name )
( defstruct BasicInterval :min :max )
( defstruct Interval :min :max )
( defstruct Uniform :min :max )
( defstruct Normal :mean :standardDeviation )
