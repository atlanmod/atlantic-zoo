( defstruct LocatedElement :location )
( defstruct Body :location )
( defstruct InWhereHolds :var :in :location )
( defstruct AsmLFile :main :location )
( defstruct AsmLElement :file :location )
( defstruct VarDeclaration :isConstant :isDeclaration :isLocal :name :type :file :location :ownerStructure :location :ownerClass :location )
( defstruct Namespace :name :file :location )
( defstruct Structure :name :file :location )
( defstruct VarOrCase :ownerStructure :location )
( defstruct Case :name :ownerStructure :location )
( defstruct Class :name :isAbstract :file :location )
( defstruct VarOrMethod :ownerClass :location )
( defstruct Enumeration :name :file :location )
( defstruct Enumerator :name :location )
( defstruct Function :name :body :file :location )
( defstruct Method :name :body :file :location :ownerClass :location )
( defstruct Parameter :name :type :ownerMethod :location )
( defstruct Main :mainFile :name :body :file :location )
( defstruct Initially :id :val :location )
( defstruct Rule :ownerBody :location )
( defstruct SkipRule :ownerBody :location )
( defstruct Step :ownerBody :location )
( defstruct StepUntilFixPoint :ownerBody :location )
( defstruct StepExpression :expression :ownerBody :location )
( defstruct StepWhile :expression :ownerBody :location )
( defstruct StepUntil :expression :ownerBody :location )
( defstruct StepForEach :ownerBody :location )
( defstruct MethodInvocation :called :ownerBody :location )
( defstruct UpdateRule :term :ownerBody :location )
( defstruct UpdateVarRule :updateVar :term :ownerBody :location )
( defstruct UpdateFieldRule :path :term :ownerBody :location )
( defstruct UpdateMapRule :updateMap :parameters :term :ownerBody :location )
( defstruct ChooseRule :ifChoosenRules :ownerBody :location )
( defstruct ForallRule :doRule :ownerBody :location )
( defstruct ConditionalRule :condition :thenRule :ownerBody :location )
( defstruct ElseIf :condition :thenRule :ownerBody :location )
( defstruct ReturnRule :term :ownerBody :location )
( defstruct AddRule :val :set :ownerBody :location )
( defstruct RemoveRule :val :set :ownerBody :location )
( defstruct Type :withNull :file :location )
( defstruct NamedType :name :withNull :file :location )
( defstruct MapType :ofType :toType :withNull :file :location )
( defstruct TupletType :types :withNull :file :location )
( defstruct SetType :of :withNull :file :location )
( defstruct SequenceType :of :withNull :file :location )
( defstruct Term :location )
( defstruct VarTerm :name :location )
( defstruct Operator :opName :leftExp :location )
( defstruct MapTerm :ofTerm :toTerm :separator :location )
( defstruct TulpletTerm :terms :location )
( defstruct MethodCallTerm :name :location )
( defstruct NewInstance :name :location )
( defstruct PredicateTerm :location )
( defstruct ForAllTerm :location )
( defstruct ExistsTerm :isUnique :location )
( defstruct AnyIn :location )
( defstruct SetTerm :location )
( defstruct EnumerateSet :location )
( defstruct RangeSet :minval :maxval :location )
( defstruct AlgorithmSet :location )
( defstruct SequenceTerm :location )
( defstruct EnumerateSequence :location )
( defstruct RangeSequence :minval :maxval :location )
( defstruct Constant :location )
( defstruct BooleanConstant :val :location )
( defstruct IntegerConstant :val :location )
( defstruct StringConstant :val :location )
( defstruct NullConstant :location )
