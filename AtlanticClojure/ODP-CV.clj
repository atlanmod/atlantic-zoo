( defstruct EnvironmentContract :ec_to_a :specifier_ec )
( defstruct ComputationalTemplate :ct_to_ec )
( defstruct ComputationalObject :co_to_i :co_to_bh :specifier_co :co_to_st )
( defstruct BindingObject :co_to_i :co_to_bh :specifier_co :co_to_st )
( defstruct ComputationalObjectTemplate :ct_to_ec )
( defstruct ComputationalInterfaceTemplate :cit_to_intsig :ct_to_ec )
( defstruct Interface :owner_i :specifier_i :i_to_ina )
( defstruct Binding :bd_to_i )
( defstruct SignalInterface :owner_i :specifier_i :i_to_ina )
( defstruct OperationInterface :owner_i :specifier_i :i_to_ina )
( defstruct StreamInterface :owner_i :specifier_i :i_to_ina )
( defstruct InterfaceSignature :intsig_to_cit )
( defstruct SignalInterfaceSignature :intsig_to_cit )
( defstruct OperationInterfaceSignature :intsig_to_cit )
( defstruct StreamInterfaceSignature :intsig_to_cit )
( defstruct InteractionSignature :isig_to_at )
( defstruct Parameter :param_to_isig )
( defstruct AnnouncementSignature :ansig_to_optisig :isig_to_at )
( defstruct InterrogationSignature :intsig_to_optisig :intsig_to_tersig :isig_to_at )
( defstruct TerminationSignature :tersig_to_intsig :isig_to_at )
( defstruct SignalSignature :ssig_to_sgisig :isig_to_at )
( defstruct FlowSignature :fsig_to_strisig :isig_to_at )
( defstruct ActionTemplate :at_to_a :at_to_isig )
( defstruct Behaviour :specifier_bh :owner_bh :bh_to_a )
( defstruct Action :specifier_a :a_to_bh )
( defstruct State :startState :endState :st_to_co )
( defstruct InternalAction :specifier_a :a_to_bh )
( defstruct Interaction :ina_to_i :specifier_a :a_to_bh )
( defstruct Flow :ina_to_i :specifier_a :a_to_bh )
( defstruct Signal :ina_to_i :specifier_a :a_to_bh )
( defstruct Operation :opt_to_inv :ina_to_i :specifier_a :a_to_bh )
( defstruct Announcement :opt_to_inv :ina_to_i :specifier_a :a_to_bh )
( defstruct Interrogation :opt_to_inv :ina_to_i :specifier_a :a_to_bh )
( defstruct Invocation :inv_to_ter :inv_to_opt :ina_to_i :specifier_a :a_to_bh )
( defstruct Termination :owner_ter :ter_to_inv :ina_to_i :specifier_a :a_to_bh )
