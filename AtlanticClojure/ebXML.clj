( defstruct MultyPartyCollaboration )
( defstruct BusinessPartnerRole :collaboration )
( defstruct Performs :performedBy :collaboration :role )
( defstruct AuthorizedRole :isInitiator )
( defstruct Transaction :onInitiation :conditionGuard :conditionExpression :from :to )
( defstruct BinaryCollaboration :pattern :timeToPerform :preCondition :postCondition :beginsWhen :endsWhen )
( defstruct BusinessState :collaboration :from :to )
( defstruct Start :collaboration :from :to )
( defstruct Fork :waitForAll :collaboration :from :to )
( defstruct Join :collaboration :from :to )
( defstruct CompletionState :guardCondition :collaboration :from :to )
( defstruct Failure :guardCondition :collaboration :from :to )
( defstruct Success :guardCondition :collaboration :from :to )
( defstruct BusinessActivity :collaboration :from :to )
( defstruct BusinessTransactionActivity :timeToPerform :isConcurrent :isLegallyBinding :use :collaboration :from :to )
( defstruct CollaborationActivity :use :collaboration :from :to )
( defstruct BusinessTransaction :pattern :isGuaranteedDeliveryRequired :preCondition :postCondition :beginsWhen :endsWhen :requester :responder )
( defstruct BusinessAction :isIntelligiblecheckRequired :isAuthorizationRequired :timeToAcknowledgeReceipt :isNonRepudiationRequired :isNonRepudiationOfRecipientRequired )
( defstruct RequestingBusinessActivity :timeToAcknowledgeAcceptance :transaction :documentEnvelope :isIntelligiblecheckRequired :isAuthorizationRequired :timeToAcknowledgeReceipt :isNonRepudiationRequired :isNonRepudiationOfRecipientRequired )
( defstruct RespondingBusinessActivity :transaction :documentEnvelope :isIntelligiblecheckRequired :isAuthorizationRequired :timeToAcknowledgeReceipt :isNonRepudiationRequired :isNonRepudiationOfRecipientRequired )
( defstruct DocumentSecurity :isConfidential :isTamperProof :isAuthenticated )
( defstruct DocumentEnvelope :isPositiveResponse :document :isConfidential :isTamperProof :isAuthenticated )
( defstruct Attachment :mimeType :specification :version :envelope :document :isConfidential :isTamperProof :isAuthenticated )
( defstruct BusinessDocument :specificationLocation :specificationElement :conditionExpression )
