( defstruct ONEOFConstraint :constrainedSubtypes :equivalentRule :collection )
( defstruct SupertypeRule :namedSupertype :assertsAbstract :namespace )
( defstruct SubtypeConstraint :constrainedSubtypes :equivalentRule :collection )
( defstruct Extent :withinPopulation :forType :id :ofType )
( defstruct TOTAL_OVERConstraint :constrainedSubtypes :equivalentRule :collection )
( defstruct ANDConstraint :constrainedSubtypes :equivalentRule :collection )
( defstruct GlobalRule :constrainedExtents :containsRules :namespace )
( defstruct NamedRule :assertsExpression :position :namespace )
( defstruct ProcedureCall :invokes )
( defstruct SkipStatement )
( defstruct AliasStatement :bindsToReference :body :aliasVariable )
( defstruct ControlVariable :boundValue :initialValue :increment :variableType :namespace )
( defstruct AliasVariable :variableType :namespace )
( defstruct ControlStatement )
( defstruct VARCell :refersTo :id )
( defstruct NullStatement )
( defstruct VARExpression )
( defstruct AttributeCell :refersTo :baseEntity :id )
( defstruct StatementBlock :delimited )
( defstruct CaseAction :isDefault )
( defstruct MemberCell :indexValue :baseAggregate )
( defstruct RepeatStatement :body )
( defstruct GroupCell :baseEntity :refersTo :id )
( defstruct VariableCell :refersTo :id )
( defstruct CaseStatement :cases :selectionExpression )
( defstruct IfStatement :ifCondition :thenActions )
( defstruct EscapeStatement )
( defstruct ReturnStatement )
( defstruct Assignment :assignedValue :variable )
( defstruct Selector :entityInstance )
( defstruct RepeatCount )
( defstruct EnumItemRef :refersTo :id )
( defstruct Literal :refersTo )
( defstruct BinaryIndex :firstBit :baseValue )
( defstruct IndeterminateRef :refersTo )
( defstruct SELFRef )
( defstruct IndexOperation :baseValue )
( defstruct BinaryOperation :leftOperand :rightOperand :operator )
( defstruct AggregateInitializer )
( defstruct StringIndex :firstCode :baseValue )
( defstruct PartialEntityConstructor :attributeGroup :id )
( defstruct Coercion :operand :targetType )
( defstruct Primary )
( defstruct ActualParameter :formalParameter :position )
( defstruct ParameterRef :refersTo :id )
( defstruct AttributeRef :refersTo :id :entityInstance )
( defstruct AggregateIndex :indexValue :baseValue )
( defstruct GroupRef :refersTo :id :entityInstance )
( defstruct UnaryOperation :unaryOperand :operator )
( defstruct UsedInRef :inverseOf :entityInstance )
( defstruct ConstantRef :refersTo :id )
( defstruct QueryExpression :selectCondition :queryVariable :aggregateOperand )
( defstruct QueryVariable :variableType :namespace )
( defstruct Operation )
( defstruct AttributeBinding :attributeValue :attribute :position )
( defstruct FunctionCall :invokesFunction :returnsResult )
( defstruct MemberBinding :memberValue :position )
( defstruct ExtentRef :refersTo :id )
( defstruct VariableRef :refersTo :id )
( defstruct TypeElement :namespace )
( defstruct SingleEntityType :declaredIn :equivalent :id )
( defstruct AGGREGATEType :memberType :occursIn )
( defstruct GeneralBAGType :memberType :occursIn :isUnique :ordering )
( defstruct DomainRule :position :domain :namespace )
( defstruct GeneralAggregationType :memberType :occursIn :isUnique :ordering )
( defstruct ConcreteType :fundamentalType )
( defstruct Expression )
( defstruct InverseAttribute :modelsRole :explicit :isUnique :attributeType :ofEntity :isAbstract :position :owningEntity :namespace )
( defstruct EnumerationType :base :isExtensible :fundamentalType :namespace :fundamentalType )
( defstruct VariableType )
( defstruct ArrayBound :boundExpression )
( defstruct GeneralSETType :memberType :occursIn :isUnique :ordering )
( defstruct LISTType :memberType :fundamentalType :fundamentalType :isUnique :ordering )
( defstruct Redeclaration :restrictedType :scope :originalAttribute :position )
( defstruct EntityType :declares :isAbstract :fundamentalType :namespace :fundamentalType )
( defstruct DataType )
( defstruct PartialEntityType :components )
( defstruct Schema :name )
( defstruct InvertibleAttribute :rangeType :createsRelationship :referencingType :modelsRole :isOptional :attributeType :ofEntity :isAbstract :position :owningEntity :namespace )
( defstruct GeneralizedType :occursIn )
( defstruct InterfacedElement :interfacingSchema :refersTo :isUSE )
( defstruct NumericType :id :fundamentalType :fundamentalType )
( defstruct DefinedType :fundamentalType :namespace :fundamentalType )
( defstruct UniqueRule :domain :keyComponent :position :namespace )
( defstruct DomainRole :domain :inRelationship :ofEntity )
( defstruct DomainConstraint :domain )
( defstruct InstantiableType :fundamentalType )
( defstruct GeneralLISTType :memberType :occursIn :isUnique :ordering )
( defstruct NamedElement :namespace )
( defstruct Attribute :attributeType :ofEntity :isAbstract :position :owningEntity :namespace )
( defstruct BAGType :memberType :fundamentalType :fundamentalType :isUnique :ordering )
( defstruct RealType :id :fundamentalType :fundamentalType )
( defstruct LogicType :id :fundamentalType :fundamentalType )
( defstruct GenericType :isEntity :occursIn )
( defstruct StringType :id :fundamentalType :fundamentalType )
( defstruct AnonymousType :fundamentalType :fundamentalType )
( defstruct AlgorithmScope )
( defstruct Instance :ofType )
( defstruct AttributeType )
( defstruct DerivedAttribute :derivation :attributeType :ofEntity :isAbstract :position :owningEntity :namespace )
( defstruct RangeRole :domainView :range :id :inRelationship :ofEntity )
( defstruct LocalElement :namespace )
( defstruct Remark :appearsIn :isTagged :isTail :text )
( defstruct SizeConstraint :domain )
( defstruct Role :inRelationship :ofEntity )
( defstruct SETType :memberType :fundamentalType :fundamentalType :isUnique :ordering )
( defstruct SpecializedType :underlyingType :fundamentalType :namespace :fundamentalType )
( defstruct GeneralARRAYType :isOptional :memberType :occursIn :isUnique :ordering )
( defstruct Relationship :domain :roles :basedOn :range )
( defstruct LengthConstraint :isFixed :domain )
( defstruct LocalScope )
( defstruct NamedType :fundamentalType :namespace )
( defstruct BinaryType :id :fundamentalType :fundamentalType )
( defstruct ScopedId :localName :definingScope )
( defstruct AggregationType :isUnique :ordering )
( defstruct Scope )
( defstruct ParameterType )
( defstruct SelectType :base :isExtensible :isEntity :fundamentalType :namespace :fundamentalType )
( defstruct ActualType :scope )
( defstruct ExplicitAttribute :isOptional :attributeType :ofEntity :isAbstract :position :owningEntity :namespace )
( defstruct SimpleType :id :fundamentalType :fundamentalType )
( defstruct CommonElement :namespace )
( defstruct SchemaElement :namespace )
( defstruct ConcreteAggregationType :memberType :fundamentalType :fundamentalType :isUnique :ordering )
( defstruct ARRAYType :loIndex :hiIndex :isOptional :memberType :fundamentalType :fundamentalType :isUnique :ordering )
( defstruct ActualTypeConstraint :matchingType :requiredType :label )
( defstruct FunctionResult :variableType :namespace )
( defstruct Function :result :namespace )
( defstruct InParameter :variable :formalParameterType :inout :position :namespace )
( defstruct LocalVariable :variableType :namespace )
( defstruct ActualStructure :source :label :namespace :memberType :occursIn )
( defstruct ActualGenericType :refersTo :isEntity :label :scope )
( defstruct Statement )
( defstruct NamedVariable :variableType :namespace )
( defstruct InVariable :source :variableType :namespace )
( defstruct Procedure :namespace )
( defstruct ActualARRAYType :hiIndex :loIndex :isOptional :memberType :scope :isUnique :ordering )
( defstruct ActualSETType :memberType :scope :isUnique :ordering )
( defstruct ActualAGGREGATEType :refersTo :memberType :label :scope )
( defstruct Parameter :formalParameterType :inout :position :namespace )
( defstruct ActualStructureConstraint :matchingStructure :requiredStructure :label )
( defstruct Algorithm :namespace )
( defstruct ActualAggregationType :memberType :scope :isUnique :ordering )
( defstruct VARVariable )
( defstruct ActualLISTType :memberType :scope :isUnique :ordering )
( defstruct Variable :variableType :namespace )
( defstruct GenericElement :source :label :namespace )
( defstruct VARParameter :formalParameterType :inout :position :namespace )
( defstruct ActualDataType :isEntity :occursIn :source :label :namespace )
( defstruct ActualBAGType :memberType :scope :isUnique :ordering )
( defstruct AttributeValue :attribute )
( defstruct ARRAYValue :memberSlot :ofType )
( defstruct RoleName :refersTo :represents :name :ofType )
( defstruct EntityInstance :state :instanceOf :id :ofType )
( defstruct IntegerValue :name :ofType )
( defstruct AggregateValue :ofType )
( defstruct Constant :valueExpression :dataType :namespace )
( defstruct LogicalValue :name :ofType )
( defstruct TypedInstance :ofType )
( defstruct ListMember :memberValue :position )
( defstruct BagMember :memberValue :count )
( defstruct SingleEntityValue :equivalent :ofType )
( defstruct Indeterminate :ofType )
( defstruct SingleLeafInstance :characterizingType :state :instanceOf :id :ofType )
( defstruct GenericAggregate :ofType :ofType )
( defstruct BinaryValue :name :ofType )
( defstruct SpecializedValue :fundamentalValue :ofType )
( defstruct BAGValue :ofType )
( defstruct EnumerationItem :declaredIn :position :namespace :ofType :ofType )
( defstruct EntityValue :correspondsTo :components :ofType )
( defstruct SETValue :ofType )
( defstruct ArrayMember :index )
( defstruct Population )
( defstruct RealValue :name :ofType )
( defstruct BooleanValue :name :ofType )
( defstruct LISTValue :ofType :ofType )
( defstruct StringValue :name :ofType )
( defstruct TypeName :refersTo :represents :name :ofType )
( defstruct PartialEntityValue :components :ofType )
( defstruct NumberValue :name :ofType )
( defstruct MultiLeafInstance :state :instanceOf :id :ofType )
( defstruct SimpleValue :name :ofType )
( defstruct ConcreteValue :ofType )
