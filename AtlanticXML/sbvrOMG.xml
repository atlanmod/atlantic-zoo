<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<Metamodel>
  <Package name = 'sbvr'>
    <Class name = 'Actuality' isAbstract = 'false' supertypes = 'sbvr::StateOfAffairs'/>
    <Class name = 'StateOfAffairs' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'Thing' isAbstract = 'false' supertypes = ''>
      <Reference name = 'name' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Name' opposite = ''/>
    </Class>
    <Class name = 'Name' isAbstract = 'false' supertypes = 'sbvr::Designation'/>
    <Class name = 'Designation' isAbstract = 'false' supertypes = 'sbvr::Representation'>
      <Attribute name = 'implicitlyIsUnderstood' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Reference name = 'signifier' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Expression' opposite = ''/>
    </Class>
    <Class name = 'Representation' isAbstract = 'false' supertypes = 'sbvr::Actuality'>
      <Reference name = 'meaning' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Meaning' opposite = ''/>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Expression' opposite = ''/>
    </Class>
    <Class name = 'Meaning' isAbstract = 'false' supertypes = 'sbvr::Thing'>
      <Reference name = 'representation' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Representation' opposite = ''/>
    </Class>
    <Class name = 'Expression' isAbstract = 'false' supertypes = 'sbvr::BindableTarget'/>
    <Class name = 'BindableTarget' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'AdoptedDefinition' isAbstract = 'false' supertypes = 'sbvr::Definition'/>
    <Class name = 'Definition' isAbstract = 'false' supertypes = 'sbvr::Representation'/>
    <Class name = 'Advice' isAbstract = 'false' supertypes = 'sbvr::ElementOfGuidance'/>
    <Class name = 'ElementOfGuidance' isAbstract = 'false' supertypes = 'sbvr::Proposition'>
      <Attribute name = 'isPracticable' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'Proposition' isAbstract = 'false' supertypes = 'sbvr::Meaning'>
      <Attribute name = 'isFalse' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isTrue' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Reference name = 'statement' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Statement' opposite = ''/>
      <Attribute name = 'isPossiblyTrue' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isObligatedToBeTrue' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isPermittedToBeTrue' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isNecessarilyTrue' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'Statement' isAbstract = 'false' supertypes = 'sbvr::Representation'/>
    <Class name = 'AdviceOfContingency' isAbstract = 'false' supertypes = 'sbvr::AdviceOfPossibility'/>
    <Class name = 'AdviceOfPossibility' isAbstract = 'false' supertypes = 'sbvr::Advice'/>
    <Class name = 'AdviceOfOptionality' isAbstract = 'false' supertypes = 'sbvr::AdviceOfPermission'/>
    <Class name = 'AdviceOfPermission' isAbstract = 'false' supertypes = 'sbvr::Advice'/>
    <Class name = 'AdviceStatement' isAbstract = 'false' supertypes = 'sbvr::GuidanceStatement'/>
    <Class name = 'GuidanceStatement' isAbstract = 'false' supertypes = 'sbvr::Statement'/>
    <Class name = 'AggregationFormulation' isAbstract = 'false' supertypes = 'sbvr::ProjectingFormulation'/>
    <Class name = 'ProjectingFormulation' isAbstract = 'false' supertypes = 'sbvr::LogicalFormulation'>
      <Reference name = 'projection' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Projection' opposite = ''/>
    </Class>
    <Class name = 'LogicalFormulation' isAbstract = 'false' supertypes = 'sbvr::SemanticFormulation'/>
    <Class name = 'SemanticFormulation' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'Projection' isAbstract = 'false' supertypes = 'sbvr::SemanticFormulation'>
      <Reference name = 'constrainingFormulation' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::LogicalFormulation' opposite = ''/>
      <Reference name = 'projectionVariable' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Variable' opposite = ''/>
      <Reference name = 'auxiliaryVariable' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::AuxiliaryVariable' opposite = ''/>
    </Class>
    <Class name = 'Variable' isAbstract = 'false' supertypes = 'sbvr::BindableTarget'>
      <Reference name = 'restrictingFormulation' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::LogicalFormulation' opposite = ''/>
      <Reference name = 'projectionPosition' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::PositiveInteger' opposite = ''/>
      <Reference name = 'rangedoverConcept' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Concept' opposite = ''/>
      <Attribute name = 'isUnitary' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'PositiveInteger' isAbstract = 'false' supertypes = 'sbvr::NonnegativeInteger'/>
    <Class name = 'NonnegativeInteger' isAbstract = 'false' supertypes = 'sbvr::Integer'/>
    <Class name = 'Integer' isAbstract = 'false' supertypes = 'sbvr::Number'>
      <Attribute name = 'value' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::integer'/>
    </Class>
    <Class name = 'Number' isAbstract = 'false' supertypes = 'sbvr::Quantity'/>
    <Class name = 'Quantity' isAbstract = 'false' supertypes = 'sbvr::NounConcept'/>
    <Class name = 'NounConcept' isAbstract = 'false' supertypes = 'sbvr::Concept'/>
    <Class name = 'Concept' isAbstract = 'false' supertypes = 'sbvr::Meaning'>
      <Reference name = 'attributiveNamespace' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::AttributiveNamespace' opposite = ''/>
      <Reference name = 'definition' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Definition' opposite = ''/>
      <Reference name = 'moreGeneralConcept' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Concept' opposite = ''/>
      <Reference name = 'category' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Concept' opposite = ''/>
      <Reference name = 'essentialCharacteristic' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Characteristic' opposite = ''/>
      <Reference name = 'instance' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Thing' opposite = ''/>
      <Reference name = 'referenceScheme' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::ReferenceScheme' opposite = ''/>
      <Reference name = 'impliedCharacteristic' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Characteristic' opposite = ''/>
      <Reference name = 'necessaryCharacteristic' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Characteristic' opposite = ''/>
      <Reference name = 'designation' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Designation' opposite = ''/>
      <Reference name = 'extension' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Set' opposite = ''/>
    </Class>
    <Class name = 'AttributiveNamespace' isAbstract = 'false' supertypes = 'sbvr::Namespace'/>
    <Class name = 'Namespace' isAbstract = 'false' supertypes = 'sbvr::Thing'>
      <Reference name = 'uri' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Uri' opposite = ''/>
    </Class>
    <Class name = 'Uri' isAbstract = 'false' supertypes = 'sbvr::Text'/>
    <Class name = 'Text' isAbstract = 'false' supertypes = 'sbvr::Expression'>
      <Attribute name = 'value' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'Characteristic' isAbstract = 'false' supertypes = 'sbvr::FactType'/>
    <Class name = 'FactType' isAbstract = 'false' supertypes = 'sbvr::Concept'>
      <Reference name = 'factTypeForm' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::FactTypeForm' opposite = ''/>
      <Reference name = 'role' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::FactTypeRole' opposite = ''/>
    </Class>
    <Class name = 'FactTypeForm' isAbstract = 'false' supertypes = 'sbvr::Representation'>
      <Reference name = 'placeholder' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Placeholder' opposite = ''/>
    </Class>
    <Class name = 'Placeholder' isAbstract = 'false' supertypes = 'sbvr::Designation'>
      <Reference name = 'startingCharacterPosition' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::PositiveInteger' opposite = ''/>
    </Class>
    <Class name = 'FactTypeRole' isAbstract = 'false' supertypes = 'sbvr::Role'>
      <Reference name = 'roleBinding' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::RoleBinding' opposite = ''/>
    </Class>
    <Class name = 'Role' isAbstract = 'false' supertypes = 'sbvr::NounConcept'/>
    <Class name = 'RoleBinding' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'ReferenceScheme' isAbstract = 'false' supertypes = 'sbvr::Thing'>
      <Reference name = 'simplyUsedRole' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::FactTypeRole' opposite = ''/>
      <Reference name = 'identifyingCharacteristic' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Characteristic' opposite = ''/>
      <Reference name = 'extensionallyUsedRole' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::FactTypeRole' opposite = ''/>
    </Class>
    <Class name = 'Set' isAbstract = 'false' supertypes = 'sbvr::Thing'>
      <Reference name = 'cardinality' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::NonnegativeInteger' opposite = ''/>
      <Reference name = 'element' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Thing' opposite = ''/>
    </Class>
    <Class name = 'AuxiliaryVariable' isAbstract = 'false' supertypes = 'sbvr::Variable'/>
    <Class name = 'AnswerNominalization' isAbstract = 'false' supertypes = 'sbvr::ProjectingFormulation'/>
    <Class name = 'AssociativeFactType' isAbstract = 'false' supertypes = 'sbvr::FactType'/>
    <Class name = 'AssortmentFactType' isAbstract = 'false' supertypes = 'sbvr::FactType'/>
    <Class name = 'AtleastnQuantification' isAbstract = 'false' supertypes = 'sbvr::Quantification'>
      <Reference name = 'minimumCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'Quantification' isAbstract = 'false' supertypes = 'sbvr::LogicalFormulation'>
      <Reference name = 'scopeFormulation' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'AtmostnQuantification' isAbstract = 'false' supertypes = 'sbvr::Quantification'>
      <Reference name = 'maximumCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'AtmostoneQuantification' isAbstract = 'false' supertypes = 'sbvr::AtmostnQuantification'/>
    <Class name = 'AtomicFormulation' isAbstract = 'false' supertypes = 'sbvr::LogicalFormulation'>
      <Reference name = 'roleBinding' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::RoleBinding' opposite = ''/>
    </Class>
    <Class name = 'BagProjection' isAbstract = 'false' supertypes = 'sbvr::Projection'/>
    <Class name = 'BinaryFactType' isAbstract = 'false' supertypes = 'sbvr::FactType'/>
    <Class name = 'BinaryLogicalOperation' isAbstract = 'false' supertypes = 'sbvr::LogicalOperation'>
      <Reference name = 'logicalOperand2' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::LogicalFormulation' opposite = ''/>
      <Reference name = 'logicalOperand1' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'LogicalOperation' isAbstract = 'false' supertypes = 'sbvr::LogicalFormulation'>
      <Reference name = 'logicalOperand' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'BodyOfSharedConcepts' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'BodyOfSharedGuidance' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'BodyOfSharedMeanings' isAbstract = 'false' supertypes = 'sbvr::Set'>
      <Reference name = 'elementaryFactType' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::FactType' opposite = ''/>
    </Class>
    <Class name = 'BusinessPolicy' isAbstract = 'false' supertypes = 'sbvr::ElementOfGovernance'/>
    <Class name = 'ElementOfGovernance' isAbstract = 'false' supertypes = 'sbvr::ElementOfGuidance'>
      <Attribute name = 'isDirectlyEnforceable' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'BusinessPolicyStatement' isAbstract = 'false' supertypes = 'sbvr::GuidanceStatement'/>
    <Class name = 'BusinessRule' isAbstract = 'false' supertypes = 'sbvr::ElementOfGuidance, sbvr::Rule'/>
    <Class name = 'Rule' isAbstract = 'false' supertypes = 'sbvr::Proposition'/>
    <Class name = 'BusinessVocabulary' isAbstract = 'false' supertypes = 'sbvr::Vocabulary'/>
    <Class name = 'Vocabulary' isAbstract = 'false' supertypes = 'sbvr::Set'/>
    <Class name = 'CategorizationFactType' isAbstract = 'false' supertypes = 'sbvr::SpecializationFactType'/>
    <Class name = 'SpecializationFactType' isAbstract = 'false' supertypes = 'sbvr::FactType'/>
    <Class name = 'CategorizationScheme' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'CategorizationType' isAbstract = 'false' supertypes = 'sbvr::Concept'/>
    <Class name = 'CharacteristicType' isAbstract = 'false' supertypes = 'sbvr::ConceptType'/>
    <Class name = 'ConceptType' isAbstract = 'false' supertypes = 'sbvr::ObjectType'/>
    <Class name = 'ObjectType' isAbstract = 'false' supertypes = 'sbvr::Concept'>
      <Reference name = 'categorizationScheme' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::CategorizationScheme' opposite = ''/>
      <Reference name = 'categorizationType' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::CategorizationType' opposite = ''/>
    </Class>
    <Class name = 'ClosedLogicalFormulation' isAbstract = 'false' supertypes = 'sbvr::ClosedSemanticFormulation, sbvr::LogicalFormulation'/>
    <Class name = 'ClosedSemanticFormulation' isAbstract = 'false' supertypes = 'sbvr::SemanticFormulation'/>
    <Class name = 'ClosedProjection' isAbstract = 'false' supertypes = 'sbvr::Projection'/>
    <Class name = 'CommunicationContent' isAbstract = 'false' supertypes = 'sbvr::Representation'/>
    <Class name = 'Community' isAbstract = 'false' supertypes = 'sbvr::Thing'>
      <Reference name = 'uri' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Uri' opposite = ''/>
      <Reference name = 'subcommunity' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Community' opposite = ''/>
    </Class>
    <Class name = 'ConceptOfThingAsComposite' isAbstract = 'false' supertypes = 'sbvr::Concept'/>
    <Class name = 'ConceptOfThingAsContinuant' isAbstract = 'false' supertypes = 'sbvr::Concept'/>
    <Class name = 'ConceptOfThingAsDeveloped' isAbstract = 'false' supertypes = 'sbvr::Concept'/>
    <Class name = 'ConceptOfThingAsOccurrent' isAbstract = 'false' supertypes = 'sbvr::Concept'/>
    <Class name = 'ConceptOfThingAsPrimitive' isAbstract = 'false' supertypes = 'sbvr::Concept'/>
    <Class name = 'ConceptOfThingAsUnitary' isAbstract = 'false' supertypes = 'sbvr::Concept'/>
    <Class name = 'ConceptOfThingExistingDependently' isAbstract = 'false' supertypes = 'sbvr::Concept'/>
    <Class name = 'ConceptOfThingExistingIndependently' isAbstract = 'false' supertypes = 'sbvr::Concept'/>
    <Class name = 'ConceptualSchema' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'Conjunction' isAbstract = 'false' supertypes = 'sbvr::BinaryLogicalOperation'/>
    <Class name = 'ContextOfThing' isAbstract = 'false' supertypes = 'sbvr::Segmentation'/>
    <Class name = 'Segmentation' isAbstract = 'false' supertypes = 'sbvr::CategorizationScheme'/>
    <Class name = 'ContextualizationFactType' isAbstract = 'false' supertypes = 'sbvr::SpecializationFactType'/>
    <Class name = 'ContextualizedConcept' isAbstract = 'false' supertypes = 'sbvr::NounConcept'/>
    <Class name = 'ContingencyStatement' isAbstract = 'false' supertypes = 'sbvr::StatementOfAdviceOfPossibility'/>
    <Class name = 'StatementOfAdviceOfPossibility' isAbstract = 'false' supertypes = 'sbvr::AdviceStatement'/>
    <Class name = 'DefiniteDescription' isAbstract = 'false' supertypes = 'sbvr::IntensionalDefinition'/>
    <Class name = 'IntensionalDefinition' isAbstract = 'false' supertypes = 'sbvr::Definition'/>
    <Class name = 'DerivableConcept' isAbstract = 'false' supertypes = 'sbvr::Concept'/>
    <Class name = 'Description' isAbstract = 'false' supertypes = 'sbvr::Representation'/>
    <Class name = 'DescriptiveExample' isAbstract = 'false' supertypes = 'sbvr::Representation'/>
    <Class name = 'Disjunction' isAbstract = 'false' supertypes = 'sbvr::BinaryLogicalOperation'/>
    <Class name = 'Equivalence' isAbstract = 'false' supertypes = 'sbvr::BinaryLogicalOperation'/>
    <Class name = 'ExactlynQuantification' isAbstract = 'false' supertypes = 'sbvr::Quantification'>
      <Reference name = 'cardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'ExactlyoneQuantification' isAbstract = 'false' supertypes = 'sbvr::ExactlynQuantification'/>
    <Class name = 'ExclusiveDisjunction' isAbstract = 'false' supertypes = 'sbvr::BinaryLogicalOperation'/>
    <Class name = 'ExistentialQuantification' isAbstract = 'false' supertypes = 'sbvr::AtleastnQuantification'/>
    <Class name = 'ExplicitnessOfRepresentation' isAbstract = 'false' supertypes = 'sbvr::CategorizationScheme'/>
    <Class name = 'ExtensionalDefinition' isAbstract = 'false' supertypes = 'sbvr::Definition'/>
    <Class name = 'Facet' isAbstract = 'false' supertypes = 'sbvr::ContextualizedConcept'/>
    <Class name = 'Fact' isAbstract = 'false' supertypes = 'sbvr::Proposition'/>
    <Class name = 'FactModel' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'FactSymbol' isAbstract = 'false' supertypes = 'sbvr::Designation'/>
    <Class name = 'FactTypeHasFactInFactModel' isAbstract = 'false' supertypes = ''>
      <Reference name = 'factType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::FactType' opposite = ''/>
      <Reference name = 'fact' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Fact' opposite = ''/>
      <Reference name = 'factModel' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::FactModel' opposite = ''/>
    </Class>
    <Class name = 'FactTypeNominalization' isAbstract = 'false' supertypes = 'sbvr::ProjectingFormulation'/>
    <Class name = 'FactTypeRoleDesignation' isAbstract = 'false' supertypes = 'sbvr::Designation'/>
    <Class name = 'FactTypeTemplating' isAbstract = 'false' supertypes = 'sbvr::CategorizationScheme'/>
    <Class name = 'FormalRepresentation' isAbstract = 'false' supertypes = 'sbvr::Representation'/>
    <Class name = 'FundamentalConcept' isAbstract = 'false' supertypes = 'sbvr::ObjectType'/>
    <Class name = 'Icon' isAbstract = 'false' supertypes = 'sbvr::NonverbalDesignation'/>
    <Class name = 'NonverbalDesignation' isAbstract = 'false' supertypes = 'sbvr::Designation'/>
    <Class name = 'Implication' isAbstract = 'false' supertypes = 'sbvr::BinaryLogicalOperation'>
      <Reference name = 'consequent' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::LogicalFormulation' opposite = ''/>
      <Reference name = 'antecedent' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'ImpossibilityStatement' isAbstract = 'false' supertypes = 'sbvr::StructuralRuleStatement'/>
    <Class name = 'StructuralRuleStatement' isAbstract = 'false' supertypes = 'sbvr::RuleStatement'/>
    <Class name = 'RuleStatement' isAbstract = 'false' supertypes = 'sbvr::GuidanceStatement'/>
    <Class name = 'IndividualConcept' isAbstract = 'false' supertypes = 'sbvr::NounConcept, sbvr::BindableTarget'/>
    <Class name = 'InformalRepresentation' isAbstract = 'false' supertypes = 'sbvr::Representation'/>
    <Class name = 'InstantiationFormulation' isAbstract = 'false' supertypes = 'sbvr::LogicalFormulation'/>
    <Class name = 'IsfacetofFactType' isAbstract = 'false' supertypes = 'sbvr::ContextualizationFactType'/>
    <Class name = 'IspropertyofFactType' isAbstract = 'false' supertypes = 'sbvr::AssociativeFactType'/>
    <Class name = 'IsroleofFactType' isAbstract = 'false' supertypes = 'sbvr::FactType'/>
    <Class name = 'KindOfGuidanceStatement' isAbstract = 'false' supertypes = 'sbvr::CategorizationScheme'/>
    <Class name = 'Language' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'LevelOfEnforcement' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'LogicalFormulationKind' isAbstract = 'false' supertypes = 'sbvr::ObjectType'/>
    <Class name = 'LogicalNegation' isAbstract = 'false' supertypes = 'sbvr::LogicalOperation'/>
    <Class name = 'ModalFormulation' isAbstract = 'false' supertypes = 'sbvr::LogicalFormulation'/>
    <Class name = 'NandFormulation' isAbstract = 'false' supertypes = 'sbvr::BinaryLogicalOperation'/>
    <Class name = 'NecessityFormulation' isAbstract = 'false' supertypes = 'sbvr::ModalFormulation'/>
    <Class name = 'NecessityStatement' isAbstract = 'false' supertypes = 'sbvr::StructuralRuleStatement'/>
    <Class name = 'NonnecessityStatement' isAbstract = 'false' supertypes = 'sbvr::StatementOfAdviceOfPossibility'/>
    <Class name = 'NonobligationStatement' isAbstract = 'false' supertypes = 'sbvr::StatementOfAdviceOfPermission'/>
    <Class name = 'StatementOfAdviceOfPermission' isAbstract = 'false' supertypes = 'sbvr::AdviceStatement'/>
    <Class name = 'NorFormulation' isAbstract = 'false' supertypes = 'sbvr::BinaryLogicalOperation'/>
    <Class name = 'Note' isAbstract = 'false' supertypes = 'sbvr::Representation'/>
    <Class name = 'NounConceptNominalization' isAbstract = 'false' supertypes = 'sbvr::ProjectingFormulation'/>
    <Class name = 'NounForm' isAbstract = 'false' supertypes = 'sbvr::FactTypeForm'/>
    <Class name = 'NumericRangeQuantification' isAbstract = 'false' supertypes = 'sbvr::Quantification'>
      <Reference name = 'maximumCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::NonnegativeInteger' opposite = ''/>
      <Reference name = 'minimumCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'Objectification' isAbstract = 'false' supertypes = 'sbvr::LogicalFormulation'/>
    <Class name = 'ObligationFormulation' isAbstract = 'false' supertypes = 'sbvr::ModalFormulation'/>
    <Class name = 'ObligationStatement' isAbstract = 'false' supertypes = 'sbvr::OperativeBusinessRuleStatement'/>
    <Class name = 'OperativeBusinessRuleStatement' isAbstract = 'false' supertypes = 'sbvr::RuleStatement'/>
    <Class name = 'OperativeBusinessRule' isAbstract = 'false' supertypes = 'sbvr::ElementOfGovernance, sbvr::BusinessRule'>
      <Reference name = 'levelOfEnforcement' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::LevelOfEnforcement' opposite = ''/>
    </Class>
    <Class name = 'OptionalityStatement' isAbstract = 'false' supertypes = 'sbvr::StatementOfAdviceOfPermission'/>
    <Class name = 'OwnedDefinition' isAbstract = 'false' supertypes = 'sbvr::Definition'/>
    <Class name = 'PartitiveFactType' isAbstract = 'false' supertypes = 'sbvr::BinaryFactType'/>
    <Class name = 'PermissibilityFormulation' isAbstract = 'false' supertypes = 'sbvr::ModalFormulation'/>
    <Class name = 'PermissionStatement' isAbstract = 'false' supertypes = 'sbvr::StatementOfAdviceOfPermission'/>
    <Class name = 'PossibilityFormulation' isAbstract = 'false' supertypes = 'sbvr::ModalFormulation'/>
    <Class name = 'PossibilityStatement' isAbstract = 'false' supertypes = 'sbvr::StatementOfAdviceOfPossibility'/>
    <Class name = 'PreferredDesignation' isAbstract = 'false' supertypes = 'sbvr::Designation'/>
    <Class name = 'ProhibitedDesignation' isAbstract = 'false' supertypes = 'sbvr::Designation'/>
    <Class name = 'ProhibitionStatement' isAbstract = 'false' supertypes = 'sbvr::OperativeBusinessRuleStatement'/>
    <Class name = 'PropositionNominalization' isAbstract = 'false' supertypes = 'sbvr::LogicalFormulation'/>
    <Class name = 'Question' isAbstract = 'false' supertypes = 'sbvr::Meaning'/>
    <Class name = 'QuestionNominalization' isAbstract = 'false' supertypes = 'sbvr::ProjectingFormulation'/>
    <Class name = 'RealworldNumericalCorrespondence' isAbstract = 'false' supertypes = 'sbvr::CategorizationScheme'/>
    <Class name = 'Reference' isAbstract = 'false' supertypes = 'sbvr::Representation'/>
    <Class name = 'RepresentationFormality' isAbstract = 'false' supertypes = 'sbvr::Segmentation'/>
    <Class name = 'Res' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'RestrictedPermissionStatement' isAbstract = 'false' supertypes = 'sbvr::OperativeBusinessRuleStatement'/>
    <Class name = 'RestrictedPossibilityStatement' isAbstract = 'false' supertypes = 'sbvr::StructuralRuleStatement'/>
    <Class name = 'Rulebook' isAbstract = 'false' supertypes = 'sbvr::Set'/>
    <Class name = 'SemanticCommunity' isAbstract = 'false' supertypes = 'sbvr::Community'>
      <Reference name = 'speechCommunity' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::SpeechCommunity' opposite = ''/>
    </Class>
    <Class name = 'SpeechCommunity' isAbstract = 'false' supertypes = 'sbvr::Community'/>
    <Class name = 'SententialForm' isAbstract = 'false' supertypes = 'sbvr::FactTypeForm'/>
    <Class name = 'SetProjection' isAbstract = 'false' supertypes = 'sbvr::Projection'/>
    <Class name = 'Situation' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'SituationalRole' isAbstract = 'false' supertypes = 'sbvr::ObjectType, sbvr::Role'/>
    <Class name = 'SpeechCommunityAdoptsAdoptedDefinitionCitingReference' isAbstract = 'false' supertypes = ''>
      <Reference name = 'speechCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::SpeechCommunity' opposite = ''/>
      <Reference name = 'adoptedDefinition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::AdoptedDefinition' opposite = ''/>
      <Reference name = 'reference' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Reference' opposite = ''/>
    </Class>
    <Class name = 'StateOfAffairsInvolvesThingInRole' isAbstract = 'false' supertypes = ''>
      <Reference name = 'stateOfAffairs' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::StateOfAffairs' opposite = ''/>
      <Reference name = 'thing' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Thing' opposite = ''/>
      <Reference name = 'role' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::Role' opposite = ''/>
    </Class>
    <Class name = 'StructuralBusinessRule' isAbstract = 'false' supertypes = 'sbvr::BusinessRule, sbvr::StructuralRule'/>
    <Class name = 'StructuralRule' isAbstract = 'false' supertypes = 'sbvr::Rule'/>
    <Class name = 'SubjectField' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'Term' isAbstract = 'false' supertypes = 'sbvr::Designation'/>
    <Class name = 'TerminologicalDictionary' isAbstract = 'false' supertypes = 'sbvr::Thing'>
      <Reference name = 'uri' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'sbvr::Uri' opposite = ''/>
    </Class>
    <Class name = 'ThingInContext' isAbstract = 'false' supertypes = 'sbvr::Segmentation'/>
    <Class name = 'UniversalQuantification' isAbstract = 'false' supertypes = 'sbvr::Quantification'/>
    <Class name = 'Viewpoint' isAbstract = 'false' supertypes = 'sbvr::Thing'/>
    <Class name = 'VocabularyNamespace' isAbstract = 'false' supertypes = 'sbvr::Namespace'/>
    <Class name = 'WhetherornotFormulation' isAbstract = 'false' supertypes = 'sbvr::BinaryLogicalOperation'>
      <Reference name = 'inconsequent' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::LogicalFormulation' opposite = ''/>
      <Reference name = 'consequent' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'sbvr::LogicalFormulation' opposite = ''/>
    </Class>
  </Package>
  <Package name = 'PrimitiveTypes'>
    <DataType name = 'Boolean'/>
    <DataType name = 'integer'/>
    <DataType name = 'String'/>
    <DataType name = 'Double'/>
  </Package>
</Metamodel>
