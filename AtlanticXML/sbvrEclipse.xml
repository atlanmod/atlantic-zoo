<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<Metamodel>
  <Package name = 'SBVR'>
    <Class name = 'Actuality' isAbstract = 'false' supertypes = 'SBVR::StateOfAffairs'/>
    <Class name = 'StateOfAffairs' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'Thing' isAbstract = 'false' supertypes = ''>
      <Reference name = 'name' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Name' opposite = ''/>
    </Class>
    <Class name = 'Name' isAbstract = 'false' supertypes = 'SBVR::Designation'/>
    <Class name = 'Designation' isAbstract = 'false' supertypes = 'SBVR::Representation'>
      <Attribute name = 'implicitlyIsUnderstood' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Reference name = 'signifier' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Expression' opposite = ''/>
    </Class>
    <Class name = 'Representation' isAbstract = 'false' supertypes = 'SBVR::Actuality'>
      <Reference name = 'meaning' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Meaning' opposite = ''/>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Expression' opposite = ''/>
    </Class>
    <Class name = 'Meaning' isAbstract = 'false' supertypes = 'SBVR::Thing'>
      <Reference name = 'representation' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Representation' opposite = ''/>
    </Class>
    <Class name = 'Expression' isAbstract = 'false' supertypes = 'SBVR::BindableTarget'/>
    <Class name = 'BindableTarget' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'AdoptedDefinition' isAbstract = 'false' supertypes = 'SBVR::Definition'/>
    <Class name = 'Definition' isAbstract = 'false' supertypes = 'SBVR::Representation'/>
    <Class name = 'Advice' isAbstract = 'false' supertypes = 'SBVR::ElementOfGuidance'/>
    <Class name = 'ElementOfGuidance' isAbstract = 'false' supertypes = 'SBVR::Proposition'>
      <Attribute name = 'isPracticable' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'Proposition' isAbstract = 'false' supertypes = 'SBVR::Meaning'>
      <Attribute name = 'isFalse' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isTrue' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Reference name = 'statement' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Statement' opposite = ''/>
      <Attribute name = 'isPossiblyTrue' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isObligatedToBeTrue' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isPermittedToBeTrue' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isNecessarilyTrue' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'Statement' isAbstract = 'false' supertypes = 'SBVR::Representation'/>
    <Class name = 'AdviceOfContingency' isAbstract = 'false' supertypes = 'SBVR::AdviceOfPossibility'/>
    <Class name = 'AdviceOfPossibility' isAbstract = 'false' supertypes = 'SBVR::Advice'/>
    <Class name = 'AdviceOfOptionality' isAbstract = 'false' supertypes = 'SBVR::AdviceOfPermission'/>
    <Class name = 'AdviceOfPermission' isAbstract = 'false' supertypes = 'SBVR::Advice'/>
    <Class name = 'AdviceStatement' isAbstract = 'false' supertypes = 'SBVR::GuidanceStatement'/>
    <Class name = 'GuidanceStatement' isAbstract = 'false' supertypes = 'SBVR::Statement'/>
    <Class name = 'AggregationFormulation' isAbstract = 'false' supertypes = 'SBVR::ProjectingFormulation'/>
    <Class name = 'ProjectingFormulation' isAbstract = 'false' supertypes = 'SBVR::LogicalFormulation'>
      <Reference name = 'projection' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Projection' opposite = ''/>
    </Class>
    <Class name = 'LogicalFormulation' isAbstract = 'false' supertypes = 'SBVR::SemanticFormulation'/>
    <Class name = 'SemanticFormulation' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'Projection' isAbstract = 'false' supertypes = 'SBVR::SemanticFormulation'>
      <Reference name = 'constrainingFormulation' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
      <Reference name = 'projectionVariable' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Variable' opposite = ''/>
      <Reference name = 'auxiliaryVariable' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::AuxiliaryVariable' opposite = ''/>
    </Class>
    <Class name = 'Variable' isAbstract = 'false' supertypes = 'SBVR::BindableTarget'>
      <Reference name = 'restrictingFormulation' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
      <Reference name = 'projectionPosition' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::PositiveInteger' opposite = ''/>
      <Reference name = 'rangedoverConcept' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Attribute name = 'isUnitary' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'PositiveInteger' isAbstract = 'false' supertypes = 'SBVR::NonnegativeInteger'/>
    <Class name = 'NonnegativeInteger' isAbstract = 'false' supertypes = 'SBVR::Integer'/>
    <Class name = 'Integer' isAbstract = 'false' supertypes = 'SBVR::Number'>
      <Attribute name = 'value' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::integer'/>
    </Class>
    <Class name = 'Number' isAbstract = 'false' supertypes = 'SBVR::Quantity'/>
    <Class name = 'Quantity' isAbstract = 'false' supertypes = 'SBVR::NounConcept'/>
    <Class name = 'NounConcept' isAbstract = 'false' supertypes = 'SBVR::Concept'/>
    <Class name = 'Concept' isAbstract = 'false' supertypes = 'SBVR::Meaning'>
      <Reference name = 'attributiveNamespace' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::AttributiveNamespace' opposite = ''/>
      <Reference name = 'definition' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Definition' opposite = ''/>
      <Reference name = 'moreGeneralConcept' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'category' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'essentialCharacteristic' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Characteristic' opposite = ''/>
      <Reference name = 'instance' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Thing' opposite = ''/>
      <Reference name = 'referenceScheme' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ReferenceScheme' opposite = ''/>
      <Reference name = 'impliedCharacteristic' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Characteristic' opposite = ''/>
      <Reference name = 'necessaryCharacteristic' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Characteristic' opposite = ''/>
      <Reference name = 'designation' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Designation' opposite = ''/>
      <Reference name = 'extension' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Set' opposite = ''/>
    </Class>
    <Class name = 'AttributiveNamespace' isAbstract = 'false' supertypes = 'SBVR::Namespace'/>
    <Class name = 'Namespace' isAbstract = 'false' supertypes = 'SBVR::Thing'>
      <Reference name = 'uri' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Uri' opposite = ''/>
    </Class>
    <Class name = 'Uri' isAbstract = 'false' supertypes = 'SBVR::Text'/>
    <Class name = 'Text' isAbstract = 'false' supertypes = 'SBVR::Expression'>
      <Attribute name = 'value' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'Characteristic' isAbstract = 'false' supertypes = 'SBVR::FactType'/>
    <Class name = 'FactType' isAbstract = 'false' supertypes = 'SBVR::Concept'>
      <Reference name = 'factTypeForm' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeForm' opposite = ''/>
      <Reference name = 'role' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeRole' opposite = ''/>
    </Class>
    <Class name = 'FactTypeForm' isAbstract = 'false' supertypes = 'SBVR::Representation'>
      <Reference name = 'placeholder' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Placeholder' opposite = ''/>
    </Class>
    <Class name = 'Placeholder' isAbstract = 'false' supertypes = 'SBVR::Designation'>
      <Reference name = 'startingCharacterPosition' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::PositiveInteger' opposite = ''/>
    </Class>
    <Class name = 'FactTypeRole' isAbstract = 'false' supertypes = 'SBVR::Role'>
      <Reference name = 'roleBinding' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::RoleBinding' opposite = ''/>
    </Class>
    <Class name = 'Role' isAbstract = 'false' supertypes = 'SBVR::NounConcept'/>
    <Class name = 'RoleBinding' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'ReferenceScheme' isAbstract = 'false' supertypes = 'SBVR::Thing'>
      <Reference name = 'simplyUsedRole' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeRole' opposite = ''/>
      <Reference name = 'identifyingCharacteristic' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Characteristic' opposite = ''/>
      <Reference name = 'extensionallyUsedRole' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeRole' opposite = ''/>
    </Class>
    <Class name = 'Set' isAbstract = 'false' supertypes = 'SBVR::Thing'>
      <Reference name = 'cardinality' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NonnegativeInteger' opposite = ''/>
      <Reference name = 'element' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Thing' opposite = ''/>
    </Class>
    <Class name = 'AuxiliaryVariable' isAbstract = 'false' supertypes = 'SBVR::Variable'/>
    <Class name = 'AnswerNominalization' isAbstract = 'false' supertypes = 'SBVR::ProjectingFormulation'/>
    <Class name = 'AssociativeFactType' isAbstract = 'false' supertypes = 'SBVR::FactType'/>
    <Class name = 'AssortmentFactType' isAbstract = 'false' supertypes = 'SBVR::FactType'/>
    <Class name = 'AtleastnQuantification' isAbstract = 'false' supertypes = 'SBVR::Quantification'>
      <Reference name = 'minimumCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'Quantification' isAbstract = 'false' supertypes = 'SBVR::LogicalFormulation'>
      <Reference name = 'scopeFormulation' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'AtmostnQuantification' isAbstract = 'false' supertypes = 'SBVR::Quantification'>
      <Reference name = 'maximumCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'AtmostoneQuantification' isAbstract = 'false' supertypes = 'SBVR::AtmostnQuantification'/>
    <Class name = 'AtomicFormulation' isAbstract = 'false' supertypes = 'SBVR::LogicalFormulation'>
      <Reference name = 'roleBinding' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::RoleBinding' opposite = ''/>
    </Class>
    <Class name = 'BagProjection' isAbstract = 'false' supertypes = 'SBVR::Projection'/>
    <Class name = 'BinaryFactType' isAbstract = 'false' supertypes = 'SBVR::FactType'/>
    <Class name = 'BinaryLogicalOperation' isAbstract = 'false' supertypes = 'SBVR::LogicalOperation'>
      <Reference name = 'logicalOperand2' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
      <Reference name = 'logicalOperand1' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'LogicalOperation' isAbstract = 'false' supertypes = 'SBVR::LogicalFormulation'>
      <Reference name = 'logicalOperand' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'BodyOfSharedConcepts' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'BodyOfSharedGuidance' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'BodyOfSharedMeanings' isAbstract = 'false' supertypes = 'SBVR::Set'>
      <Reference name = 'elementaryFactType' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactType' opposite = ''/>
    </Class>
    <Class name = 'BusinessPolicy' isAbstract = 'false' supertypes = 'SBVR::ElementOfGovernance'/>
    <Class name = 'ElementOfGovernance' isAbstract = 'false' supertypes = 'SBVR::ElementOfGuidance'>
      <Attribute name = 'isDirectlyEnforceable' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'BusinessPolicyStatement' isAbstract = 'false' supertypes = 'SBVR::GuidanceStatement'/>
    <Class name = 'BusinessRule' isAbstract = 'false' supertypes = 'SBVR::ElementOfGuidance, SBVR::Rule'/>
    <Class name = 'Rule' isAbstract = 'false' supertypes = 'SBVR::Proposition'/>
    <Class name = 'BusinessVocabulary' isAbstract = 'false' supertypes = 'SBVR::Vocabulary'/>
    <Class name = 'Vocabulary' isAbstract = 'false' supertypes = 'SBVR::Set'/>
    <Class name = 'CategorizationFactType' isAbstract = 'false' supertypes = 'SBVR::SpecializationFactType'/>
    <Class name = 'SpecializationFactType' isAbstract = 'false' supertypes = 'SBVR::FactType'/>
    <Class name = 'CategorizationScheme' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'CategorizationType' isAbstract = 'false' supertypes = 'SBVR::Concept'/>
    <Class name = 'CharacteristicType' isAbstract = 'false' supertypes = 'SBVR::ConceptType'/>
    <Class name = 'ConceptType' isAbstract = 'false' supertypes = 'SBVR::ObjectType'/>
    <Class name = 'ObjectType' isAbstract = 'false' supertypes = 'SBVR::Concept'>
      <Reference name = 'categorizationScheme' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::CategorizationScheme' opposite = ''/>
      <Reference name = 'categorizationType' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::CategorizationType' opposite = ''/>
    </Class>
    <Class name = 'ClosedLogicalFormulation' isAbstract = 'false' supertypes = 'SBVR::ClosedSemanticFormulation, SBVR::LogicalFormulation'/>
    <Class name = 'ClosedSemanticFormulation' isAbstract = 'false' supertypes = 'SBVR::SemanticFormulation'/>
    <Class name = 'ClosedProjection' isAbstract = 'false' supertypes = 'SBVR::Projection'/>
    <Class name = 'CommunicationContent' isAbstract = 'false' supertypes = 'SBVR::Representation'/>
    <Class name = 'Community' isAbstract = 'false' supertypes = 'SBVR::Thing'>
      <Reference name = 'uri' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Uri' opposite = ''/>
      <Reference name = 'subcommunity' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Community' opposite = ''/>
    </Class>
    <Class name = 'ConceptOfThingAsComposite' isAbstract = 'false' supertypes = 'SBVR::Concept'/>
    <Class name = 'ConceptOfThingAsContinuant' isAbstract = 'false' supertypes = 'SBVR::Concept'/>
    <Class name = 'ConceptOfThingAsDeveloped' isAbstract = 'false' supertypes = 'SBVR::Concept'/>
    <Class name = 'ConceptOfThingAsOccurrent' isAbstract = 'false' supertypes = 'SBVR::Concept'/>
    <Class name = 'ConceptOfThingAsPrimitive' isAbstract = 'false' supertypes = 'SBVR::Concept'/>
    <Class name = 'ConceptOfThingAsUnitary' isAbstract = 'false' supertypes = 'SBVR::Concept'/>
    <Class name = 'ConceptOfThingExistingDependently' isAbstract = 'false' supertypes = 'SBVR::Concept'/>
    <Class name = 'ConceptOfThingExistingIndependently' isAbstract = 'false' supertypes = 'SBVR::Concept'/>
    <Class name = 'ConceptualSchema' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'Conjunction' isAbstract = 'false' supertypes = 'SBVR::BinaryLogicalOperation'/>
    <Class name = 'ContextOfThing' isAbstract = 'false' supertypes = 'SBVR::Segmentation'/>
    <Class name = 'Segmentation' isAbstract = 'false' supertypes = 'SBVR::CategorizationScheme'/>
    <Class name = 'ContextualizationFactType' isAbstract = 'false' supertypes = 'SBVR::SpecializationFactType'/>
    <Class name = 'ContextualizedConcept' isAbstract = 'false' supertypes = 'SBVR::NounConcept'/>
    <Class name = 'ContingencyStatement' isAbstract = 'false' supertypes = 'SBVR::StatementOfAdviceOfPossibility'/>
    <Class name = 'StatementOfAdviceOfPossibility' isAbstract = 'false' supertypes = 'SBVR::AdviceStatement'/>
    <Class name = 'DefiniteDescription' isAbstract = 'false' supertypes = 'SBVR::IntensionalDefinition'/>
    <Class name = 'IntensionalDefinition' isAbstract = 'false' supertypes = 'SBVR::Definition'/>
    <Class name = 'DerivableConcept' isAbstract = 'false' supertypes = 'SBVR::Concept'/>
    <Class name = 'Description' isAbstract = 'false' supertypes = 'SBVR::Representation'/>
    <Class name = 'DescriptiveExample' isAbstract = 'false' supertypes = 'SBVR::Representation'/>
    <Class name = 'Disjunction' isAbstract = 'false' supertypes = 'SBVR::BinaryLogicalOperation'/>
    <Class name = 'Equivalence' isAbstract = 'false' supertypes = 'SBVR::BinaryLogicalOperation'/>
    <Class name = 'ExactlynQuantification' isAbstract = 'false' supertypes = 'SBVR::Quantification'>
      <Reference name = 'cardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'ExactlyoneQuantification' isAbstract = 'false' supertypes = 'SBVR::ExactlynQuantification'/>
    <Class name = 'ExclusiveDisjunction' isAbstract = 'false' supertypes = 'SBVR::BinaryLogicalOperation'/>
    <Class name = 'ExistentialQuantification' isAbstract = 'false' supertypes = 'SBVR::AtleastnQuantification'/>
    <Class name = 'ExplicitnessOfRepresentation' isAbstract = 'false' supertypes = 'SBVR::CategorizationScheme'/>
    <Class name = 'ExtensionalDefinition' isAbstract = 'false' supertypes = 'SBVR::Definition'/>
    <Class name = 'Facet' isAbstract = 'false' supertypes = 'SBVR::ContextualizedConcept'/>
    <Class name = 'Fact' isAbstract = 'false' supertypes = 'SBVR::Proposition'/>
    <Class name = 'FactModel' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'FactSymbol' isAbstract = 'false' supertypes = 'SBVR::Designation'/>
    <Class name = 'FactTypeHasFactInFactModel' isAbstract = 'false' supertypes = ''>
      <Reference name = 'factType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactType' opposite = ''/>
      <Reference name = 'fact' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Fact' opposite = ''/>
      <Reference name = 'factModel' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactModel' opposite = ''/>
    </Class>
    <Class name = 'FactTypeNominalization' isAbstract = 'false' supertypes = 'SBVR::ProjectingFormulation'/>
    <Class name = 'FactTypeRoleDesignation' isAbstract = 'false' supertypes = 'SBVR::Designation'/>
    <Class name = 'FactTypeTemplating' isAbstract = 'false' supertypes = 'SBVR::CategorizationScheme'/>
    <Class name = 'FormalRepresentation' isAbstract = 'false' supertypes = 'SBVR::Representation'/>
    <Class name = 'FundamentalConcept' isAbstract = 'false' supertypes = 'SBVR::ObjectType'/>
    <Class name = 'Icon' isAbstract = 'false' supertypes = 'SBVR::NonverbalDesignation'/>
    <Class name = 'NonverbalDesignation' isAbstract = 'false' supertypes = 'SBVR::Designation'/>
    <Class name = 'Implication' isAbstract = 'false' supertypes = 'SBVR::BinaryLogicalOperation'>
      <Reference name = 'consequent' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
      <Reference name = 'antecedent' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'ImpossibilityStatement' isAbstract = 'false' supertypes = 'SBVR::StructuralRuleStatement'/>
    <Class name = 'StructuralRuleStatement' isAbstract = 'false' supertypes = 'SBVR::RuleStatement'/>
    <Class name = 'RuleStatement' isAbstract = 'false' supertypes = 'SBVR::GuidanceStatement'/>
    <Class name = 'IndividualConcept' isAbstract = 'false' supertypes = 'SBVR::NounConcept, SBVR::BindableTarget'/>
    <Class name = 'InformalRepresentation' isAbstract = 'false' supertypes = 'SBVR::Representation'/>
    <Class name = 'InstantiationFormulation' isAbstract = 'false' supertypes = 'SBVR::LogicalFormulation'/>
    <Class name = 'IsfacetofFactType' isAbstract = 'false' supertypes = 'SBVR::ContextualizationFactType'/>
    <Class name = 'IspropertyofFactType' isAbstract = 'false' supertypes = 'SBVR::AssociativeFactType'/>
    <Class name = 'IsroleofFactType' isAbstract = 'false' supertypes = 'SBVR::FactType'/>
    <Class name = 'KindOfGuidanceStatement' isAbstract = 'false' supertypes = 'SBVR::CategorizationScheme'/>
    <Class name = 'Language' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'LevelOfEnforcement' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'LogicalFormulationKind' isAbstract = 'false' supertypes = 'SBVR::ObjectType'/>
    <Class name = 'LogicalNegation' isAbstract = 'false' supertypes = 'SBVR::LogicalOperation'/>
    <Class name = 'ModalFormulation' isAbstract = 'false' supertypes = 'SBVR::LogicalFormulation'/>
    <Class name = 'NandFormulation' isAbstract = 'false' supertypes = 'SBVR::BinaryLogicalOperation'/>
    <Class name = 'NecessityFormulation' isAbstract = 'false' supertypes = 'SBVR::ModalFormulation'/>
    <Class name = 'NecessityStatement' isAbstract = 'false' supertypes = 'SBVR::StructuralRuleStatement'/>
    <Class name = 'NonnecessityStatement' isAbstract = 'false' supertypes = 'SBVR::StatementOfAdviceOfPossibility'/>
    <Class name = 'NonobligationStatement' isAbstract = 'false' supertypes = 'SBVR::StatementOfAdviceOfPermission'/>
    <Class name = 'StatementOfAdviceOfPermission' isAbstract = 'false' supertypes = 'SBVR::AdviceStatement'/>
    <Class name = 'NorFormulation' isAbstract = 'false' supertypes = 'SBVR::BinaryLogicalOperation'/>
    <Class name = 'Note' isAbstract = 'false' supertypes = 'SBVR::Representation'/>
    <Class name = 'NounConceptNominalization' isAbstract = 'false' supertypes = 'SBVR::ProjectingFormulation'/>
    <Class name = 'NounForm' isAbstract = 'false' supertypes = 'SBVR::FactTypeForm'/>
    <Class name = 'NumericRangeQuantification' isAbstract = 'false' supertypes = 'SBVR::Quantification'>
      <Reference name = 'maximumCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NonnegativeInteger' opposite = ''/>
      <Reference name = 'minimumCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'Objectification' isAbstract = 'false' supertypes = 'SBVR::LogicalFormulation'/>
    <Class name = 'ObligationFormulation' isAbstract = 'false' supertypes = 'SBVR::ModalFormulation'/>
    <Class name = 'ObligationStatement' isAbstract = 'false' supertypes = 'SBVR::OperativeBusinessRuleStatement'/>
    <Class name = 'OperativeBusinessRuleStatement' isAbstract = 'false' supertypes = 'SBVR::RuleStatement'/>
    <Class name = 'OperativeBusinessRule' isAbstract = 'false' supertypes = 'SBVR::ElementOfGovernance, SBVR::BusinessRule'>
      <Reference name = 'levelOfEnforcement' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LevelOfEnforcement' opposite = ''/>
    </Class>
    <Class name = 'OptionalityStatement' isAbstract = 'false' supertypes = 'SBVR::StatementOfAdviceOfPermission'/>
    <Class name = 'OwnedDefinition' isAbstract = 'false' supertypes = 'SBVR::Definition'/>
    <Class name = 'PartitiveFactType' isAbstract = 'false' supertypes = 'SBVR::BinaryFactType'/>
    <Class name = 'PermissibilityFormulation' isAbstract = 'false' supertypes = 'SBVR::ModalFormulation'/>
    <Class name = 'PermissionStatement' isAbstract = 'false' supertypes = 'SBVR::StatementOfAdviceOfPermission'/>
    <Class name = 'PossibilityFormulation' isAbstract = 'false' supertypes = 'SBVR::ModalFormulation'/>
    <Class name = 'PossibilityStatement' isAbstract = 'false' supertypes = 'SBVR::StatementOfAdviceOfPossibility'/>
    <Class name = 'PreferredDesignation' isAbstract = 'false' supertypes = 'SBVR::Designation'/>
    <Class name = 'ProhibitedDesignation' isAbstract = 'false' supertypes = 'SBVR::Designation'/>
    <Class name = 'ProhibitionStatement' isAbstract = 'false' supertypes = 'SBVR::OperativeBusinessRuleStatement'/>
    <Class name = 'PropositionNominalization' isAbstract = 'false' supertypes = 'SBVR::LogicalFormulation'/>
    <Class name = 'Question' isAbstract = 'false' supertypes = 'SBVR::Meaning'/>
    <Class name = 'QuestionNominalization' isAbstract = 'false' supertypes = 'SBVR::ProjectingFormulation'/>
    <Class name = 'RealworldNumericalCorrespondence' isAbstract = 'false' supertypes = 'SBVR::CategorizationScheme'/>
    <Class name = 'Reference' isAbstract = 'false' supertypes = 'SBVR::Representation'/>
    <Class name = 'RepresentationFormality' isAbstract = 'false' supertypes = 'SBVR::Segmentation'/>
    <Class name = 'Res' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'RestrictedPermissionStatement' isAbstract = 'false' supertypes = 'SBVR::OperativeBusinessRuleStatement'/>
    <Class name = 'RestrictedPossibilityStatement' isAbstract = 'false' supertypes = 'SBVR::StructuralRuleStatement'/>
    <Class name = 'Rulebook' isAbstract = 'false' supertypes = 'SBVR::Set'/>
    <Class name = 'SemanticCommunity' isAbstract = 'false' supertypes = 'SBVR::Community'>
      <Reference name = 'speechCommunity' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SpeechCommunity' opposite = ''/>
    </Class>
    <Class name = 'SpeechCommunity' isAbstract = 'false' supertypes = 'SBVR::Community'/>
    <Class name = 'SententialForm' isAbstract = 'false' supertypes = 'SBVR::FactTypeForm'/>
    <Class name = 'SetProjection' isAbstract = 'false' supertypes = 'SBVR::Projection'/>
    <Class name = 'Situation' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'SituationalRole' isAbstract = 'false' supertypes = 'SBVR::ObjectType, SBVR::Role'/>
    <Class name = 'SpeechCommunityAdoptsAdoptedDefinitionCitingReference' isAbstract = 'false' supertypes = ''>
      <Reference name = 'speechCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SpeechCommunity' opposite = ''/>
      <Reference name = 'adoptedDefinition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::AdoptedDefinition' opposite = ''/>
      <Reference name = 'reference' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Reference' opposite = ''/>
    </Class>
    <Class name = 'StateOfAffairsInvolvesThingInRole' isAbstract = 'false' supertypes = ''>
      <Reference name = 'stateOfAffairs' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::StateOfAffairs' opposite = ''/>
      <Reference name = 'thing' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Thing' opposite = ''/>
      <Reference name = 'role' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Role' opposite = ''/>
    </Class>
    <Class name = 'StructuralBusinessRule' isAbstract = 'false' supertypes = 'SBVR::BusinessRule, SBVR::StructuralRule'/>
    <Class name = 'StructuralRule' isAbstract = 'false' supertypes = 'SBVR::Rule'/>
    <Class name = 'SubjectField' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'Term' isAbstract = 'false' supertypes = 'SBVR::Designation'/>
    <Class name = 'TerminologicalDictionary' isAbstract = 'false' supertypes = 'SBVR::Thing'>
      <Reference name = 'uri' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'SBVR::Uri' opposite = ''/>
    </Class>
    <Class name = 'ThingInContext' isAbstract = 'false' supertypes = 'SBVR::Segmentation'/>
    <Class name = 'UniversalQuantification' isAbstract = 'false' supertypes = 'SBVR::Quantification'/>
    <Class name = 'Viewpoint' isAbstract = 'false' supertypes = 'SBVR::Thing'/>
    <Class name = 'VocabularyNamespace' isAbstract = 'false' supertypes = 'SBVR::Namespace'/>
    <Class name = 'WhetherornotFormulation' isAbstract = 'false' supertypes = 'SBVR::BinaryLogicalOperation'>
      <Reference name = 'inconsequent' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
      <Reference name = 'consequent' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'AtleastnQuantificationHasMinimumCardinality' isAbstract = 'false' supertypes = ''>
      <Reference name = 'atleastnQuantification' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::AtleastnQuantification' opposite = ''/>
      <Reference name = 'minimumCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'AtmostnQuantificationHasMaximumCardinality' isAbstract = 'false' supertypes = ''>
      <Reference name = 'atmostnQuantification' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::AtmostnQuantification' opposite = ''/>
      <Reference name = 'maximumCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'AtomicFormulationIsBasedOnFactType' isAbstract = 'false' supertypes = ''>
      <Reference name = 'atomicFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::AtomicFormulation' opposite = ''/>
      <Reference name = 'factType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactType' opposite = ''/>
    </Class>
    <Class name = 'AttributiveNamespaceIsForSubjectConcept' isAbstract = 'false' supertypes = ''>
      <Reference name = 'attributiveNamespace' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::AttributiveNamespace' opposite = ''/>
      <Reference name = 'subjectConcept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
    </Class>
    <Class name = 'AttributiveNamespaceIsWithinVocabularyNamespace' isAbstract = 'false' supertypes = ''>
      <Reference name = 'attributiveNamespace' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::AttributiveNamespace' opposite = ''/>
      <Reference name = 'vocabularyNamespace' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::VocabularyNamespace' opposite = ''/>
    </Class>
    <Class name = 'BinaryLogicalOperationHasLogicalOperand1' isAbstract = 'false' supertypes = ''>
      <Reference name = 'binaryLogicalOperation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BinaryLogicalOperation' opposite = ''/>
      <Reference name = 'logicalOperand1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'BinaryLogicalOperationHasLogicalOperand2' isAbstract = 'false' supertypes = ''>
      <Reference name = 'binaryLogicalOperation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BinaryLogicalOperation' opposite = ''/>
      <Reference name = 'logicalOperand2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'BodyOfSharedMeaningsIncludesBodyOfSharedConcepts' isAbstract = 'false' supertypes = ''>
      <Reference name = 'bodyOfSharedMeanings' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BodyOfSharedMeanings' opposite = ''/>
      <Reference name = 'bodyOfSharedConcepts' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BodyOfSharedConcepts' opposite = ''/>
    </Class>
    <Class name = 'BodyOfSharedMeaningsIncludesBodyOfSharedGuidance' isAbstract = 'false' supertypes = ''>
      <Reference name = 'bodyOfSharedMeanings' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BodyOfSharedMeanings' opposite = ''/>
      <Reference name = 'bodyOfSharedGuidance' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BodyOfSharedGuidance' opposite = ''/>
    </Class>
    <Class name = 'BodyOfSharedMeaningsUnitesSemanticCommunity' isAbstract = 'false' supertypes = ''>
      <Reference name = 'bodyOfSharedMeanings' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BodyOfSharedMeanings' opposite = ''/>
      <Reference name = 'semanticCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SemanticCommunity' opposite = ''/>
    </Class>
    <Class name = 'BodyOfSharedMeanings1ContainsBodyOfSharedMeanings2' isAbstract = 'false' supertypes = ''>
      <Reference name = 'bodyOfSharedMeanings1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BodyOfSharedMeanings' opposite = ''/>
      <Reference name = 'bodyOfSharedMeanings2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BodyOfSharedMeanings' opposite = ''/>
    </Class>
    <Class name = 'BusinessPolicyIsBasisForAdvice' isAbstract = 'false' supertypes = ''>
      <Reference name = 'businessPolicy' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BusinessPolicy' opposite = ''/>
      <Reference name = 'advice' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Advice' opposite = ''/>
    </Class>
    <Class name = 'BusinessRuleIsDerivedFromBusinessPolicy' isAbstract = 'false' supertypes = ''>
      <Reference name = 'businessRule' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BusinessRule' opposite = ''/>
      <Reference name = 'businessPolicy' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BusinessPolicy' opposite = ''/>
    </Class>
    <Class name = 'CategorizationSchemeContainsCategory' isAbstract = 'false' supertypes = ''>
      <Reference name = 'categorizationScheme' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::CategorizationScheme' opposite = ''/>
      <Reference name = 'category' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
    </Class>
    <Class name = 'CategorizationSchemeIsForGeneralConcept' isAbstract = 'false' supertypes = ''>
      <Reference name = 'categorizationScheme' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::CategorizationScheme' opposite = ''/>
      <Reference name = 'generalConcept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ObjectType' opposite = ''/>
    </Class>
    <Class name = 'CategorizationTypeIsForGeneralConcept' isAbstract = 'false' supertypes = ''>
      <Reference name = 'categorizationType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::CategorizationType' opposite = ''/>
      <Reference name = 'generalConcept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ObjectType' opposite = ''/>
    </Class>
    <Class name = 'ClosedLogicalFormulationFormalizesStatement' isAbstract = 'false' supertypes = ''>
      <Reference name = 'closedLogicalFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ClosedLogicalFormulation' opposite = ''/>
      <Reference name = 'statement' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Statement' opposite = ''/>
    </Class>
    <Class name = 'ClosedLogicalFormulationMeansProposition' isAbstract = 'false' supertypes = ''>
      <Reference name = 'closedLogicalFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ClosedLogicalFormulation' opposite = ''/>
      <Reference name = 'proposition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Proposition' opposite = ''/>
    </Class>
    <Class name = 'ClosedProjectionDefinesFactType' isAbstract = 'false' supertypes = ''>
      <Reference name = 'closedProjection' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ClosedProjection' opposite = ''/>
      <Reference name = 'factType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactType' opposite = ''/>
    </Class>
    <Class name = 'ClosedProjectionDefinesNounConcept' isAbstract = 'false' supertypes = ''>
      <Reference name = 'closedProjection' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ClosedProjection' opposite = ''/>
      <Reference name = 'nounConcept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NounConcept' opposite = ''/>
    </Class>
    <Class name = 'ClosedProjectionFormalizesDefinition' isAbstract = 'false' supertypes = ''>
      <Reference name = 'closedProjection' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ClosedProjection' opposite = ''/>
      <Reference name = 'definition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Definition' opposite = ''/>
    </Class>
    <Class name = 'ClosedProjectionMeansQuestion' isAbstract = 'false' supertypes = ''>
      <Reference name = 'closedProjection' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ClosedProjection' opposite = ''/>
      <Reference name = 'question' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Question' opposite = ''/>
    </Class>
    <Class name = 'ClosedSemanticFormulationFormulatesMeaning' isAbstract = 'false' supertypes = ''>
      <Reference name = 'closedSemanticFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ClosedSemanticFormulation' opposite = ''/>
      <Reference name = 'meaning' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Meaning' opposite = ''/>
    </Class>
    <Class name = 'CommunicationContentIsComposedOfRepresentation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'communicationContent' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::CommunicationContent' opposite = ''/>
      <Reference name = 'representation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Representation' opposite = ''/>
    </Class>
    <Class name = 'CommunityHasSubcommunity' isAbstract = 'false' supertypes = ''>
      <Reference name = 'community' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Community' opposite = ''/>
      <Reference name = 'subcommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Community' opposite = ''/>
    </Class>
    <Class name = 'CommunityHasUri' isAbstract = 'false' supertypes = ''>
      <Reference name = 'community' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Community' opposite = ''/>
      <Reference name = 'uri' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Uri' opposite = ''/>
    </Class>
    <Class name = 'ConceptHasDefinition' isAbstract = 'false' supertypes = ''>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'definition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Definition' opposite = ''/>
    </Class>
    <Class name = 'ConceptHasDesignation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'designation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Designation' opposite = ''/>
    </Class>
    <Class name = 'ConceptHasExtension' isAbstract = 'false' supertypes = ''>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'extension' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Set' opposite = ''/>
    </Class>
    <Class name = 'ConceptHasImpliedCharacteristic' isAbstract = 'false' supertypes = ''>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'impliedCharacteristic' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Characteristic' opposite = ''/>
    </Class>
    <Class name = 'ConceptHasInstance' isAbstract = 'false' supertypes = ''>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'instance' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Thing' opposite = ''/>
    </Class>
    <Class name = 'ConceptHasNecessaryCharacteristic' isAbstract = 'false' supertypes = ''>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'necessaryCharacteristic' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Characteristic' opposite = ''/>
    </Class>
    <Class name = 'ConceptHasSharedUnderstandingBySemanticCommunity' isAbstract = 'false' supertypes = ''>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'semanticCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SemanticCommunity' opposite = ''/>
    </Class>
    <Class name = 'ConceptIncorporatesCharacteristic' isAbstract = 'false' supertypes = ''>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'characteristic' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Characteristic' opposite = ''/>
    </Class>
    <Class name = 'ConceptIsClosedInConceptualSchema' isAbstract = 'false' supertypes = ''>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'conceptualSchema' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ConceptualSchema' opposite = ''/>
    </Class>
    <Class name = 'ConceptIsIncludedInBodyOfSharedConcepts' isAbstract = 'false' supertypes = ''>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'bodyOfSharedConcepts' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BodyOfSharedConcepts' opposite = ''/>
    </Class>
    <Class name = 'Concept1IsCoextensiveWithConcept2' isAbstract = 'false' supertypes = ''>
      <Reference name = 'concept1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'concept2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
    </Class>
    <Class name = 'Concept1SpecializesConcept2' isAbstract = 'false' supertypes = ''>
      <Reference name = 'concept1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
      <Reference name = 'concept2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
    </Class>
    <Class name = 'ConceptualSchemaIncludesConcept' isAbstract = 'false' supertypes = ''>
      <Reference name = 'conceptualSchema' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ConceptualSchema' opposite = ''/>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
    </Class>
    <Class name = 'ConceptualSchemaIncludesFact' isAbstract = 'false' supertypes = ''>
      <Reference name = 'conceptualSchema' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ConceptualSchema' opposite = ''/>
      <Reference name = 'fact' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Fact' opposite = ''/>
    </Class>
    <Class name = 'DefinitionServesAsDesignation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'definition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Definition' opposite = ''/>
      <Reference name = 'designation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Designation' opposite = ''/>
    </Class>
    <Class name = 'DescriptionPortraysMeaning' isAbstract = 'false' supertypes = ''>
      <Reference name = 'description' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Description' opposite = ''/>
      <Reference name = 'meaning' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Meaning' opposite = ''/>
    </Class>
    <Class name = 'DescriptiveExampleIllustratesMeaning' isAbstract = 'false' supertypes = ''>
      <Reference name = 'descriptiveExample' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::DescriptiveExample' opposite = ''/>
      <Reference name = 'meaning' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Meaning' opposite = ''/>
    </Class>
    <Class name = 'DesignationHasSignifier' isAbstract = 'false' supertypes = ''>
      <Reference name = 'designation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Designation' opposite = ''/>
      <Reference name = 'signifier' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Expression' opposite = ''/>
    </Class>
    <Class name = 'DesignationIsInNamespace' isAbstract = 'false' supertypes = ''>
      <Reference name = 'designation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Designation' opposite = ''/>
      <Reference name = 'namespace' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Namespace' opposite = ''/>
    </Class>
    <Class name = 'ElementOfGuidanceAuthorizesStateOfAffairs' isAbstract = 'false' supertypes = ''>
      <Reference name = 'elementOfGuidance' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ElementOfGuidance' opposite = ''/>
      <Reference name = 'stateOfAffairs' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::StateOfAffairs' opposite = ''/>
    </Class>
    <Class name = 'ElementOfGuidanceIsIncludedInBodyOfSharedGuidance' isAbstract = 'false' supertypes = ''>
      <Reference name = 'elementOfGuidance' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ElementOfGuidance' opposite = ''/>
      <Reference name = 'bodyOfSharedGuidance' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BodyOfSharedGuidance' opposite = ''/>
    </Class>
    <Class name = 'ElementOfGuidanceObligatesStateOfAffairs' isAbstract = 'false' supertypes = ''>
      <Reference name = 'elementOfGuidance' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ElementOfGuidance' opposite = ''/>
      <Reference name = 'stateOfAffairs' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::StateOfAffairs' opposite = ''/>
    </Class>
    <Class name = 'ElementOfGuidanceProhibitsStateOfAffairs' isAbstract = 'false' supertypes = ''>
      <Reference name = 'elementOfGuidance' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ElementOfGuidance' opposite = ''/>
      <Reference name = 'stateOfAffairs' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::StateOfAffairs' opposite = ''/>
    </Class>
    <Class name = 'ExactlynQuantificationHasCardinality' isAbstract = 'false' supertypes = ''>
      <Reference name = 'exactlynQuantification' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ExactlynQuantification' opposite = ''/>
      <Reference name = 'cardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'ExpressionRepresentsMeaning' isAbstract = 'false' supertypes = ''>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Expression' opposite = ''/>
      <Reference name = 'meaning' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Meaning' opposite = ''/>
    </Class>
    <Class name = 'FactModelIncludesFact' isAbstract = 'false' supertypes = ''>
      <Reference name = 'factModel' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactModel' opposite = ''/>
      <Reference name = 'fact' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Fact' opposite = ''/>
    </Class>
    <Class name = 'FactModelIsBasedOnConceptualSchema' isAbstract = 'false' supertypes = ''>
      <Reference name = 'factModel' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactModel' opposite = ''/>
      <Reference name = 'conceptualSchema' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ConceptualSchema' opposite = ''/>
    </Class>
    <Class name = 'FactTypeFormDemonstratesDesignation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'factTypeForm' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeForm' opposite = ''/>
      <Reference name = 'designation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Designation' opposite = ''/>
    </Class>
    <Class name = 'FactTypeFormIncorporatesFactSymbol' isAbstract = 'false' supertypes = ''>
      <Reference name = 'factTypeForm' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeForm' opposite = ''/>
      <Reference name = 'factSymbol' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactSymbol' opposite = ''/>
    </Class>
    <Class name = 'FactTypeFormIsInNamespace' isAbstract = 'false' supertypes = ''>
      <Reference name = 'factTypeForm' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeForm' opposite = ''/>
      <Reference name = 'namespace' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Namespace' opposite = ''/>
    </Class>
    <Class name = 'FactTypeHasFactTypeForm' isAbstract = 'false' supertypes = ''>
      <Reference name = 'factType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactType' opposite = ''/>
      <Reference name = 'factTypeForm' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeForm' opposite = ''/>
    </Class>
    <Class name = 'FactTypeInternallyIsClosedInConceptualSchema' isAbstract = 'false' supertypes = ''>
      <Reference name = 'factType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactType' opposite = ''/>
      <Reference name = 'conceptualSchema' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ConceptualSchema' opposite = ''/>
    </Class>
    <Class name = 'FactTypeIsElementaryInBodyOfSharedMeanings' isAbstract = 'false' supertypes = ''>
      <Reference name = 'factType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactType' opposite = ''/>
      <Reference name = 'bodyOfSharedMeanings' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BodyOfSharedMeanings' opposite = ''/>
    </Class>
    <Class name = 'FactTypeRoleHasRoleBinding' isAbstract = 'false' supertypes = ''>
      <Reference name = 'factTypeRole' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeRole' opposite = ''/>
      <Reference name = 'roleBinding' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::RoleBinding' opposite = ''/>
    </Class>
    <Class name = 'FactTypeRoleIsInFactType' isAbstract = 'false' supertypes = ''>
      <Reference name = 'factTypeRole' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeRole' opposite = ''/>
      <Reference name = 'factType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactType' opposite = ''/>
    </Class>
    <Class name = 'ImplicationHasAntecedent' isAbstract = 'false' supertypes = ''>
      <Reference name = 'implication' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Implication' opposite = ''/>
      <Reference name = 'antecedent' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'ImplicationHasConsequent' isAbstract = 'false' supertypes = ''>
      <Reference name = 'implication' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Implication' opposite = ''/>
      <Reference name = 'consequent' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'InstantiationFormulationBindsToBindableTarget' isAbstract = 'false' supertypes = ''>
      <Reference name = 'instantiationFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::InstantiationFormulation' opposite = ''/>
      <Reference name = 'bindableTarget' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BindableTarget' opposite = ''/>
    </Class>
    <Class name = 'InstantiationFormulationConsidersConcept' isAbstract = 'false' supertypes = ''>
      <Reference name = 'instantiationFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::InstantiationFormulation' opposite = ''/>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
    </Class>
    <Class name = 'IntensionalDefinitionUsesDelimitingCharacteristic' isAbstract = 'false' supertypes = ''>
      <Reference name = 'intensionalDefinition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::IntensionalDefinition' opposite = ''/>
      <Reference name = 'delimitingCharacteristic' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Characteristic' opposite = ''/>
    </Class>
    <Class name = 'LogicalFormulationConstrainsProjection' isAbstract = 'false' supertypes = ''>
      <Reference name = 'logicalFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
      <Reference name = 'projection' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Projection' opposite = ''/>
    </Class>
    <Class name = 'LogicalFormulationRestrictsVariable' isAbstract = 'false' supertypes = ''>
      <Reference name = 'logicalFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
      <Reference name = 'variable' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Variable' opposite = ''/>
    </Class>
    <Class name = 'LogicalOperationHasLogicalOperand' isAbstract = 'false' supertypes = ''>
      <Reference name = 'logicalOperation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalOperation' opposite = ''/>
      <Reference name = 'logicalOperand' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'MeaningCorrespondsToThing' isAbstract = 'false' supertypes = ''>
      <Reference name = 'meaning' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Meaning' opposite = ''/>
      <Reference name = 'thing' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Thing' opposite = ''/>
    </Class>
    <Class name = 'ModalFormulationEmbedsLogicalFormulation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'modalFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ModalFormulation' opposite = ''/>
      <Reference name = 'logicalFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'NameReferencesThing' isAbstract = 'false' supertypes = ''>
      <Reference name = 'name' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Name' opposite = ''/>
      <Reference name = 'thing' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Thing' opposite = ''/>
    </Class>
    <Class name = 'NamespaceHasUri' isAbstract = 'false' supertypes = ''>
      <Reference name = 'namespace' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Namespace' opposite = ''/>
      <Reference name = 'uri' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Uri' opposite = ''/>
    </Class>
    <Class name = 'Namespace1IncorporatesNamespace2' isAbstract = 'false' supertypes = ''>
      <Reference name = 'namespace1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Namespace' opposite = ''/>
      <Reference name = 'namespace2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Namespace' opposite = ''/>
    </Class>
    <Class name = 'NoteCommentsOnMeaning' isAbstract = 'false' supertypes = ''>
      <Reference name = 'note' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Note' opposite = ''/>
      <Reference name = 'meaning' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Meaning' opposite = ''/>
    </Class>
    <Class name = 'NumericRangeQuantificationHasMaximumCardinality' isAbstract = 'false' supertypes = ''>
      <Reference name = 'numericRangeQuantification' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NumericRangeQuantification' opposite = ''/>
      <Reference name = 'maximumCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'NumericRangeQuantificationHasMinimumCardinality' isAbstract = 'false' supertypes = ''>
      <Reference name = 'numericRangeQuantification' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NumericRangeQuantification' opposite = ''/>
      <Reference name = 'minimumCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'ObjectificationBindsToBindableTarget' isAbstract = 'false' supertypes = ''>
      <Reference name = 'objectification' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Objectification' opposite = ''/>
      <Reference name = 'bindableTarget' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BindableTarget' opposite = ''/>
    </Class>
    <Class name = 'ObjectificationConsidersLogicalFormulation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'objectification' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Objectification' opposite = ''/>
      <Reference name = 'logicalFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'OperativeBusinessRuleHasLevelOfEnforcement' isAbstract = 'false' supertypes = ''>
      <Reference name = 'operativeBusinessRule' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::OperativeBusinessRule' opposite = ''/>
      <Reference name = 'levelOfEnforcement' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LevelOfEnforcement' opposite = ''/>
    </Class>
    <Class name = 'PlaceholderIsAtStartingCharacterPosition' isAbstract = 'false' supertypes = ''>
      <Reference name = 'placeholder' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Placeholder' opposite = ''/>
      <Reference name = 'startingCharacterPosition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::PositiveInteger' opposite = ''/>
    </Class>
    <Class name = 'PlaceholderIsInFactTypeForm' isAbstract = 'false' supertypes = ''>
      <Reference name = 'placeholder' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Placeholder' opposite = ''/>
      <Reference name = 'factTypeForm' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeForm' opposite = ''/>
    </Class>
    <Class name = 'PlaceholderUsesDesignation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'placeholder' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Placeholder' opposite = ''/>
      <Reference name = 'designation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Designation' opposite = ''/>
    </Class>
    <Class name = 'ProjectingFormulationBindsToBindableTarget' isAbstract = 'false' supertypes = ''>
      <Reference name = 'projectingFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ProjectingFormulation' opposite = ''/>
      <Reference name = 'bindableTarget' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BindableTarget' opposite = ''/>
    </Class>
    <Class name = 'ProjectingFormulationHasProjection' isAbstract = 'false' supertypes = ''>
      <Reference name = 'projectingFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ProjectingFormulation' opposite = ''/>
      <Reference name = 'projection' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Projection' opposite = ''/>
    </Class>
    <Class name = 'ProjectionHasAuxiliaryVariable' isAbstract = 'false' supertypes = ''>
      <Reference name = 'projection' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Projection' opposite = ''/>
      <Reference name = 'auxiliaryVariable' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::AuxiliaryVariable' opposite = ''/>
    </Class>
    <Class name = 'ProjectionIsOnVariable' isAbstract = 'false' supertypes = ''>
      <Reference name = 'projection' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Projection' opposite = ''/>
      <Reference name = 'variable' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Variable' opposite = ''/>
    </Class>
    <Class name = 'PropositionIsBasedOnFactType' isAbstract = 'false' supertypes = ''>
      <Reference name = 'proposition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Proposition' opposite = ''/>
      <Reference name = 'factType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactType' opposite = ''/>
    </Class>
    <Class name = 'PropositionNominalizationBindsToBindableTarget' isAbstract = 'false' supertypes = ''>
      <Reference name = 'propositionNominalization' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::PropositionNominalization' opposite = ''/>
      <Reference name = 'bindableTarget' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BindableTarget' opposite = ''/>
    </Class>
    <Class name = 'PropositionNominalizationConsidersLogicalFormulation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'propositionNominalization' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::PropositionNominalization' opposite = ''/>
      <Reference name = 'logicalFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'QuantificationIntroducesVariable' isAbstract = 'false' supertypes = ''>
      <Reference name = 'quantification' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Quantification' opposite = ''/>
      <Reference name = 'variable' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Variable' opposite = ''/>
    </Class>
    <Class name = 'QuantificationScopesOverLogicalFormulation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'quantification' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Quantification' opposite = ''/>
      <Reference name = 'logicalFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'Quantity1EqualsQuantity2' isAbstract = 'false' supertypes = ''>
      <Reference name = 'quantity1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Quantity' opposite = ''/>
      <Reference name = 'quantity2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Quantity' opposite = ''/>
    </Class>
    <Class name = 'Quantity1IsLessThanQuantity2' isAbstract = 'false' supertypes = ''>
      <Reference name = 'quantity1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Quantity' opposite = ''/>
      <Reference name = 'quantity2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Quantity' opposite = ''/>
    </Class>
    <Class name = 'ReferencePointsToInformationSource' isAbstract = 'false' supertypes = ''>
      <Reference name = 'reference' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Reference' opposite = ''/>
      <Reference name = 'informationSource' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::CommunicationContent' opposite = ''/>
    </Class>
    <Class name = 'ReferenceSchemeExtensionallyUsesFactTypeRole' isAbstract = 'false' supertypes = ''>
      <Reference name = 'referenceScheme' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ReferenceScheme' opposite = ''/>
      <Reference name = 'factTypeRole' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeRole' opposite = ''/>
    </Class>
    <Class name = 'ReferenceSchemeIsForConcept' isAbstract = 'false' supertypes = ''>
      <Reference name = 'referenceScheme' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ReferenceScheme' opposite = ''/>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
    </Class>
    <Class name = 'ReferenceSchemeSimplyUsesFactTypeRole' isAbstract = 'false' supertypes = ''>
      <Reference name = 'referenceScheme' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ReferenceScheme' opposite = ''/>
      <Reference name = 'factTypeRole' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeRole' opposite = ''/>
    </Class>
    <Class name = 'ReferenceSchemeUsesCharacteristic' isAbstract = 'false' supertypes = ''>
      <Reference name = 'referenceScheme' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ReferenceScheme' opposite = ''/>
      <Reference name = 'characteristic' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Characteristic' opposite = ''/>
    </Class>
    <Class name = 'ReferenceSupportsMeaning' isAbstract = 'false' supertypes = ''>
      <Reference name = 'reference' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Reference' opposite = ''/>
      <Reference name = 'meaning' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Meaning' opposite = ''/>
    </Class>
    <Class name = 'RepresentationHasExpression' isAbstract = 'false' supertypes = ''>
      <Reference name = 'representation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Representation' opposite = ''/>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Expression' opposite = ''/>
    </Class>
    <Class name = 'RepresentationIsInDesignationContext' isAbstract = 'false' supertypes = ''>
      <Reference name = 'representation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Representation' opposite = ''/>
      <Reference name = 'designationContext' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
    </Class>
    <Class name = 'RepresentationIsInSubjectField' isAbstract = 'false' supertypes = ''>
      <Reference name = 'representation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Representation' opposite = ''/>
      <Reference name = 'subjectField' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SubjectField' opposite = ''/>
    </Class>
    <Class name = 'RepresentationRepresentsMeaning' isAbstract = 'false' supertypes = ''>
      <Reference name = 'representation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Representation' opposite = ''/>
      <Reference name = 'meaning' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Meaning' opposite = ''/>
    </Class>
    <Class name = 'RepresentationUsesVocabulary' isAbstract = 'false' supertypes = ''>
      <Reference name = 'representation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Representation' opposite = ''/>
      <Reference name = 'vocabulary' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Vocabulary' opposite = ''/>
    </Class>
    <Class name = 'ResIsSensoryManifestationOfSignifier' isAbstract = 'false' supertypes = ''>
      <Reference name = 'res' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Res' opposite = ''/>
      <Reference name = 'signifier' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Expression' opposite = ''/>
    </Class>
    <Class name = 'RoleBindingBindsToBindableTarget' isAbstract = 'false' supertypes = ''>
      <Reference name = 'roleBinding' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::RoleBinding' opposite = ''/>
      <Reference name = 'bindableTarget' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BindableTarget' opposite = ''/>
    </Class>
    <Class name = 'RoleBindingOccursInAtomicFormulation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'roleBinding' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::RoleBinding' opposite = ''/>
      <Reference name = 'atomicFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::AtomicFormulation' opposite = ''/>
    </Class>
    <Class name = 'RoleRangesOverObjectType' isAbstract = 'false' supertypes = ''>
      <Reference name = 'role' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Role' opposite = ''/>
      <Reference name = 'objectType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::ObjectType' opposite = ''/>
    </Class>
    <Class name = 'RulebookIncludesRepresentation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'rulebook' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Rulebook' opposite = ''/>
      <Reference name = 'representation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Representation' opposite = ''/>
    </Class>
    <Class name = 'SemanticCommunityHasSpeechCommunity' isAbstract = 'false' supertypes = ''>
      <Reference name = 'semanticCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SemanticCommunity' opposite = ''/>
      <Reference name = 'speechCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SpeechCommunity' opposite = ''/>
    </Class>
    <Class name = 'SetHasCardinality' isAbstract = 'false' supertypes = ''>
      <Reference name = 'set' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Set' opposite = ''/>
      <Reference name = 'cardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::NonnegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'SpeechCommunityDeterminesRulebook' isAbstract = 'false' supertypes = ''>
      <Reference name = 'speechCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SpeechCommunity' opposite = ''/>
      <Reference name = 'rulebook' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Rulebook' opposite = ''/>
    </Class>
    <Class name = 'SpeechCommunityOwnsOwnedDefinition' isAbstract = 'false' supertypes = ''>
      <Reference name = 'speechCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SpeechCommunity' opposite = ''/>
      <Reference name = 'ownedDefinition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::OwnedDefinition' opposite = ''/>
    </Class>
    <Class name = 'SpeechCommunityOwnsVocabulary' isAbstract = 'false' supertypes = ''>
      <Reference name = 'speechCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SpeechCommunity' opposite = ''/>
      <Reference name = 'vocabulary' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Vocabulary' opposite = ''/>
    </Class>
    <Class name = 'SpeechCommunityRegulatesItsUsageOfSignifier' isAbstract = 'false' supertypes = ''>
      <Reference name = 'speechCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SpeechCommunity' opposite = ''/>
      <Reference name = 'signifier' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Expression' opposite = ''/>
    </Class>
    <Class name = 'SpeechCommunityUsesLanguage' isAbstract = 'false' supertypes = ''>
      <Reference name = 'speechCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SpeechCommunity' opposite = ''/>
      <Reference name = 'language' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Language' opposite = ''/>
    </Class>
    <Class name = 'SpeechCommunityUsesVocabulary' isAbstract = 'false' supertypes = ''>
      <Reference name = 'speechCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SpeechCommunity' opposite = ''/>
      <Reference name = 'vocabulary' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Vocabulary' opposite = ''/>
    </Class>
    <Class name = 'StatementExpressesProposition' isAbstract = 'false' supertypes = ''>
      <Reference name = 'statement' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Statement' opposite = ''/>
      <Reference name = 'proposition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Proposition' opposite = ''/>
    </Class>
    <Class name = 'TermDenotesThing' isAbstract = 'false' supertypes = ''>
      <Reference name = 'term' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Term' opposite = ''/>
      <Reference name = 'thing' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Thing' opposite = ''/>
    </Class>
    <Class name = 'TerminologicalDictionaryExpressesBodyOfSharedMeanings' isAbstract = 'false' supertypes = ''>
      <Reference name = 'terminologicalDictionary' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::TerminologicalDictionary' opposite = ''/>
      <Reference name = 'bodyOfSharedMeanings' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BodyOfSharedMeanings' opposite = ''/>
    </Class>
    <Class name = 'TerminologicalDictionaryHasUri' isAbstract = 'false' supertypes = ''>
      <Reference name = 'terminologicalDictionary' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::TerminologicalDictionary' opposite = ''/>
      <Reference name = 'uri' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Uri' opposite = ''/>
    </Class>
    <Class name = 'TerminologicalDictionaryPresentsVocabulary' isAbstract = 'false' supertypes = ''>
      <Reference name = 'terminologicalDictionary' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::TerminologicalDictionary' opposite = ''/>
      <Reference name = 'vocabulary' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Vocabulary' opposite = ''/>
    </Class>
    <Class name = 'ThingIsInSet' isAbstract = 'false' supertypes = ''>
      <Reference name = 'thing' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Thing' opposite = ''/>
      <Reference name = 'set' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Set' opposite = ''/>
    </Class>
    <Class name = 'Thing1IsThing2' isAbstract = 'false' supertypes = ''>
      <Reference name = 'thing1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Thing' opposite = ''/>
      <Reference name = 'thing2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Thing' opposite = ''/>
    </Class>
    <Class name = 'VariableHasProjectionPosition' isAbstract = 'false' supertypes = ''>
      <Reference name = 'variable' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Variable' opposite = ''/>
      <Reference name = 'projectionPosition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::PositiveInteger' opposite = ''/>
    </Class>
    <Class name = 'VariableIsFreesWithinSemanticFormulation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'variable' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Variable' opposite = ''/>
      <Reference name = 'semanticFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SemanticFormulation' opposite = ''/>
    </Class>
    <Class name = 'VariableMapsToFactTypeRole' isAbstract = 'false' supertypes = ''>
      <Reference name = 'variable' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Variable' opposite = ''/>
      <Reference name = 'factTypeRole' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::FactTypeRole' opposite = ''/>
    </Class>
    <Class name = 'VariableRangesOverConcept' isAbstract = 'false' supertypes = ''>
      <Reference name = 'variable' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Variable' opposite = ''/>
      <Reference name = 'concept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
    </Class>
    <Class name = 'VocabularyIsDesignedForSpeechCommunity' isAbstract = 'false' supertypes = ''>
      <Reference name = 'vocabulary' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Vocabulary' opposite = ''/>
      <Reference name = 'speechCommunity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SpeechCommunity' opposite = ''/>
    </Class>
    <Class name = 'VocabularyIsExpressedInLanguage' isAbstract = 'false' supertypes = ''>
      <Reference name = 'vocabulary' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Vocabulary' opposite = ''/>
      <Reference name = 'language' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Language' opposite = ''/>
    </Class>
    <Class name = 'VocabularyIsUsedToExpressBodyOfSharedMeanings' isAbstract = 'false' supertypes = ''>
      <Reference name = 'vocabulary' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Vocabulary' opposite = ''/>
      <Reference name = 'bodyOfSharedMeanings' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::BodyOfSharedMeanings' opposite = ''/>
    </Class>
    <Class name = 'VocabularyNamespaceIsDerivedFromVocabulary' isAbstract = 'false' supertypes = ''>
      <Reference name = 'vocabularyNamespace' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::VocabularyNamespace' opposite = ''/>
      <Reference name = 'vocabulary' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Vocabulary' opposite = ''/>
    </Class>
    <Class name = 'VocabularyNamespaceIsForLanguage' isAbstract = 'false' supertypes = ''>
      <Reference name = 'vocabularyNamespace' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::VocabularyNamespace' opposite = ''/>
      <Reference name = 'language' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Language' opposite = ''/>
    </Class>
    <Class name = 'VocabularyNamespaceIsSpecificToDesignationContext' isAbstract = 'false' supertypes = ''>
      <Reference name = 'vocabularyNamespace' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::VocabularyNamespace' opposite = ''/>
      <Reference name = 'designationContext' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Concept' opposite = ''/>
    </Class>
    <Class name = 'VocabularyNamespaceIsSpecificToSubjectField' isAbstract = 'false' supertypes = ''>
      <Reference name = 'vocabularyNamespace' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::VocabularyNamespace' opposite = ''/>
      <Reference name = 'subjectField' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::SubjectField' opposite = ''/>
    </Class>
    <Class name = 'Vocabulary1IncorporatesVocabulary2' isAbstract = 'false' supertypes = ''>
      <Reference name = 'vocabulary1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Vocabulary' opposite = ''/>
      <Reference name = 'vocabulary2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::Vocabulary' opposite = ''/>
    </Class>
    <Class name = 'WhetherornotFormulationHasConsequent' isAbstract = 'false' supertypes = ''>
      <Reference name = 'whetherornotFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::WhetherornotFormulation' opposite = ''/>
      <Reference name = 'consequent' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'WhetherornotFormulationHasInconsequent' isAbstract = 'false' supertypes = ''>
      <Reference name = 'whetherornotFormulation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::WhetherornotFormulation' opposite = ''/>
      <Reference name = 'inconsequent' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SBVR::LogicalFormulation' opposite = ''/>
    </Class>
  </Package>
  <Package name = 'PrimitiveTypes'>
    <DataType name = 'Boolean'/>
    <DataType name = 'integer'/>
    <DataType name = 'String'/>
    <DataType name = 'Double'/>
  </Package>
</Metamodel>
