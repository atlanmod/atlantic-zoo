<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<Metamodel>
  <Package name = 'CSharp'>
    <Class name = 'Member' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'owner' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'CSharp::Type' opposite = 'CSharp::Type::members'/>
    </Class>
    <Class name = 'TypedAttribute' isAbstract = 'false' supertypes = 'CSharp::Member'>
      <Reference name = 'type' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'CSharp::Type' opposite = ''/>
    </Class>
    <Class name = 'Field' isAbstract = 'false' supertypes = 'CSharp::TypedAttribute'/>
    <Class name = 'Property' isAbstract = 'false' supertypes = 'CSharp::TypedAttribute'>
      <Attribute name = 'isReadable' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isWritable' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'MethodBase' isAbstract = 'false' supertypes = 'CSharp::Member'>
      <Attribute name = 'visibility' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'isAbstract' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isFinal' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isStatic' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Reference name = 'parameters' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'CSharp::Parameter' opposite = 'CSharp::Parameter::method'/>
    </Class>
    <Class name = 'Constructor' isAbstract = 'false' supertypes = 'CSharp::MethodBase'/>
    <Class name = 'Method' isAbstract = 'false' supertypes = 'CSharp::MethodBase'>
      <Reference name = 'returnType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'CSharp::Type' opposite = ''/>
    </Class>
    <Class name = 'Type' isAbstract = 'false' supertypes = 'CSharp::Member'>
      <Attribute name = 'qualifiedName' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'isAbstract' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'visibility' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'isSealed' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'nameSpace' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'members' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'CSharp::Member' opposite = 'CSharp::Member::owner'/>
      <Reference name = 't_container' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'CSharp::Assembly' opposite = 'CSharp::Assembly::content'/>
      <Reference name = 'super' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'CSharp::Type' opposite = ''/>
    </Class>
    <Class name = 'Parameter' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'isIn' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isOut' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'position' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Integer'/>
      <Reference name = 'method' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'CSharp::MethodBase' opposite = 'CSharp::MethodBase::parameters'/>
      <Reference name = 'type' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'CSharp::Type' opposite = ''/>
    </Class>
    <Class name = 'Assembly' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'content' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'CSharp::Type' opposite = 'CSharp::Type::t_container'/>
    </Class>
  </Package>
  <Package name = 'PrimitiveTypes'>
    <DataType name = 'Integer'/>
    <DataType name = 'String'/>
    <DataType name = 'Boolean'/>
    <DataType name = 'Double'/>
  </Package>
</Metamodel>
