<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<Metamodel>
  <Package name = 'ViewAbstractSyntaxOfXMorphLanguage'>
    <Class name = 'VarScope' isAbstract = 'true' supertypes = ''>
      <Reference name = 'var' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'ViewAbstractSyntaxOfXMorphLanguage::AbstractVar' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::AbstractVar::scope'/>
    </Class>
    <Class name = 'AbstractVar' isAbstract = 'true' supertypes = ''>
      <Reference name = 'scope' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::VarScope' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::VarScope::var'/>
      <Reference name = 'varUse' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::VarUse' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::VarUse::var'/>
    </Class>
    <Class name = 'VarUse' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::Expression'>
      <Reference name = 'var' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::AbstractVar' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::AbstractVar::varUse'/>
    </Class>
    <Class name = 'MOF::Property' isAbstract = 'false' supertypes = ''>
      <Reference name = 'part' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::Key' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Key::property'/>
    </Class>
    <Class name = 'Key' isAbstract = 'false' supertypes = ''>
      <Reference name = 'property' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::MOF::Property' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::MOF::Property::part'/>
      <Reference name = 'transformation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::Transformation' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Transformation::keys'/>
    </Class>
    <Class name = 'PatternScope' isAbstract = 'true' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::VarScope'>
      <Reference name = 'patternDefn' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'ViewAbstractSyntaxOfXMorphLanguage::PatternDefn' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::PatternDefn::scope'/>
    </Class>
    <Class name = 'PatternDefn' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::VarScope'>
      <Reference name = 'scope' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::PatternScope' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::PatternScope::patternDefn'/>
      <Reference name = 'parameter' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::PatternVar' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::PatternVar::patternDefn'/>
      <Reference name = 'body' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'ViewAbstractSyntaxOfXMorphLanguage::Term' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Term::patternDefn'/>
    </Class>
    <Class name = 'TRule' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::VarScope'>
      <Reference name = 'superseded' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::TRule' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::TRule::superseder'/>
      <Reference name = 'superseder' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::TRule' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::TRule::superseded'/>
      <Reference name = 'transformation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::Transformation' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Transformation::tRule'/>
      <Reference name = 'extended' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::TRule' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::TRule::extender'/>
      <Reference name = 'extender' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::TRule' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::TRule::extended'/>
      <Reference name = 'term' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'ViewAbstractSyntaxOfXMorphLanguage::Term' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Term::tRule'/>
      <Reference name = 'tgt' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm::tRuleST'/>
    </Class>
    <Class name = 'Transformation' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::PatternScope'>
      <Reference name = 'keys' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'ViewAbstractSyntaxOfXMorphLanguage::Key' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Key::transformation'/>
      <Reference name = 'tRule' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'ViewAbstractSyntaxOfXMorphLanguage::TRule' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::TRule::transformation'/>
    </Class>
    <Class name = 'Query' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::PatternScope'>
      <Reference name = 'term' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'ViewAbstractSyntaxOfXMorphLanguage::Term' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Term::query'/>
      <Reference name = 'parameter' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::PatternVar' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::PatternVar::query'/>
    </Class>
    <Class name = 'Term' isAbstract = 'true' supertypes = ''>
      <Reference name = 'patternDefn' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::PatternDefn' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::PatternDefn::body'/>
      <Reference name = 'query' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::Query' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Query::term'/>
      <Reference name = 'tRule' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::TRule' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::TRule::term'/>
      <Reference name = 'context' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::ExtentVar' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::ExtentVar::src'/>
      <Reference name = 'compoundTerm' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm::term'/>
    </Class>
    <Class name = 'TRuleVar' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::AbstractVar'>
      <Reference name = 'superseder' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::TRuleVar' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::TRuleVar::superseded'/>
      <Reference name = 'superseded' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::TRuleVar' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::TRuleVar::superseder'/>
      <Reference name = 'extended' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::TRuleVar' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::TRuleVar::extender'/>
      <Reference name = 'extender' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::TRuleVar' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::TRuleVar::extended'/>
    </Class>
    <Class name = 'PatternVar' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::AbstractVar'>
      <Reference name = 'query' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::Query' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Query::parameter'/>
      <Reference name = 'patternDefn' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::PatternDefn' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::PatternDefn::parameter'/>
    </Class>
    <Class name = 'ExtentVar' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::AbstractVar'>
      <Reference name = 'src' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::Term' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Term::context'/>
    </Class>
    <Class name = 'CompoundTerm' isAbstract = 'true' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::Term'>
      <Reference name = 'term' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'ViewAbstractSyntaxOfXMorphLanguage::Term' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Term::compoundTerm'/>
    </Class>
    <Class name = 'AndTerm' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm'/>
    <Class name = 'OrTerm' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm'/>
    <Class name = 'NotTerm' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm'/>
    <Class name = 'IfTerm' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm'/>
    <Class name = 'SimpleTerm' isAbstract = 'true' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::Term'>
      <Reference name = 'tRuleST' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::TRule' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::TRule::tgt'/>
      <Reference name = 'arg' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'ViewAbstractSyntaxOfXMorphLanguage::Expression' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Expression::term'/>
    </Class>
    <Class name = 'TrackingUse' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm'>
      <Attribute name = 'featureNames' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'tracking' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::MOF::Class' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::MOF::Class::tracking'/>
    </Class>
    <Class name = 'MOF::Class' isAbstract = 'false' supertypes = ''>
      <Reference name = 'tracking' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::TrackingUse' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::TrackingUse::tracking'/>
    </Class>
    <Class name = 'PatternUse' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm'/>
    <Class name = 'MofTerm' isAbstract = 'true' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm'/>
    <Class name = 'Condition' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm'>
      <Attribute name = 'reason' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'MofInstance' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::MofTerm'>
      <Attribute name = 'isExactly' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Reference name = 'typeName' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::Expression' opposite = ''/>
      <Reference name = 'instance' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::Expression' opposite = ''/>
    </Class>
    <Class name = 'MofOrder' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::MofTerm'>
      <Reference name = 'lesser' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::Expression' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Expression::lesser'/>
      <Reference name = 'instance' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::Expression' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Expression::instance'/>
      <Reference name = 'greater' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::Expression' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Expression::greater'/>
    </Class>
    <Class name = 'Expression' isAbstract = 'true' supertypes = ''>
      <Reference name = 'lesser' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::MofOrder' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::MofOrder::lesser'/>
      <Reference name = 'instance' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::MofOrder' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::MofOrder::instance'/>
      <Reference name = 'greater' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::MofOrder' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::MofOrder::greater'/>
      <Reference name = 'term' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm::arg'/>
      <Reference name = 'expr' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::CoumpoundExpr' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::CoumpoundExpr::arg'/>
    </Class>
    <Class name = 'CoumpoundExpr' isAbstract = 'true' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::Expression'>
      <Reference name = 'arg' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'ViewAbstractSyntaxOfXMorphLanguage::Expression' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::Expression::expr'/>
    </Class>
    <Class name = 'CollectionExpr' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::CoumpoundExpr'>
      <Attribute name = 'unique' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'ordered' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'FunctionExpr' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::CoumpoundExpr'>
      <Attribute name = 'function' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'FeatureExpr' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::CoumpoundExpr'>
      <Attribute name = 'collect' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'featureName' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'InstanceRef' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::Expression'>
      <Reference name = 'obj' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::MOF::Object' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::MOF::Object::obj'/>
    </Class>
    <Class name = 'MOF::Object' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::Expression'>
      <Reference name = 'obj' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'ViewAbstractSyntaxOfXMorphLanguage::InstanceRef' opposite = 'ViewAbstractSyntaxOfXMorphLanguage::InstanceRef::obj'/>
    </Class>
    <Class name = 'SimpleExpr' isAbstract = 'true' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::Expression'>
      <Attribute name = 'representation' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'StringConstant' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::SimpleExpr'/>
    <Class name = 'IntConstant' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::SimpleExpr'/>
    <Class name = 'BooleanConstant' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::SimpleExpr'/>
    <Class name = 'EnumConstant' isAbstract = 'false' supertypes = 'ViewAbstractSyntaxOfXMorphLanguage::SimpleExpr'/>
  </Package>
  <Package name = 'PrimitiveTypes'>
    <DataType name = 'String'/>
    <DataType name = 'Boolean'/>
  </Package>
</Metamodel>
