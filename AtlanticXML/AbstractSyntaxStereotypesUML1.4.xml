<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<Metamodel>
  <Package name = 'AbstractSynthax'>
    <Class name = 'ModelElement' isAbstract = 'false' supertypes = ''>
      <Reference name = 'referenceTag' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'AbstractSynthax::TaggedValue' opposite = 'AbstractSynthax::TaggedValue::referenceValue'/>
      <Reference name = 'stereotype' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'AbstractSynthax::Stereotype' opposite = 'AbstractSynthax::Stereotype::extendedElement'/>
      <Reference name = 'constraint' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'AbstractSynthax::Constraint' opposite = 'AbstractSynthax::Constraint::constrainedElement'/>
      <Reference name = 'taggedValue' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'AbstractSynthax::TaggedValue' opposite = ''/>
    </Class>
    <Class name = 'Constraint' isAbstract = 'false' supertypes = ''>
      <Reference name = 'constrainedElement' lower = '0' upper = '-1' isOrdered = 'true' isContainer = 'false' type = 'AbstractSynthax::ModelElement' opposite = 'AbstractSynthax::ModelElement::constraint'/>
      <Reference name = 'constrainedStereotype' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'AbstractSynthax::Stereotype' opposite = 'AbstractSynthax::Stereotype::stereotypeConstraint'/>
    </Class>
    <Class name = 'TaggedValue' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'dataValue' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'referenceValue' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'AbstractSynthax::ModelElement' opposite = 'AbstractSynthax::ModelElement::referenceTag'/>
      <Reference name = 'type' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'AbstractSynthax::TagDefinition' opposite = 'AbstractSynthax::TagDefinition::typedValue'/>
    </Class>
    <Class name = 'TagDefinition' isAbstract = 'false' supertypes = 'AbstractSynthax::ModelElement'>
      <Attribute name = 'tagType' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'multiplicity' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'AbstractSynthax::Multiplicity' opposite = ''/>
      <Reference name = 'typedValue' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'AbstractSynthax::TaggedValue' opposite = 'AbstractSynthax::TaggedValue::type'/>
      <Reference name = 'owner' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'AbstractSynthax::Stereotype' opposite = 'AbstractSynthax::Stereotype::definedTag'/>
    </Class>
    <Class name = 'Multiplicity' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'value' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'GeneralizableElement' isAbstract = 'false' supertypes = ''/>
    <Class name = 'Stereotype' isAbstract = 'false' supertypes = 'AbstractSynthax::GeneralizableElement'>
      <Reference name = 'icon' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'AbstractSynthax::Geometry' opposite = ''/>
      <Reference name = 'baseClass' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'AbstractSynthax::Name' opposite = ''/>
      <Reference name = 'definedTag' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'AbstractSynthax::TagDefinition' opposite = 'AbstractSynthax::TagDefinition::owner'/>
      <Reference name = 'stereotypeConstraint' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'AbstractSynthax::Constraint' opposite = 'AbstractSynthax::Constraint::constrainedStereotype'/>
      <Reference name = 'extendedElement' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'AbstractSynthax::ModelElement' opposite = 'AbstractSynthax::ModelElement::stereotype'/>
    </Class>
    <Class name = 'Geometry' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'value' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'Name' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'value' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
  </Package>
  <Package name = 'PrimitiveTypes'>
    <DataType name = 'Boolean'/>
    <DataType name = 'Integer'/>
    <DataType name = 'String'/>
  </Package>
</Metamodel>
