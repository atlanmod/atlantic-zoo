<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<Metamodel>
  <Package name = 'OCLExpressions'>
    <Class name = 'OclExpression' isAbstract = 'true' supertypes = ''>
      <Reference name = 'queryArg' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'OCLExpressions::QueryExp' opposite = 'OCLExpressions::QueryExp::argument'/>
      <Reference name = 'querySrc' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'OCLExpressions::QueryExp' opposite = 'OCLExpressions::QueryExp::source'/>
      <Reference name = 'resultType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'OCLExpressions::Type' opposite = 'OCLExpressions::Type::oclExpression'/>
      <Reference name = 'varDec' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'OCLExpressions::VariableDeclaration' opposite = 'OCLExpressions::VariableDeclaration::oclExpression'/>
      <Reference name = 'varInit' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'OCLExpressions::VariableInitialisation' opposite = 'OCLExpressions::VariableInitialisation::initExpression'/>
    </Class>
    <Class name = 'SelfExp' isAbstract = 'false' supertypes = 'OCLExpressions::OclExpression'/>
    <Class name = 'ResultExp' isAbstract = 'false' supertypes = 'OCLExpressions::OclExpression'/>
    <Class name = 'VariableExp' isAbstract = 'false' supertypes = 'OCLExpressions::OclExpression'>
      <Attribute name = 'var' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'OperationExp' isAbstract = 'true' supertypes = 'OCLExpressions::OclExpression'/>
    <Class name = 'QueryExp' isAbstract = 'true' supertypes = 'OCLExpressions::OclExpression'>
      <Reference name = 'argument' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'OCLExpressions::OclExpression' opposite = 'OCLExpressions::OclExpression::queryArg'/>
      <Reference name = 'source' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'OCLExpressions::OclExpression' opposite = 'OCLExpressions::OclExpression::querySrc'/>
      <Reference name = 'varDeclaration' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'OCLExpressions::VariableDeclaration' opposite = 'OCLExpressions::VariableDeclaration::queryExp'/>
    </Class>
    <Class name = 'Type' isAbstract = 'true' supertypes = ''>
      <Reference name = 'oclExpression' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'OCLExpressions::OclExpression' opposite = 'OCLExpressions::OclExpression::resultType'/>
      <Reference name = 'varDec' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'OCLExpressions::VariableDeclaration' opposite = 'OCLExpressions::VariableDeclaration::varType'/>
    </Class>
    <Class name = 'VariableDeclaration' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'var' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'varType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'OCLExpressions::Type' opposite = 'OCLExpressions::Type::varDec'/>
      <Reference name = 'oclExpression' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'OCLExpressions::OclExpression' opposite = 'OCLExpressions::OclExpression::varDec'/>
      <Reference name = 'queryExp' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'OCLExpressions::QueryExp' opposite = 'OCLExpressions::QueryExp::varDeclaration'/>
      <Reference name = 'varInit' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'OCLExpressions::VariableInitialisation' opposite = 'OCLExpressions::VariableInitialisation::varDec'/>
    </Class>
    <Class name = 'VariableInitialisation' isAbstract = 'false' supertypes = ''>
      <Reference name = 'initExpression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'OCLExpressions::OclExpression' opposite = 'OCLExpressions::OclExpression::varInit'/>
      <Reference name = 'varDec' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'OCLExpressions::VariableDeclaration' opposite = 'OCLExpressions::VariableDeclaration::varInit'/>
      <Reference name = 'iterateExp' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'OCLExpressions::IterateExp' opposite = 'OCLExpressions::IterateExp::varInit'/>
    </Class>
    <Class name = 'ForAllExp' isAbstract = 'false' supertypes = ''/>
    <Class name = 'ExistsExp' isAbstract = 'false' supertypes = ''/>
    <Class name = 'SelectExp' isAbstract = 'false' supertypes = ''/>
    <Class name = 'RejectExp' isAbstract = 'false' supertypes = ''/>
    <Class name = 'CollectExp' isAbstract = 'false' supertypes = ''/>
    <Class name = 'IterateExp' isAbstract = 'false' supertypes = ''>
      <Reference name = 'varInit' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'OCLExpressions::VariableInitialisation' opposite = 'OCLExpressions::VariableInitialisation::iterateExp'/>
    </Class>
  </Package>
  <Package name = 'PrimitiveTypes'>
    <DataType name = 'Boolean'/>
    <DataType name = 'Integer'/>
    <DataType name = 'String'/>
  </Package>
</Metamodel>
