<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<Metamodel>
  <Package name = 'UMLMetamodelFragment'>
    <Class name = 'Class' isAbstract = 'false' supertypes = ''>
      <Reference name = 'parent' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::Generalization' opposite = ''/>
      <Reference name = 'child' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::Generalization' opposite = ''/>
      <Reference name = 'dependency' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::Dependency' opposite = 'UMLMetamodelFragment::Dependency::client'/>
    </Class>
    <Class name = 'Generalization' isAbstract = 'false' supertypes = ''/>
    <Class name = 'Dependency' isAbstract = 'false' supertypes = ''>
      <Reference name = 'supplier' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::StateMachine' opposite = ''/>
      <Reference name = 'client' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::Class' opposite = 'UMLMetamodelFragment::Class::dependency'/>
      <Reference name = 'stereotype' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::Stereotype' opposite = 'UMLMetamodelFragment::Stereotype::extendedElement'/>
    </Class>
    <Class name = 'Stereotype' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'baseClass' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'extendedElement' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::Dependency' opposite = 'UMLMetamodelFragment::Dependency::stereotype'/>
    </Class>
    <Class name = 'StateMachine' isAbstract = 'false' supertypes = ''>
      <Reference name = 'context' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::Class' opposite = ''/>
      <Reference name = 'top' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'UMLMetamodelFragment::State' opposite = 'UMLMetamodelFragment::State::stateMachine'/>
    </Class>
    <Class name = 'State' isAbstract = 'false' supertypes = 'UMLMetamodelFragment::StateVertex'>
      <Reference name = 'stateMachine' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::StateMachine' opposite = 'UMLMetamodelFragment::StateMachine::top'/>
      <Reference name = 'internal' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'UMLMetamodelFragment::Transition' opposite = ''/>
    </Class>
    <Class name = 'CompositeState' isAbstract = 'false' supertypes = 'UMLMetamodelFragment::State'>
      <Reference name = 'subvertex' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'UMLMetamodelFragment::StateVertex' opposite = 'UMLMetamodelFragment::StateVertex::compositeState'/>
    </Class>
    <Class name = 'SimpleState' isAbstract = 'false' supertypes = 'UMLMetamodelFragment::State'/>
    <Class name = 'FinalState' isAbstract = 'false' supertypes = 'UMLMetamodelFragment::State'/>
    <Class name = 'StateVertex' isAbstract = 'false' supertypes = ''>
      <Reference name = 'compositeState' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::CompositeState' opposite = 'UMLMetamodelFragment::CompositeState::subvertex'/>
    </Class>
    <Class name = 'PseudoState' isAbstract = 'false' supertypes = 'UMLMetamodelFragment::StateVertex'/>
    <Class name = 'Transition' isAbstract = 'false' supertypes = ''>
      <Reference name = 'trigger' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::Event' opposite = ''/>
      <Reference name = 'source' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::StateVertex' opposite = ''/>
      <Reference name = 'target' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'UMLMetamodelFragment::StateVertex' opposite = ''/>
    </Class>
    <Class name = 'Event' isAbstract = 'false' supertypes = ''/>
  </Package>
  <Package name = 'PrimitiveTypes'>
    <DataType name = 'Boolean'/>
    <DataType name = 'Integer'/>
    <DataType name = 'String'/>
  </Package>
</Metamodel>
