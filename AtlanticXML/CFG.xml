<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<Metamodel>
  <Package name = 'CFG'>
    <Class name = 'AbstractNode' isAbstract = 'true' supertypes = ''>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'CFG::Expression' opposite = ''/>
    </Class>
    <Class name = 'Node' isAbstract = 'false' supertypes = 'CFG::AbstractNode'>
      <Reference name = 'inNode' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'CFG::Node' opposite = ''/>
      <Reference name = 'outNode' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'CFG::Node' opposite = ''/>
    </Class>
    <Class name = 'ConditionalNode' isAbstract = 'false' supertypes = 'CFG::AbstractNode'>
      <Reference name = 'trueConditionNode' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'CFG::Node' opposite = ''/>
      <Reference name = 'falseConditionNode' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'CFG::Node' opposite = ''/>
    </Class>
    <Class name = 'Expression' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'expressionName' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
  </Package>
  <Package name = 'PrimitiveTypes'>
    <DataType name = 'Boolean'/>
    <DataType name = 'String'/>
    <DataType name = 'Integer'/>
  </Package>
</Metamodel>
