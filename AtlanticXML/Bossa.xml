<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<Metamodel>
  <Package name = 'Bossa'>
    <Class name = 'BossaProgramm' isAbstract = 'false' supertypes = ''>
      <Reference name = 'scheduler' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Scheduler' opposite = ''/>
    </Class>
    <Class name = 'Scheduler' isAbstract = 'true' supertypes = ''>
      <Attribute name = 'defaultAtt' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'high_Res' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'low_Res' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'handlerDef' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::HandlerDef' opposite = 'Bossa::HandlerDef::scheduler'/>
      <Reference name = 'interfaceDef' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::InterfaceDef' opposite = 'Bossa::InterfaceDef::scheduler'/>
      <Reference name = 'functionDef' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::FunctionDef' opposite = 'Bossa::FunctionDef::scheduler'/>
    </Class>
    <Class name = 'NormalScheduler' isAbstract = 'false' supertypes = 'Bossa::Scheduler'>
      <Reference name = 'schedulerDecl' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::SchedulerDecl' opposite = ''/>
    </Class>
    <Class name = 'VirtualScheduler' isAbstract = 'false' supertypes = 'Bossa::Scheduler'>
      <Reference name = 'vschedulerDecl' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::VSchdulerDecl' opposite = ''/>
    </Class>
    <Class name = 'AbstractSchedulerDecl' isAbstract = 'true' supertypes = ''>
      <Reference name = 'constDef' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ConstDef' opposite = ''/>
      <Reference name = 'typeDef' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::TypeDef' opposite = ''/>
      <Reference name = 'funDecl' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::FunDecl' opposite = 'Bossa::FunDecl::abstractSchedulerDecl'/>
      <Reference name = 'valDecl' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ValDecl' opposite = 'Bossa::ValDecl::abstractSchedulerDecl'/>
      <Reference name = 'stateDef' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::StateDef' opposite = 'Bossa::StateDef::abstractSchedulerDecl'/>
      <Reference name = 'orderDef' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::OrderDef' opposite = 'Bossa::OrderDef::abstractSchedulerDecl'/>
      <Reference name = 'admissionDef' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::AdmissionDef' opposite = 'Bossa::AdmissionDef::abstractSchedulerDecl'/>
      <Reference name = 'traceDef' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::TraceDef' opposite = 'Bossa::TraceDef::abstractSchedulerDecl'/>
    </Class>
    <Class name = 'SchedulerDecl' isAbstract = 'false' supertypes = 'Bossa::AbstractSchedulerDecl'>
      <Reference name = 'processDef' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ProcessDef' opposite = ''/>
    </Class>
    <Class name = 'VSchdulerDecl' isAbstract = 'false' supertypes = 'Bossa::AbstractSchedulerDecl'>
      <Reference name = 'schedulerDef' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::SchedulerDef' opposite = ''/>
    </Class>
    <Class name = 'ConstDef' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'expr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
      <Reference name = 'bossaTypeExpr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::BossaTypeExpr' opposite = ''/>
    </Class>
    <Class name = 'TypeDef' isAbstract = 'false' supertypes = ''>
      <Reference name = 'enumRang' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::EnumRange' opposite = ''/>
    </Class>
    <Class name = 'EnumRange' isAbstract = 'false' supertypes = ''>
      <Reference name = 'enumDef' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::EnumDef' opposite = ''/>
      <Reference name = 'rangeDef' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::RangeDef' opposite = ''/>
    </Class>
    <Class name = 'EnumDef' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'theIds' lower = '1' upper = '-1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'BagId' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'theValue' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'RangeDef' isAbstract = 'false' supertypes = ''>
      <Reference name = 'expr' lower = '2' upper = '2' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'ProcessDef' isAbstract = 'false' supertypes = ''>
      <Reference name = 'processVarDecl' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ProcessVarDecl' opposite = 'Bossa::ProcessVarDecl::processDef'/>
    </Class>
    <Class name = 'SchedulerDef' isAbstract = 'false' supertypes = ''>
      <Reference name = 'processVarDecl' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ProcessVarDecl' opposite = 'Bossa::ProcessVarDecl::schedulerDef'/>
    </Class>
    <Class name = 'ProcessVarDecl' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'processDef' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Bossa::ProcessDef' opposite = 'Bossa::ProcessDef::processVarDecl'/>
      <Reference name = 'schedulerDef' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Bossa::SchedulerDef' opposite = 'Bossa::SchedulerDef::processVarDecl'/>
    </Class>
    <Class name = 'Timer_ProcessVarDecl' isAbstract = 'false' supertypes = 'Bossa::ProcessVarDecl'/>
    <Class name = 'System_ProcessVarDecl' isAbstract = 'false' supertypes = 'Bossa::ProcessVarDecl'>
      <Attribute name = 'system' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Reference name = 'typeExpr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::TypeExpr' opposite = ''/>
    </Class>
    <Class name = 'Normal_ProcessVarDecl' isAbstract = 'false' supertypes = 'Bossa::ProcessVarDecl'>
      <Reference name = 'typeExpr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::TypeExpr' opposite = ''/>
    </Class>
    <Class name = 'HandlerDef' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'scheduler' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Bossa::Scheduler' opposite = 'Bossa::Scheduler::handlerDef'/>
      <Reference name = 'onHandlerDef' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::OnHandlerDef' opposite = ''/>
    </Class>
    <Class name = 'InterfaceDef' isAbstract = 'false' supertypes = ''>
      <Reference name = 'composantOfInterFunc' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ComposantOfInterFunc' opposite = ''/>
      <Reference name = 'scheduler' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Bossa::Scheduler' opposite = 'Bossa::Scheduler::interfaceDef'/>
    </Class>
    <Class name = 'FunctionDef' isAbstract = 'false' supertypes = ''>
      <Reference name = 'composantOfInterFunc' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ComposantOfInterFunc' opposite = ''/>
      <Reference name = 'scheduler' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Bossa::Scheduler' opposite = 'Bossa::Scheduler::functionDef'/>
    </Class>
    <Class name = 'Expression' isAbstract = 'true' supertypes = ''/>
    <Class name = 'Integer_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'>
      <Attribute name = 'theValue' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Integer'/>
    </Class>
    <Class name = 'Id_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'State_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'>
      <Attribute name = 'theValue' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'True_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'/>
    <Class name = 'False_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'/>
    <Class name = 'Unop_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'>
      <Reference name = 'unop' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Unop' opposite = ''/>
      <Reference name = 'expr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'Etoile_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'>
      <Reference name = 'expr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'ExpId_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'expr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'Select_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'/>
    <Class name = 'FnName_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'>
      <Reference name = 'expr' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'Empty_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'>
      <Reference name = 'classState' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ClassState' opposite = ''/>
    </Class>
    <Class name = 'SRCOnSched_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'/>
    <Class name = 'SchedulerOf_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'>
      <Reference name = 'expr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'In_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'>
      <Attribute name = 'in' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Reference name = 'expr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
      <Reference name = 'classState' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ClassState' opposite = ''/>
    </Class>
    <Class name = 'Parenthese_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'>
      <Reference name = 'expr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'Binop_Expression' isAbstract = 'false' supertypes = 'Bossa::Expression'>
      <Reference name = 'id_Expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Id_Expression' opposite = ''/>
      <Reference name = 'compo_Binop_Expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Compo_Binop_Expression' opposite = ''/>
    </Class>
    <Class name = 'Compo_Binop_Expression' isAbstract = 'false' supertypes = ''>
      <Reference name = 'binop' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Binop' opposite = ''/>
      <Reference name = 'id_Expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Id_Expression' opposite = ''/>
    </Class>
    <Class name = 'ValDecl' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'abstractSchedulerDecl' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Bossa::AbstractSchedulerDecl' opposite = 'Bossa::AbstractSchedulerDecl::valDecl'/>
    </Class>
    <Class name = 'Normal_ValDecl' isAbstract = 'false' supertypes = 'Bossa::ValDecl'>
      <Reference name = 'nonProcType' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::NonProcType' opposite = ''/>
    </Class>
    <Class name = 'System_ValDecl' isAbstract = 'false' supertypes = 'Bossa::ValDecl'>
      <Reference name = 'nonProcType' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::NonProcType' opposite = ''/>
    </Class>
    <Class name = 'Timer_ValDecl' isAbstract = 'false' supertypes = 'Bossa::ValDecl'/>
    <Class name = 'FunDecl' isAbstract = 'false' supertypes = ''>
      <Reference name = 'parameterTypes' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ParameterType' opposite = ''/>
      <Reference name = 'nonProcType' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::NonProcType' opposite = ''/>
      <Reference name = 'abstractSchedulerDecl' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Bossa::AbstractSchedulerDecl' opposite = 'Bossa::AbstractSchedulerDecl::funDecl'/>
    </Class>
    <Class name = 'StateDef' isAbstract = 'false' supertypes = ''>
      <Reference name = 'classNameStorage' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ClassNameStorage' opposite = ''/>
      <Reference name = 'abstractSchedulerDecl' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Bossa::AbstractSchedulerDecl' opposite = 'Bossa::AbstractSchedulerDecl::stateDef'/>
    </Class>
    <Class name = 'ClassNameStorage' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'className' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ClassName' opposite = ''/>
      <Reference name = 'storage' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Storage' opposite = ''/>
    </Class>
    <Class name = 'OrderDef' isAbstract = 'false' supertypes = ''>
      <Reference name = 'keyCritDecl' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::KeyCritDecls' opposite = ''/>
      <Reference name = 'critDecls' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::CritDecls' opposite = ''/>
      <Reference name = 'abstractSchedulerDecl' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Bossa::AbstractSchedulerDecl' opposite = 'Bossa::AbstractSchedulerDecl::orderDef'/>
    </Class>
    <Class name = 'AdmissionDef' isAbstract = 'false' supertypes = ''>
      <Reference name = 'valDef' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ValDef' opposite = ''/>
      <Reference name = 'admCrit' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::AdmCrit' opposite = ''/>
      <Reference name = 'attachDetach' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::AttachDetach' opposite = ''/>
      <Reference name = 'abstractSchedulerDecl' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Bossa::AbstractSchedulerDecl' opposite = 'Bossa::AbstractSchedulerDecl::admissionDef'/>
    </Class>
    <Class name = 'TraceDef' isAbstract = 'false' supertypes = ''>
      <Reference name = 'traceEvent' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::TraceEvent' opposite = ''/>
      <Reference name = 'traceExpr' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::TraceExpr' opposite = ''/>
      <Reference name = 'traceTest' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::TraceTest' opposite = ''/>
      <Reference name = 'abstractSchedulerDecl' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Bossa::AbstractSchedulerDecl' opposite = 'Bossa::AbstractSchedulerDecl::traceDef'/>
    </Class>
    <Class name = 'TypeExpr' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'bossaTypeExpr' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::BossaTypeExpr' opposite = ''/>
    </Class>
    <Class name = 'TypeOrVoid' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'isVoid' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Reference name = 'typeExpr' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::TypeExpr' opposite = ''/>
    </Class>
    <Class name = 'ParameterType' isAbstract = 'false' supertypes = ''>
      <Reference name = 'typeExpr' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::TypeExpr' opposite = ''/>
    </Class>
    <Class name = 'Storage' isAbstract = 'true' supertypes = ''/>
    <Class name = 'Process_Storage' isAbstract = 'false' supertypes = 'Bossa::Storage'/>
    <Class name = 'Scheduler_Storage' isAbstract = 'false' supertypes = 'Bossa::Storage'>
      <Reference name = 'stateVisibility' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::StateVisibility' opposite = ''/>
    </Class>
    <Class name = 'Queue_Storage' isAbstract = 'false' supertypes = 'Bossa::Storage'>
      <Reference name = 'stateVisibility' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::StateVisibility' opposite = ''/>
      <Reference name = 'queueType' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::QueueType' opposite = ''/>
    </Class>
    <Class name = 'KeyCritDecls' isAbstract = 'false' supertypes = ''>
      <Reference name = 'compoKeyCritDecls' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::CompoKeyCritDecls' opposite = ''/>
    </Class>
    <Class name = 'CompoKeyCritDecls' isAbstract = 'false' supertypes = ''>
      <Reference name = 'critDecl' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::CritDecl' opposite = ''/>
    </Class>
    <Class name = 'CritDecls' isAbstract = 'false' supertypes = ''>
      <Reference name = 'critDecl' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::CritDecl' opposite = ''/>
    </Class>
    <Class name = 'CritDecl' isAbstract = 'true' supertypes = ''>
      <Reference name = 'critop' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Critop' opposite = ''/>
    </Class>
    <Class name = 'CritDeclWhithId' isAbstract = 'false' supertypes = 'Bossa::CritDecl'>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'CritDeclWhithoutId' isAbstract = 'false' supertypes = 'Bossa::CritDecl'>
      <Reference name = 'expr' lower = '2' upper = '3' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'ValDef' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'typeExpr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::TypeExpr' opposite = ''/>
      <Reference name = 'expr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'AdmCrit' isAbstract = 'false' supertypes = ''>
      <Reference name = 'paramVarDecl' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ParamVarDecl' opposite = ''/>
      <Reference name = 'expr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'AttachDetach' isAbstract = 'false' supertypes = ''>
      <Reference name = 'procParam1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ProcParam' opposite = ''/>
      <Reference name = 'procParam2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ProcParam' opposite = ''/>
      <Reference name = 'seqStmt1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::SeqStmt' opposite = ''/>
      <Reference name = 'seqStmt2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::SeqStmt' opposite = ''/>
    </Class>
    <Class name = 'ParamVarDecl' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'typeExpr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::TypeExpr' opposite = ''/>
    </Class>
    <Class name = 'SeqStmt' isAbstract = 'false' supertypes = ''>
      <Reference name = 'valDef' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ValDef' opposite = ''/>
      <Reference name = 'stmt' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Statment' opposite = ''/>
    </Class>
    <Class name = 'TraceEvent' isAbstract = 'false' supertypes = ''>
      <Reference name = 'eventName' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::EventName' opposite = ''/>
    </Class>
    <Class name = 'TraceExpr' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '1' upper = '-1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'TraceTest' isAbstract = 'false' supertypes = ''>
      <Reference name = 'expr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'ProcParam' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'process' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'scheduler' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'Statment' isAbstract = 'true' supertypes = ''/>
    <Class name = 'IfStmt' isAbstract = 'false' supertypes = 'Bossa::Statment'>
      <Reference name = 'expr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
      <Reference name = 'seqStmt' lower = '1' upper = '2' isOrdered = 'false' isContainer = 'true' type = 'Bossa::SeqStmt' opposite = ''/>
    </Class>
    <Class name = 'ForStmt' isAbstract = 'true' supertypes = 'Bossa::Statment'/>
    <Class name = 'ForeachForStmt' isAbstract = 'false' supertypes = 'Bossa::ForStmt'>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'isIn' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Reference name = 'classState' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ClassState' opposite = ''/>
      <Reference name = 'seqStmt' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::SeqStmt' opposite = ''/>
    </Class>
    <Class name = 'ForEachIncreasingForStmt' isAbstract = 'false' supertypes = 'Bossa::ForStmt'>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'seqStmt' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::SeqStmt' opposite = ''/>
    </Class>
    <Class name = 'ForEachDecreasingForStmt' isAbstract = 'false' supertypes = 'Bossa::ForStmt'>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'seqStmt' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::SeqStmt' opposite = ''/>
    </Class>
    <Class name = 'ReturnStmt' isAbstract = 'false' supertypes = 'Bossa::Statment'>
      <Reference name = 'expr' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'SwitchStmt' isAbstract = 'false' supertypes = 'Bossa::Statment'>
      <Reference name = 'locExpr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::LocExpr' opposite = ''/>
      <Reference name = 'composantOfSwitchStmt' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ComposantOfSwitchStmt' opposite = ''/>
    </Class>
    <Class name = 'AssignStmt' isAbstract = 'false' supertypes = 'Bossa::Statment'>
      <Reference name = 'locExpr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::LocExpr' opposite = ''/>
      <Reference name = 'assignUnop' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::AssignUnop' opposite = ''/>
      <Reference name = 'assignBinop' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::AssignBinop' opposite = ''/>
      <Reference name = 'expr' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'MoveStmt' isAbstract = 'true' supertypes = 'Bossa::Statment'>
      <Attribute name = 'isHead' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isTail' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Reference name = 'moveExpr' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::MoveExpr' opposite = ''/>
    </Class>
    <Class name = 'NormalMoveStmt' isAbstract = 'false' supertypes = 'Bossa::MoveStmt'>
      <Reference name = 'stateRef' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::StateRef' opposite = ''/>
    </Class>
    <Class name = 'ForwardMoveStmt' isAbstract = 'false' supertypes = 'Bossa::MoveStmt'/>
    <Class name = 'StateRef' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'stateRef' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'DeferStmt' isAbstract = 'false' supertypes = 'Bossa::Statment'>
      <Attribute name = 'deferStmt' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'PrimStmt' isAbstract = 'false' supertypes = 'Bossa::Statment'>
      <Reference name = 'expr' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::Expression' opposite = ''/>
    </Class>
    <Class name = 'ErrorStmt' isAbstract = 'false' supertypes = 'Bossa::Statment'>
      <Attribute name = 'errorType' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'BreakStmt' isAbstract = 'false' supertypes = 'Bossa::Statment'/>
    <Class name = 'LocExpr' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'stateName' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'id' lower = '0' upper = '-1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'MoveExpr' isAbstract = 'true' supertypes = ''/>
    <Class name = 'Select_MoveExpr' isAbstract = 'false' supertypes = 'Bossa::MoveExpr'/>
    <Class name = 'SatateName_MoveExpr' isAbstract = 'false' supertypes = 'Bossa::MoveExpr'/>
    <Class name = 'ID_MoveExpr' isAbstract = 'false' supertypes = 'Bossa::MoveExpr'>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'IDSource_MoveExpr' isAbstract = 'false' supertypes = 'Bossa::MoveExpr'>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'IDTarget_MoveExpr' isAbstract = 'false' supertypes = 'Bossa::MoveExpr'>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'ClassState' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'state' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Reference name = 'className' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ClassName' opposite = ''/>
    </Class>
    <Class name = 'OnHandlerDef' isAbstract = 'false' supertypes = ''>
      <Reference name = 'eventName' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::EventName' opposite = ''/>
      <Reference name = 'seqStmt' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::SeqStmt' opposite = ''/>
    </Class>
    <Class name = 'EventName' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'eventNameLeft' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'eventNameRight' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'ComposantOfSwitchStmt' isAbstract = 'false' supertypes = ''>
      <Reference name = 'classState' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ClassState' opposite = ''/>
      <Reference name = 'seqStmt' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::SeqStmt' opposite = ''/>
    </Class>
    <Class name = 'ComposantOfInterFunc' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'typeOrVoid' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::TypeOrVoid' opposite = ''/>
      <Reference name = 'paramVarDecl' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::ParamVarDecl' opposite = ''/>
      <Reference name = 'seqStmt' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Bossa::SeqStmt' opposite = ''/>
    </Class>
    <Class name = 'BossaTypeExpr' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'bossaTypeExpr' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'QueueType' isAbstract = 'true' supertypes = ''/>
    <Class name = 'Normal_QueueType' isAbstract = 'false' supertypes = 'Bossa::QueueType'/>
    <Class name = 'Fifo_QueueType' isAbstract = 'false' supertypes = 'Bossa::QueueType'/>
    <Class name = 'Lifo_QueueType' isAbstract = 'false' supertypes = 'Bossa::QueueType'/>
    <Class name = 'Critop' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'lowest' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'highest' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'StateVisibility' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'public' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'private' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'ClassName' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'className' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'NonProcType' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'system' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'struct' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'nonProcType' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'Unop' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'plus' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'minus' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'excl' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'tild' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'Binop' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'plus' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'minus' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'star' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'slash' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'percentage' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'doubleAnd' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'doubleVerticalBar' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'and' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'eq' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'ne' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'lt' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'gt' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'le' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'ge' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'doubleLt' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'doubleGt' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'AssignUnop' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'doublePlus' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'doubleMoins' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'AssignBinop' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'affect' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'plusEqual' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'moinsEqual' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'starEqual' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'slashEqual' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'percentageEqual' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'andEqual' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'orEqual' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'doubleLtEqual' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'doubleGtEqual' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
  </Package>
  <Package name = 'PrimitiveTypes'>
    <DataType name = 'String'/>
    <DataType name = 'Boolean'/>
    <DataType name = 'Integer'/>
  </Package>
</Metamodel>
