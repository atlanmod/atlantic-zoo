<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<Metamodel>
  <Package name = 'SimpleSBVR'>
    <Class name = 'Root' isAbstract = 'false' supertypes = ''>
      <Reference name = 'elements' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'SimpleSBVR::Element' opposite = ''/>
    </Class>
    <Class name = 'Element' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'objectName' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'Representation' isAbstract = 'false' supertypes = 'SimpleSBVR::Element'>
      <Reference name = 'meaning' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::Meaning' opposite = 'SimpleSBVR::Meaning::representations'/>
    </Class>
    <Class name = 'Designation' isAbstract = 'false' supertypes = 'SimpleSBVR::Representation'>
      <Reference name = 'text' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::Text' opposite = ''/>
    </Class>
    <Class name = 'Text' isAbstract = 'false' supertypes = 'SimpleSBVR::Element'>
      <Attribute name = 'value' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'Meaning' isAbstract = 'false' supertypes = 'SimpleSBVR::Element'>
      <Reference name = 'representations' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::Representation' opposite = 'SimpleSBVR::Representation::meaning'/>
    </Class>
    <Class name = 'Concept' isAbstract = 'false' supertypes = 'SimpleSBVR::Meaning'/>
    <Class name = 'NounConcept' isAbstract = 'false' supertypes = 'SimpleSBVR::Concept'/>
    <Class name = 'ObjectType' isAbstract = 'false' supertypes = 'SimpleSBVR::NounConcept'>
      <Reference name = 'specializes' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::ObjectType' opposite = 'SimpleSBVR::ObjectType::generalizes'/>
      <Reference name = 'generalizes' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::ObjectType' opposite = 'SimpleSBVR::ObjectType::specializes'/>
    </Class>
    <Class name = 'IndividualConcept' isAbstract = 'false' supertypes = 'SimpleSBVR::NounConcept'>
      <Reference name = 'instanceOf' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::ObjectType' opposite = ''/>
    </Class>
    <Class name = 'DataType' isAbstract = 'false' supertypes = 'SimpleSBVR::NounConcept'/>
    <Class name = 'NonEmptyString' isAbstract = 'false' supertypes = 'SimpleSBVR::DataType'>
      <Attribute name = 'value' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'NonNegativeInteger' isAbstract = 'false' supertypes = 'SimpleSBVR::DataType'>
      <Attribute name = 'value' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Integer'/>
    </Class>
    <Class name = 'FactType' isAbstract = 'false' supertypes = 'SimpleSBVR::Concept'/>
    <Class name = 'BinaryFactType' isAbstract = 'false' supertypes = 'SimpleSBVR::FactType'>
      <Reference name = 'role1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::FactTypeRole' opposite = ''/>
      <Reference name = 'role2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::FactTypeRole' opposite = ''/>
    </Class>
    <Class name = 'IsPropertyOfFactType' isAbstract = 'false' supertypes = 'SimpleSBVR::BinaryFactType'/>
    <Class name = 'AssociativeFactType' isAbstract = 'false' supertypes = 'SimpleSBVR::BinaryFactType'/>
    <Class name = 'CategorizationFactType' isAbstract = 'false' supertypes = 'SimpleSBVR::BinaryFactType'/>
    <Class name = 'ObjectificationFactType' isAbstract = 'false' supertypes = 'SimpleSBVR::BinaryFactType'/>
    <Class name = 'Role' isAbstract = 'false' supertypes = 'SimpleSBVR::Element'>
      <Reference name = 'nounConcept' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::NounConcept' opposite = ''/>
    </Class>
    <Class name = 'FactTypeRole' isAbstract = 'false' supertypes = 'SimpleSBVR::Role'/>
    <Class name = 'LogicalFormulation' isAbstract = 'false' supertypes = 'SimpleSBVR::Meaning'/>
    <Class name = 'AtomicFormulation' isAbstract = 'false' supertypes = 'SimpleSBVR::LogicalFormulation'>
      <Reference name = 'isBasedOn' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::FactType' opposite = ''/>
    </Class>
    <Class name = 'BinaryAtomicFormulation' isAbstract = 'false' supertypes = 'SimpleSBVR::AtomicFormulation'>
      <Reference name = 'roleBinding1' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::RoleBinding' opposite = ''/>
      <Reference name = 'roleBinding2' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::RoleBinding' opposite = ''/>
    </Class>
    <Class name = 'NecessityFormulation' isAbstract = 'false' supertypes = 'SimpleSBVR::LogicalFormulation'/>
    <Class name = 'Quantification' isAbstract = 'false' supertypes = 'SimpleSBVR::LogicalFormulation'>
      <Reference name = 'introducedVariable' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::Variable' opposite = ''/>
      <Reference name = 'scopesOver' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::LogicalFormulation' opposite = ''/>
    </Class>
    <Class name = 'UniversalQuantification' isAbstract = 'false' supertypes = 'SimpleSBVR::Quantification'/>
    <Class name = 'AtLeastNQuantification' isAbstract = 'false' supertypes = 'SimpleSBVR::Quantification'>
      <Reference name = 'minCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::NonNegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'ExactlyNQuantification' isAbstract = 'false' supertypes = 'SimpleSBVR::Quantification'>
      <Reference name = 'cardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::NonNegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'AtMostNQuantification' isAbstract = 'false' supertypes = 'SimpleSBVR::Quantification'>
      <Reference name = 'maxCardinality' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::NonNegativeInteger' opposite = ''/>
    </Class>
    <Class name = 'BindableTarget' isAbstract = 'false' supertypes = 'SimpleSBVR::Element'/>
    <Class name = 'Variable' isAbstract = 'false' supertypes = 'SimpleSBVR::BindableTarget'>
      <Reference name = 'rangesOver' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::ObjectType' opposite = ''/>
    </Class>
    <Class name = 'RoleBinding' isAbstract = 'false' supertypes = 'SimpleSBVR::Element'>
      <Reference name = 'occursIn' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::AtomicFormulation' opposite = ''/>
      <Reference name = 'isOf' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::FactType' opposite = ''/>
      <Reference name = 'bindsTo' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'SimpleSBVR::BindableTarget' opposite = ''/>
    </Class>
  </Package>
  <Package name = 'PrimitiveTypes'>
    <DataType name = 'String'/>
    <DataType name = 'Integer'/>
  </Package>
</Metamodel>
