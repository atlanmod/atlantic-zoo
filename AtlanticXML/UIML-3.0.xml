<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<Metamodel>
  <Package name = 'UIML'>
    <Class name = 'UIML' isAbstract = 'false' supertypes = ''>
      <Reference name = 'head' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'UIML::Header' opposite = ''/>
      <Reference name = 'templates' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Template::Template' opposite = ''/>
      <Reference name = 'interfaces' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Interface' opposite = ''/>
      <Reference name = 'peers' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Peer::Peer' opposite = ''/>
    </Class>
    <Class name = 'Header' isAbstract = 'false' supertypes = ''>
      <Reference name = 'metas' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'UIML::MetaData' opposite = ''/>
    </Class>
    <Class name = 'MetaData' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'content' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
  </Package>
  <Package name = 'Interface'>
    <Class name = 'ExtensibleElement' isAbstract = 'true' supertypes = ''/>
    <Class name = 'Source' isAbstract = 'true' supertypes = ''/>
    <Class name = 'LocalSource' isAbstract = 'false' supertypes = 'Interface::Source'>
      <Reference name = 'source' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::ExtensibleElement' opposite = ''/>
    </Class>
    <Class name = 'RemoteSource' isAbstract = 'false' supertypes = 'Interface::Source'>
      <Attribute name = 'location' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'Interface' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'structure' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Structure' opposite = ''/>
      <Reference name = 'style' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Style' opposite = ''/>
      <Reference name = 'content' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Content' opposite = ''/>
      <Reference name = 'behavior' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Behavior' opposite = ''/>
    </Class>
    <Class name = 'Structure' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'parts' lower = '0' upper = '-1' isOrdered = 'true' isContainer = 'true' type = 'Interface::Part' opposite = ''/>
    </Class>
    <Class name = 'Part' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Attribute name = 'class' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'wherePart' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'style' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Style' opposite = ''/>
      <Reference name = 'content' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Content' opposite = ''/>
      <Reference name = 'behavior' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Behavior' opposite = ''/>
      <Reference name = 'parts' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Part' opposite = ''/>
      <Reference name = 'repeats' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Repeat' opposite = ''/>
    </Class>
    <Class name = 'Style' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'properties' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Property' opposite = ''/>
    </Class>
    <Class name = 'Property' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'name' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Attribute name = 'values' lower = '0' upper = '-1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'parts' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Part' opposite = ''/>
      <Reference name = 'events' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Event' opposite = ''/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'constants' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Constant' opposite = ''/>
      <Reference name = 'properties' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Property' opposite = ''/>
      <Reference name = 'references' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Reference' opposite = ''/>
      <Reference name = 'calls' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Call' opposite = ''/>
      <Reference name = 'iterators' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Iterator' opposite = ''/>
    </Class>
    <Class name = 'Content' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'constants' lower = '0' upper = '-1' isOrdered = 'true' isContainer = 'true' type = 'Interface::Constant' opposite = ''/>
    </Class>
    <Class name = 'Behavior' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'rules' lower = '0' upper = '-1' isOrdered = 'true' isContainer = 'true' type = 'Interface::Rule' opposite = ''/>
    </Class>
    <Class name = 'Repeat' isAbstract = 'false' supertypes = ''>
      <Reference name = 'iterator' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Iterator' opposite = ''/>
      <Reference name = 'parts' lower = '1' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Part' opposite = ''/>
    </Class>
    <Class name = 'Constant' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Attribute name = 'model' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'value' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'constants' lower = '0' upper = '-1' isOrdered = 'true' isContainer = 'true' type = 'Interface::Constant' opposite = ''/>
    </Class>
    <Class name = 'Reference' isAbstract = 'false' supertypes = ''>
      <Reference name = 'constant' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Constant' opposite = ''/>
    </Class>
    <Class name = 'Rule' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'condition' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Condition' opposite = ''/>
      <Reference name = 'action' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Action' opposite = ''/>
    </Class>
    <Class name = 'Condition' isAbstract = 'true' supertypes = ''/>
    <Class name = 'EventCondition' isAbstract = 'false' supertypes = 'Interface::Condition'>
      <Reference name = 'event' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Event' opposite = ''/>
    </Class>
    <Class name = 'EqualCondition' isAbstract = 'false' supertypes = 'Interface::Condition'>
      <Reference name = 'equal' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Equal' opposite = ''/>
    </Class>
    <Class name = 'OpCondition' isAbstract = 'false' supertypes = 'Interface::Condition'>
      <Reference name = 'op' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Operation' opposite = ''/>
    </Class>
    <Class name = 'Action' isAbstract = 'false' supertypes = ''/>
    <Class name = 'Action_1' isAbstract = 'false' supertypes = 'Interface::Action'>
      <Reference name = 'event' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Event' opposite = ''/>
      <Reference name = 'properties' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Property' opposite = ''/>
      <Reference name = 'calls' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Call' opposite = ''/>
      <Reference name = 'restructures' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Restructure' opposite = ''/>
    </Class>
    <Class name = 'Action_2' isAbstract = 'false' supertypes = 'Interface::Action'>
      <Reference name = 'whenTrue' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::WhenTrue' opposite = ''/>
      <Reference name = 'whenFalse' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::WhenFalse' opposite = ''/>
      <Reference name = 'byDefault' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::ByDefault' opposite = ''/>
    </Class>
    <Class name = 'Call' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'name' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'params' lower = '0' upper = '-1' isOrdered = 'true' isContainer = 'true' type = 'Interface::Parameter' opposite = ''/>
    </Class>
    <Class name = 'Parameter' isAbstract = 'true' supertypes = ''>
      <Attribute name = 'name' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'PropertyParameter' isAbstract = 'false' supertypes = 'Interface::Parameter'>
      <Reference name = 'property' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Property' opposite = ''/>
    </Class>
    <Class name = 'ReferenceParameter' isAbstract = 'false' supertypes = 'Interface::Parameter'>
      <Reference name = 'reference' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Reference' opposite = ''/>
    </Class>
    <Class name = 'CallParameter' isAbstract = 'false' supertypes = 'Interface::Parameter'>
      <Reference name = 'call' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Call' opposite = ''/>
    </Class>
    <Class name = 'OperationParameter' isAbstract = 'false' supertypes = 'Interface::Parameter'>
      <Reference name = 'op' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Operation' opposite = ''/>
    </Class>
    <Class name = 'EventParameter' isAbstract = 'false' supertypes = 'Interface::Parameter'>
      <Reference name = 'event' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Event' opposite = ''/>
    </Class>
    <Class name = 'ConstantParameter' isAbstract = 'false' supertypes = 'Interface::Parameter'>
      <Reference name = 'constant' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Constant' opposite = ''/>
    </Class>
    <Class name = 'IteratorParameter' isAbstract = 'false' supertypes = 'Interface::Parameter'>
      <Reference name = 'iterator' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Iterator' opposite = ''/>
    </Class>
    <Class name = 'Iterator' isAbstract = 'true' supertypes = ''>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'ConstantIterator' isAbstract = 'false' supertypes = 'Interface::Iterator'>
      <Reference name = 'constant' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Constant' opposite = ''/>
    </Class>
    <Class name = 'PropertyIterator' isAbstract = 'false' supertypes = 'Interface::Iterator'>
      <Reference name = 'property' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Property' opposite = ''/>
    </Class>
    <Class name = 'CallIterator' isAbstract = 'false' supertypes = 'Interface::Iterator'>
      <Reference name = 'call' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Call' opposite = ''/>
    </Class>
    <Class name = 'TextIterator' isAbstract = 'false' supertypes = 'Interface::Iterator'>
      <Attribute name = 'value' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Integer'/>
    </Class>
    <Class name = 'Event' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'class' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'parts' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Part' opposite = ''/>
    </Class>
    <Class name = 'Equal' isAbstract = 'true' supertypes = ''>
      <Reference name = 'event' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Event' opposite = ''/>
    </Class>
    <Class name = 'EqualToConstant' isAbstract = 'false' supertypes = 'Interface::Equal'>
      <Reference name = 'constant' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Constant' opposite = ''/>
    </Class>
    <Class name = 'EqualToProperty' isAbstract = 'false' supertypes = 'Interface::Equal'>
      <Reference name = 'property' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Property' opposite = ''/>
    </Class>
    <Class name = 'EqualToReference' isAbstract = 'false' supertypes = 'Interface::Equal'>
      <Reference name = 'reference' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Reference' opposite = ''/>
    </Class>
    <Class name = 'EqualToOperation' isAbstract = 'false' supertypes = 'Interface::Equal'>
      <Reference name = 'op' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Operation' opposite = ''/>
    </Class>
    <Class name = 'Operation' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'constants' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Constant' opposite = ''/>
      <Reference name = 'properties' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Property' opposite = ''/>
      <Reference name = 'references' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Reference' opposite = ''/>
      <Reference name = 'calls' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Call' opposite = ''/>
      <Reference name = 'ops' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Operation' opposite = ''/>
      <Reference name = 'events' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Event' opposite = ''/>
    </Class>
    <Class name = 'Restructure' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Reference name = 'atPart' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Part' opposite = ''/>
      <Reference name = 'wherePart' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Part' opposite = ''/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'template' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Template::Template' opposite = ''/>
    </Class>
    <Class name = 'Branch' isAbstract = 'false' supertypes = ''>
      <Reference name = 'properties' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Property' opposite = ''/>
      <Reference name = 'calls' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Call' opposite = ''/>
      <Reference name = 'restructure' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Restructure' opposite = ''/>
      <Reference name = 'op' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Operation' opposite = ''/>
      <Reference name = 'equal' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Equal' opposite = ''/>
      <Reference name = 'event' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Event' opposite = ''/>
    </Class>
    <Class name = 'WhenTrue' isAbstract = 'false' supertypes = 'Interface::Branch'/>
    <Class name = 'WhenFalse' isAbstract = 'false' supertypes = 'Interface::Branch'/>
    <Class name = 'ByDefault' isAbstract = 'false' supertypes = 'Interface::Branch'/>
    <Enumeration name = 'HowKind'>
      <EnumLiteral name = 'append'/>
      <EnumLiteral name = 'cascade'/>
      <EnumLiteral name = 'replace'/>
      <EnumLiteral name = 'union'/>
      <EnumLiteral name = 'delete'/>
    </Enumeration>
    <Enumeration name = 'ExportKind'>
      <EnumLiteral name = 'hidden'/>
      <EnumLiteral name = 'optional'/>
      <EnumLiteral name = 'required'/>
    </Enumeration>
    <Enumeration name = 'WhereKind'>
      <EnumLiteral name = 'first'/>
      <EnumLiteral name = 'last'/>
      <EnumLiteral name = 'before'/>
      <EnumLiteral name = 'after'/>
    </Enumeration>
  </Package>
  <Package name = 'Peer'>
    <Class name = 'Peer' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'presentations' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Peer::Presentation' opposite = ''/>
      <Reference name = 'logics' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Peer::Logic' opposite = ''/>
    </Class>
    <Class name = 'Presentation' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Attribute name = 'base' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'dClasses' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Peer::DClass' opposite = ''/>
    </Class>
    <Class name = 'Logic' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'dComponents' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Peer::DComponent' opposite = ''/>
    </Class>
    <Class name = 'DComponent' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Attribute name = 'mapsTo' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'location' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'dMethods' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Peer::DMethod' opposite = ''/>
    </Class>
    <Class name = 'DClass' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Attribute name = 'mapsTo' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'mapsType' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'dMethods' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Peer::DMethod' opposite = ''/>
      <Reference name = 'dProperties' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Peer::DProperty' opposite = ''/>
      <Reference name = 'events' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Event' opposite = ''/>
      <Reference name = 'listeners' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Peer::Listener' opposite = ''/>
    </Class>
    <Class name = 'DProperty' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'mapsType' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Peer::MapsTypeKind'/>
      <Attribute name = 'mapsTo' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'returnType' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'dMethods' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Peer::DMethod' opposite = ''/>
      <Reference name = 'dParams' lower = '0' upper = '-1' isOrdered = 'false' isContainer = 'true' type = 'Peer::DParam' opposite = ''/>
    </Class>
    <Class name = 'DMethod' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Attribute name = 'mapsTo' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'returnType' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'source' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'false' type = 'Interface::Source' opposite = ''/>
      <Reference name = 'dParams' lower = '0' upper = '-1' isOrdered = 'true' isContainer = 'true' type = 'Peer::DParam' opposite = ''/>
      <Reference name = 'script' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Peer::Script' opposite = ''/>
    </Class>
    <Class name = 'DParam' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'type' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'value' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'Script' isAbstract = 'false' supertypes = 'Interface::ExtensibleElement'>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'type' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'how' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::HowKind'/>
      <Attribute name = 'export' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'Interface::ExportKind'/>
      <Attribute name = 'value' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'source' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'Listener' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'class' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Attribute name = 'attacher' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Enumeration name = 'UsedInTagKind'>
      <EnumLiteral name = 'event'/>
      <EnumLiteral name = 'listener'/>
      <EnumLiteral name = 'part'/>
    </Enumeration>
    <Enumeration name = 'MapsTypeKind'>
      <EnumLiteral name = 'attribute'/>
      <EnumLiteral name = 'getMethod'/>
      <EnumLiteral name = 'setMethod'/>
      <EnumLiteral name = 'method'/>
    </Enumeration>
  </Package>
  <Package name = 'Template'>
    <Class name = 'Template' isAbstract = 'true' supertypes = ''>
      <Attribute name = 'id' lower = '0' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'BehaviorTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'behavior' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Behavior' opposite = ''/>
    </Class>
    <Class name = 'DClassTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'dClass' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Peer::DClass' opposite = ''/>
    </Class>
    <Class name = 'DComponentTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'dComponent' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Peer::DComponent' opposite = ''/>
    </Class>
    <Class name = 'ConstantTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'constant' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Constant' opposite = ''/>
    </Class>
    <Class name = 'ContentTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'content' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Content' opposite = ''/>
    </Class>
    <Class name = 'InterfaceTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'interface' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Interface' opposite = ''/>
    </Class>
    <Class name = 'LogicTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'logic' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Peer::Logic' opposite = ''/>
    </Class>
    <Class name = 'PartTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'part' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Part' opposite = ''/>
    </Class>
    <Class name = 'PeerTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'peer' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Peer::Peer' opposite = ''/>
    </Class>
    <Class name = 'PresentationTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'presentation' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Peer::Presentation' opposite = ''/>
    </Class>
    <Class name = 'PropertyTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'property' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Property' opposite = ''/>
    </Class>
    <Class name = 'RestructureTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'restructure' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Restructure' opposite = ''/>
    </Class>
    <Class name = 'RuleTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'rule' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Rule' opposite = ''/>
    </Class>
    <Class name = 'ScriptTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'script' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Peer::Script' opposite = ''/>
    </Class>
    <Class name = 'StructureTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'structure' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Structure' opposite = ''/>
    </Class>
    <Class name = 'StyleTemplate' isAbstract = 'false' supertypes = 'Template::Template'>
      <Reference name = 'style' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Interface::Style' opposite = ''/>
    </Class>
  </Package>
  <Package name = 'PrimitiveTypes'>
    <DataType name = 'String'/>
    <DataType name = 'Integer'/>
  </Package>
</Metamodel>
