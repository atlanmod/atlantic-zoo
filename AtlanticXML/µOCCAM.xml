<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<Metamodel>
  <Package name = 'Perceptory'>
    <Class name = 'Process' isAbstract = 'true' supertypes = ''/>
    <Class name = 'StopProcess' isAbstract = 'false' supertypes = 'Perceptory::Process'/>
    <Class name = 'SkipProcess' isAbstract = 'false' supertypes = 'Perceptory::Process'/>
    <Class name = 'Action' isAbstract = 'true' supertypes = 'Perceptory::Process'/>
    <Class name = 'Construction' isAbstract = 'false' supertypes = 'Perceptory::Process'/>
    <Class name = 'Instance' isAbstract = 'false' supertypes = 'Perceptory::Process'>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
    </Class>
    <Class name = 'Assignment' isAbstract = 'false' supertypes = 'Perceptory::Action'>
      <Reference name = 'variable' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Variable' opposite = ''/>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Expression' opposite = ''/>
    </Class>
    <Class name = 'Input' isAbstract = 'false' supertypes = 'Perceptory::Action'>
      <Reference name = 'channel' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Channel' opposite = ''/>
      <Reference name = 'variable' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Variable' opposite = ''/>
    </Class>
    <Class name = 'Output' isAbstract = 'false' supertypes = 'Perceptory::Action'>
      <Reference name = 'channel' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Channel' opposite = ''/>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Expression' opposite = ''/>
    </Class>
    <Class name = 'Sequence' isAbstract = 'true' supertypes = 'Perceptory::Construction'>
      <Reference name = 'process' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Process' opposite = ''/>
    </Class>
    <Class name = 'NormalSequence' isAbstract = 'false' supertypes = 'Perceptory::Sequence'/>
    <Class name = 'ReplicatorSequence' isAbstract = 'false' supertypes = 'Perceptory::Sequence'>
      <Reference name = 'replicator' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Replicator' opposite = ''/>
    </Class>
    <Class name = 'Conditional' isAbstract = 'true' supertypes = 'Perceptory::Construction'>
      <Reference name = 'choice' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Choice' opposite = ''/>
    </Class>
    <Class name = 'NormalConditional' isAbstract = 'false' supertypes = 'Perceptory::Conditional'/>
    <Class name = 'ReplicatorConditional' isAbstract = 'false' supertypes = 'Perceptory::Conditional'>
      <Reference name = 'replicator' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Replicator' opposite = ''/>
    </Class>
    <Class name = 'Loop' isAbstract = 'false' supertypes = 'Perceptory::Construction'>
      <Reference name = 'boolean' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::BooleanRef' opposite = ''/>
      <Reference name = 'process' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Process' opposite = ''/>
    </Class>
    <Class name = 'Parallel' isAbstract = 'true' supertypes = 'Perceptory::Construction'>
      <Reference name = 'process' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Process' opposite = ''/>
    </Class>
    <Class name = 'NormalParallel' isAbstract = 'false' supertypes = 'Perceptory::Parallel'/>
    <Class name = 'ReplicatorParallel' isAbstract = 'false' supertypes = 'Perceptory::Parallel'>
      <Reference name = 'replicator' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Replicator' opposite = ''/>
    </Class>
    <Class name = 'Alternation' isAbstract = 'false' supertypes = 'Perceptory::Construction'>
      <Reference name = 'alternative' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Alternative' opposite = ''/>
    </Class>
    <Class name = 'NormalAlternation' isAbstract = 'false' supertypes = 'Perceptory::Parallel'/>
    <Class name = 'ReplicatorAlternation' isAbstract = 'false' supertypes = 'Perceptory::Parallel'>
      <Reference name = 'replicator' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Replicator' opposite = ''/>
    </Class>
    <Class name = 'Choice' isAbstract = 'false' supertypes = ''>
      <Reference name = 'boolean' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::BooleanRef' opposite = ''/>
      <Reference name = 'process' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Process' opposite = ''/>
    </Class>
    <Class name = 'BooleanRef' isAbstract = 'false' supertypes = ''>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Expression' opposite = ''/>
    </Class>
    <Class name = 'Alternative' isAbstract = 'false' supertypes = ''>
      <Reference name = 'guard' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Guard' opposite = ''/>
      <Reference name = 'process' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Process' opposite = ''/>
    </Class>
    <Class name = 'Guard' isAbstract = 'true' supertypes = ''>
      <Reference name = 'input' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Input' opposite = ''/>
    </Class>
    <Class name = 'InputGuard' isAbstract = 'false' supertypes = 'Perceptory::Guard'/>
    <Class name = 'BooleanGuard' isAbstract = 'false' supertypes = 'Perceptory::Guard'>
      <Reference name = 'boolean' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::BooleanRef' opposite = ''/>
    </Class>
    <Class name = 'Replicator' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'base' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Base' opposite = ''/>
      <Reference name = 'count' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Count' opposite = ''/>
    </Class>
    <Class name = 'Base' isAbstract = 'false' supertypes = ''>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Expression' opposite = ''/>
    </Class>
    <Class name = 'Count' isAbstract = 'false' supertypes = ''>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Expression' opposite = ''/>
    </Class>
    <Class name = 'Type' isAbstract = 'false' supertypes = ''>
      <Reference name = 'primitiveType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::PrimitiveType' opposite = ''/>
      <Reference name = 'expression' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Expression' opposite = ''/>
    </Class>
    <Class name = 'PrimitiveType' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'isInt' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'isChan' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'Literal' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'integer' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Integer'/>
    </Class>
    <Class name = 'Element' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'subscript' lower = '0' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Subscript' opposite = ''/>
    </Class>
    <Class name = 'Subscript' isAbstract = 'false' supertypes = ''>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Expression' opposite = ''/>
    </Class>
    <Class name = 'Variable' isAbstract = 'false' supertypes = ''>
      <Reference name = 'element' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Element' opposite = ''/>
    </Class>
    <Class name = 'Channel' isAbstract = 'false' supertypes = ''>
      <Reference name = 'element' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Element' opposite = ''/>
    </Class>
    <Class name = 'Operand' isAbstract = 'true' supertypes = ''/>
    <Class name = 'VariableOPerand' isAbstract = 'false' supertypes = 'Perceptory::Variable'/>
    <Class name = 'LiteralOperand' isAbstract = 'false' supertypes = 'Perceptory::Literal'/>
    <Class name = 'ExpressionOperand' isAbstract = 'false' supertypes = 'Perceptory::Expression'/>
    <Class name = 'Expression' isAbstract = 'true' supertypes = ''>
      <Reference name = 'operand' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Operand' opposite = ''/>
    </Class>
    <Class name = 'MonadicExpression' isAbstract = 'false' supertypes = 'Perceptory::Expression'>
      <Reference name = 'monadicOperator' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::MonadicOperator' opposite = ''/>
    </Class>
    <Class name = 'DyadicExpression' isAbstract = 'false' supertypes = 'Perceptory::Expression'>
      <Reference name = 'operandRight' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Operand' opposite = ''/>
      <Reference name = 'dyadicOperator' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::DyadicOperator' opposite = ''/>
    </Class>
    <Class name = 'SimpleExpression' isAbstract = 'false' supertypes = 'Perceptory::Expression'/>
    <Class name = 'Specification' isAbstract = 'true' supertypes = 'Perceptory::Process'/>
    <Class name = 'Declaration' isAbstract = 'true' supertypes = 'Perceptory::Specification'/>
    <Class name = 'TypeDeclaration' isAbstract = 'false' supertypes = 'Perceptory::Declaration'>
      <Reference name = 'type' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Type' opposite = ''/>
    </Class>
    <Class name = 'IntDeclaration' isAbstract = 'false' supertypes = 'Perceptory::Declaration'>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Expression' opposite = ''/>
    </Class>
    <Class name = 'ValDeclaration' isAbstract = 'false' supertypes = 'Perceptory::Declaration'>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'expression' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Expression' opposite = ''/>
    </Class>
    <Class name = 'Definition' isAbstract = 'false' supertypes = 'Perceptory::Specification'>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'procedureBody' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::ProcedureBody' opposite = ''/>
    </Class>
    <Class name = 'Formal' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'primitiveType' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::PrimitiveType' opposite = ''/>
    </Class>
    <Class name = 'ProcedureBody' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'name' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::String'/>
      <Reference name = 'process' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Process' opposite = ''/>
    </Class>
    <Class name = 'Actual' isAbstract = 'false' supertypes = ''>
      <Reference name = 'element' lower = '1' upper = '1' isOrdered = 'false' isContainer = 'true' type = 'Perceptory::Element' opposite = ''/>
    </Class>
    <Class name = 'MonadicOperator' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'minus' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'not' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
    <Class name = 'DyadicOperator' isAbstract = 'false' supertypes = ''>
      <Attribute name = 'plus' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'minus' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'star' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'slash' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'or' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'inverseSlash' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'and' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'eq' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'ne' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'lt' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'gt' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'le' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
      <Attribute name = 'ge' lower = '1' upper = '1' isOrdered = 'false' isUnique = 'false' type = 'PrimitiveTypes::Boolean'/>
    </Class>
  </Package>
  <Package name = 'PrimitiveTypes'>
    <DataType name = 'String'/>
    <DataType name = 'Boolean'/>
    <DataType name = 'Integer'/>
  </Package>
</Metamodel>
