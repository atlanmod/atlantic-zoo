universe Perceptory_Process

	universe Perceptory_StopProcess < Perceptory_Process

	universe Perceptory_SkipProcess < Perceptory_Process

	universe Perceptory_Action < Perceptory_Process

	universe Perceptory_Construction < Perceptory_Process

	universe Perceptory_Instance < Perceptory_Process

	function name(a : Perceptory_Instance, b : String) -> Bool

	universe Perceptory_Assignment < Perceptory_Action

	function variable(a : Perceptory_Assignment, b : Perceptory_Variable) -> Bool

	function expression(a : Perceptory_Assignment, b : Perceptory_Expression) -> Bool

	universe Perceptory_Input < Perceptory_Action

	function channel(a : Perceptory_Input, b : Perceptory_Channel) -> Bool

	function variable(a : Perceptory_Input, b : Perceptory_Variable) -> Bool

	universe Perceptory_Output < Perceptory_Action

	function channel(a : Perceptory_Output, b : Perceptory_Channel) -> Bool

	function expression(a : Perceptory_Output, b : Perceptory_Expression) -> Bool

	universe Perceptory_Sequence < Perceptory_Construction

	function process(a : Perceptory_Sequence, b : Perceptory_Process) -> Bool

	universe Perceptory_NormalSequence < Perceptory_Sequence

	universe Perceptory_ReplicatorSequence < Perceptory_Sequence

	function replicator(a : Perceptory_ReplicatorSequence, b : Perceptory_Replicator) -> Bool

	universe Perceptory_Conditional < Perceptory_Construction

	function choice(a : Perceptory_Conditional, b : Perceptory_Choice) -> Bool

	universe Perceptory_NormalConditional < Perceptory_Conditional

	universe Perceptory_ReplicatorConditional < Perceptory_Conditional

	function replicator(a : Perceptory_ReplicatorConditional, b : Perceptory_Replicator) -> Bool

	universe Perceptory_Loop < Perceptory_Construction

	function boolean(a : Perceptory_Loop, b : Perceptory_BooleanRef) -> Bool

	function process(a : Perceptory_Loop, b : Perceptory_Process) -> Bool

	universe Perceptory_Parallel < Perceptory_Construction

	function process(a : Perceptory_Parallel, b : Perceptory_Process) -> Bool

	universe Perceptory_NormalParallel < Perceptory_Parallel

	universe Perceptory_ReplicatorParallel < Perceptory_Parallel

	function replicator(a : Perceptory_ReplicatorParallel, b : Perceptory_Replicator) -> Bool

	universe Perceptory_Alternation < Perceptory_Construction

	function alternative(a : Perceptory_Alternation, b : Perceptory_Alternative) -> Bool

	universe Perceptory_NormalAlternation < Perceptory_Parallel

	universe Perceptory_ReplicatorAlternation < Perceptory_Parallel

	function replicator(a : Perceptory_ReplicatorAlternation, b : Perceptory_Replicator) -> Bool

	universe Perceptory_Choice

	function boolean(a : Perceptory_Choice, b : Perceptory_BooleanRef) -> Bool

	function process(a : Perceptory_Choice, b : Perceptory_Process) -> Bool

	universe Perceptory_BooleanRef

	function expression(a : Perceptory_BooleanRef, b : Perceptory_Expression) -> Bool

	universe Perceptory_Alternative

	function guard(a : Perceptory_Alternative, b : Perceptory_Guard) -> Bool

	function process(a : Perceptory_Alternative, b : Perceptory_Process) -> Bool

	universe Perceptory_Guard

	function input(a : Perceptory_Guard, b : Perceptory_Input) -> Bool

	universe Perceptory_InputGuard < Perceptory_Guard

	universe Perceptory_BooleanGuard < Perceptory_Guard

	function boolean(a : Perceptory_BooleanGuard, b : Perceptory_BooleanRef) -> Bool

	universe Perceptory_Replicator

	function name(a : Perceptory_Replicator, b : String) -> Bool

	function base_(a : Perceptory_Replicator, b : Perceptory_Base) -> Bool

	function count(a : Perceptory_Replicator, b : Perceptory_Count) -> Bool

	universe Perceptory_Base

	function expression(a : Perceptory_Base, b : Perceptory_Expression) -> Bool

	universe Perceptory_Count

	function expression(a : Perceptory_Count, b : Perceptory_Expression) -> Bool

	universe Perceptory_Type

	function primitiveType(a : Perceptory_Type, b : Perceptory_PrimitiveType) -> Bool

	function expression(a : Perceptory_Type, b : Perceptory_Expression) -> Bool

	universe Perceptory_PrimitiveType

	function isInt(a : Perceptory_PrimitiveType, b : Boolean) -> Bool

	function isChan(a : Perceptory_PrimitiveType, b : Boolean) -> Bool

	universe Perceptory_Literal

	function integer(a : Perceptory_Literal, b : Integer) -> Bool

	universe Perceptory_Element

	function name(a : Perceptory_Element, b : String) -> Bool

	function subscript(a : Perceptory_Element, b : Perceptory_Subscript) -> Bool

	universe Perceptory_Subscript

	function expression(a : Perceptory_Subscript, b : Perceptory_Expression) -> Bool

	universe Perceptory_Variable

	function element(a : Perceptory_Variable, b : Perceptory_Element) -> Bool

	universe Perceptory_Channel

	function element(a : Perceptory_Channel, b : Perceptory_Element) -> Bool

	universe Perceptory_Operand

	universe Perceptory_VariableOPerand < Perceptory_Variable

	universe Perceptory_LiteralOperand < Perceptory_Literal

	universe Perceptory_ExpressionOperand < Perceptory_Expression

	universe Perceptory_Expression

	function operand(a : Perceptory_Expression, b : Perceptory_Operand) -> Bool

	universe Perceptory_MonadicExpression < Perceptory_Expression

	function monadicOperator(a : Perceptory_MonadicExpression, b : Perceptory_MonadicOperator) -> Bool

	universe Perceptory_DyadicExpression < Perceptory_Expression

	function operandRight(a : Perceptory_DyadicExpression, b : Perceptory_Operand) -> Bool

	function dyadicOperator(a : Perceptory_DyadicExpression, b : Perceptory_DyadicOperator) -> Bool

	universe Perceptory_SimpleExpression < Perceptory_Expression

	universe Perceptory_Specification < Perceptory_Process

	universe Perceptory_Declaration < Perceptory_Specification

	universe Perceptory_TypeDeclaration < Perceptory_Declaration

	function type(a : Perceptory_TypeDeclaration, b : Perceptory_Type) -> Bool

	universe Perceptory_IntDeclaration < Perceptory_Declaration

	function name(a : Perceptory_IntDeclaration, b : String) -> Bool

	function expression(a : Perceptory_IntDeclaration, b : Perceptory_Expression) -> Bool

	universe Perceptory_ValDeclaration < Perceptory_Declaration

	function name(a : Perceptory_ValDeclaration, b : String) -> Bool

	function expression(a : Perceptory_ValDeclaration, b : Perceptory_Expression) -> Bool

	universe Perceptory_Definition < Perceptory_Specification

	function name(a : Perceptory_Definition, b : String) -> Bool

	function procedureBody(a : Perceptory_Definition, b : Perceptory_ProcedureBody) -> Bool

	universe Perceptory_Formal

	function name(a : Perceptory_Formal, b : String) -> Bool

	function primitiveType(a : Perceptory_Formal, b : Perceptory_PrimitiveType) -> Bool

	universe Perceptory_ProcedureBody

	function name(a : Perceptory_ProcedureBody, b : String) -> Bool

	function process(a : Perceptory_ProcedureBody, b : Perceptory_Process) -> Bool

	universe Perceptory_Actual

	function element(a : Perceptory_Actual, b : Perceptory_Element) -> Bool

	universe Perceptory_MonadicOperator

	function minus(a : Perceptory_MonadicOperator, b : Boolean) -> Bool

	function not(a : Perceptory_MonadicOperator, b : Boolean) -> Bool

	universe Perceptory_DyadicOperator

	function plus(a : Perceptory_DyadicOperator, b : Boolean) -> Bool

	function minus(a : Perceptory_DyadicOperator, b : Boolean) -> Bool

	function star(a : Perceptory_DyadicOperator, b : Boolean) -> Bool

	function slash(a : Perceptory_DyadicOperator, b : Boolean) -> Bool

	function or_(a : Perceptory_DyadicOperator, b : Boolean) -> Bool

	function inverseSlash(a : Perceptory_DyadicOperator, b : Boolean) -> Bool

	function and_(a : Perceptory_DyadicOperator, b : Boolean) -> Bool

	function eq(a : Perceptory_DyadicOperator, b : Boolean) -> Bool

	function ne(a : Perceptory_DyadicOperator, b : Boolean) -> Bool

	function lt(a : Perceptory_DyadicOperator, b : Boolean) -> Bool

	function gt(a : Perceptory_DyadicOperator, b : Boolean) -> Bool

	function le(a : Perceptory_DyadicOperator, b : Boolean) -> Bool

	function ge(a : Perceptory_DyadicOperator, b : Boolean) -> Bool
