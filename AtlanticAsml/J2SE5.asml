abstract class AbstractTypeDeclaration extends NamedElement
  var originalFileContent as Set of String
  var package as Set of PackageDeclaration
  // bodyDeclarations IsContainer
  var bodyDeclarations as Set of BodyDeclaration
  // superInterfaces IsContainer
  var superInterfaces as Set of NamedElementRef
  // commentsAfterBody IsContainer
  var commentsAfterBody as Set of Comment
  // imports IsContainer
  var imports as Set of ImportDeclaration
  // commentsBeforeBody IsContainer
  var commentsBeforeBody as Set of Comment

class Annotation extends Expression
  // _type IsContainer
  var _type as Set of NamedElementRef
  // values IsContainer
  var values as Set of AnnotationMemberValuePair

class AnnotationMemberValuePair extends ASTNode
  // member IsContainer
  var member as Set of NamedElementRef
  // value IsContainer
  var value as Set of Expression

class AnnotationTypeDeclaration extends AbstractTypeDeclaration

class AnnotationTypeMemberDeclaration extends NamedElement
  // _type IsContainer
  var _type as Set of NamedElementRef
  // default IsContainer
  var default as Set of Expression

class AnonymousClassDeclaration extends ASTNode
  // bodyDeclarations IsContainer
  var bodyDeclarations as Set of BodyDeclaration

class ArrayAccess extends Expression
  // index IsContainer
  var index as Set of Expression
  // array IsContainer
  var array as Set of Expression

class ArrayCreation extends Expression
  // dimensions IsContainer
  var dimensions as Set of Expression
  // initializer IsContainer
  var initializer as Set of ArrayInitializer
  // _type IsContainer
  var _type as Set of NamedElementRef

class ArrayInitializer extends Expression
  // expressions IsContainer
  var expressions as Set of Expression

class ArrayLengthAccess extends Expression
  // array IsContainer
  var array as Set of Expression

class AssertStatement extends Statement
  // message IsContainer
  var message as Set of Expression
  // expression IsContainer
  var expression as Set of Expression

class Assignment extends Expression
  var _operator as Set of String
  // rightHandSide IsContainer
  var rightHandSide as Set of Expression
  // leftHandSide IsContainer
  var leftHandSide as Set of Expression

abstract class ASTNode
  // comments IsContainer
  var comments as Set of Comment

abstract class BodyDeclaration extends ASTNode
  var modifiers as Set of String
  // annotations IsContainer
  var annotations as Set of Annotation

class Block extends Statement
  // statements IsContainer
  var statements as Set of Statement

class BlockComment extends Comment

class BreakStatement extends Statement
  // label IsContainer
  var label as Set of NamedElementRef

class CastExpression extends Expression
  // _type IsContainer
  var _type as Set of NamedElementRef
  // expression IsContainer
  var expression as Set of Expression

class CatchClause extends ASTNode
  // _exception IsContainer
  var _exception as Set of SingleVariableDeclaration
  // body IsContainer
  var body as Set of Block

class ClassInstanceCreation extends Expression
  // arguments IsContainer
  var arguments as Set of Expression
  // _type IsContainer
  var _type as Set of NamedElementRef
  // expression IsContainer
  var expression as Set of Expression
  // anonymousClassDeclaration IsContainer
  var anonymousClassDeclaration as Set of AnonymousClassDeclaration

abstract class Comment extends ASTNode
  var content as Set of String
  var isEnclosedByParent as Set of Boolean
  var isPrefixOfParent as Set of Boolean

class ConditionalExpression extends Expression
  // elseExpression IsContainer
  var elseExpression as Set of Expression
  // thenExpression IsContainer
  var thenExpression as Set of Expression
  // expression IsContainer
  var expression as Set of Expression

class ContinueStatement extends Statement
  // label IsContainer
  var label as Set of NamedElementRef

class ConstructorInvocation extends Statement
  // arguments IsContainer
  var arguments as Set of Expression

class DoStatement extends Statement
  // expression IsContainer
  var expression as Set of Expression
  // body IsContainer
  var body as Set of Statement

class EmptyStatement extends Statement

class EnhancedForStatement extends Statement
  // parameter IsContainer
  var parameter as Set of SingleVariableDeclaration
  // expression IsContainer
  var expression as Set of Expression
  // body IsContainer
  var body as Set of Statement

class EnumConstantDeclaration extends BodyDeclaration
  // arguments IsContainer
  var arguments as Set of Expression
  // anonymousClassDeclaration IsContainer
  var anonymousClassDeclaration as Set of AnonymousClassDeclaration

class EnumDeclaration extends AbstractTypeDeclaration
  // enumConstants IsContainer
  var enumConstants as Set of EnumConstantDeclaration

abstract class Expression extends ASTNode

class ExpressionStatement extends Statement
  // expression IsContainer
  var expression as Set of Expression

class FieldAccess extends Expression
  // field IsContainer
  var field as Set of NamedElementRef
  // expression IsContainer
  var expression as Set of Expression

class FieldDeclaration extends BodyDeclaration
  // _type IsContainer
  var _type as Set of NamedElementRef

class ForStatement extends Statement
  // body IsContainer
  var body as Set of Statement
  // expression IsContainer
  var expression as Set of Expression
  // initializers IsContainer
  var initializers as Set of Expression
  // updaters IsContainer
  var updaters as Set of Expression

class InfixExpression extends Expression
  var _operator as Set of String
  // extendedOperands IsContainer
  var extendedOperands as Set of Expression
  // rightOperand IsContainer
  var rightOperand as Set of Expression
  // leftOperand IsContainer
  var leftOperand as Set of Expression

class IfStatement extends Statement
  // expression IsContainer
  var expression as Set of Expression
  // elseStatement IsContainer
  var elseStatement as Set of Statement
  // thenStatement IsContainer
  var thenStatement as Set of Statement

class ImportDeclaration extends ASTNode
  var static as Set of Boolean
  // importedElement IsContainer
  var importedElement as Set of NamedElementRef

class Initializer extends BodyDeclaration
  // body IsContainer
  var body as Set of Block

class InstanceofExpression extends Expression
  // leftOperand IsContainer
  var leftOperand as Set of Expression
  // rightOperand IsContainer
  var rightOperand as Set of NamedElementRef

class Javadoc extends Comment
  // tags IsContainer
  var tags as Set of TagElement

class LabeledStatement extends Statement
  // body IsContainer
  var body as Set of Statement

class LineComment extends Comment

class MemberRef extends ASTNode
  // qualifier IsContainer
  var qualifier as Set of NamedElementRef
  // member IsContainer
  var member as Set of NamedElementRef

class MethodDeclaration extends NamedElement
  var extraArrayDimensions as Set of Integer
  var constructor as Set of Boolean
  var varargs as Set of Boolean
  // body IsContainer
  var body as Set of Block
  // parameters IsContainer
  var parameters as Set of SingleVariableDeclaration
  // typeParameters IsContainer
  var typeParameters as Set of TypeParameter
  // thrownExceptions IsContainer
  var thrownExceptions as Set of NamedElementRef
  // returnType IsContainer
  var returnType as Set of NamedElementRef

class MethodInvocation extends Expression
  // method IsContainer
  var method as Set of NamedElementRef
  // arguments IsContainer
  var arguments as Set of Expression
  // expression IsContainer
  var expression as Set of Expression

class MethodRef extends ASTNode
  // qualifier IsContainer
  var qualifier as Set of NamedElementRef
  // parameters IsContainer
  var parameters as Set of MethodRefParameter
  // method IsContainer
  var method as Set of NamedElementRef

class MethodRefParameter extends ASTNode
  var name as Set of String
  var isVarargs as Set of Boolean
  // _type IsContainer
  var _type as Set of NamedElementRef

class Model
  var name as Set of String
  // ownedElements IsContainer
  var ownedElements as Set of PackageDeclaration
  // orphanTypes IsContainer
  var orphanTypes as Set of OrphanType

abstract class MultipleValuedNamedElement extends ValuedNamedElement
  // fragments IsContainer
  var fragments as Set of SingleVariableDeclaration

abstract class NamedElement
  var name as Set of String
  var proxy as Set of Boolean

class NamedElementRef extends Expression
  var extraArrayDimensions as Set of Integer
  var element as Set of NamedElement
  // qualifier IsContainer
  var qualifier as Set of NamedElementRef

class OrphanType extends NamedElement

class PackageDeclaration extends ASTNode
  var model as Set of Model
  // ownedElements IsContainer
  var ownedElements as Set of AbstractTypeDeclaration

class ParameterizedType extends ASTNode
  // typeArguments IsContainer
  var typeArguments as Set of NamedElementRef
  // _type IsContainer
  var _type as Set of NamedElementRef

class ParenthesizedExpression extends Expression
  // expression IsContainer
  var expression as Set of Expression

class PostfixExpression extends Expression
  var _operator as Set of String
  // operand IsContainer
  var operand as Set of Expression

class PrefixExpression extends Expression
  var _operator as Set of String
  // operand IsContainer
  var operand as Set of Expression

class PrimitiveType extends ASTNode

class ReturnStatement extends Statement
  // expression IsContainer
  var expression as Set of Expression

class ThrowStatement extends Statement
  // expression IsContainer
  var expression as Set of Expression

class SingleVariableDeclaration extends ASTNode
  var modifiers as Set of String
  var isVarargs as Set of Boolean
  // _type IsContainer
  var _type as Set of NamedElementRef

abstract class Statement extends ASTNode

class SuperConstructorInvocation extends Statement
  // arguments IsContainer
  var arguments as Set of Expression
  // expression IsContainer
  var expression as Set of Expression

class SuperFieldAccess extends Expression
  // qualifier IsContainer
  var qualifier as Set of NamedElementRef
  // field IsContainer
  var field as Set of NamedElementRef

class SuperMethodInvocation extends Expression
  // arguments IsContainer
  var arguments as Set of Expression
  // qualifier IsContainer
  var qualifier as Set of NamedElementRef
  // method IsContainer
  var method as Set of NamedElementRef

class SwitchCase extends Statement
  var expressionInitialized as Set of Boolean
  // expression IsContainer
  var expression as Set of Expression

class SwitchStatement extends Statement
  // statements IsContainer
  var statements as Set of Statement
  // expression IsContainer
  var expression as Set of Expression

class SynchronizedStatement extends Statement
  // body IsContainer
  var body as Set of Block
  // expression IsContainer
  var expression as Set of Expression

class TagElement extends ASTNode
  var tagName as Set of String
  // fragments IsContainer
  var fragments as Set of ASTNode

class TextElement extends ASTNode
  var text as Set of String

class ThisExpression extends Expression
  // qualifier IsContainer
  var qualifier as Set of NamedElementRef

class TryStatement extends Statement
  // finally IsContainer
  var finally as Set of Block
  // body IsContainer
  var body as Set of Block
  // catchClauses IsContainer
  var catchClauses as Set of CatchClause

class TypeDeclaration extends AbstractTypeDeclaration
  var isInterface as Set of Boolean
  // typeParameters IsContainer
  var typeParameters as Set of TypeParameter
  // superclass IsContainer
  var superclass as Set of NamedElementRef

class TypeDeclarationStatement extends Statement
  // declaration IsContainer
  var declaration as Set of AbstractTypeDeclaration

class TypeLiteral extends Expression
  // _type IsContainer
  var _type as Set of NamedElementRef

class TypeParameter extends ASTNode
  // bounds IsContainer
  var bounds as Set of NamedElementRef

class UnresolvedItem extends NamedElement

abstract class ValuedNamedElement extends NamedElement
  var extraArrayDimensions as Set of Integer
  // initializer IsContainer
  var initializer as Set of Expression

class VariableDeclarationExpression extends Expression
  var modifiers as Set of String
  // _type IsContainer
  var _type as Set of NamedElementRef

class VariableDeclarationStatement extends Statement
  var modifiers as Set of String
  // _type IsContainer
  var _type as Set of NamedElementRef

class WildCardType extends OrphanType
  var isUpperBound as Set of Boolean
  // bound IsContainer
  var bound as Set of NamedElementRef

class WhileStatement extends Statement
  // expression IsContainer
  var expression as Set of Expression
  // body IsContainer
  var body as Set of Statement

var AbstractTypeDeclaration_Universe as Set of AbstractTypeDeclaration

var Annotation_Universe as Set of Annotation

var AnnotationMemberValuePair_Universe as Set of AnnotationMemberValuePair

var AnnotationTypeDeclaration_Universe as Set of AnnotationTypeDeclaration

var AnnotationTypeMemberDeclaration_Universe as Set of AnnotationTypeMemberDeclaration

var AnonymousClassDeclaration_Universe as Set of AnonymousClassDeclaration

var ArrayAccess_Universe as Set of ArrayAccess

var ArrayCreation_Universe as Set of ArrayCreation

var ArrayInitializer_Universe as Set of ArrayInitializer

var ArrayLengthAccess_Universe as Set of ArrayLengthAccess

var AssertStatement_Universe as Set of AssertStatement

var Assignment_Universe as Set of Assignment

var ASTNode_Universe as Set of ASTNode

var BodyDeclaration_Universe as Set of BodyDeclaration

var Block_Universe as Set of Block

var BlockComment_Universe as Set of BlockComment

var BreakStatement_Universe as Set of BreakStatement

var CastExpression_Universe as Set of CastExpression

var CatchClause_Universe as Set of CatchClause

var ClassInstanceCreation_Universe as Set of ClassInstanceCreation

var Comment_Universe as Set of Comment

var ConditionalExpression_Universe as Set of ConditionalExpression

var ContinueStatement_Universe as Set of ContinueStatement

var ConstructorInvocation_Universe as Set of ConstructorInvocation

var DoStatement_Universe as Set of DoStatement

var EmptyStatement_Universe as Set of EmptyStatement

var EnhancedForStatement_Universe as Set of EnhancedForStatement

var EnumConstantDeclaration_Universe as Set of EnumConstantDeclaration

var EnumDeclaration_Universe as Set of EnumDeclaration

var Expression_Universe as Set of Expression

var ExpressionStatement_Universe as Set of ExpressionStatement

var FieldAccess_Universe as Set of FieldAccess

var FieldDeclaration_Universe as Set of FieldDeclaration

var ForStatement_Universe as Set of ForStatement

var InfixExpression_Universe as Set of InfixExpression

var IfStatement_Universe as Set of IfStatement

var ImportDeclaration_Universe as Set of ImportDeclaration

var Initializer_Universe as Set of Initializer

var InstanceofExpression_Universe as Set of InstanceofExpression

var Javadoc_Universe as Set of Javadoc

var LabeledStatement_Universe as Set of LabeledStatement

var LineComment_Universe as Set of LineComment

var MemberRef_Universe as Set of MemberRef

var MethodDeclaration_Universe as Set of MethodDeclaration

var MethodInvocation_Universe as Set of MethodInvocation

var MethodRef_Universe as Set of MethodRef

var MethodRefParameter_Universe as Set of MethodRefParameter

var Model_Universe as Set of Model

var MultipleValuedNamedElement_Universe as Set of MultipleValuedNamedElement

var NamedElement_Universe as Set of NamedElement

var NamedElementRef_Universe as Set of NamedElementRef

var OrphanType_Universe as Set of OrphanType

var PackageDeclaration_Universe as Set of PackageDeclaration

var ParameterizedType_Universe as Set of ParameterizedType

var ParenthesizedExpression_Universe as Set of ParenthesizedExpression

var PostfixExpression_Universe as Set of PostfixExpression

var PrefixExpression_Universe as Set of PrefixExpression

var PrimitiveType_Universe as Set of PrimitiveType

var ReturnStatement_Universe as Set of ReturnStatement

var ThrowStatement_Universe as Set of ThrowStatement

var SingleVariableDeclaration_Universe as Set of SingleVariableDeclaration

var Statement_Universe as Set of Statement

var SuperConstructorInvocation_Universe as Set of SuperConstructorInvocation

var SuperFieldAccess_Universe as Set of SuperFieldAccess

var SuperMethodInvocation_Universe as Set of SuperMethodInvocation

var SwitchCase_Universe as Set of SwitchCase

var SwitchStatement_Universe as Set of SwitchStatement

var SynchronizedStatement_Universe as Set of SynchronizedStatement

var TagElement_Universe as Set of TagElement

var TextElement_Universe as Set of TextElement

var ThisExpression_Universe as Set of ThisExpression

var TryStatement_Universe as Set of TryStatement

var TypeDeclaration_Universe as Set of TypeDeclaration

var TypeDeclarationStatement_Universe as Set of TypeDeclarationStatement

var TypeLiteral_Universe as Set of TypeLiteral

var TypeParameter_Universe as Set of TypeParameter

var UnresolvedItem_Universe as Set of UnresolvedItem

var ValuedNamedElement_Universe as Set of ValuedNamedElement

var VariableDeclarationExpression_Universe as Set of VariableDeclarationExpression

var VariableDeclarationStatement_Universe as Set of VariableDeclarationStatement

var WildCardType_Universe as Set of WildCardType

var WhileStatement_Universe as Set of WhileStatement

Main()