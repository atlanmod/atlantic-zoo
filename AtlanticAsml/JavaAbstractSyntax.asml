class TagElement extends ASTNode
  var tagName as Set of String
  var nested as Set of Boolean
  // fragments IsContainer
  var fragments as Set of ASTNode

class SuperFieldAccess extends Expression
  // qualifier IsContainer
  var qualifier as Set of Name
  // name IsContainer
  var name as Set of SimpleName

abstract class AbstractTypeDeclaration extends BodyDeclaration
  var localTypeDeclaration as Set of Boolean
  var memberTypeDeclaration as Set of Boolean
  var packageMemberTypeDeclaration as Set of Boolean
  // bodyDeclarations IsContainer
  var bodyDeclarations as Set of BodyDeclaration
  // name IsContainer
  var name as Set of SimpleName

class ArrayAccess extends Expression
  // array IsContainer
  var array as Set of Expression
  // index IsContainer
  var index as Set of Expression

class EmptyStatement extends Statement

class PrefixExpression extends Expression
  var _operator as Set of PrefixExpresssionOperatorKind
  // operand IsContainer
  var operand as Set of Expression

class BreakStatement extends Statement
  // label IsContainer
  var label as Set of SimpleName

class SwitchCase extends Statement
  var default as Set of Boolean
  // expression IsContainer
  var expression as Set of Expression

class CharacterLiteral extends Expression
  var charValue as Set of Character
  var escapedValue as Set of String

class Javadoc extends Comment
  // tags IsContainer
  var tags as Set of TagElement

class QualifiedName extends Name
  // qualifier IsContainer
  var qualifier as Set of Name
  // name IsContainer
  var name as Set of SimpleName

class SuperConstructorInvocation extends Statement
  // typeArguments IsContainer
  var typeArguments as Set of _Type
  // arguments IsContainer
  var arguments as Set of Expression
  // expression IsContainer
  var expression as Set of Expression

class NullLiteral extends Expression

class TypeDeclaration extends AbstractTypeDeclaration
  var _interface as Set of Boolean
  // superclassType IsContainer
  var superclassType as Set of _Type
  // typeParameters IsContainer
  var typeParameters as Set of TypeParameter
  // superInterfaceTypes IsContainer
  var superInterfaceTypes as Set of _Type

class SwitchStatement extends Statement
  // expression IsContainer
  var expression as Set of Expression
  // statements IsContainer
  var statements as Set of Statement

abstract class ASTNode

class SimpleName extends Name
  var identifier as Set of String
  var declaration as Set of Boolean

class TypeParameter extends ASTNode
  // typeBounds IsContainer
  var typeBounds as Set of _Type
  // name IsContainer
  var name as Set of SimpleName

class DoStatement extends Statement
  // expression IsContainer
  var expression as Set of Expression
  // body IsContainer
  var body as Set of Statement

class ConditionalExpression extends Expression
  // elseExpression IsContainer
  var elseExpression as Set of Expression
  // thenExpression IsContainer
  var thenExpression as Set of Expression
  // expression IsContainer
  var expression as Set of Expression

class ClassInstanceCreation extends Expression
  // typeArguments IsContainer
  var typeArguments as Set of _Type
  // arguments IsContainer
  var arguments as Set of Expression
  // _type IsContainer
  var _type as Set of _Type
  // anonymousClassDeclaration IsContainer
  var anonymousClassDeclaration as Set of AnonymousClassDeclaration
  // expression IsContainer
  var expression as Set of Expression

class VariableDeclarationStatement extends Statement
  // modifiers IsContainer
  var modifiers as Set of ExtendedModifier
  // fragments IsContainer
  var fragments as Set of VariableDeclarationFragment
  // _type IsContainer
  var _type as Set of _Type

class LabeledStatement extends Statement
  // label IsContainer
  var label as Set of SimpleName
  // body IsContainer
  var body as Set of Statement

class Modifier extends ASTNode
  var _abstract as Set of Boolean
  var final as Set of Boolean
  var native as Set of Boolean
  var none as Set of Boolean
  var _private as Set of Boolean
  var _protected as Set of Boolean
  var _public as Set of Boolean
  var static as Set of Boolean
  var strictfp as Set of Boolean
  var synchronized as Set of Boolean
  var transient as Set of Boolean
  var volatile as Set of Boolean

class AnnotationTypeDeclaration extends AbstractTypeDeclaration

class SimpleType extends _Type
  // name IsContainer
  var name as Set of Name

abstract class Annotation extends Expression
  // typeName IsContainer
  var typeName as Set of Name

class InstanceofExpression extends Expression
  // rightOperand IsContainer
  var rightOperand as Set of _Type
  // leftOperand IsContainer
  var leftOperand as Set of Expression

class AST
  // root IsContainer
  var root as Set of ASTNode

class TextElement extends ASTNode
  var text as Set of String

class AnnotationTypeMemberDeclaration extends BodyDeclaration
  // name IsContainer
  var name as Set of SimpleName
  // _type IsContainer
  var _type as Set of _Type
  // default IsContainer
  var default as Set of Expression

class FieldAccess extends Expression
  // expression IsContainer
  var expression as Set of Expression
  // name IsContainer
  var name as Set of SimpleName

class ImportDeclaration extends ASTNode
  var onDemand as Set of Boolean
  var static as Set of Boolean
  // name IsContainer
  var name as Set of Name

class ReturnStatement extends Statement
  // expression IsContainer
  var expression as Set of Expression

class CatchClause extends ASTNode
  // body IsContainer
  var body as Set of Block
  // _exception IsContainer
  var _exception as Set of SingleVariableDeclaration

class MethodDeclaration extends BodyDeclaration
  var extraDimensions as Set of Integer
  var constructor as Set of Boolean
  var varargs as Set of Boolean
  // thrownExceptions IsContainer
  var thrownExceptions as Set of Name
  // body IsContainer
  var body as Set of Block
  // returnType IsContainer
  var returnType as Set of _Type
  // name IsContainer
  var name as Set of SimpleName
  // parameters IsContainer
  var parameters as Set of SingleVariableDeclaration
  // typeParameters IsContainer
  var typeParameters as Set of TypeParameter

class Initializer extends BodyDeclaration
  // body IsContainer
  var body as Set of Block

abstract class Expression extends ASTNode
  var resolveBoxing as Set of Boolean
  var resolveUnboxing as Set of Boolean

class ContinueStatement extends Statement
  // label IsContainer
  var label as Set of SimpleName

class PrimitiveType extends _Type
  var code as Set of String

class NormalAnnotation extends Annotation
  // values IsContainer
  var values as Set of MemberValuePair

class SingleVariableDeclaration extends VariableDeclaration
  var varargs as Set of Boolean
  // _type IsContainer
  var _type as Set of _Type
  // modifiers IsContainer
  var modifiers as Set of ExtendedModifier

class MemberValuePair extends ASTNode
  // name IsContainer
  var name as Set of SimpleName
  // value IsContainer
  var value as Set of Expression

abstract class VariableDeclaration extends ASTNode
  var extraDimensions as Set of Integer
  // initializer IsContainer
  var initializer as Set of Expression
  // name IsContainer
  var name as Set of SimpleName

class ForStatement extends Statement
  // initializers IsContainer
  var initializers as Set of Expression
  // body IsContainer
  var body as Set of Statement
  // updaters IsContainer
  var updaters as Set of Expression
  // expression IsContainer
  var expression as Set of Expression

abstract class ExtendedModifier

class VariableDeclarationExpression extends Expression
  // fragments IsContainer
  var fragments as Set of VariableDeclarationFragment
  // modifiers IsContainer
  var modifiers as Set of ExtendedModifier
  // _type IsContainer
  var _type as Set of _Type

class SingleMemberAnnotation extends Annotation
  // value IsContainer
  var value as Set of Expression

class TypeLiteral extends Expression
  // _type IsContainer
  var _type as Set of _Type

class MethodRef extends ASTNode
  // qualifier IsContainer
  var qualifier as Set of Name
  // name IsContainer
  var name as Set of SimpleName
  // parameters IsContainer
  var parameters as Set of MethodRefParameter

class PackageDeclaration extends ASTNode
  // annotations IsContainer
  var annotations as Set of Annotation
  // javadoc IsContainer
  var javadoc as Set of Javadoc
  // name IsContainer
  var name as Set of Name

class ArrayType extends _Type
  var dimensions as Set of Integer
  // componentType IsContainer
  var componentType as Set of _Type
  // elementType IsContainer
  var elementType as Set of _Type

abstract class _Type extends ASTNode

class ArrayInitializer extends Expression
  // expressions IsContainer
  var expressions as Set of Expression

class TryStatement extends Statement
  // finally IsContainer
  var finally as Set of Block
  // catchClauses IsContainer
  var catchClauses as Set of CatchClause
  // body IsContainer
  var body as Set of Block

class MemberRef extends ASTNode
  // name IsContainer
  var name as Set of SimpleName
  // qualifier IsContainer
  var qualifier as Set of Name

class EnumDeclaration extends AbstractTypeDeclaration
  // superInterfaceTypes IsContainer
  var superInterfaceTypes as Set of _Type
  // enumConstants IsContainer
  var enumConstants as Set of EnumConstantDeclaration

class TypeDeclarationStatement extends Statement
  // declaration IsContainer
  var declaration as Set of AbstractTypeDeclaration

class AssertStatement extends Statement
  // expression IsContainer
  var expression as Set of Expression
  // message IsContainer
  var message as Set of Expression

class Assignment extends Expression
  var _operator as Set of AssignementOperatorKind
  // leftHandSide IsContainer
  var leftHandSide as Set of Expression
  // rightHandSide IsContainer
  var rightHandSide as Set of Expression

class NumberLiteral extends Expression
  var token as Set of String

abstract class Comment extends ASTNode
  var alternateRoot as Set of ASTNode

class CompilationUnit extends ASTNode
  // comments IsContainer
  var comments as Set of Comment
  // package IsContainer
  var package as Set of PackageDeclaration
  // imports IsContainer
  var imports as Set of ImportDeclaration
  // types IsContainer
  var types as Set of AbstractTypeDeclaration

class StringLiteral extends Expression
  var escapedValue as Set of String
  var literalValue as Set of String

class BooleanLiteral extends Expression
  var booleanValue as Set of Boolean

class BlockComment extends Comment

class SynchronizedStatement extends Statement
  // body IsContainer
  var body as Set of Block
  // expression IsContainer
  var expression as Set of Expression

class MarkerAnnotation extends Annotation

class VariableDeclarationFragment extends VariableDeclaration

class IfStatement extends Statement
  // thenStatement IsContainer
  var thenStatement as Set of Statement
  // elseStatement IsContainer
  var elseStatement as Set of Statement
  // expression IsContainer
  var expression as Set of Expression

class FieldDeclaration extends BodyDeclaration
  // _type IsContainer
  var _type as Set of _Type
  // fragments IsContainer
  var fragments as Set of VariableDeclarationFragment

class ExpressionStatement extends Statement
  // expression IsContainer
  var expression as Set of Expression

class Block extends Statement
  // statements IsContainer
  var statements as Set of Statement

class SuperMethodInvocation extends Expression
  // name IsContainer
  var name as Set of Name
  // typeArguments IsContainer
  var typeArguments as Set of _Type
  // qualifier IsContainer
  var qualifier as Set of Name
  // arguments IsContainer
  var arguments as Set of Expression

class ParenthesizedExpression extends Expression
  // expression IsContainer
  var expression as Set of Expression

class InfixExpression extends Expression
  var _operator as Set of InfixExpressionOperatorKind
  // leftOperand IsContainer
  var leftOperand as Set of Expression
  // rightOperand IsContainer
  var rightOperand as Set of Expression
  // extendedOperands IsContainer
  var extendedOperands as Set of Expression

abstract class Name extends Expression
  var fullyQualifiedName as Set of String

class AnonymousClassDeclaration extends ASTNode
  // bodyDeclarations IsContainer
  var bodyDeclarations as Set of BodyDeclaration

class EnhancedForStatement extends Statement
  // body IsContainer
  var body as Set of Statement
  // expression IsContainer
  var expression as Set of Expression
  // parameter IsContainer
  var parameter as Set of SingleVariableDeclaration

class ParameterizedType extends _Type
  // _type IsContainer
  var _type as Set of _Type
  // typeArguments IsContainer
  var typeArguments as Set of _Type

class WildcardType extends _Type
  var upperBound as Set of Boolean
  // bound IsContainer
  var bound as Set of _Type

class EnumConstantDeclaration extends BodyDeclaration
  // name IsContainer
  var name as Set of SimpleName
  // anonymousClassDeclaration IsContainer
  var anonymousClassDeclaration as Set of AnonymousClassDeclaration
  // arguments IsContainer
  var arguments as Set of Expression

class ThisExpression extends Expression
  // qualifier IsContainer
  var qualifier as Set of Name

class LineComment extends Comment

class WhileStatement extends Statement
  // body IsContainer
  var body as Set of Statement
  // expression IsContainer
  var expression as Set of Expression

class ThrowStatement extends Statement
  // expression IsContainer
  var expression as Set of Expression

class MethodInvocation extends Expression
  // typeArguments IsContainer
  var typeArguments as Set of _Type
  // name IsContainer
  var name as Set of SimpleName
  // expression IsContainer
  var expression as Set of Expression
  // arguments IsContainer
  var arguments as Set of Expression

class PostfixExpression extends Expression
  var _operator as Set of PostfixExpresssionOperatorKind
  // operand IsContainer
  var operand as Set of Expression

class ArrayCreation extends Expression
  // _type IsContainer
  var _type as Set of ArrayType
  // dimensions IsContainer
  var dimensions as Set of Expression
  // initializer IsContainer
  var initializer as Set of ArrayInitializer

abstract class Statement extends ASTNode

class CastExpression extends Expression
  // expression IsContainer
  var expression as Set of Expression
  // _type IsContainer
  var _type as Set of _Type

abstract class BodyDeclaration extends ASTNode
  // javadoc IsContainer
  var javadoc as Set of Javadoc
  // modifiers IsContainer
  var modifiers as Set of ExtendedModifier

class QualifiedType extends _Type
  // qualifier IsContainer
  var qualifier as Set of _Type
  // name IsContainer
  var name as Set of SimpleName

class ConstructorInvocation extends Statement
  // arguments IsContainer
  var arguments as Set of Expression
  // typeArguments IsContainer
  var typeArguments as Set of _Type

class MethodRefParameter extends ASTNode
  var varargs as Set of Boolean
  // _type IsContainer
  var _type as Set of _Type
  // name IsContainer
  var name as Set of SimpleName

enum AssignementOperatorKind
  RIGHT_SHIFT_SIGNED_ASSIGN
  BIT_XOR_ASSIGN
  TIMES_ASSIGN
  LEFT_SHIFT_ASSIGN
  MINUS_ASSIGN
  BIT_OR_ASSIGN
  PLUS_ASSIGN
  ASSIGN
  RIGHT_SHIFT_UNSIGNED_ASSIGN
  REMAINDER_ASSIGN
  DIVIDE_ASSIGN
  BIT_AND_ASSIGN

enum PostfixExpresssionOperatorKind
  INCREMENT
  DECREMENT

enum PrefixExpresssionOperatorKind
  MINUS
  _NOT
  DECREMENT
  COMPLEMENT
  INCREMENT
  PLUS

enum InfixExpressionOperatorKind
  GREATER_EQUALS
  _OR
  RIGHT_SHIFT_SIGNED
  MINUS
  XOR
  LESS_EQUALS
  EQUALS
  NOT_EQUALS
  _AND
  PLUS
  GREATER
  CONDITIONAL_OR
  REMAINDER
  LESS
  LEFT_SHIFT
  RIGHT_SHIFT_UNSIGNED
  CONDITIONAL_AND
  TIMES
  DIVIDE

var TagElement_Universe as Set of TagElement

var SuperFieldAccess_Universe as Set of SuperFieldAccess

var AbstractTypeDeclaration_Universe as Set of AbstractTypeDeclaration

var ArrayAccess_Universe as Set of ArrayAccess

var EmptyStatement_Universe as Set of EmptyStatement

var PrefixExpression_Universe as Set of PrefixExpression

var BreakStatement_Universe as Set of BreakStatement

var SwitchCase_Universe as Set of SwitchCase

var CharacterLiteral_Universe as Set of CharacterLiteral

var Javadoc_Universe as Set of Javadoc

var QualifiedName_Universe as Set of QualifiedName

var SuperConstructorInvocation_Universe as Set of SuperConstructorInvocation

var NullLiteral_Universe as Set of NullLiteral

var TypeDeclaration_Universe as Set of TypeDeclaration

var SwitchStatement_Universe as Set of SwitchStatement

var ASTNode_Universe as Set of ASTNode

var SimpleName_Universe as Set of SimpleName

var TypeParameter_Universe as Set of TypeParameter

var DoStatement_Universe as Set of DoStatement

var ConditionalExpression_Universe as Set of ConditionalExpression

var ClassInstanceCreation_Universe as Set of ClassInstanceCreation

var VariableDeclarationStatement_Universe as Set of VariableDeclarationStatement

var LabeledStatement_Universe as Set of LabeledStatement

var Modifier_Universe as Set of Modifier

var AnnotationTypeDeclaration_Universe as Set of AnnotationTypeDeclaration

var SimpleType_Universe as Set of SimpleType

var Annotation_Universe as Set of Annotation

var InstanceofExpression_Universe as Set of InstanceofExpression

var AST_Universe as Set of AST

var TextElement_Universe as Set of TextElement

var AnnotationTypeMemberDeclaration_Universe as Set of AnnotationTypeMemberDeclaration

var FieldAccess_Universe as Set of FieldAccess

var ImportDeclaration_Universe as Set of ImportDeclaration

var ReturnStatement_Universe as Set of ReturnStatement

var CatchClause_Universe as Set of CatchClause

var MethodDeclaration_Universe as Set of MethodDeclaration

var Initializer_Universe as Set of Initializer

var Expression_Universe as Set of Expression

var ContinueStatement_Universe as Set of ContinueStatement

var PrimitiveType_Universe as Set of PrimitiveType

var NormalAnnotation_Universe as Set of NormalAnnotation

var SingleVariableDeclaration_Universe as Set of SingleVariableDeclaration

var MemberValuePair_Universe as Set of MemberValuePair

var VariableDeclaration_Universe as Set of VariableDeclaration

var ForStatement_Universe as Set of ForStatement

var ExtendedModifier_Universe as Set of ExtendedModifier

var VariableDeclarationExpression_Universe as Set of VariableDeclarationExpression

var SingleMemberAnnotation_Universe as Set of SingleMemberAnnotation

var TypeLiteral_Universe as Set of TypeLiteral

var MethodRef_Universe as Set of MethodRef

var PackageDeclaration_Universe as Set of PackageDeclaration

var ArrayType_Universe as Set of ArrayType

var _Type_Universe as Set of _Type

var ArrayInitializer_Universe as Set of ArrayInitializer

var TryStatement_Universe as Set of TryStatement

var MemberRef_Universe as Set of MemberRef

var EnumDeclaration_Universe as Set of EnumDeclaration

var TypeDeclarationStatement_Universe as Set of TypeDeclarationStatement

var AssertStatement_Universe as Set of AssertStatement

var Assignment_Universe as Set of Assignment

var NumberLiteral_Universe as Set of NumberLiteral

var Comment_Universe as Set of Comment

var CompilationUnit_Universe as Set of CompilationUnit

var StringLiteral_Universe as Set of StringLiteral

var BooleanLiteral_Universe as Set of BooleanLiteral

var BlockComment_Universe as Set of BlockComment

var SynchronizedStatement_Universe as Set of SynchronizedStatement

var MarkerAnnotation_Universe as Set of MarkerAnnotation

var VariableDeclarationFragment_Universe as Set of VariableDeclarationFragment

var IfStatement_Universe as Set of IfStatement

var FieldDeclaration_Universe as Set of FieldDeclaration

var ExpressionStatement_Universe as Set of ExpressionStatement

var Block_Universe as Set of Block

var SuperMethodInvocation_Universe as Set of SuperMethodInvocation

var ParenthesizedExpression_Universe as Set of ParenthesizedExpression

var InfixExpression_Universe as Set of InfixExpression

var Name_Universe as Set of Name

var AnonymousClassDeclaration_Universe as Set of AnonymousClassDeclaration

var EnhancedForStatement_Universe as Set of EnhancedForStatement

var ParameterizedType_Universe as Set of ParameterizedType

var WildcardType_Universe as Set of WildcardType

var EnumConstantDeclaration_Universe as Set of EnumConstantDeclaration

var ThisExpression_Universe as Set of ThisExpression

var LineComment_Universe as Set of LineComment

var WhileStatement_Universe as Set of WhileStatement

var ThrowStatement_Universe as Set of ThrowStatement

var MethodInvocation_Universe as Set of MethodInvocation

var PostfixExpression_Universe as Set of PostfixExpression

var ArrayCreation_Universe as Set of ArrayCreation

var Statement_Universe as Set of Statement

var CastExpression_Universe as Set of CastExpression

var BodyDeclaration_Universe as Set of BodyDeclaration

var QualifiedType_Universe as Set of QualifiedType

var ConstructorInvocation_Universe as Set of ConstructorInvocation

var MethodRefParameter_Universe as Set of MethodRefParameter

Main()