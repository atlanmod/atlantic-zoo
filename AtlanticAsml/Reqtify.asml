class Section extends TextElement
  var sectionParent as Set of Section
  // requirements IsContainer
  var requirements as Set of AbstractRequirement
  // sectionChildren IsContainer
  var sectionChildren as Set of Section
  var document as Set of Document

abstract class TypedElement
  var _type as Set of String

class Document extends ElementWithIL
  // sections IsContainer
  var sections as Set of Section
  var project as Set of Project

class _Attribute extends TypedElement
  var value as Set of String

abstract class TextElement extends ElementWithIL
  var description as Set of String

class MacroRequirement extends AbstractRequirement
  // contains IsContainer
  var contains as Set of AbstractRequirement

class CoverLink extends TypedElement
  var linkWith as Set of AbstractRequirement

class Project
  // documents IsContainer
  var documents as Set of Document

abstract class AbstractRequirement extends TextElement
  // coverLinks IsContainer
  var coverLinks as Set of CoverLink
  var isContained as Set of MacroRequirement
  // _attribute IsContainer
  var _attribute as Set of _Attribute
  var section as Set of Section

class Requirement extends AbstractRequirement

abstract class ElementWithIL extends TypedElement
  var name as Set of String
  var label as Set of String

var Section_Universe as Set of Section

var TypedElement_Universe as Set of TypedElement

var Document_Universe as Set of Document

var _Attribute_Universe as Set of _Attribute

var TextElement_Universe as Set of TextElement

var MacroRequirement_Universe as Set of MacroRequirement

var CoverLink_Universe as Set of CoverLink

var Project_Universe as Set of Project

var AbstractRequirement_Universe as Set of AbstractRequirement

var Requirement_Universe as Set of Requirement

var ElementWithIL_Universe as Set of ElementWithIL

Main()