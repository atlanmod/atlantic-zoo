class BeginUseCase extends Link
  var useCase as Set of UseCase

class ServerPage
  var link as Set of HyperLink
  var generates as Set of ClientPage
  // module IsContainer
  var module as Set of ServerPageModule

class Renderer extends LogicElement
  var renders as Set of Data

class DesignElement extends ClientPageModule
  var represents as Set of DesignModule

class Processor extends LogicElement
  var persistentData as Set of Data
  var inputData as Set of Data
  var outputData as Set of Data

class DesignModule extends ServerPageModule

class Data
  var renderer as Set of Renderer
  var persist as Set of Processor
  var computes as Set of Processor
  var uses as Set of Processor

class ServerPageModule
  var contains as Set of ServerPage
  var link as Set of Link
  // containsModule IsContainer
  var containsModule as Set of DesignModule

class UserDecision extends LogicElement
  // allows IsContainer
  var allows as Set of Alternative

class Link
  var page as Set of ServerPage
  var posts as Set of Data

class HyperLink
  var server as Set of ServerPage

class Alternative extends LogicElement

class LogicElement
  var uses as Set of UseCase
  var generatedBy as Set of LogicElement
  var next as Set of LogicElement

class LogicInterface extends ClientPageModule
  var generatedBy as Set of Renderer
  var represents as Set of LogicModule

class ServerDecision extends LogicElement
  var evaluatesResultOf as Set of Processor

class ClientPage
  var hyperlink as Set of HyperLink

class UseCase extends Link
  // logicElem IsContainer
  var logicElem as Set of LogicElement

class ClientPageModule
  var representsSMP as Set of ServerPageModule
  // consistsOf IsContainer
  var consistsOf as Set of ClientPage

class LogicModule extends ServerPageModule
  // useCase IsContainer
  var useCase as Set of UseCase
  // logicElement IsContainer
  var logicElement as Set of LogicElement

var HyperLink_Universe as Set of HyperLink

Main()