class Role
  // roleHierarchy IsContainer
  var roleHierarchy as Set of Role
  var subjectAssignment as Set of Subject
  var permissionAssignment as Set of Permission

class Action
  var permission as Set of Permission
  var actionHyerarchy as Set of CompositeAction
  var resource as Set of Resource

class AuthorizationConstraint
  var permission as Set of Permission

class Group extends Subject
  // subjectGroup IsContainer
  var subjectGroup as Set of Subject

class Permission
  var constraintAssignment as Set of AuthorizationConstraint
  var actionAssignment as Set of Action
  var role as Set of Role

class CompositeAction extends Action
  // subordinatedAction IsContainer
  var subordinatedAction as Set of Action

class Subject
  var group as Set of Group
  var role as Set of Role

class AtomicAction extends Action

class Resource
  // resourceAction IsContainer
  var resourceAction as Set of Action

class User extends Subject

var Role_Universe as Set of Role

var Action_Universe as Set of Action

var AuthorizationConstraint_Universe as Set of AuthorizationConstraint

var Group_Universe as Set of Group

var Permission_Universe as Set of Permission

var CompositeAction_Universe as Set of CompositeAction

var Subject_Universe as Set of Subject

var AtomicAction_Universe as Set of AtomicAction

var Resource_Universe as Set of Resource

var User_Universe as Set of User

Main()