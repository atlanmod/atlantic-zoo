class ExtendRule extends Rule
  // rules IsContainer
  var rules as Set of Rule
  // extensions IsContainer
  var extensions as Set of Extension

class Universe extends Declaration
  var name as Set of String
  var contents as Set of String
  var superUniverses as Set of Universe

class Parameter extends LocatedElement
  var name as Set of String
  var _type as Set of String

class Signature extends LocatedElement
  var isMain as Set of Boolean
  var name as Set of String
  // arguments IsContainer
  var arguments as Set of Argument

class BooleanConstant extends Constant
  var value as Set of Boolean

class OperatorTerm extends Term
  var opName as Set of String
  // leftExp IsContainer
  var leftExp as Set of Term
  // rightExp IsContainer
  var rightExp as Set of Term

class _Function extends Declaration
  var returnType as Set of String
  var isExternal as Set of Boolean
  // initTerm IsContainer
  var initTerm as Set of Term
  // parameters IsContainer
  var parameters as Set of Parameter

abstract class Rule extends LocatedElement
  var inSequence as Set of Boolean

class MetaInformation extends LocatedElement
  var usedAs as Set of AsmType
  // accessUpdateFunctions IsContainer
  var accessUpdateFunctions as Set of AccessUpdateFunction
  // usedAsIn IsContainer
  var usedAsIn as Set of Signature

class ConditionalRule extends Rule
  // elseRule IsContainer
  var elseRule as Set of Rule
  // condition IsContainer
  var condition as Set of Term
  // thenRule IsContainer
  var thenRule as Set of Rule
  // elseIfRule IsContainer
  var elseIfRule as Set of _ElseIf

class FunctionOrVariableTerm extends Term
  // terms IsContainer
  var terms as Set of Term
  var declaration as Set of ElementDecl

class StringConstant extends Constant
  var value as Set of String

class Body extends XAsmFile
  // initialization IsContainer
  var initialization as Set of Initialization
  // rules IsContainer
  var rules as Set of Rule
  // declarations IsContainer
  var declarations as Set of Declaration

abstract class Declaration extends LocatedElement

class Initialization extends LocatedElement
  // rules IsContainer
  var rules as Set of Rule

abstract class XAsmFile extends LocatedElement

class DoForallRule extends Rule
  // inSet IsContainer
  var inSet as Set of Universe
  // condition IsContainer
  var condition as Set of Term
  // doRule IsContainer
  var doRule as Set of Rule
  // id IsContainer
  var id as Set of VariableDecl

class AsmInvocation extends Rule
  var asmName as Set of String
  // arguments IsContainer
  var arguments as Set of Term

class VariableDecl extends ElementDecl

class UndefConstant extends Constant

class ChooseRule extends Rule
  // guard IsContainer
  var guard as Set of Term
  // ifChoosenRules IsContainer
  var ifChoosenRules as Set of Rule
  // ifNotChoosenRule IsContainer
  var ifNotChoosenRule as Set of Rule
  // chooseId IsContainer
  var chooseId as Set of VariableDecl
  // inSet IsContainer
  var inSet as Set of Universe

class XAsmSpec extends XAsmFile
  // Asm IsContainer
  var Asm as Set of Asm

class Extension extends LocatedElement
  // universe IsContainer
  var universe as Set of Universe
  // elements IsContainer
  var elements as Set of VariableDecl

class _ElseIf extends LocatedElement
  // thenRule IsContainer
  var thenRule as Set of Rule
  // elseIfRule IsContainer
  var elseIfRule as Set of _ElseIf
  // elseRule IsContainer
  var elseRule as Set of Rule
  // condition IsContainer
  var condition as Set of Term

abstract class ElementDecl extends LocatedElement
  var name as Set of String

class AccessUpdateFunction extends LocatedElement
  var _type as Set of AccessUpdateType
  // functions IsContainer
  var functions as Set of _Function

abstract class LocatedElement
  var location as Set of String

class Argument extends VariableDecl
  var _type as Set of String

class UpdateRule extends Rule
  // _function IsContainer
  var _function as Set of FunctionOrVariableTerm
  // updateTerm IsContainer
  var updateTerm as Set of Term

class ReturnRule extends Rule
  // term IsContainer
  var term as Set of Term

abstract class Constant extends Term

class IntegerConstant extends Constant
  var value as Set of Integer

class SkipRule extends Rule

class Asm extends LocatedElement
  var returnType as Set of String
  // metaInformation IsContainer
  var metaInformation as Set of MetaInformation
  // signature IsContainer
  var signature as Set of Signature
  // body IsContainer
  var body as Set of Body

abstract class Term extends LocatedElement

enum AccessUpdateType
  access
  update

enum AsmType
  _function
  subasm

var ExtendRule_Universe as Set of ExtendRule

var Universe_Universe as Set of Universe

var Parameter_Universe as Set of Parameter

var Signature_Universe as Set of Signature

var BooleanConstant_Universe as Set of BooleanConstant

var OperatorTerm_Universe as Set of OperatorTerm

var _Function_Universe as Set of _Function

var Rule_Universe as Set of Rule

var MetaInformation_Universe as Set of MetaInformation

var ConditionalRule_Universe as Set of ConditionalRule

var FunctionOrVariableTerm_Universe as Set of FunctionOrVariableTerm

var StringConstant_Universe as Set of StringConstant

var Body_Universe as Set of Body

var Declaration_Universe as Set of Declaration

var Initialization_Universe as Set of Initialization

var XAsmFile_Universe as Set of XAsmFile

var DoForallRule_Universe as Set of DoForallRule

var AsmInvocation_Universe as Set of AsmInvocation

var VariableDecl_Universe as Set of VariableDecl

var UndefConstant_Universe as Set of UndefConstant

var ChooseRule_Universe as Set of ChooseRule

var XAsmSpec_Universe as Set of XAsmSpec

var Extension_Universe as Set of Extension

var _ElseIf_Universe as Set of _ElseIf

var ElementDecl_Universe as Set of ElementDecl

var AccessUpdateFunction_Universe as Set of AccessUpdateFunction

var LocatedElement_Universe as Set of LocatedElement

var Argument_Universe as Set of Argument

var UpdateRule_Universe as Set of UpdateRule

var ReturnRule_Universe as Set of ReturnRule

var Constant_Universe as Set of Constant

var IntegerConstant_Universe as Set of IntegerConstant

var SkipRule_Universe as Set of SkipRule

var Asm_Universe as Set of Asm

var Term_Universe as Set of Term

Main()