class Input extends Action
  // channel IsContainer
  var channel as Set of Channel
  // variable IsContainer
  var variable as Set of Variable

class StopProcess extends _Process

class Alternation extends Construction
  // alternative IsContainer
  var alternative as Set of Alternative

class IntDeclaration extends Declaration
  var name as Set of String
  // expression IsContainer
  var expression as Set of Expression

class BooleanGuard extends Guard
  // boolean IsContainer
  var boolean as Set of BooleanRef

class Subscript
  // expression IsContainer
  var expression as Set of Expression

class NormalConditional extends Conditional

class Instance extends _Process
  var name as Set of String

class DyadicOperator
  var plus as Set of Boolean
  var minus as Set of Boolean
  var star as Set of Boolean
  var slash as Set of Boolean
  var _or as Set of Boolean
  var inverseSlash as Set of Boolean
  var _and as Set of Boolean
  var _eq as Set of Boolean
  var _ne as Set of Boolean
  var _lt as Set of Boolean
  var _gt as Set of Boolean
  var le as Set of Boolean
  var ge as Set of Boolean

class ExpressionOperand extends Expression

class SimpleExpression extends Expression

class Count
  // expression IsContainer
  var expression as Set of Expression

class ProcedureBody
  var name as Set of String
  // _process IsContainer
  var _process as Set of _Process

class Literal
  var integer as Set of Integer

class ReplicatorConditional extends Conditional
  // replicator IsContainer
  var replicator as Set of Replicator

class PrimitiveType
  var isInt as Set of Boolean
  var isChan as Set of Boolean

class BooleanRef
  // expression IsContainer
  var expression as Set of Expression

class MonadicOperator
  var minus as Set of Boolean
  var _not as Set of Boolean

abstract class Action extends _Process

abstract class Operand

class Definition extends Specification
  var name as Set of String
  // procedureBody IsContainer
  var procedureBody as Set of ProcedureBody

class Loop extends Construction
  // boolean IsContainer
  var boolean as Set of BooleanRef
  // _process IsContainer
  var _process as Set of _Process

abstract class Expression
  // operand IsContainer
  var operand as Set of Operand

abstract class Declaration extends Specification

class LiteralOperand extends Literal

abstract class Sequence extends Construction
  // _process IsContainer
  var _process as Set of _Process

class Formal
  var name as Set of String
  // primitiveType IsContainer
  var primitiveType as Set of PrimitiveType

abstract class _Process

class VariableOPerand extends Variable

class Base
  // expression IsContainer
  var expression as Set of Expression

class _Type
  // primitiveType IsContainer
  var primitiveType as Set of PrimitiveType
  // expression IsContainer
  var expression as Set of Expression

class SkipProcess extends _Process

class Output extends Action
  // channel IsContainer
  var channel as Set of Channel
  // expression IsContainer
  var expression as Set of Expression

class DyadicExpression extends Expression
  // dyadicOperator IsContainer
  var dyadicOperator as Set of DyadicOperator
  // operandRight IsContainer
  var operandRight as Set of Operand

class Variable
  // element IsContainer
  var element as Set of Element

class Channel
  // element IsContainer
  var element as Set of Element

class Choice
  // boolean IsContainer
  var boolean as Set of BooleanRef
  // _process IsContainer
  var _process as Set of _Process

abstract class Parallel extends Construction
  // _process IsContainer
  var _process as Set of _Process

class Assignment extends Action
  // variable IsContainer
  var variable as Set of Variable
  // expression IsContainer
  var expression as Set of Expression

class MonadicExpression extends Expression
  // monadicOperator IsContainer
  var monadicOperator as Set of MonadicOperator

abstract class Guard
  // input IsContainer
  var input as Set of Input

class ReplicatorAlternation extends Parallel
  // replicator IsContainer
  var replicator as Set of Replicator

class Construction extends _Process

class InputGuard extends Guard

class ReplicatorSequence extends Sequence
  // replicator IsContainer
  var replicator as Set of Replicator

class ValDeclaration extends Declaration
  var name as Set of String
  // expression IsContainer
  var expression as Set of Expression

abstract class Conditional extends Construction
  // choice IsContainer
  var choice as Set of Choice

class TypeDeclaration extends Declaration
  // _type IsContainer
  var _type as Set of _Type

class NormalAlternation extends Parallel

class Actual
  // element IsContainer
  var element as Set of Element

abstract class Specification extends _Process

class Replicator
  var name as Set of String
  // base IsContainer
  var base as Set of Base
  // count IsContainer
  var count as Set of Count

class NormalSequence extends Sequence

class NormalParallel extends Parallel

class ReplicatorParallel extends Parallel
  // replicator IsContainer
  var replicator as Set of Replicator

class Element
  var name as Set of String
  // subscript IsContainer
  var subscript as Set of Subscript

class Alternative
  // _process IsContainer
  var _process as Set of _Process
  // guard IsContainer
  var guard as Set of Guard

var Input_Universe as Set of Input

var StopProcess_Universe as Set of StopProcess

var Alternation_Universe as Set of Alternation

var IntDeclaration_Universe as Set of IntDeclaration

var BooleanGuard_Universe as Set of BooleanGuard

var Subscript_Universe as Set of Subscript

var NormalConditional_Universe as Set of NormalConditional

var Instance_Universe as Set of Instance

var DyadicOperator_Universe as Set of DyadicOperator

var ExpressionOperand_Universe as Set of ExpressionOperand

var SimpleExpression_Universe as Set of SimpleExpression

var Count_Universe as Set of Count

var ProcedureBody_Universe as Set of ProcedureBody

var Literal_Universe as Set of Literal

var ReplicatorConditional_Universe as Set of ReplicatorConditional

var PrimitiveType_Universe as Set of PrimitiveType

var BooleanRef_Universe as Set of BooleanRef

var MonadicOperator_Universe as Set of MonadicOperator

var Action_Universe as Set of Action

var Operand_Universe as Set of Operand

var Definition_Universe as Set of Definition

var Loop_Universe as Set of Loop

var Expression_Universe as Set of Expression

var Declaration_Universe as Set of Declaration

var LiteralOperand_Universe as Set of LiteralOperand

var Sequence_Universe as Set of Sequence

var Formal_Universe as Set of Formal

var _Process_Universe as Set of _Process

var VariableOPerand_Universe as Set of VariableOPerand

var Base_Universe as Set of Base

var _Type_Universe as Set of _Type

var SkipProcess_Universe as Set of SkipProcess

var Output_Universe as Set of Output

var DyadicExpression_Universe as Set of DyadicExpression

var Variable_Universe as Set of Variable

var Channel_Universe as Set of Channel

var Choice_Universe as Set of Choice

var Parallel_Universe as Set of Parallel

var Assignment_Universe as Set of Assignment

var MonadicExpression_Universe as Set of MonadicExpression

var Guard_Universe as Set of Guard

var ReplicatorAlternation_Universe as Set of ReplicatorAlternation

var Construction_Universe as Set of Construction

var InputGuard_Universe as Set of InputGuard

var ReplicatorSequence_Universe as Set of ReplicatorSequence

var ValDeclaration_Universe as Set of ValDeclaration

var Conditional_Universe as Set of Conditional

var TypeDeclaration_Universe as Set of TypeDeclaration

var NormalAlternation_Universe as Set of NormalAlternation

var Actual_Universe as Set of Actual

var Specification_Universe as Set of Specification

var Replicator_Universe as Set of Replicator

var NormalSequence_Universe as Set of NormalSequence

var NormalParallel_Universe as Set of NormalParallel

var ReplicatorParallel_Universe as Set of ReplicatorParallel

var Element_Universe as Set of Element

var Alternative_Universe as Set of Alternative

Main()