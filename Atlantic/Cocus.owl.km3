package Cocus {

	class Thing {
		
	}

	class "Meta-Reviewer" extends Reviewer {
		
	}

	class Reviewer extends ConferenceMember, User {
		reference assignedByAdministrator[0-1] : Administrator;
		reference adjustBid[0-1] : Bid oppositeOf adjustedBy;
		reference readPaper[0-1] : Paper;
		reference hasBeenAssigned[0-1] : Paper;
		reference writeReview[0-1] : Review;
		reference assignExternalReviewer[0-1] : ExternalReviewer oppositeOf assignedByReviewer;
	}

	class Decision {
		
	}


	class Preference {
		
	}

	class ProgramCommittee {
		reference hasProgramCommitteeMember[0-1] : ProgramCommitteeMember oppositeOf memberOfProgramCommittee;
	}

	class Bid {
		reference adjustedBy[0-1] : Reviewer oppositeOf adjustBid;
	}

	class Conference extends Thing, Event {
		reference hasConferenceMember[0-1] : ConferenceMember oppositeOf memberOfConference;
		reference paperAssignmentFinalizedBy[0-1] : Administrator;
		reference reviewCriteriaEnteredBy[0-1] : Administrator;
		reference paperAssignmentToolsRunBy[0-1] : Administrator;
		reference virtualMeetingEnabledBy[0-1] : Administrator;
		reference hardcopyMailingManifestsPrintedBy[0-1] : Administrator;
		reference detailsEnteredBy[0-1] : Administrator;
		reference reviewerBiddingStartedBy[0-1] : Administrator;
		attribute date[0-1] : date;
		attribute reviewsPerPaper[0-1] : Integer;
		attribute logoURL[0-1] : anyURI;
		attribute acceptsHardcopySubmissions[0-1] : Boolean;
		attribute siteURL[0-1] : anyURI;
	}

	class ConferenceChair extends ConferenceMember, Chairman {
		
	}

	class ConferenceMember extends Person {
		reference memberOfConference[0-1] : Conference;
	}

	class AssociatedChair extends ConferenceMember, Chairman {
		
	}

	class ProgramCommitteeMember extends Person, ConferenceMember {
		reference memberOfProgramCommittee[0-1] : ProgramCommittee oppositeOf hasProgramCommitteeMember;
		attribute maxPapers[0-1] : Integer;
		reference addedBy[0-1] : Administrator;
	}

	class AuthorNotReviewer extends Author {
		
	}

	class SubjectArea {
		
	}

	class ExternalReviewer extends Person {
		reference assignedByReviewer : Reviewer oppositeOf assignExternalReviewer;
	}

	class Chairman extends Person, ConferenceMember {
		
	}

	class ProgramCommitteeChair extends ProgramCommitteeMember, Chairman {
		reference endReview[0-1] : Review;
	}

	class Acceptance extends Decision {
		
	}

	class Rejection extends Decision {
		
	}

	class Review extends Document {
		reference writtenBy[0-1] : Reviewer oppositeOf writeReview;
	}

	class Paper extends Document {
		reference "hasCo-author"[0-1] : "Co-author" oppositeOf "co-writePaper";
		reference hasBid[0-1] : Bid;
		reference hasDecision[0-1] : Decision;
		reference assignedTo[0-1] : Reviewer oppositeOf hasBeenAssigned;
		reference hasSubjectArea[0-1] : SubjectArea;
		reference readByReviewer : Reviewer oppositeOf readPaper;
		attribute paperID[0-1] : unsignedLong;
		attribute title[0-1] : String;
		reference hasAuthor[0-1] : Author;
		reference acceptedBy[0-1] : Administrator;
		reference rejectedBy[0-1] : Administrator;
		reference "readByMeta-Reviewer"[0-1] : "Meta-Reviewer";
	}

	class Author extends ConferenceMember, User {
		reference submitPaper[0-1] : Paper;
		reference writePaper[0-1] : Paper;
	}


	class "Co-author" extends Author {
		reference "co-writePaper"[0-1] : Paper;
	}

	class PaperAbstract extends Paper {
		
	}

	class PaperFullVersion extends Paper {
		
	}

	class Administrator extends User, Person {
		reference approve[0-1] : Event oppositeOf approved_by;
		reference assign[0-1] : Role oppositeOf assigned_by;
		reference finalizePaperAssignment[0-1] : Conference;
		reference runPaperAssignmentTools[0-1] : Conference;
		reference enableVirtualMeeting[0-1] : Conference;
		reference startReviewerBidding[0-1] : Conference;
		reference assignReviewer[0-1] : Reviewer oppositeOf assignedByAdministrator;
		reference rejectPaper[0-1] : Paper;
		reference enterConferenceDetails[0-1] : Conference;
		reference printHardcopyMailingManifests[0-1] : Conference;
		reference setMaxPapers[0-1] : ProgramCommitteeMember;
		reference enterReviewCriteria[0-1] : Conference;
		reference acceptPaper[0-1] : Paper;
		reference addProgramCommitteeMember[0-1] : ProgramCommitteeMember oppositeOf addedBy;
	}

	class "Meta-Review" extends Review {
		
	}

	datatype date;

	datatype unsignedLong;

	datatype anyURI;


	class Workshop extends Event {
		
	}

	class Event extends Thing {
		reference conists_of[0-1] : Event_Tracks;
		reference confirmed_by[0-1] : Approval_Email oppositeOf confirm;
		reference defined_by[0-1] : Event_Setup oppositeOf define;
		reference approved_by[0-1] : Administrator oppositeOf approve;
	}

	class Account {
		reference registred_by[0-1] : Person oppositeOf register;
	}

	class Inforamtion {
		
	}

	class User extends Person {
		reference recieve[0-1] : Document oppositeOf recieved_by;
		reference create[*] : Thing; --Event or Document
		reference submit[0-1] : Document oppositeOf submited__by;
	}

	class Role extends Thing {
		reference assigned_by[0-1] : Administrator oppositeOf assign;
	}

	class Help_Request extends Request {
		
	}


	class Person extends Thing {
		reference inverse_of_add[*] : Thing; --Person or Document
		reference execute[*] : Thing; --Role or Activity
		reference get[0-1] : Inforamtion;
		reference use[0-1] : Document oppositeOf used_by;
		reference register[0-1] : Account oppositeOf registred_by;
		reference modify[*] : Thing; --Account or Detail
		reference take_part_in[0-1] : Event;
		reference remove[*] : Thing; --Person or Document
		reference add[0-1] : Person;
		reference send[0-1] : Activity oppositeOf sent_by;
		reference added_by[0-1] : Person;
		reference hasConflictOfInterest[0-1] : Document;
		attribute email[0-1] : String;
	}

	class Symposium extends Event {
		
	}

	class Abstract extends Paper {
		
	}

	class Document extends Thing {
		reference recieved_by[0-1] : User oppositeOf recieve;
		reference used_by[0-1] : Person oppositeOf use;
		reference submited__by[0-1] : User oppositeOf submit;
	}

	class Invited_Paper extends Paper {
		
	}

	class Admin_Role extends Role {
		
	}

	class Paper_Typologies extends Event_Setup {
		
	}

	class Event_Setup {
		reference define[0-1] : Event oppositeOf defined_by;
	}

	class Event_URL extends URL {
		reference concerned[0-1] : Event;
	}

	class URL {
		
	}

	class Notification_Email extends Email {
		
	}

	class Email extends Document {
		
	}

	class Short_Paper extends Paper {
		
	}

	class Author_Role extends Role {
		
	}

	class Preview extends Review_Form {
		
	}

	class Review_Form extends Event_Setup {
		
	}


	class Committe_Role extends Role {
		
	}

	class Group_Email extends Email {
		
	}

	class Submission_Template extends Event_Setup {
		
	}

	class Review_Form_Setup extends Review_Form {
		
	}

	class Misc extends Help_Request {
		
	}


	class Event_Creation extends Activity {
		
	}

	class Approval_Email extends Email {
		reference confirm[0-1] : Event oppositeOf confirmed_by;
	}

	class Rejection_Email extends Email {
		
	}

	class Submission extends Document {
		
	}

	class Template extends Document {
		
	}

	class Feature_Request extends Help_Request {
		
	}

	class Committee extends User {
		
	}

	class Event_Tracks extends Event_Setup {
		
	}

	class Request extends Activity {
		
	}

	class Activity {
		reference has_result[*] : Thing; --Event or Document
		reference sent_by[0-1] : Person oppositeOf send;
	}

	class Head_Role extends Role {
		
	}

	class Detail extends Thing {
		
	}

	class Corresponding_Author extends Author {
		
	}

	class Reviewer_Role extends Role {
		
	}

	class Event_Approval extends Activity {
		
	}

	class Registration extends Activity {
		
	}

	class Full_Paper extends Paper {
		
	}

	class Research_Topic extends Event_Setup {
		
	}

	class Description {
		
	}


	class Assistance extends Help_Request {
		
	}

	class Email_Template extends Event_Setup {
		
	}
}
package PrimitiveTypes {
	datatype Boolean;
	datatype Integer;
	datatype String;
}
