-- @name 		UML (Metamodel Fragment)
-- @domains 	UML
-- @authors 	Julien Baudry (jul.baudry@gmail.com)
-- @date 		2006/07/20
-- @description This metamodel describes UML metamodel fragment integrating statecharts, generalization of classes, and stereotypes
-- @see 		This metamodel has been extracted from information available on this book :
-- @see 		Lecture Notes in Computer Science 2185
-- @see 		UML 2001 - The Unified Modeling Language
-- @see 		Edition Springer, Martin Gogolla, Cris Kobryn
-- @see 		Chapter "Rule-Based Specifiaction of Behavioral Consistency"
-- @see 		Page 277, Section 4, Fig. 3. UML metamodel fragment integrating statecharts, generalization of classes, and stereotypes

package UMLMetamodelFragment {
	class Class {
		reference parent : Generalization;
		reference child : Generalization;
		reference dependency : Dependency oppositeOf client;
	}
	
	class Generalization {
	}
	
	class Dependency {
		reference supplier : StateMachine;
		reference client : Class oppositeOf dependency;
		reference stereotype : Stereotype oppositeOf extendedElement;
	}
	
	class Stereotype {
		attribute baseClass : String; 
		reference extendedElement : Dependency oppositeOf stereotype;
	}
	
	class StateMachine {
		reference context : Class;
		reference top container : State oppositeOf stateMachine;
	}
	
	class State extends StateVertex {
		reference stateMachine [0-1] : StateMachine oppositeOf top;
		reference internal container : Transition;
	}
	
	class CompositeState extends State {
		reference subvertex container : StateVertex oppositeOf compositeState;
	}
	
	class SimpleState extends State {
	}
	
	class FinalState extends State {
	}
	
	class StateVertex {
		reference compositeState [0-1] : CompositeState oppositeOf subvertex;
	}

	class PseudoState extends StateVertex {
	}
	
	class Transition {
		reference trigger [0-1] : Event;
		reference source : StateVertex;
		reference target : StateVertex;
	}
	
	class Event {
	}
}

package PrimitiveTypes {
	datatype Boolean;
	datatype Integer;
	datatype String;
}