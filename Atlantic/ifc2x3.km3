package IFC2X3 {

	abstract class IfcActorSelect {
		
	}

	abstract class IfcAxis2Placement {
		
	}

	abstract class IfcBooleanOperand {
		
	}

	abstract class IfcCharacterStyleSelect {
		
	}

	abstract class IfcClassificationNotationSelect {
		
	}

	abstract class IfcColour extends IfcSymbolStyleSelect, IfcFillStyleSelect {
		
	}

	abstract class IfcCsgSelect {
		
	}

	abstract class IfcCurveFontOrScaledCurveFontSelect {
		
	}

	abstract class IfcCurveOrEdgeCurve {
		
	}

	abstract class IfcCurveStyleFontSelect extends IfcCurveFontOrScaledCurveFontSelect {
		
	}

	abstract class IfcDateTimeSelect {
		
	}

	abstract class IfcDefinedSymbolSelect {
		
	}

	abstract class IfcDocumentSelect {
		
	}

	abstract class IfcDraughtingCalloutElement {
		
	}

	abstract class IfcFillAreaStyleTileShapeSelect {
		
	}

	abstract class IfcFillStyleSelect {
		
	}

	abstract class IfcGeometricSetSelect {
		
	}

	abstract class IfcLayeredItem {
		reference LayerAssignments : IfcPresentationLayerAssignment oppositeOf AssignedItems;
	}

	abstract class IfcLibrarySelect {
		
	}

	abstract class IfcLightDistributionDataSourceSelect {
		
	}

	abstract class IfcMaterialSelect {
		
	}

	abstract class IfcObjectReferenceSelect {
		
	}

	abstract class IfcPointOrVertexPoint {
		
	}

	abstract class IfcShell {
		
	}

	abstract class IfcStructuralActivityAssignmentSelect {
		reference AssignedStructuralActivity : IfcRelConnectsStructuralActivity oppositeOf RelatingElement;
	}

	abstract class IfcSurfaceOrFaceSurface {
		
	}

	abstract class IfcSurfaceStyleElementSelect {
		
	}

	abstract class IfcSymbolStyleSelect {
		
	}

	abstract class IfcTextFontSelect {
		
	}

	abstract class IfcTextStyleSelect {
		
	}

	abstract class IfcUnit {
		
	}

	abstract class IfcVectorOrDirection {
		
	}

	class IfcValue {
		attribute IfcAbsorbedDoseMeasurevalue[0-1] : REAL;
		attribute IfcAccelerationMeasurevalue[0-1] : REAL;
		attribute IfcAmountOfSubstanceMeasurevalue[0-1] : REAL;
		attribute IfcAngularVelocityMeasurevalue[0-1] : REAL;
		attribute IfcAreaMeasurevalue[0-1] : REAL;
		attribute IfcBooleanvalue[0-1] : BOOLEAN;
		attribute IfcContextDependentMeasurevalue[0-1] : REAL;
		attribute IfcCountMeasurevalue[0-1] : NUMBER;
		attribute IfcCurvatureMeasurevalue[0-1] : REAL;
		attribute IfcDescriptiveMeasurevalue[0-1] : STRING;
		attribute IfcDoseEquivalentMeasurevalue[0-1] : REAL;
		attribute IfcDynamicViscosityMeasurevalue[0-1] : REAL;
		attribute IfcElectricCapacitanceMeasurevalue[0-1] : REAL;
		attribute IfcElectricChargeMeasurevalue[0-1] : REAL;
		attribute IfcElectricConductanceMeasurevalue[0-1] : REAL;
		attribute IfcElectricCurrentMeasurevalue[0-1] : REAL;
		attribute IfcElectricResistanceMeasurevalue[0-1] : REAL;
		attribute IfcElectricVoltageMeasurevalue[0-1] : REAL;
		attribute IfcEnergyMeasurevalue[0-1] : REAL;
		attribute IfcForceMeasurevalue[0-1] : REAL;
		attribute IfcFrequencyMeasurevalue[0-1] : REAL;
		attribute IfcHeatFluxDensityMeasurevalue[0-1] : REAL;
		attribute IfcHeatingValueMeasurevalue[0-1] : REAL;
		attribute IfcIdentifiervalue[0-1] : STRING;
		attribute IfcIlluminanceMeasurevalue[0-1] : REAL;
		attribute IfcInductanceMeasurevalue[0-1] : REAL;
		attribute IfcIntegervalue[0-1] : INTEGER;
		attribute IfcIntegerCountRateMeasurevalue[0-1] : INTEGER;
		attribute IfcIonConcentrationMeasurevalue[0-1] : REAL;
		attribute IfcIsothermalMoistureCapacityMeasurevalue[0-1] : REAL;
		attribute IfcKinematicViscosityMeasurevalue[0-1] : REAL;
		attribute IfcLabelvalue[0-1] : STRING;
		attribute IfcPositiveLengthMeasurevalue[0-1] : REAL;
		attribute IfcLengthMeasurevalue[0-1] : REAL;
		attribute IfcLinearForceMeasurevalue[0-1] : REAL;
		attribute IfcLinearMomentMeasurevalue[0-1] : REAL;
		attribute IfcLinearStiffnessMeasurevalue[0-1] : REAL;
		attribute IfcLinearVelocityMeasurevalue[0-1] : REAL;
		attribute IfcLogicalvalue[0-1] : LOGICAL;
		attribute IfcLuminousFluxMeasurevalue[0-1] : REAL;
		attribute IfcLuminousIntensityDistributionMeasurevalue[0-1] : REAL;
		attribute IfcLuminousIntensityMeasurevalue[0-1] : REAL;
		attribute IfcMagneticFluxDensityMeasurevalue[0-1] : REAL;
		attribute IfcMagneticFluxMeasurevalue[0-1] : REAL;
		attribute IfcMassDensityMeasurevalue[0-1] : REAL;
		attribute IfcMassFlowRateMeasurevalue[0-1] : REAL;
		attribute IfcMassMeasurevalue[0-1] : REAL;
		attribute IfcMassPerLengthMeasurevalue[0-1] : REAL;
		attribute IfcModulusOfElasticityMeasurevalue[0-1] : REAL;
		attribute IfcModulusOfLinearSubgradeReactionMeasurevalue[0-1] : REAL;
		attribute IfcModulusOfRotationalSubgradeReactionMeasurevalue[0-1] : REAL;
		attribute IfcModulusOfSubgradeReactionMeasurevalue[0-1] : REAL;
		attribute IfcMoistureDiffusivityMeasurevalue[0-1] : REAL;
		attribute IfcMolecularWeightMeasurevalue[0-1] : REAL;
		attribute IfcMomentOfInertiaMeasurevalue[0-1] : REAL;
		attribute IfcMonetaryMeasurevalue[0-1] : REAL;
		attribute IfcNormalisedRatioMeasurevalue[0-1] : REAL;
		attribute IfcNumericMeasurevalue[0-1] : NUMBER;
		attribute IfcPHMeasurevalue[0-1] : REAL;
		attribute IfcParameterValuevalue[0-1] : REAL;
		attribute IfcPlanarForceMeasurevalue[0-1] : REAL;
		attribute IfcPositivePlaneAngleMeasurevalue[0-1] : REAL;
		attribute IfcPlaneAngleMeasurevalue[0-1] : REAL;
		attribute IfcPositiveRatioMeasurevalue[0-1] : REAL;
		attribute IfcPowerMeasurevalue[0-1] : REAL;
		attribute IfcPressureMeasurevalue[0-1] : REAL;
		attribute IfcRadioActivityMeasurevalue[0-1] : REAL;
		attribute IfcRatioMeasurevalue[0-1] : REAL;
		attribute IfcRealvalue[0-1] : REAL;
		attribute IfcRotationalFrequencyMeasurevalue[0-1] : REAL;
		attribute IfcRotationalMassMeasurevalue[0-1] : REAL;
		attribute IfcRotationalStiffnessMeasurevalue[0-1] : REAL;
		attribute IfcSectionModulusMeasurevalue[0-1] : REAL;
		attribute IfcSectionalAreaIntegralMeasurevalue[0-1] : REAL;
		attribute IfcShearModulusMeasurevalue[0-1] : REAL;
		attribute IfcSolidAngleMeasurevalue[0-1] : REAL;
		attribute IfcSoundPowerMeasurevalue[0-1] : REAL;
		attribute IfcSoundPressureMeasurevalue[0-1] : REAL;
		attribute IfcSpecificHeatCapacityMeasurevalue[0-1] : REAL;
		attribute IfcTemperatureGradientMeasurevalue[0-1] : REAL;
		attribute IfcTextvalue[0-1] : STRING;
		attribute IfcThermalAdmittanceMeasurevalue[0-1] : REAL;
		attribute IfcThermalConductivityMeasurevalue[0-1] : REAL;
		attribute IfcThermalExpansionCoefficientMeasurevalue[0-1] : REAL;
		attribute IfcThermalResistanceMeasurevalue[0-1] : REAL;
		attribute IfcThermalTransmittanceMeasurevalue[0-1] : REAL;
		attribute IfcThermodynamicTemperatureMeasurevalue[0-1] : REAL;
		attribute IfcTimeMeasurevalue[0-1] : REAL;
		attribute IfcTimeStampvalue[0-1] : INTEGER;
		attribute IfcTorqueMeasurevalue[0-1] : REAL;
		attribute IfcVaporPermeabilityMeasurevalue[0-1] : REAL;
		attribute IfcVolumeMeasurevalue[0-1] : REAL;
		attribute IfcVolumetricFlowRateMeasurevalue[0-1] : REAL;
		attribute IfcWarpingConstantMeasurevalue[0-1] : REAL;
		attribute IfcWarpingMomentMeasurevalue[0-1] : REAL;
	}

	class IfcTrimmingSelect {
		attribute IfcParameterValuevalue[0-1] : REAL;
		reference IfcCartesianPointvalue[0-1] container : IfcCartesianPoint;
	}

	class IfcSpecularHighlightSelect {
		attribute IfcSpecularRoughnessvalue[0-1] : REAL;
		attribute IfcSpecularExponentvalue[0-1] : REAL;
	}

	class IfcSizeSelect {
		attribute IfcPositiveRatioMeasurevalue[0-1] : REAL;
		attribute IfcNormalisedRatioMeasurevalue[0-1] : REAL;
		attribute IfcPositiveLengthMeasurevalue[0-1] : REAL;
		attribute IfcDescriptiveMeasurevalue[0-1] : STRING;
		attribute IfcLengthMeasurevalue[0-1] : REAL;
		attribute IfcRatioMeasurevalue[0-1] : REAL;
	}

	class IfcSimpleValue {
		attribute IfcLogicalvalue[0-1] : LOGICAL;
		attribute IfcLabelvalue[0-1] : STRING;
		attribute IfcTextvalue[0-1] : STRING;
		attribute IfcIdentifiervalue[0-1] : STRING;
		attribute IfcBooleanvalue[0-1] : BOOLEAN;
		attribute IfcRealvalue[0-1] : REAL;
		attribute IfcIntegervalue[0-1] : INTEGER;
	}

	class IfcPresentationStyleSelect {
		attribute IfcNullStylevalue[0-1] : IfcNullStyle;
		reference IfcSurfaceStylevalue[0-1] container : IfcSurfaceStyle;
		reference IfcTextStylevalue[0-1] container : IfcTextStyle;
		reference IfcFillAreaStylevalue[0-1] container : IfcFillAreaStyle;
		reference IfcSymbolStylevalue[0-1] container : IfcSymbolStyle;
		reference IfcCurveStylevalue[0-1] container : IfcCurveStyle;
	}

	class IfcOrientationSelect {
		attribute IfcPlaneAngleMeasurevalue[0-1] : REAL;
		reference IfcDirectionvalue[0-1] container : IfcDirection;
	}

	class IfcMetricValueSelect {
		reference IfcDateTimeSelectvalue[0-1] container : IfcDateTimeSelect;
		attribute IfcTextvalue[0-1] : STRING;
		reference IfcCostValuevalue[0-1] container : IfcCostValue;
		reference IfcTimeSeriesvalue[0-1] container : IfcTimeSeries;
		reference IfcTablevalue[0-1] container : IfcTable;
		reference IfcMeasureWithUnitvalue[0-1] container : IfcMeasureWithUnit;
	}

	class IfcMeasureValue {
		attribute IfcNormalisedRatioMeasurevalue[0-1] : REAL;
		attribute IfcLuminousIntensityMeasurevalue[0-1] : REAL;
		attribute IfcAmountOfSubstanceMeasurevalue[0-1] : REAL;
		attribute IfcAreaMeasurevalue[0-1] : REAL;
		attribute IfcContextDependentMeasurevalue[0-1] : REAL;
		attribute IfcCountMeasurevalue[0-1] : NUMBER;
		attribute IfcDescriptiveMeasurevalue[0-1] : STRING;
		attribute IfcElectricCurrentMeasurevalue[0-1] : REAL;
		attribute IfcLengthMeasurevalue[0-1] : REAL;
		attribute IfcPositiveLengthMeasurevalue[0-1] : REAL;
		attribute IfcMassMeasurevalue[0-1] : REAL;
		attribute IfcNumericMeasurevalue[0-1] : NUMBER;
		attribute IfcParameterValuevalue[0-1] : REAL;
		attribute IfcPlaneAngleMeasurevalue[0-1] : REAL;
		attribute IfcPositivePlaneAngleMeasurevalue[0-1] : REAL;
		attribute IfcRatioMeasurevalue[0-1] : REAL;
		attribute IfcPositiveRatioMeasurevalue[0-1] : REAL;
		attribute IfcSolidAngleMeasurevalue[0-1] : REAL;
		attribute IfcThermodynamicTemperatureMeasurevalue[0-1] : REAL;
		attribute IfcTimeMeasurevalue[0-1] : REAL;
		attribute IfcVolumeMeasurevalue[0-1] : REAL;
	}

	class IfcHatchLineDistanceSelect {
		attribute IfcPositiveLengthMeasurevalue[0-1] : REAL;
		reference IfcOneDirectionRepeatFactorvalue[0-1] container : IfcOneDirectionRepeatFactor;
	}

	class IfcDerivedMeasureValue {
		attribute IfcIonConcentrationMeasurevalue[0-1] : REAL;
		attribute IfcPHMeasurevalue[0-1] : REAL;
		attribute IfcHeatingValueMeasurevalue[0-1] : REAL;
		attribute IfcSoundPressureMeasurevalue[0-1] : REAL;
		attribute IfcSoundPowerMeasurevalue[0-1] : REAL;
		attribute IfcWarpingMomentMeasurevalue[0-1] : REAL;
		attribute IfcWarpingConstantMeasurevalue[0-1] : REAL;
		attribute IfcThermalExpansionCoefficientMeasurevalue[0-1] : REAL;
		attribute IfcTemperatureGradientMeasurevalue[0-1] : REAL;
		attribute IfcSectionModulusMeasurevalue[0-1] : REAL;
		attribute IfcSectionalAreaIntegralMeasurevalue[0-1] : REAL;
		attribute IfcRotationalMassMeasurevalue[0-1] : REAL;
		attribute IfcModulusOfRotationalSubgradeReactionMeasurevalue[0-1] : REAL;
		attribute IfcModulusOfLinearSubgradeReactionMeasurevalue[0-1] : REAL;
		attribute IfcMassPerLengthMeasurevalue[0-1] : REAL;
		attribute IfcCurvatureMeasurevalue[0-1] : REAL;
		attribute IfcLuminousIntensityDistributionMeasurevalue[0-1] : REAL;
		attribute IfcLinearMomentMeasurevalue[0-1] : REAL;
		attribute IfcShearModulusMeasurevalue[0-1] : REAL;
		attribute IfcRotationalStiffnessMeasurevalue[0-1] : REAL;
		attribute IfcPlanarForceMeasurevalue[0-1] : REAL;
		attribute IfcMomentOfInertiaMeasurevalue[0-1] : REAL;
		attribute IfcModulusOfElasticityMeasurevalue[0-1] : REAL;
		attribute IfcModulusOfSubgradeReactionMeasurevalue[0-1] : REAL;
		attribute IfcLinearStiffnessMeasurevalue[0-1] : REAL;
		attribute IfcLinearForceMeasurevalue[0-1] : REAL;
		attribute IfcAccelerationMeasurevalue[0-1] : REAL;
		attribute IfcTorqueMeasurevalue[0-1] : REAL;
		attribute IfcRotationalFrequencyMeasurevalue[0-1] : REAL;
		attribute IfcRadioActivityMeasurevalue[0-1] : REAL;
		attribute IfcAbsorbedDoseMeasurevalue[0-1] : REAL;
		attribute IfcElectricCapacitanceMeasurevalue[0-1] : REAL;
		attribute IfcDoseEquivalentMeasurevalue[0-1] : REAL;
		attribute IfcElectricChargeMeasurevalue[0-1] : REAL;
		attribute IfcElectricConductanceMeasurevalue[0-1] : REAL;
		attribute IfcElectricResistanceMeasurevalue[0-1] : REAL;
		attribute IfcIlluminanceMeasurevalue[0-1] : REAL;
		attribute IfcInductanceMeasurevalue[0-1] : REAL;
		attribute IfcForceMeasurevalue[0-1] : REAL;
		attribute IfcLuminousFluxMeasurevalue[0-1] : REAL;
		attribute IfcMagneticFluxMeasurevalue[0-1] : REAL;
		attribute IfcMagneticFluxDensityMeasurevalue[0-1] : REAL;
		attribute IfcMonetaryMeasurevalue[0-1] : REAL;
		attribute IfcSpecificHeatCapacityMeasurevalue[0-1] : REAL;
		attribute IfcIsothermalMoistureCapacityMeasurevalue[0-1] : REAL;
		attribute IfcMoistureDiffusivityMeasurevalue[0-1] : REAL;
		attribute IfcVaporPermeabilityMeasurevalue[0-1] : REAL;
		attribute IfcMolecularWeightMeasurevalue[0-1] : REAL;
		attribute IfcThermalConductivityMeasurevalue[0-1] : REAL;
		attribute IfcAngularVelocityMeasurevalue[0-1] : REAL;
		attribute IfcDynamicViscosityMeasurevalue[0-1] : REAL;
		attribute IfcElectricVoltageMeasurevalue[0-1] : REAL;
		attribute IfcEnergyMeasurevalue[0-1] : REAL;
		attribute IfcFrequencyMeasurevalue[0-1] : REAL;
		attribute IfcHeatFluxDensityMeasurevalue[0-1] : REAL;
		attribute IfcIntegerCountRateMeasurevalue[0-1] : INTEGER;
		attribute IfcKinematicViscosityMeasurevalue[0-1] : REAL;
		attribute IfcLinearVelocityMeasurevalue[0-1] : REAL;
		attribute IfcMassDensityMeasurevalue[0-1] : REAL;
		attribute IfcMassFlowRateMeasurevalue[0-1] : REAL;
		attribute IfcPowerMeasurevalue[0-1] : REAL;
		attribute IfcPressureMeasurevalue[0-1] : REAL;
		attribute IfcThermalAdmittanceMeasurevalue[0-1] : REAL;
		attribute IfcThermalResistanceMeasurevalue[0-1] : REAL;
		attribute IfcThermalTransmittanceMeasurevalue[0-1] : REAL;
		attribute IfcTimeStampvalue[0-1] : INTEGER;
		attribute IfcVolumetricFlowRateMeasurevalue[0-1] : REAL;
	}

	class IfcConditionCriterionSelect {
		attribute IfcLabelvalue[0-1] : STRING;
		reference IfcMeasureWithUnitvalue[0-1] container : IfcMeasureWithUnit;
	}

	class IfcColourOrFactor {
		attribute IfcNormalisedRatioMeasurevalue[0-1] : REAL;
		reference IfcColourRgbvalue[0-1] container : IfcColourRgb;
	}

	class IfcAppliedValueSelect {
		attribute IfcMonetaryMeasurevalue[0-1] : REAL;
		attribute IfcRatioMeasurevalue[0-1] : REAL;
		reference IfcMeasureWithUnitvalue[0-1] container : IfcMeasureWithUnit;
	}

	class Ifc2DCompositeCurve extends IfcCompositeCurve {
		
	}

	class IfcActionRequest extends IfcControl {
		attribute RequestID : STRING;
	}

	class IfcActor extends IfcObject {
		reference IsActingUpon : IfcRelAssignsToActor oppositeOf RelatingActor;
		reference TheActor : IfcActorSelect;
	}

	class IfcActorRole {
		attribute Role : IfcRoleEnum;
		attribute UserDefinedRole[0-1] : STRING;
		attribute Description[0-1] : STRING;
	}

	class IfcActuatorType extends IfcDistributionControlElementType {
		attribute PredefinedType : IfcActuatorTypeEnum;
	}

	class IfcAddress extends IfcObjectReferenceSelect {
		attribute Purpose[0-1] : IfcAddressTypeEnum;
		attribute Description[0-1] : STRING;
		attribute UserDefinedPurpose[0-1] : STRING;
		reference OfPerson : IfcPerson oppositeOf Addresses;
		reference OfOrganization : IfcOrganization oppositeOf Addresses;
	}

	class IfcAirTerminalBoxType extends IfcFlowControllerType {
		attribute PredefinedType : IfcAirTerminalBoxTypeEnum;
	}

	class IfcAirTerminalType extends IfcFlowTerminalType {
		attribute PredefinedType : IfcAirTerminalTypeEnum;
	}

	class IfcAirToAirHeatRecoveryType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcAirToAirHeatRecoveryTypeEnum;
	}

	class IfcAlarmType extends IfcDistributionControlElementType {
		attribute PredefinedType : IfcAlarmTypeEnum;
	}

	class IfcAngularDimension extends IfcDimensionCurveDirectedCallout {
		
	}

	class IfcAnnotation extends IfcProduct {
		
	}

	class IfcAnnotationCurveOccurrence extends IfcDraughtingCalloutElement, IfcAnnotationOccurrence {
		reference AnnotatedBySymbols : IfcTerminatorSymbol oppositeOf AnnotatedCurve;
	}

	class IfcAnnotationFillArea extends IfcGeometricRepresentationItem {
		reference OuterBoundary : IfcCurve;
		reference InnerBoundaries[*] ordered : IfcCurve;
	}

	class IfcAnnotationFillAreaOccurrence extends IfcAnnotationOccurrence {
		reference FillStyleTarget[0-1] : IfcPoint;
		attribute GlobalOrLocal[0-1] : IfcGlobalOrLocalEnum;
	}

	class IfcAnnotationOccurrence extends IfcStyledItem {
		
	}

	class IfcAnnotationSurface extends IfcGeometricRepresentationItem {
		reference Item : IfcGeometricRepresentationItem;
		reference TextureCoordinates[0-1] : IfcTextureCoordinate oppositeOf AnnotatedSurface;
	}

	class IfcAnnotationSurfaceOccurrence extends IfcAnnotationOccurrence {
		
	}

	class IfcAnnotationSymbolOccurrence extends IfcDraughtingCalloutElement, IfcAnnotationOccurrence {
		
	}

	class IfcAnnotationTextOccurrence extends IfcDraughtingCalloutElement, IfcAnnotationOccurrence {
		
	}

	class IfcApplication {
		attribute Version : STRING;
		attribute ApplicationFullName : STRING;
		attribute ApplicationIdentifier : STRING;
		reference ApplicationDeveloper : IfcOrganization;
	}

	class IfcAppliedValue extends IfcObjectReferenceSelect {
		attribute Name[0-1] : STRING;
		attribute Description[0-1] : STRING;
		reference AppliedValue[0-1] : IfcAppliedValueSelect;
		reference ValuesReferenced : IfcReferencesValueDocument oppositeOf ReferencingValues;
		reference ValueOfComponents : IfcAppliedValueRelationship oppositeOf ComponentOfTotal;
		reference IsComponentIn : IfcAppliedValueRelationship oppositeOf Components;
		reference UnitBasis[0-1] : IfcMeasureWithUnit;
		reference ApplicableDate[0-1] : IfcDateTimeSelect;
		reference FixedUntilDate[0-1] : IfcDateTimeSelect;
	}

	class IfcAppliedValueRelationship {
		attribute ArithmeticOperator : IfcArithmeticOperatorEnum;
		attribute Name[0-1] : STRING;
		attribute Description[0-1] : STRING;
		reference ComponentOfTotal : IfcAppliedValue oppositeOf ValueOfComponents;
		reference Components[1-*] ordered : IfcAppliedValue oppositeOf IsComponentIn;
	}

	class IfcApproval {
		attribute Description[0-1] : STRING;
		attribute ApprovalStatus[0-1] : STRING;
		attribute ApprovalLevel[0-1] : STRING;
		attribute ApprovalQualifier[0-1] : STRING;
		attribute Name : STRING;
		attribute Identifier : STRING;
		reference Actors : IfcApprovalActorRelationship oppositeOf Approval;
		reference IsRelatedWith : IfcApprovalRelationship oppositeOf RelatedApproval;
		reference Relates : IfcApprovalRelationship oppositeOf RelatingApproval;
		reference ApprovalDateTime : IfcDateTimeSelect;
	}

	class IfcApprovalActorRelationship {
		reference Actor : IfcActorSelect;
		reference Approval : IfcApproval oppositeOf Actors;
		reference Role : IfcActorRole;
	}

	class IfcApprovalPropertyRelationship {
		reference ApprovedProperties[1-*] ordered : IfcProperty;
		reference Approval : IfcApproval;
	}

	class IfcApprovalRelationship {
		attribute Description[0-1] : STRING;
		attribute Name : STRING;
		reference RelatedApproval : IfcApproval oppositeOf IsRelatedWith;
		reference RelatingApproval : IfcApproval oppositeOf Relates;
	}

	class IfcArbitraryClosedProfileDef extends IfcProfileDef {
		reference OuterCurve : IfcCurve;
	}

	class IfcArbitraryOpenProfileDef extends IfcProfileDef {
		reference Curve : IfcBoundedCurve;
	}

	class IfcArbitraryProfileDefWithVoids extends IfcArbitraryClosedProfileDef {
		reference InnerCurves[1-*] ordered : IfcCurve;
	}

	class IfcAsset extends IfcGroup {
		reference OriginalValue : IfcCostValue;
		reference CurrentValue : IfcCostValue;
		reference TotalReplacementCost : IfcCostValue;
		reference Owner : IfcActorSelect;
		reference User : IfcActorSelect;
		reference ResponsiblePerson : IfcPerson;
		reference IncorporationDate : IfcCalendarDate;
		reference DepreciatedValue : IfcCostValue;
		attribute AssetID : STRING;
	}

	class IfcAsymmetricIShapeProfileDef extends IfcIShapeProfileDef {
		attribute TopFlangeWidth : REAL;
		attribute TopFlangeThickness[0-1] : REAL;
		attribute TopFlangeFilletRadius[0-1] : REAL;
		attribute CentreOfGravityInY[0-1] : REAL;
	}

	class IfcAxis1Placement extends IfcPlacement {
		reference Axis[0-1] : IfcDirection;
	}

	class IfcAxis2Placement2D extends IfcAxis2Placement, IfcPlacement {
		reference RefDirection[0-1] : IfcDirection;
	}

	class IfcAxis2Placement3D extends IfcAxis2Placement, IfcPlacement {
		reference Axis[0-1] : IfcDirection;
		reference RefDirection[0-1] : IfcDirection;
	}

	class IfcBSplineCurve extends IfcBoundedCurve {
		attribute Degree : INTEGER;
		attribute CurveForm : IfcBSplineCurveForm;
		attribute ClosedCurve : LOGICAL;
		attribute SelfIntersect : LOGICAL;
		reference ControlPointsList[2-*] ordered : IfcCartesianPoint;
	}

	class IfcBeam extends IfcBuildingElement {
		
	}

	class IfcBeamType extends IfcBuildingElementType {
		attribute PredefinedType : IfcBeamTypeEnum;
	}

	class IfcBezierCurve extends IfcBSplineCurve {
		
	}

	class IfcBlobTexture extends IfcSurfaceTexture {
		attribute RasterFormat : STRING;
		attribute RasterCode : BOOLEAN;
	}

	class IfcBlock extends IfcCsgPrimitive3D {
		attribute XLength : REAL;
		attribute YLength : REAL;
		attribute ZLength : REAL;
	}

	class IfcBoilerType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcBoilerTypeEnum;
	}

	class IfcBooleanClippingResult extends IfcBooleanResult {
		
	}

	class IfcBooleanResult extends IfcBooleanOperand, IfcCsgSelect, IfcGeometricRepresentationItem {
		reference FirstOperand : IfcBooleanOperand;
		reference SecondOperand : IfcBooleanOperand;
		attribute Operator : IfcBooleanOperator;
	}

	class IfcBoundaryCondition {
		attribute Name[0-1] : STRING;
	}

	class IfcBoundaryEdgeCondition extends IfcBoundaryCondition {
		attribute LinearStiffnessByLengthX[0-1] : REAL;
		attribute LinearStiffnessByLengthY[0-1] : REAL;
		attribute LinearStiffnessByLengthZ[0-1] : REAL;
		attribute RotationalStiffnessByLengthX[0-1] : REAL;
		attribute RotationalStiffnessByLengthY[0-1] : REAL;
		attribute RotationalStiffnessByLengthZ[0-1] : REAL;
	}

	class IfcBoundaryFaceCondition extends IfcBoundaryCondition {
		attribute LinearStiffnessByAreaX[0-1] : REAL;
		attribute LinearStiffnessByAreaY[0-1] : REAL;
		attribute LinearStiffnessByAreaZ[0-1] : REAL;
	}

	class IfcBoundaryNodeCondition extends IfcBoundaryCondition {
		attribute LinearStiffnessX[0-1] : REAL;
		attribute LinearStiffnessY[0-1] : REAL;
		attribute LinearStiffnessZ[0-1] : REAL;
		attribute RotationalStiffnessX[0-1] : REAL;
		attribute RotationalStiffnessY[0-1] : REAL;
		attribute RotationalStiffnessZ[0-1] : REAL;
	}

	class IfcBoundaryNodeConditionWarping extends IfcBoundaryNodeCondition {
		attribute WarpingStiffness[0-1] : REAL;
	}

	class IfcBoundedCurve extends IfcCurveOrEdgeCurve, IfcCurve {
		
	}

	class IfcBoundedSurface extends IfcSurface {
		
	}

	class IfcBoundingBox extends IfcGeometricRepresentationItem {
		attribute XDim : REAL;
		attribute YDim : REAL;
		attribute ZDim : REAL;
		reference Corner : IfcCartesianPoint;
	}

	class IfcBoxedHalfSpace extends IfcHalfSpaceSolid {
		reference Enclosure : IfcBoundingBox;
	}

	class IfcBuilding extends IfcSpatialStructureElement {
		attribute ElevationOfRefHeight[0-1] : REAL;
		attribute ElevationOfTerrain[0-1] : REAL;
		reference BuildingAddress[0-1] : IfcPostalAddress;
	}

	class IfcBuildingElement extends IfcElement {
		
	}

	class IfcBuildingElementComponent extends IfcBuildingElement {
		
	}

	class IfcBuildingElementPart extends IfcBuildingElementComponent {
		
	}

	class IfcBuildingElementProxy extends IfcBuildingElement {
		attribute CompositionType[0-1] : IfcElementCompositionEnum;
	}

	class IfcBuildingElementProxyType extends IfcBuildingElementType {
		attribute PredefinedType : IfcBuildingElementProxyTypeEnum;
	}

	class IfcBuildingElementType extends IfcElementType {
		
	}

	class IfcBuildingStorey extends IfcSpatialStructureElement {
		attribute Elevation[0-1] : REAL;
	}

	class IfcCShapeProfileDef extends IfcParameterizedProfileDef {
		attribute Depth : REAL;
		attribute Width : REAL;
		attribute WallThickness : REAL;
		attribute Girth : REAL;
		attribute InternalFilletRadius[0-1] : REAL;
		attribute CentreOfGravityInX[0-1] : REAL;
	}

	class IfcCableCarrierFittingType extends IfcFlowFittingType {
		attribute PredefinedType : IfcCableCarrierFittingTypeEnum;
	}

	class IfcCableCarrierSegmentType extends IfcFlowSegmentType {
		attribute PredefinedType : IfcCableCarrierSegmentTypeEnum;
	}

	class IfcCableSegmentType extends IfcFlowSegmentType {
		attribute PredefinedType : IfcCableSegmentTypeEnum;
	}

	class IfcCalendarDate extends IfcDateTimeSelect, IfcObjectReferenceSelect {
		attribute DayComponent : INTEGER;
		attribute MonthComponent : INTEGER;
		attribute YearComponent : INTEGER;
	}

	class IfcCartesianPoint extends IfcPoint {
		attribute Coordinates[1-3] ordered unique : REAL;
	}

	class IfcCartesianTransformationOperator extends IfcGeometricRepresentationItem {
		reference Axis1[0-1] : IfcDirection;
		reference Axis2[0-1] : IfcDirection;
		reference LocalOrigin : IfcCartesianPoint;
		attribute Scale[0-1] : REAL;
	}

	class IfcCartesianTransformationOperator2D extends IfcCartesianTransformationOperator {
		
	}

	class IfcCartesianTransformationOperator2DnonUniform extends IfcCartesianTransformationOperator2D {
		attribute Scale2[0-1] : REAL;
	}

	class IfcCartesianTransformationOperator3D extends IfcCartesianTransformationOperator {
		reference Axis3[0-1] : IfcDirection;
	}

	class IfcCartesianTransformationOperator3DnonUniform extends IfcCartesianTransformationOperator3D {
		attribute Scale2[0-1] : REAL;
		attribute Scale3[0-1] : REAL;
	}

	class IfcCenterLineProfileDef extends IfcArbitraryOpenProfileDef {
		attribute Thickness : REAL;
	}

	class IfcChamferEdgeFeature extends IfcEdgeFeature {
		attribute Width[0-1] : REAL;
		attribute Height[0-1] : REAL;
	}

	class IfcChillerType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcChillerTypeEnum;
	}

	class IfcCircle extends IfcConic {
		attribute Radius : REAL;
	}

	class IfcCircleHollowProfileDef extends IfcCircleProfileDef {
		attribute WallThickness : REAL;
	}

	class IfcCircleProfileDef extends IfcParameterizedProfileDef {
		attribute Radius : REAL;
	}

	class IfcClassification {
		attribute Source : STRING;
		attribute Edition : STRING;
		attribute Name : STRING;
		reference Contains : IfcClassificationItem oppositeOf ItemOf;
		reference EditionDate[0-1] : IfcCalendarDate;
	}

	class IfcClassificationItem {
		reference IsClassifiedItemIn : IfcClassificationItemRelationship oppositeOf RelatedItems;
		reference IsClassifyingItemIn : IfcClassificationItemRelationship oppositeOf RelatingItem;
		reference Notation : IfcClassificationNotationFacet;
		reference ItemOf[0-1] : IfcClassification oppositeOf Contains;
		attribute Title : STRING;
	}

	class IfcClassificationItemRelationship {
		reference RelatingItem : IfcClassificationItem oppositeOf IsClassifyingItemIn;
		reference RelatedItems[1-*] ordered : IfcClassificationItem oppositeOf IsClassifiedItemIn;
	}

	class IfcClassificationNotation extends IfcClassificationNotationSelect {
		reference NotationFacets[1-*] ordered : IfcClassificationNotationFacet;
	}

	class IfcClassificationNotationFacet {
		attribute NotationValue : STRING;
	}

	class IfcClassificationReference extends IfcClassificationNotationSelect, IfcExternalReference {
		reference ReferencedSource[0-1] : IfcClassification;
	}

	class IfcClosedShell extends IfcShell, IfcConnectedFaceSet {
		
	}

	class IfcCoilType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcCoilTypeEnum;
	}

	class IfcColourRgb extends IfcColourSpecification {
		attribute Red : REAL;
		attribute Green : REAL;
		attribute Blue : REAL;
	}

	class IfcColourSpecification extends IfcColour {
		attribute Name[0-1] : STRING;
	}

	class IfcColumn extends IfcBuildingElement {
		
	}

	class IfcColumnType extends IfcBuildingElementType {
		attribute PredefinedType : IfcColumnTypeEnum;
	}

	class IfcComplexProperty extends IfcProperty {
		reference HasProperties[1-*] ordered : IfcProperty oppositeOf PartOfComplex;
		attribute UsageName : STRING;
	}

	class IfcCompositeCurve extends IfcBoundedCurve {
		reference Segments[1-*] ordered : IfcCompositeCurveSegment oppositeOf UsingCurves;
		attribute SelfIntersect : LOGICAL;
	}

	class IfcCompositeCurveSegment extends IfcGeometricRepresentationItem {
		attribute Transition : IfcTransitionCode;
		attribute SameSense : BOOLEAN;
		reference UsingCurves : IfcCompositeCurve oppositeOf Segments;
		reference ParentCurve : IfcCurve;
	}

	class IfcCompositeProfileDef extends IfcProfileDef {
		reference Profiles[2-*] ordered : IfcProfileDef;
		attribute Label[0-1] : STRING;
	}

	class IfcCompressorType extends IfcFlowMovingDeviceType {
		attribute PredefinedType : IfcCompressorTypeEnum;
	}

	class IfcCondenserType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcCondenserTypeEnum;
	}

	class IfcCondition extends IfcGroup {
		
	}

	class IfcConditionCriterion extends IfcControl {
		reference Criterion : IfcConditionCriterionSelect;
		reference CriterionDateTime : IfcDateTimeSelect;
	}

	class IfcConic extends IfcCurve {
		reference Position : IfcAxis2Placement;
	}

	class IfcConnectedFaceSet extends IfcTopologicalRepresentationItem {
		reference CfsFaces[1-*] ordered : IfcFace;
	}

	class IfcConnectionCurveGeometry extends IfcConnectionGeometry {
		reference CurveOnRelatingElement : IfcCurveOrEdgeCurve;
		reference CurveOnRelatedElement[0-1] : IfcCurveOrEdgeCurve;
	}

	class IfcConnectionGeometry {
		
	}

	class IfcConnectionPointEccentricity extends IfcConnectionPointGeometry {
		attribute EccentricityInX[0-1] : REAL;
		attribute EccentricityInY[0-1] : REAL;
		attribute EccentricityInZ[0-1] : REAL;
	}

	class IfcConnectionPointGeometry extends IfcConnectionGeometry {
		reference PointOnRelatingElement : IfcPointOrVertexPoint;
		reference PointOnRelatedElement[0-1] : IfcPointOrVertexPoint;
	}

	class IfcConnectionPortGeometry extends IfcConnectionGeometry {
		reference LocationAtRelatingElement : IfcAxis2Placement;
		reference LocationAtRelatedElement[0-1] : IfcAxis2Placement;
		reference ProfileOfPort : IfcProfileDef;
	}

	class IfcConnectionSurfaceGeometry extends IfcConnectionGeometry {
		reference SurfaceOnRelatingElement : IfcSurfaceOrFaceSurface;
		reference SurfaceOnRelatedElement[0-1] : IfcSurfaceOrFaceSurface;
	}

	class IfcConstraint {
		attribute Name : STRING;
		attribute Description[0-1] : STRING;
		attribute ConstraintGrade : IfcConstraintEnum;
		attribute ConstraintSource[0-1] : STRING;
		attribute UserDefinedGrade[0-1] : STRING;
		reference ClassifiedAs : IfcConstraintClassificationRelationship oppositeOf ClassifiedConstraint;
		reference RelatesConstraints : IfcConstraintRelationship oppositeOf RelatingConstraint;
		reference IsRelatedWith : IfcConstraintRelationship oppositeOf RelatedConstraints;
		reference PropertiesForConstraint : IfcPropertyConstraintRelationship oppositeOf RelatingConstraint;
		reference Aggregates : IfcConstraintAggregationRelationship oppositeOf RelatingConstraint;
		reference IsAggregatedIn : IfcConstraintAggregationRelationship oppositeOf RelatedConstraints;
		reference CreatingActor[0-1] : IfcActorSelect;
		reference CreationTime[0-1] : IfcDateTimeSelect;
	}

	class IfcConstraintAggregationRelationship {
		attribute Name[0-1] : STRING;
		attribute Description[0-1] : STRING;
		attribute LogicalAggregator : IfcLogicalOperatorEnum;
		reference RelatingConstraint : IfcConstraint oppositeOf Aggregates;
		reference RelatedConstraints[1-*] ordered : IfcConstraint oppositeOf IsAggregatedIn;
	}

	class IfcConstraintClassificationRelationship {
		reference ClassifiedConstraint : IfcConstraint oppositeOf ClassifiedAs;
		reference RelatedClassifications[1-*] ordered : IfcClassificationNotationSelect;
	}

	class IfcConstraintRelationship {
		attribute Name[0-1] : STRING;
		attribute Description[0-1] : STRING;
		reference RelatingConstraint : IfcConstraint oppositeOf RelatesConstraints;
		reference RelatedConstraints[1-*] ordered : IfcConstraint oppositeOf IsRelatedWith;
	}

	class IfcConstructionEquipmentResource extends IfcConstructionResource {
		
	}

	class IfcConstructionMaterialResource extends IfcConstructionResource {
		reference Suppliers[*] ordered : IfcActorSelect;
		attribute UsageRatio[0-1] : REAL;
	}

	class IfcConstructionProductResource extends IfcConstructionResource {
		
	}

	class IfcConstructionResource extends IfcResource {
		attribute ResourceIdentifier[0-1] : STRING;
		attribute ResourceGroup[0-1] : STRING;
		attribute ResourceConsumption[0-1] : IfcResourceConsumptionEnum;
		reference BaseQuantity[0-1] : IfcMeasureWithUnit;
	}

	class IfcContextDependentUnit extends IfcNamedUnit {
		attribute Name : STRING;
	}

	class IfcControl extends IfcObject {
		reference Controls : IfcRelAssignsToControl oppositeOf RelatingControl;
	}

	class IfcControllerType extends IfcDistributionControlElementType {
		attribute PredefinedType : IfcControllerTypeEnum;
	}

	class IfcConversionBasedUnit extends IfcNamedUnit {
		reference ConversionFactor : IfcMeasureWithUnit;
		attribute Name : STRING;
	}

	class IfcCooledBeamType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcCooledBeamTypeEnum;
	}

	class IfcCoolingTowerType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcCoolingTowerTypeEnum;
	}

	class IfcCoordinatedUniversalTimeOffset {
		attribute HourOffset : INTEGER;
		attribute MinuteOffset[0-1] : INTEGER;
		attribute Sense : IfcAheadOrBehind;
	}

	class IfcCostItem extends IfcControl {
		
	}

	class IfcCostSchedule extends IfcControl {
		attribute Status[0-1] : STRING;
		attribute ID : STRING;
		attribute PredefinedType : IfcCostScheduleTypeEnum;
		reference SubmittedBy[0-1] : IfcActorSelect;
		reference PreparedBy[0-1] : IfcActorSelect;
		reference SubmittedOn[0-1] : IfcDateTimeSelect;
		reference TargetUsers[*] ordered : IfcActorSelect;
		reference UpdateDate[0-1] : IfcDateTimeSelect;
	}

	class IfcCostValue extends IfcAppliedValue {
		attribute CostType : STRING;
		attribute Condition[0-1] : STRING;
	}

	class IfcCovering extends IfcBuildingElement {
		reference CoversSpaces : IfcRelCoversSpaces oppositeOf RelatedCoverings;
		reference Covers : IfcRelCoversBldgElements oppositeOf RelatedCoverings;
		attribute PredefinedType[0-1] : IfcCoveringTypeEnum;
	}

	class IfcCoveringType extends IfcBuildingElementType {
		attribute PredefinedType : IfcCoveringTypeEnum;
	}

	class IfcCraneRailAShapeProfileDef extends IfcParameterizedProfileDef {
		attribute OverallHeight : REAL;
		attribute BaseWidth2 : REAL;
		attribute Radius[0-1] : REAL;
		attribute HeadWidth : REAL;
		attribute HeadDepth2 : REAL;
		attribute HeadDepth3 : REAL;
		attribute WebThickness : REAL;
		attribute BaseWidth4 : REAL;
		attribute BaseDepth1 : REAL;
		attribute BaseDepth2 : REAL;
		attribute BaseDepth3 : REAL;
		attribute CentreOfGravityInY[0-1] : REAL;
	}

	class IfcCraneRailFShapeProfileDef extends IfcParameterizedProfileDef {
		attribute OverallHeight : REAL;
		attribute HeadWidth : REAL;
		attribute Radius[0-1] : REAL;
		attribute HeadDepth2 : REAL;
		attribute HeadDepth3 : REAL;
		attribute WebThickness : REAL;
		attribute BaseDepth1 : REAL;
		attribute BaseDepth2 : REAL;
		attribute CentreOfGravityInY[0-1] : REAL;
	}

	class IfcCrewResource extends IfcConstructionResource {
		
	}

	class IfcCsgPrimitive3D extends IfcBooleanOperand, IfcCsgSelect, IfcGeometricRepresentationItem {
		reference Position : IfcAxis2Placement3D;
	}

	class IfcCsgSolid extends IfcSolidModel {
		reference TreeRootExpression : IfcCsgSelect;
	}

	class IfcCurrencyRelationship {
		reference RelatingMonetaryUnit : IfcMonetaryUnit;
		reference RelatedMonetaryUnit : IfcMonetaryUnit;
		reference RateDateTime : IfcDateAndTime;
		reference RateSource[0-1] : IfcLibraryInformation;
		attribute ExchangeRate : REAL;
	}

	class IfcCurtainWall extends IfcBuildingElement {
		
	}

	class IfcCurtainWallType extends IfcBuildingElementType {
		attribute PredefinedType : IfcCurtainWallTypeEnum;
	}

	class IfcCurve extends IfcGeometricSetSelect, IfcGeometricRepresentationItem {
		
	}

	class IfcCurveBoundedPlane extends IfcBoundedSurface {
		reference BasisSurface : IfcPlane;
		reference OuterBoundary : IfcCurve;
		reference InnerBoundaries[*] ordered : IfcCurve;
	}

	class IfcCurveStyle extends IfcPresentationStyle {
		reference CurveFont[0-1] : IfcCurveFontOrScaledCurveFontSelect;
		reference CurveWidth[0-1] : IfcSizeSelect;
		reference CurveColour[0-1] : IfcColour;
	}

	class IfcCurveStyleFont extends IfcCurveStyleFontSelect {
		reference PatternList[1-*] ordered : IfcCurveStyleFontPattern;
		attribute Name[0-1] : STRING;
	}

	class IfcCurveStyleFontAndScaling extends IfcCurveFontOrScaledCurveFontSelect {
		attribute Name[0-1] : STRING;
		attribute CurveFontScaling : REAL;
		reference CurveFont : IfcCurveStyleFontSelect;
	}

	class IfcCurveStyleFontPattern {
		attribute VisibleSegmentLength : REAL;
		attribute InvisibleSegmentLength : REAL;
	}

	class IfcDamperType extends IfcFlowControllerType {
		attribute PredefinedType : IfcDamperTypeEnum;
	}

	class IfcDateAndTime extends IfcDateTimeSelect, IfcObjectReferenceSelect {
		reference DateComponent : IfcCalendarDate;
		reference TimeComponent : IfcLocalTime;
	}

	class IfcDefinedSymbol extends IfcGeometricRepresentationItem {
		reference Definition : IfcDefinedSymbolSelect;
		reference Target : IfcCartesianTransformationOperator2D;
	}

	class IfcDerivedProfileDef extends IfcProfileDef {
		reference ParentProfile : IfcProfileDef;
		reference Operator : IfcCartesianTransformationOperator2D;
		attribute Label[0-1] : STRING;
	}

	class IfcDerivedUnit extends IfcUnit {
		attribute UnitType : IfcDerivedUnitEnum;
		attribute UserDefinedType[0-1] : STRING;
		reference Elements[1-*] ordered : IfcDerivedUnitElement;
	}

	class IfcDerivedUnitElement {
		reference Unit : IfcNamedUnit;
		attribute Exponent : INTEGER;
	}

	class IfcDiameterDimension extends IfcDimensionCurveDirectedCallout {
		
	}

	class IfcDimensionCalloutRelationship extends IfcDraughtingCalloutRelationship {
		
	}

	class IfcDimensionCurve extends IfcAnnotationCurveOccurrence {
		
	}

	class IfcDimensionCurveDirectedCallout extends IfcDraughtingCallout {
		
	}

	class IfcDimensionCurveTerminator extends IfcTerminatorSymbol {
		attribute Role : IfcDimensionExtentUsage;
	}

	class IfcDimensionPair extends IfcDraughtingCalloutRelationship {
		
	}

	class IfcDimensionalExponents {
		attribute LengthExponent : INTEGER;
		attribute MassExponent : INTEGER;
		attribute TimeExponent : INTEGER;
		attribute ElectricCurrentExponent : INTEGER;
		attribute ThermodynamicTemperatureExponent : INTEGER;
		attribute AmountOfSubstanceExponent : INTEGER;
		attribute LuminousIntensityExponent : INTEGER;
	}

	class IfcDirection extends IfcVectorOrDirection, IfcGeometricRepresentationItem {
		attribute DirectionRatios[2-3] ordered unique : REAL;
	}

	class IfcDiscreteAccessory extends IfcElementComponent {
		
	}

	class IfcDiscreteAccessoryType extends IfcElementComponentType {
		
	}

	class IfcDistributionChamberElement extends IfcDistributionFlowElement {
		
	}

	class IfcDistributionChamberElementType extends IfcDistributionFlowElementType {
		attribute PredefinedType : IfcDistributionChamberElementTypeEnum;
	}

	class IfcDistributionControlElement extends IfcDistributionElement {
		reference AssignedToFlowElement : IfcRelFlowControlElements oppositeOf RelatedControlElements;
		attribute ControlElementId[0-1] : STRING;
	}

	class IfcDistributionControlElementType extends IfcDistributionElementType {
		
	}

	class IfcDistributionElement extends IfcElement {
		
	}

	class IfcDistributionElementType extends IfcElementType {
		
	}

	class IfcDistributionFlowElement extends IfcDistributionElement {
		reference HasControlElements : IfcRelFlowControlElements oppositeOf RelatingFlowElement;
	}

	class IfcDistributionFlowElementType extends IfcDistributionElementType {
		
	}

	class IfcDistributionPort extends IfcPort {
		attribute FlowDirection[0-1] : IfcFlowDirectionEnum;
	}

	class IfcDocumentElectronicFormat {
		attribute FileExtension[0-1] : STRING;
		attribute MimeContentType[0-1] : STRING;
		attribute MimeSubtype[0-1] : STRING;
	}

	class IfcDocumentInformation extends IfcDocumentSelect {
		attribute DocumentId : STRING;
		attribute Name : STRING;
		attribute Description[0-1] : STRING;
		attribute Purpose[0-1] : STRING;
		attribute IntendedUse[0-1] : STRING;
		attribute Scope[0-1] : STRING;
		attribute Revision[0-1] : STRING;
		attribute Confidentiality[0-1] : IfcDocumentConfidentialityEnum;
		attribute Status[0-1] : IfcDocumentStatusEnum;
		reference IsPointedTo : IfcDocumentInformationRelationship oppositeOf RelatedDocuments;
		reference IsPointer : IfcDocumentInformationRelationship oppositeOf RelatingDocument;
		reference DocumentReferences[*] ordered : IfcDocumentReference oppositeOf ReferenceToDocument;
		reference DocumentOwner[0-1] : IfcActorSelect;
		reference Editors[*] ordered : IfcActorSelect;
		reference CreationTime[0-1] : IfcDateAndTime;
		reference LastRevisionTime[0-1] : IfcDateAndTime;
		reference ElectronicFormat[0-1] : IfcDocumentElectronicFormat;
		reference ValidFrom[0-1] : IfcCalendarDate;
		reference ValidUntil[0-1] : IfcCalendarDate;
	}

	class IfcDocumentInformationRelationship {
		reference RelatingDocument : IfcDocumentInformation oppositeOf IsPointer;
		reference RelatedDocuments[1-*] ordered : IfcDocumentInformation oppositeOf IsPointedTo;
		attribute RelationshipType[0-1] : STRING;
	}

	class IfcDocumentReference extends IfcDocumentSelect, IfcExternalReference {
		reference ReferenceToDocument : IfcDocumentInformation oppositeOf DocumentReferences;
	}

	class IfcDoor extends IfcBuildingElement {
		attribute OverallHeight[0-1] : REAL;
		attribute OverallWidth[0-1] : REAL;
	}

	class IfcDoorLiningProperties extends IfcPropertySetDefinition {
		attribute LiningDepth[0-1] : REAL;
		attribute LiningThickness[0-1] : REAL;
		attribute ThresholdDepth[0-1] : REAL;
		attribute ThresholdThickness[0-1] : REAL;
		attribute TransomThickness[0-1] : REAL;
		attribute TransomOffset[0-1] : REAL;
		attribute LiningOffset[0-1] : REAL;
		attribute ThresholdOffset[0-1] : REAL;
		attribute CasingThickness[0-1] : REAL;
		attribute CasingDepth[0-1] : REAL;
		reference ShapeAspectStyle[0-1] : IfcShapeAspect;
	}

	class IfcDoorPanelProperties extends IfcPropertySetDefinition {
		attribute PanelDepth[0-1] : REAL;
		attribute PanelOperation : IfcDoorPanelOperationEnum;
		attribute PanelWidth[0-1] : REAL;
		attribute PanelPosition : IfcDoorPanelPositionEnum;
		reference ShapeAspectStyle[0-1] : IfcShapeAspect;
	}

	class IfcDoorStyle extends IfcTypeProduct {
		attribute OperationType : IfcDoorStyleOperationEnum;
		attribute ConstructionType : IfcDoorStyleConstructionEnum;
		attribute ParameterTakesPrecedence : BOOLEAN;
		attribute Sizeable : BOOLEAN;
	}

	class IfcDraughtingCallout extends IfcGeometricRepresentationItem {
		reference IsRelatedFromCallout : IfcDraughtingCalloutRelationship oppositeOf RelatedDraughtingCallout;
		reference IsRelatedToCallout : IfcDraughtingCalloutRelationship oppositeOf RelatingDraughtingCallout;
		reference Contents[1-*] ordered : IfcDraughtingCalloutElement;
	}

	class IfcDraughtingCalloutRelationship {
		attribute Name[0-1] : STRING;
		attribute Description[0-1] : STRING;
		reference RelatingDraughtingCallout : IfcDraughtingCallout oppositeOf IsRelatedToCallout;
		reference RelatedDraughtingCallout : IfcDraughtingCallout oppositeOf IsRelatedFromCallout;
	}

	class IfcDraughtingPreDefinedColour extends IfcPreDefinedColour {
		
	}

	class IfcDraughtingPreDefinedCurveFont extends IfcPreDefinedCurveFont {
		
	}

	class IfcDraughtingPreDefinedTextFont extends IfcPreDefinedTextFont {
		
	}

	class IfcDuctFittingType extends IfcFlowFittingType {
		attribute PredefinedType : IfcDuctFittingTypeEnum;
	}

	class IfcDuctSegmentType extends IfcFlowSegmentType {
		attribute PredefinedType : IfcDuctSegmentTypeEnum;
	}

	class IfcDuctSilencerType extends IfcFlowTreatmentDeviceType {
		attribute PredefinedType : IfcDuctSilencerTypeEnum;
	}

	class IfcEdge extends IfcTopologicalRepresentationItem {
		reference EdgeStart : IfcVertex;
		reference EdgeEnd : IfcVertex;
	}

	class IfcEdgeCurve extends IfcCurveOrEdgeCurve, IfcEdge {
		reference EdgeGeometry : IfcCurve;
		attribute SameSense : BOOLEAN;
	}

	class IfcEdgeFeature extends IfcFeatureElementSubtraction {
		attribute FeatureLength[0-1] : REAL;
	}

	class IfcEdgeLoop extends IfcLoop {
		reference EdgeList[1-*] ordered : IfcOrientedEdge;
	}

	class IfcElectricApplianceType extends IfcFlowTerminalType {
		attribute PredefinedType : IfcElectricApplianceTypeEnum;
	}

	class IfcElectricDistributionPoint extends IfcFlowController {
		attribute DistributionPointFunction : IfcElectricDistributionPointFunctionEnum;
		attribute UserDefinedFunction[0-1] : STRING;
	}

	class IfcElectricFlowStorageDeviceType extends IfcFlowStorageDeviceType {
		attribute PredefinedType : IfcElectricFlowStorageDeviceTypeEnum;
	}

	class IfcElectricGeneratorType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcElectricGeneratorTypeEnum;
	}

	class IfcElectricHeaterType extends IfcFlowTerminalType {
		attribute PredefinedType : IfcElectricHeaterTypeEnum;
	}

	class IfcElectricMotorType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcElectricMotorTypeEnum;
	}

	class IfcElectricTimeControlType extends IfcFlowControllerType {
		attribute PredefinedType : IfcElectricTimeControlTypeEnum;
	}

	class IfcElectricalBaseProperties extends IfcEnergyProperties {
		attribute ElectricCurrentType[0-1] : IfcElectricCurrentEnum;
		attribute InputVoltage : REAL;
		attribute InputFrequency : REAL;
		attribute FullLoadCurrent[0-1] : REAL;
		attribute MinimumCircuitCurrent[0-1] : REAL;
		attribute MaximumPowerInput[0-1] : REAL;
		attribute RatedPowerInput[0-1] : REAL;
		attribute InputPhase : INTEGER;
	}

	class IfcElectricalCircuit extends IfcSystem {
		
	}

	class IfcElectricalElement extends IfcElement {
		
	}

	class IfcElement extends IfcStructuralActivityAssignmentSelect, IfcProduct {
		reference FillsVoids : IfcRelFillsElement oppositeOf RelatedBuildingElement;
		reference ConnectedTo : IfcRelConnectsElements oppositeOf RelatingElement;
		reference HasCoverings : IfcRelCoversBldgElements oppositeOf RelatingBuildingElement;
		reference HasProjections : IfcRelProjectsElement oppositeOf RelatingElement;
		reference HasStructuralMember : IfcRelConnectsStructuralElement oppositeOf RelatingElement;
		reference HasPorts : IfcRelConnectsPortToElement oppositeOf RelatedElement;
		reference HasOpenings : IfcRelVoidsElement oppositeOf RelatingBuildingElement;
		reference IsConnectionRealization : IfcRelConnectsWithRealizingElements oppositeOf RealizingElements;
		reference ProvidesBoundaries : IfcRelSpaceBoundary oppositeOf RelatedBuildingElement;
		reference ConnectedFrom : IfcRelConnectsElements oppositeOf RelatedElement;
		attribute Tag[0-1] : STRING;
	}

	class IfcElementAssembly extends IfcElement {
		attribute AssemblyPlace[0-1] : IfcAssemblyPlaceEnum;
		attribute PredefinedType : IfcElementAssemblyTypeEnum;
	}

	class IfcElementComponent extends IfcElement {
		
	}

	class IfcElementComponentType extends IfcElementType {
		
	}

	class IfcElementQuantity extends IfcPropertySetDefinition {
		reference Quantities[1-*] ordered : IfcPhysicalQuantity;
		attribute MethodOfMeasurement[0-1] : STRING;
	}

	class IfcElementType extends IfcTypeProduct {
		attribute ElementType[0-1] : STRING;
	}

	class IfcElementarySurface extends IfcSurface {
		reference Position : IfcAxis2Placement3D;
	}

	class IfcEllipse extends IfcConic {
		attribute SemiAxis1 : REAL;
		attribute SemiAxis2 : REAL;
	}

	class IfcEllipseProfileDef extends IfcParameterizedProfileDef {
		attribute SemiAxis1 : REAL;
		attribute SemiAxis2 : REAL;
	}

	class IfcEnergyConversionDevice extends IfcDistributionFlowElement {
		
	}

	class IfcEnergyConversionDeviceType extends IfcDistributionFlowElementType {
		
	}

	class IfcEnergyProperties extends IfcPropertySetDefinition {
		attribute EnergySequence[0-1] : IfcEnergySequenceEnum;
		attribute UserDefinedEnergySequence[0-1] : STRING;
	}

	class IfcEnvironmentalImpactValue extends IfcAppliedValue {
		attribute ImpactType : STRING;
		attribute Category : IfcEnvironmentalImpactCategoryEnum;
		attribute UserDefinedCategory[0-1] : STRING;
	}

	class IfcEquipmentElement extends IfcElement {
		
	}

	class IfcEquipmentStandard extends IfcControl {
		
	}

	class IfcEvaporativeCoolerType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcEvaporativeCoolerTypeEnum;
	}

	class IfcEvaporatorType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcEvaporatorTypeEnum;
	}

	class IfcExtendedMaterialProperties extends IfcMaterialProperties {
		attribute Description[0-1] : STRING;
		attribute Name : STRING;
		reference ExtendedProperties[1-*] ordered : IfcProperty;
	}

	class IfcExternalReference extends IfcLightDistributionDataSourceSelect, IfcObjectReferenceSelect {
		attribute Location[0-1] : STRING;
		attribute ItemReference[0-1] : STRING;
		attribute Name[0-1] : STRING;
	}

	class IfcExternallyDefinedHatchStyle extends IfcFillStyleSelect, IfcExternalReference {
		
	}

	class IfcExternallyDefinedSurfaceStyle extends IfcSurfaceStyleElementSelect, IfcExternalReference {
		
	}

	class IfcExternallyDefinedSymbol extends IfcDefinedSymbolSelect, IfcExternalReference {
		
	}

	class IfcExternallyDefinedTextFont extends IfcTextFontSelect, IfcExternalReference {
		
	}

	class IfcExtrudedAreaSolid extends IfcSweptAreaSolid {
		reference ExtrudedDirection : IfcDirection;
		attribute Depth : REAL;
	}

	class IfcFace extends IfcTopologicalRepresentationItem {
		reference Bounds[1-*] ordered : IfcFaceBound;
	}

	class IfcFaceBasedSurfaceModel extends IfcSurfaceOrFaceSurface, IfcGeometricRepresentationItem {
		reference FbsmFaces[1-*] ordered : IfcConnectedFaceSet;
	}

	class IfcFaceBound extends IfcTopologicalRepresentationItem {
		reference Bound : IfcLoop;
		attribute Orientation : BOOLEAN;
	}

	class IfcFaceOuterBound extends IfcFaceBound {
		
	}

	class IfcFaceSurface extends IfcSurfaceOrFaceSurface, IfcFace {
		reference FaceSurface : IfcSurface;
		attribute SameSense : BOOLEAN;
	}

	class IfcFacetedBrep extends IfcManifoldSolidBrep {
		
	}

	class IfcFacetedBrepWithVoids extends IfcManifoldSolidBrep {
		reference Voids[1-*] ordered : IfcClosedShell;
	}

	class IfcFailureConnectionCondition extends IfcStructuralConnectionCondition {
		attribute TensionFailureX[0-1] : REAL;
		attribute TensionFailureY[0-1] : REAL;
		attribute TensionFailureZ[0-1] : REAL;
		attribute CompressionFailureX[0-1] : REAL;
		attribute CompressionFailureY[0-1] : REAL;
		attribute CompressionFailureZ[0-1] : REAL;
	}

	class IfcFanType extends IfcFlowMovingDeviceType {
		attribute PredefinedType : IfcFanTypeEnum;
	}

	class IfcFastener extends IfcElementComponent {
		
	}

	class IfcFastenerType extends IfcElementComponentType {
		
	}

	class IfcFeatureElement extends IfcElement {
		
	}

	class IfcFeatureElementAddition extends IfcFeatureElement {
		reference ProjectsElements : IfcRelProjectsElement oppositeOf RelatedFeatureElement;
	}

	class IfcFeatureElementSubtraction extends IfcFeatureElement {
		reference VoidsElements : IfcRelVoidsElement oppositeOf RelatedOpeningElement;
	}

	class IfcFillAreaStyle extends IfcPresentationStyle {
		reference FillStyles[1-*] ordered : IfcFillStyleSelect;
	}

	class IfcFillAreaStyleHatching extends IfcFillStyleSelect, IfcGeometricRepresentationItem {
		reference StartOfNextHatchLine : IfcHatchLineDistanceSelect;
		reference HatchLineAppearance : IfcCurveStyle;
		reference PointOfReferenceHatchLine[0-1] : IfcCartesianPoint;
		reference PatternStart[0-1] : IfcCartesianPoint;
		attribute HatchLineAngle : REAL;
	}

	class IfcFillAreaStyleTileSymbolWithStyle extends IfcFillAreaStyleTileShapeSelect, IfcGeometricRepresentationItem {
		reference Symbol : IfcAnnotationSymbolOccurrence;
	}

	class IfcFillAreaStyleTiles extends IfcFillStyleSelect, IfcGeometricRepresentationItem {
		reference TilingPattern : IfcOneDirectionRepeatFactor;
		reference Tiles[1-*] ordered : IfcFillAreaStyleTileShapeSelect;
		attribute TilingScale : REAL;
	}

	class IfcFilterType extends IfcFlowTreatmentDeviceType {
		attribute PredefinedType : IfcFilterTypeEnum;
	}

	class IfcFireSuppressionTerminalType extends IfcFlowTerminalType {
		attribute PredefinedType : IfcFireSuppressionTerminalTypeEnum;
	}

	class IfcFlowController extends IfcDistributionFlowElement {
		
	}

	class IfcFlowControllerType extends IfcDistributionFlowElementType {
		
	}

	class IfcFlowFitting extends IfcDistributionFlowElement {
		
	}

	class IfcFlowFittingType extends IfcDistributionFlowElementType {
		
	}

	class IfcFlowInstrumentType extends IfcDistributionControlElementType {
		attribute PredefinedType : IfcFlowInstrumentTypeEnum;
	}

	class IfcFlowMeterType extends IfcFlowControllerType {
		attribute PredefinedType : IfcFlowMeterTypeEnum;
	}

	class IfcFlowMovingDevice extends IfcDistributionFlowElement {
		
	}

	class IfcFlowMovingDeviceType extends IfcDistributionFlowElementType {
		
	}

	class IfcFlowSegment extends IfcDistributionFlowElement {
		
	}

	class IfcFlowSegmentType extends IfcDistributionFlowElementType {
		
	}

	class IfcFlowStorageDevice extends IfcDistributionFlowElement {
		
	}

	class IfcFlowStorageDeviceType extends IfcDistributionFlowElementType {
		
	}

	class IfcFlowTerminal extends IfcDistributionFlowElement {
		
	}

	class IfcFlowTerminalType extends IfcDistributionFlowElementType {
		
	}

	class IfcFlowTreatmentDevice extends IfcDistributionFlowElement {
		
	}

	class IfcFlowTreatmentDeviceType extends IfcDistributionFlowElementType {
		
	}

	class IfcFluidFlowProperties extends IfcPropertySetDefinition {
		attribute PropertySource : IfcPropertySourceEnum;
		attribute UserDefinedPropertySource[0-1] : STRING;
		attribute TemperatureSingleValue[0-1] : REAL;
		attribute WetBulbTemperatureSingleValue[0-1] : REAL;
		attribute FlowConditionSingleValue[0-1] : REAL;
		attribute VelocitySingleValue[0-1] : REAL;
		attribute PressureSingleValue[0-1] : REAL;
		reference FlowrateSingleValue[0-1] : IfcDerivedMeasureValue;
		reference FlowConditionTimeSeries[0-1] : IfcTimeSeries;
		reference VelocityTimeSeries[0-1] : IfcTimeSeries;
		reference FlowrateTimeSeries[0-1] : IfcTimeSeries;
		reference Fluid : IfcMaterial;
		reference PressureTimeSeries[0-1] : IfcTimeSeries;
		reference WetBulbTemperatureTimeSeries[0-1] : IfcTimeSeries;
		reference TemperatureTimeSeries[0-1] : IfcTimeSeries;
	}

	class IfcFooting extends IfcBuildingElement {
		attribute PredefinedType : IfcFootingTypeEnum;
	}

	class IfcFuelProperties extends IfcMaterialProperties {
		attribute CombustionTemperature[0-1] : REAL;
		attribute CarbonContent[0-1] : REAL;
		attribute LowerHeatingValue[0-1] : REAL;
		attribute HigherHeatingValue[0-1] : REAL;
	}

	class IfcFurnishingElement extends IfcElement {
		
	}

	class IfcFurnishingElementType extends IfcElementType {
		
	}

	class IfcFurnitureStandard extends IfcControl {
		
	}

	class IfcFurnitureType extends IfcFurnishingElementType {
		attribute AssemblyPlace : IfcAssemblyPlaceEnum;
	}

	class IfcGasTerminalType extends IfcFlowTerminalType {
		attribute PredefinedType : IfcGasTerminalTypeEnum;
	}

	class IfcGeneralMaterialProperties extends IfcMaterialProperties {
		attribute MolecularWeight[0-1] : REAL;
		attribute Porosity[0-1] : REAL;
		attribute MassDensity[0-1] : REAL;
	}

	class IfcGeneralProfileProperties extends IfcProfileProperties {
		attribute PhysicalWeight[0-1] : REAL;
		attribute Perimeter[0-1] : REAL;
		attribute MinimumPlateThickness[0-1] : REAL;
		attribute MaximumPlateThickness[0-1] : REAL;
		attribute CrossSectionArea[0-1] : REAL;
	}

	class IfcGeometricCurveSet extends IfcGeometricSet {
		
	}

	class IfcGeometricRepresentationContext extends IfcRepresentationContext {
		attribute CoordinateSpaceDimension : INTEGER;
		attribute Precision[0-1] : REAL;
		reference HasSubContexts : IfcGeometricRepresentationSubContext oppositeOf ParentContext;
		reference WorldCoordinateSystem : IfcAxis2Placement;
		reference TrueNorth[0-1] : IfcDirection;
	}

	class IfcGeometricRepresentationItem extends IfcRepresentationItem {
		
	}

	class IfcGeometricRepresentationSubContext extends IfcGeometricRepresentationContext {
		attribute TargetScale[0-1] : REAL;
		attribute TargetView : IfcGeometricProjectionEnum;
		attribute UserDefinedTargetView[0-1] : STRING;
		reference ParentContext : IfcGeometricRepresentationContext oppositeOf HasSubContexts;
	}

	class IfcGeometricSet extends IfcGeometricRepresentationItem {
		reference Elements[1-*] ordered : IfcGeometricSetSelect;
	}

	class IfcGrid extends IfcProduct {
		reference UAxes[1-*] ordered : IfcGridAxis oppositeOf PartOfU;
		reference VAxes[1-*] ordered : IfcGridAxis oppositeOf PartOfV;
		reference WAxes[*] ordered : IfcGridAxis oppositeOf PartOfW;
	}

	class IfcGridAxis {
		attribute AxisTag[0-1] : STRING;
		attribute SameSense : BOOLEAN;
		reference PartOfW : IfcGrid oppositeOf WAxes;
		reference PartOfV : IfcGrid oppositeOf VAxes;
		reference PartOfU : IfcGrid oppositeOf UAxes;
		reference HasIntersections : IfcVirtualGridIntersection oppositeOf IntersectingAxes;
		reference AxisCurve : IfcCurve;
	}

	class IfcGridPlacement extends IfcObjectPlacement {
		reference PlacementLocation : IfcVirtualGridIntersection;
		reference PlacementRefDirection[0-1] : IfcVirtualGridIntersection;
	}

	class IfcGroup extends IfcObject {
		reference IsGroupedBy : IfcRelAssignsToGroup oppositeOf RelatingGroup;
	}

	class IfcHalfSpaceSolid extends IfcBooleanOperand, IfcGeometricRepresentationItem {
		reference BaseSurface : IfcSurface;
		attribute AgreementFlag : BOOLEAN;
	}

	class IfcHeatExchangerType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcHeatExchangerTypeEnum;
	}

	class IfcHumidifierType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcHumidifierTypeEnum;
	}

	class IfcHygroscopicMaterialProperties extends IfcMaterialProperties {
		attribute UpperVaporResistanceFactor[0-1] : REAL;
		attribute LowerVaporResistanceFactor[0-1] : REAL;
		attribute IsothermalMoistureCapacity[0-1] : REAL;
		attribute VaporPermeability[0-1] : REAL;
		attribute MoistureDiffusivity[0-1] : REAL;
	}

	class IfcIShapeProfileDef extends IfcParameterizedProfileDef {
		attribute OverallWidth : REAL;
		attribute OverallDepth : REAL;
		attribute WebThickness : REAL;
		attribute FlangeThickness : REAL;
		attribute FilletRadius[0-1] : REAL;
	}

	class IfcImageTexture extends IfcSurfaceTexture {
		attribute UrlReference : STRING;
	}

	class IfcInventory extends IfcGroup {
		reference Jurisdiction : IfcActorSelect;
		reference ResponsiblePersons[1-*] ordered : IfcPerson;
		reference LastUpdateDate : IfcCalendarDate;
		reference CurrentValue[0-1] : IfcCostValue;
		reference OriginalValue[0-1] : IfcCostValue;
		attribute InventoryType : IfcInventoryTypeEnum;
	}

	class IfcIrregularTimeSeries extends IfcTimeSeries {
		reference Values[1-*] ordered : IfcIrregularTimeSeriesValue;
	}

	class IfcIrregularTimeSeriesValue {
		reference ListValues[1-*] ordered : IfcValue;
		reference TimeStamp : IfcDateTimeSelect;
	}

	class IfcJunctionBoxType extends IfcFlowFittingType {
		attribute PredefinedType : IfcJunctionBoxTypeEnum;
	}

	class IfcLShapeProfileDef extends IfcParameterizedProfileDef {
		attribute Depth : REAL;
		attribute Width[0-1] : REAL;
		attribute Thickness : REAL;
		attribute FilletRadius[0-1] : REAL;
		attribute EdgeRadius[0-1] : REAL;
		attribute LegSlope[0-1] : REAL;
		attribute CentreOfGravityInX[0-1] : REAL;
		attribute CentreOfGravityInY[0-1] : REAL;
	}

	class IfcLaborResource extends IfcConstructionResource {
		attribute SkillSet[0-1] : STRING;
	}

	class IfcLampType extends IfcFlowTerminalType {
		attribute PredefinedType : IfcLampTypeEnum;
	}

	class IfcLibraryInformation extends IfcLibrarySelect {
		attribute Name : STRING;
		attribute Version[0-1] : STRING;
		reference Publisher[0-1] : IfcOrganization;
		reference VersionDate[0-1] : IfcCalendarDate;
		reference LibraryReference[*] ordered : IfcLibraryReference oppositeOf ReferenceIntoLibrary;
	}

	class IfcLibraryReference extends IfcLibrarySelect, IfcExternalReference {
		reference ReferenceIntoLibrary : IfcLibraryInformation oppositeOf LibraryReference;
	}

	class IfcLightDistributionData {
		attribute MainPlaneAngle : REAL;
		attribute SecondaryPlaneAngle[1-*] ordered unique : REAL;
		attribute LuminousIntensity[1-*] ordered unique : REAL;
	}

	class IfcLightFixtureType extends IfcFlowTerminalType {
		attribute PredefinedType : IfcLightFixtureTypeEnum;
	}

	class IfcLightIntensityDistribution extends IfcLightDistributionDataSourceSelect {
		reference DistributionData[1-*] ordered : IfcLightDistributionData;
		attribute LightDistributionCurve : IfcLightDistributionCurveEnum;
	}

	class IfcLightSource extends IfcGeometricRepresentationItem {
		attribute Name[0-1] : STRING;
		attribute AmbientIntensity[0-1] : REAL;
		attribute Intensity[0-1] : REAL;
		reference LightColour : IfcColourRgb;
	}

	class IfcLightSourceAmbient extends IfcLightSource {
		
	}

	class IfcLightSourceDirectional extends IfcLightSource {
		reference Orientation : IfcDirection;
	}

	class IfcLightSourceGoniometric extends IfcLightSource {
		attribute ColourTemperature : REAL;
		attribute LuminousFlux : REAL;
		attribute LightEmissionSource : IfcLightEmissionSourceEnum;
		reference Position : IfcAxis2Placement3D;
		reference ColourAppearance[0-1] : IfcColourRgb;
		reference LightDistributionDataSource : IfcLightDistributionDataSourceSelect;
	}

	class IfcLightSourcePositional extends IfcLightSource {
		attribute Radius : REAL;
		attribute ConstantAttenuation : REAL;
		attribute DistanceAttenuation : REAL;
		attribute QuadricAttenuation : REAL;
		reference Position : IfcCartesianPoint;
	}

	class IfcLightSourceSpot extends IfcLightSourcePositional {
		attribute ConcentrationExponent[0-1] : REAL;
		attribute SpreadAngle : REAL;
		attribute BeamWidthAngle : REAL;
		reference Orientation : IfcDirection;
	}

	class IfcLine extends IfcCurve {
		reference Pnt : IfcCartesianPoint;
		reference Dir : IfcVector;
	}

	class IfcLinearDimension extends IfcDimensionCurveDirectedCallout {
		
	}

	class IfcLocalPlacement extends IfcObjectPlacement {
		reference PlacementRelTo[0-1] : IfcObjectPlacement oppositeOf ReferencedByPlacements;
		reference RelativePlacement : IfcAxis2Placement;
	}

	class IfcLocalTime extends IfcDateTimeSelect, IfcObjectReferenceSelect {
		attribute HourComponent : INTEGER;
		attribute MinuteComponent[0-1] : INTEGER;
		attribute SecondComponent[0-1] : REAL;
		attribute DaylightSavingOffset[0-1] : INTEGER;
		reference Zone[0-1] : IfcCoordinatedUniversalTimeOffset;
	}

	class IfcLoop extends IfcTopologicalRepresentationItem {
		
	}

	class IfcManifoldSolidBrep extends IfcSolidModel {
		reference Outer : IfcClosedShell;
	}

	class IfcMappedItem extends IfcRepresentationItem {
		reference MappingSource : IfcRepresentationMap oppositeOf MapUsage;
		reference MappingTarget : IfcCartesianTransformationOperator;
	}

	class IfcMaterial extends IfcMaterialSelect, IfcObjectReferenceSelect {
		reference HasRepresentation : IfcMaterialDefinitionRepresentation oppositeOf RepresentedMaterial;
		reference ClassifiedAs : IfcMaterialClassificationRelationship oppositeOf ClassifiedMaterial;
		attribute Name : STRING;
	}

	class IfcMaterialClassificationRelationship {
		reference MaterialClassifications[1-*] ordered : IfcClassificationNotationSelect;
		reference ClassifiedMaterial : IfcMaterial oppositeOf ClassifiedAs;
	}

	class IfcMaterialDefinitionRepresentation extends IfcProductRepresentation {
		reference RepresentedMaterial : IfcMaterial oppositeOf HasRepresentation;
	}

	class IfcMaterialLayer extends IfcMaterialSelect, IfcObjectReferenceSelect {
		attribute LayerThickness : REAL;
		attribute IsVentilated[0-1] : LOGICAL;
		reference ToMaterialLayerSet : IfcMaterialLayerSet oppositeOf MaterialLayers;
		reference Material[0-1] : IfcMaterial;
	}

	class IfcMaterialLayerSet extends IfcMaterialSelect {
		reference MaterialLayers[1-*] ordered : IfcMaterialLayer oppositeOf ToMaterialLayerSet;
		attribute LayerSetName[0-1] : STRING;
	}

	class IfcMaterialLayerSetUsage extends IfcMaterialSelect {
		attribute LayerSetDirection : IfcLayerSetDirectionEnum;
		attribute DirectionSense : IfcDirectionSenseEnum;
		attribute OffsetFromReferenceLine : REAL;
		reference ForLayerSet : IfcMaterialLayerSet;
	}

	class IfcMaterialList extends IfcMaterialSelect, IfcObjectReferenceSelect {
		reference Materials[1-*] ordered : IfcMaterial;
	}

	class IfcMaterialProperties {
		reference Material : IfcMaterial;
	}

	class IfcMeasureWithUnit {
		reference ValueComponent : IfcValue;
		reference UnitComponent : IfcUnit;
	}

	class IfcMechanicalConcreteMaterialProperties extends IfcMechanicalMaterialProperties {
		attribute CompressiveStrength[0-1] : REAL;
		attribute MaxAggregateSize[0-1] : REAL;
		attribute AdmixturesDescription[0-1] : STRING;
		attribute Workability[0-1] : STRING;
		attribute ProtectivePoreRatio[0-1] : REAL;
		attribute WaterImpermeability[0-1] : STRING;
	}

	class IfcMechanicalFastener extends IfcFastener {
		attribute NominalDiameter[0-1] : REAL;
		attribute NominalLength[0-1] : REAL;
	}

	class IfcMechanicalFastenerType extends IfcFastenerType {
		
	}

	class IfcMechanicalMaterialProperties extends IfcMaterialProperties {
		attribute DynamicViscosity[0-1] : REAL;
		attribute YoungModulus[0-1] : REAL;
		attribute ShearModulus[0-1] : REAL;
		attribute PoissonRatio[0-1] : REAL;
		attribute ThermalExpansionCoefficient[0-1] : REAL;
	}

	class IfcMechanicalSteelMaterialProperties extends IfcMechanicalMaterialProperties {
		attribute YieldStress[0-1] : REAL;
		attribute UltimateStress[0-1] : REAL;
		attribute UltimateStrain[0-1] : REAL;
		attribute HardeningModule[0-1] : REAL;
		attribute ProportionalStress[0-1] : REAL;
		attribute PlasticStrain[0-1] : REAL;
		reference Relaxations[*] ordered : IfcRelaxation;
	}

	class IfcMember extends IfcBuildingElement {
		
	}

	class IfcMemberType extends IfcBuildingElementType {
		attribute PredefinedType : IfcMemberTypeEnum;
	}

	class IfcMetric extends IfcConstraint {
		attribute Benchmark : IfcBenchmarkEnum;
		attribute ValueSource[0-1] : STRING;
		reference DataValue : IfcMetricValueSelect;
	}

	class IfcMonetaryUnit extends IfcUnit {
		attribute Currency : IfcCurrencyEnum;
	}

	class IfcMotorConnectionType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcMotorConnectionTypeEnum;
	}

	class IfcMove extends IfcTask {
		reference MoveFrom : IfcSpatialStructureElement;
		reference MoveTo : IfcSpatialStructureElement;
		attribute PunchList[*] ordered unique : STRING;
	}

	class IfcNamedUnit extends IfcUnit {
		reference Dimensions : IfcDimensionalExponents;
		attribute UnitType : IfcUnitEnum;
	}

	class IfcObject extends IfcObjectDefinition {
		reference IsDefinedBy : IfcRelDefines oppositeOf RelatedObjects;
		attribute ObjectType[0-1] : STRING;
	}

	class IfcObjectDefinition extends IfcRoot {
		reference HasAssignments : IfcRelAssigns oppositeOf RelatedObjects;
		reference IsDecomposedBy : IfcRelDecomposes oppositeOf RelatingObject;
		reference Decomposes : IfcRelDecomposes oppositeOf RelatedObjects;
	}

	class IfcObjectPlacement {
		reference PlacesObject : IfcProduct oppositeOf ObjectPlacement;
		reference ReferencedByPlacements : IfcLocalPlacement oppositeOf PlacementRelTo;
	}

	class IfcObjective extends IfcConstraint {
		attribute ObjectiveQualifier : IfcObjectiveEnum;
		attribute UserDefinedQualifier[0-1] : STRING;
		reference BenchmarkValues[0-1] : IfcMetric;
		reference ResultValues[0-1] : IfcMetric;
	}

	class IfcOccupant extends IfcActor {
		attribute PredefinedType : IfcOccupantTypeEnum;
	}

	class IfcOffsetCurve2D extends IfcCurve {
		attribute Distance : REAL;
		attribute SelfIntersect : LOGICAL;
		reference BasisCurve : IfcCurve;
	}

	class IfcOffsetCurve3D extends IfcCurve {
		attribute Distance : REAL;
		attribute SelfIntersect : LOGICAL;
		reference BasisCurve : IfcCurve;
		reference RefDirection : IfcDirection;
	}

	class IfcOneDirectionRepeatFactor extends IfcGeometricRepresentationItem {
		reference RepeatFactor : IfcVector;
	}

	class IfcOpenShell extends IfcShell, IfcConnectedFaceSet {
		
	}

	class IfcOpeningElement extends IfcFeatureElementSubtraction {
		reference HasFillings : IfcRelFillsElement oppositeOf RelatingOpeningElement;
	}

	class IfcOpticalMaterialProperties extends IfcMaterialProperties {
		attribute VisibleTransmittance[0-1] : REAL;
		attribute SolarTransmittance[0-1] : REAL;
		attribute ThermalIrTransmittance[0-1] : REAL;
		attribute ThermalIrEmissivityBack[0-1] : REAL;
		attribute ThermalIrEmissivityFront[0-1] : REAL;
		attribute VisibleReflectanceBack[0-1] : REAL;
		attribute VisibleReflectanceFront[0-1] : REAL;
		attribute SolarReflectanceFront[0-1] : REAL;
		attribute SolarReflectanceBack[0-1] : REAL;
	}

	class IfcOrderAction extends IfcTask {
		attribute ActionID : STRING;
	}

	class IfcOrganization extends IfcActorSelect, IfcObjectReferenceSelect {
		attribute Id[0-1] : STRING;
		attribute Name : STRING;
		attribute Description[0-1] : STRING;
		reference IsRelatedBy : IfcOrganizationRelationship oppositeOf RelatedOrganizations;
		reference Relates : IfcOrganizationRelationship oppositeOf RelatingOrganization;
		reference Engages : IfcPersonAndOrganization oppositeOf TheOrganization;
		reference Roles[*] ordered : IfcActorRole;
		reference Addresses[*] ordered : IfcAddress oppositeOf OfOrganization;
	}

	class IfcOrganizationRelationship {
		attribute Name : STRING;
		attribute Description[0-1] : STRING;
		reference RelatingOrganization : IfcOrganization oppositeOf Relates;
		reference RelatedOrganizations[1-*] ordered : IfcOrganization oppositeOf IsRelatedBy;
	}

	class IfcOrientedEdge extends IfcEdge {
		reference EdgeElement : IfcEdge;
		attribute Orientation : BOOLEAN;
	}

	class IfcOutletType extends IfcFlowTerminalType {
		attribute PredefinedType : IfcOutletTypeEnum;
	}

	class IfcOwnerHistory {
		attribute State[0-1] : IfcStateEnum;
		attribute ChangeAction : IfcChangeActionEnum;
		attribute LastModifiedDate[0-1] : INTEGER;
		attribute CreationDate : INTEGER;
		reference OwningUser : IfcPersonAndOrganization;
		reference OwningApplication : IfcApplication;
		reference LastModifyingUser[0-1] : IfcPersonAndOrganization;
		reference LastModifyingApplication[0-1] : IfcApplication;
	}

	class IfcParameterizedProfileDef extends IfcProfileDef {
		reference Position : IfcAxis2Placement2D;
	}

	class IfcPath extends IfcTopologicalRepresentationItem {
		reference EdgeList[1-*] ordered : IfcOrientedEdge;
	}

	class IfcPerformanceHistory extends IfcControl {
		attribute LifeCyclePhase : STRING;
	}

	class IfcPermeableCoveringProperties extends IfcPropertySetDefinition {
		attribute OperationType : IfcPermeableCoveringOperationEnum;
		attribute PanelPosition : IfcWindowPanelPositionEnum;
		attribute FrameDepth[0-1] : REAL;
		attribute FrameThickness[0-1] : REAL;
		reference ShapeAspectStyle[0-1] : IfcShapeAspect;
	}

	class IfcPermit extends IfcControl {
		attribute PermitID : STRING;
	}

	class IfcPerson extends IfcActorSelect, IfcObjectReferenceSelect {
		attribute Id[0-1] : STRING;
		attribute FamilyName[0-1] : STRING;
		attribute GivenName[0-1] : STRING;
		attribute MiddleNames[*] ordered unique : STRING;
		attribute PrefixTitles[*] ordered unique : STRING;
		attribute SuffixTitles[*] ordered unique : STRING;
		reference EngagedIn : IfcPersonAndOrganization oppositeOf ThePerson;
		reference Roles[*] ordered : IfcActorRole;
		reference Addresses[*] ordered : IfcAddress oppositeOf OfPerson;
	}

	class IfcPersonAndOrganization extends IfcActorSelect, IfcObjectReferenceSelect {
		reference ThePerson : IfcPerson oppositeOf EngagedIn;
		reference TheOrganization : IfcOrganization oppositeOf Engages;
		reference Roles[*] ordered : IfcActorRole;
	}

	class IfcPhysicalComplexQuantity extends IfcPhysicalQuantity {
		attribute Discrimination : STRING;
		attribute Quality[0-1] : STRING;
		attribute Usage[0-1] : STRING;
		reference HasQuantities[1-*] ordered : IfcPhysicalQuantity oppositeOf PartOfComplex;
	}

	class IfcPhysicalQuantity {
		attribute Name : STRING;
		attribute Description[0-1] : STRING;
		reference PartOfComplex : IfcPhysicalComplexQuantity oppositeOf HasQuantities;
	}

	class IfcPhysicalSimpleQuantity extends IfcPhysicalQuantity {
		reference Unit[0-1] : IfcNamedUnit;
	}

	class IfcPile extends IfcBuildingElement {
		attribute PredefinedType : IfcPileTypeEnum;
		attribute ConstructionType[0-1] : IfcPileConstructionEnum;
	}

	class IfcPipeFittingType extends IfcFlowFittingType {
		attribute PredefinedType : IfcPipeFittingTypeEnum;
	}

	class IfcPipeSegmentType extends IfcFlowSegmentType {
		attribute PredefinedType : IfcPipeSegmentTypeEnum;
	}

	class IfcPixelTexture extends IfcSurfaceTexture {
		attribute Width : INTEGER;
		attribute Height : INTEGER;
		attribute ColourComponents : INTEGER;
		attribute Pixel[1-*] ordered unique : BINARY;
	}

	class IfcPlacement extends IfcGeometricRepresentationItem {
		reference Location : IfcCartesianPoint;
	}

	class IfcPlanarBox extends IfcPlanarExtent {
		reference Placement : IfcAxis2Placement;
	}

	class IfcPlanarExtent extends IfcGeometricRepresentationItem {
		attribute SizeInX : REAL;
		attribute SizeInY : REAL;
	}

	class IfcPlane extends IfcElementarySurface {
		
	}

	class IfcPlate extends IfcBuildingElement {
		
	}

	class IfcPlateType extends IfcBuildingElementType {
		attribute PredefinedType : IfcPlateTypeEnum;
	}

	class IfcPoint extends IfcGeometricSetSelect, IfcPointOrVertexPoint, IfcGeometricRepresentationItem {
		
	}

	class IfcPointOnCurve extends IfcPoint {
		reference BasisCurve : IfcCurve;
		attribute PointParameter : REAL;
	}

	class IfcPointOnSurface extends IfcPoint {
		attribute PointParameterU : REAL;
		attribute PointParameterV : REAL;
		reference BasisSurface : IfcSurface;
	}

	class IfcPolyLoop extends IfcLoop {
		reference Polygon[3-*] ordered : IfcCartesianPoint;
	}

	class IfcPolygonalBoundedHalfSpace extends IfcHalfSpaceSolid {
		reference Position : IfcAxis2Placement3D;
		reference PolygonalBoundary : IfcBoundedCurve;
	}

	class IfcPolyline extends IfcBoundedCurve {
		reference Points[2-*] ordered : IfcCartesianPoint;
	}

	class IfcPort extends IfcProduct {
		reference ContainedIn : IfcRelConnectsPortToElement oppositeOf RelatingPort;
		reference ConnectedFrom : IfcRelConnectsPorts oppositeOf RelatedPort;
		reference ConnectedTo : IfcRelConnectsPorts oppositeOf RelatingPort;
	}

	class IfcPostalAddress extends IfcAddress {
		attribute InternalLocation[0-1] : STRING;
		attribute AddressLines[*] ordered unique : STRING;
		attribute PostalBox[0-1] : STRING;
		attribute Town[0-1] : STRING;
		attribute Region[0-1] : STRING;
		attribute PostalCode[0-1] : STRING;
		attribute Country[0-1] : STRING;
	}

	class IfcPreDefinedColour extends IfcColour, IfcPreDefinedItem {
		
	}

	class IfcPreDefinedCurveFont extends IfcCurveStyleFontSelect, IfcPreDefinedItem {
		
	}

	class IfcPreDefinedDimensionSymbol extends IfcPreDefinedSymbol {
		
	}

	class IfcPreDefinedItem {
		attribute Name : STRING;
	}

	class IfcPreDefinedPointMarkerSymbol extends IfcPreDefinedSymbol {
		
	}

	class IfcPreDefinedSymbol extends IfcDefinedSymbolSelect, IfcPreDefinedItem {
		
	}

	class IfcPreDefinedTerminatorSymbol extends IfcPreDefinedSymbol {
		
	}

	class IfcPreDefinedTextFont extends IfcTextFontSelect, IfcPreDefinedItem {
		
	}

	class IfcPresentationLayerAssignment {
		attribute Name : STRING;
		attribute Description[0-1] : STRING;
		attribute Identifier[0-1] : STRING;
		reference AssignedItems[1-*] ordered : IfcLayeredItem oppositeOf LayerAssignments;
	}

	class IfcPresentationLayerWithStyle extends IfcPresentationLayerAssignment {
		attribute LayerOn : LOGICAL;
		attribute LayerFrozen : LOGICAL;
		attribute LayerBlocked : LOGICAL;
		reference LayerStyles[*] ordered : IfcPresentationStyleSelect;
	}

	class IfcPresentationStyle {
		attribute Name[0-1] : STRING;
	}

	class IfcPresentationStyleAssignment {
		reference Styles[1-*] ordered : IfcPresentationStyleSelect;
	}

	class IfcProcedure extends IfcProcess {
		attribute ProcedureID : STRING;
		attribute ProcedureType : IfcProcedureTypeEnum;
		attribute UserDefinedProcedureType[0-1] : STRING;
	}

	class IfcProcess extends IfcObject {
		reference OperatesOn : IfcRelAssignsToProcess oppositeOf RelatingProcess;
		reference IsSuccessorFrom : IfcRelSequence oppositeOf RelatedProcess;
		reference IsPredecessorTo : IfcRelSequence oppositeOf RelatingProcess;
	}

	class IfcProduct extends IfcObject {
		reference ReferencedBy : IfcRelAssignsToProduct oppositeOf RelatingProduct;
		reference ObjectPlacement[0-1] : IfcObjectPlacement oppositeOf PlacesObject;
		reference Representation[0-1] : IfcProductRepresentation oppositeOf ShapeOfProduct;
		reference ReferencedInStructures : IfcRelReferencedInSpatialStructure oppositeOf RelatedElements;
		reference ContainedInStructure : IfcRelContainedInSpatialStructure oppositeOf RelatedElements;
	}

	class IfcProductDefinitionShape extends IfcProductRepresentation {
		reference HasShapeAspects : IfcShapeAspect oppositeOf PartOfProductDefinitionShape;
	}

	class IfcProductRepresentation {
		attribute Name[0-1] : STRING;
		attribute Description[0-1] : STRING;
		reference ShapeOfProduct : IfcProduct oppositeOf Representation;
		reference Representations[1-*] ordered : IfcRepresentation oppositeOf OfProductRepresentation;
	}

	class IfcProductsOfCombustionProperties extends IfcMaterialProperties {
		attribute SpecificHeatCapacity[0-1] : REAL;
		attribute N20Content[0-1] : REAL;
		attribute COContent[0-1] : REAL;
		attribute CO2Content[0-1] : REAL;
	}

	class IfcProfileDef {
		attribute ProfileType : IfcProfileTypeEnum;
		attribute ProfileName[0-1] : STRING;
	}

	class IfcProfileProperties {
		reference ProfileDefinition[0-1] : IfcProfileDef;
		attribute ProfileName[0-1] : STRING;
	}

	class IfcProject extends IfcObject {
		attribute LongName[0-1] : STRING;
		attribute Phase[0-1] : STRING;
		reference RepresentationContexts[1-*] ordered : IfcRepresentationContext;
		reference UnitsInContext : IfcUnitAssignment;
	}

	class IfcProjectOrder extends IfcControl {
		attribute ID : STRING;
		attribute PredefinedType : IfcProjectOrderTypeEnum;
		attribute Status[0-1] : STRING;
	}

	class IfcProjectOrderRecord extends IfcControl {
		reference Records[1-*] ordered : IfcRelAssignsToProjectOrder;
		attribute PredefinedType : IfcProjectOrderRecordTypeEnum;
	}

	class IfcProjectionCurve extends IfcAnnotationCurveOccurrence {
		
	}

	class IfcProjectionElement extends IfcFeatureElementAddition {
		
	}

	class IfcProperty {
		attribute Name : STRING;
		attribute Description[0-1] : STRING;
		reference PropertyForDependance : IfcPropertyDependencyRelationship oppositeOf DependingProperty;
		reference PropertyDependsOn : IfcPropertyDependencyRelationship oppositeOf DependantProperty;
		reference PartOfComplex : IfcComplexProperty oppositeOf HasProperties;
	}

	class IfcPropertyBoundedValue extends IfcSimpleProperty {
		reference UpperBoundValue[0-1] : IfcValue;
		reference LowerBoundValue[0-1] : IfcValue;
		reference Unit[0-1] : IfcUnit;
	}

	class IfcPropertyConstraintRelationship {
		attribute Name[0-1] : STRING;
		attribute Description[0-1] : STRING;
		reference RelatingConstraint : IfcConstraint oppositeOf PropertiesForConstraint;
		reference RelatedProperties[1-*] ordered : IfcProperty;
	}

	class IfcPropertyDefinition extends IfcRoot {
		
	}

	class IfcPropertyDependencyRelationship {
		attribute Name[0-1] : STRING;
		attribute Description[0-1] : STRING;
		attribute Expression[0-1] : STRING;
		reference DependingProperty : IfcProperty oppositeOf PropertyForDependance;
		reference DependantProperty : IfcProperty oppositeOf PropertyDependsOn;
	}

	class IfcPropertyEnumeratedValue extends IfcSimpleProperty {
		reference EnumerationValues[1-*] ordered : IfcValue;
		reference EnumerationReference[0-1] : IfcPropertyEnumeration;
	}

	class IfcPropertyEnumeration {
		reference EnumerationValues[1-*] ordered : IfcValue;
		reference Unit[0-1] : IfcUnit;
		attribute Name : STRING;
	}

	class IfcPropertyListValue extends IfcSimpleProperty {
		reference ListValues[1-*] ordered : IfcValue;
		reference Unit[0-1] : IfcUnit;
	}

	class IfcPropertyReferenceValue extends IfcSimpleProperty {
		reference PropertyReference : IfcObjectReferenceSelect;
		attribute UsageName[0-1] : STRING;
	}

	class IfcPropertySet extends IfcPropertySetDefinition {
		reference HasProperties[1-*] ordered : IfcProperty;
	}

	class IfcPropertySetDefinition extends IfcPropertyDefinition {
		reference PropertyDefinitionOf : IfcRelDefinesByProperties oppositeOf RelatingPropertyDefinition;
		reference DefinesType : IfcTypeObject oppositeOf HasPropertySets;
	}

	class IfcPropertySingleValue extends IfcSimpleProperty {
		reference NominalValue[0-1] : IfcValue;
		reference Unit[0-1] : IfcUnit;
	}

	class IfcPropertyTableValue extends IfcSimpleProperty {
		reference DefiningValues[1-*] ordered : IfcValue;
		reference DefinedValues[1-*] ordered : IfcValue;
		reference DefiningUnit[0-1] : IfcUnit;
		reference DefinedUnit[0-1] : IfcUnit;
		attribute Expression[0-1] : STRING;
	}

	class IfcProtectiveDeviceType extends IfcFlowControllerType {
		attribute PredefinedType : IfcProtectiveDeviceTypeEnum;
	}

	class IfcProxy extends IfcProduct {
		attribute ProxyType : IfcObjectTypeEnum;
		attribute Tag[0-1] : STRING;
	}

	class IfcPumpType extends IfcFlowMovingDeviceType {
		attribute PredefinedType : IfcPumpTypeEnum;
	}

	class IfcQuantityArea extends IfcPhysicalSimpleQuantity {
		attribute AreaValue : REAL;
	}

	class IfcQuantityCount extends IfcPhysicalSimpleQuantity {
		attribute CountValue : NUMBER;
	}

	class IfcQuantityLength extends IfcPhysicalSimpleQuantity {
		attribute LengthValue : REAL;
	}

	class IfcQuantityTime extends IfcPhysicalSimpleQuantity {
		attribute TimeValue : REAL;
	}

	class IfcQuantityVolume extends IfcPhysicalSimpleQuantity {
		attribute VolumeValue : REAL;
	}

	class IfcQuantityWeight extends IfcPhysicalSimpleQuantity {
		attribute WeightValue : REAL;
	}

	class IfcRadiusDimension extends IfcDimensionCurveDirectedCallout {
		
	}

	class IfcRailing extends IfcBuildingElement {
		attribute PredefinedType[0-1] : IfcRailingTypeEnum;
	}

	class IfcRailingType extends IfcBuildingElementType {
		attribute PredefinedType : IfcRailingTypeEnum;
	}

	class IfcRamp extends IfcBuildingElement {
		attribute ShapeType : IfcRampTypeEnum;
	}

	class IfcRampFlight extends IfcBuildingElement {
		
	}

	class IfcRampFlightType extends IfcBuildingElementType {
		attribute PredefinedType : IfcRampFlightTypeEnum;
	}

	class IfcRationalBezierCurve extends IfcBezierCurve {
		attribute WeightsData[2-*] ordered unique : REAL;
	}

	class IfcRectangleHollowProfileDef extends IfcRectangleProfileDef {
		attribute WallThickness : REAL;
		attribute InnerFilletRadius[0-1] : REAL;
		attribute OuterFilletRadius[0-1] : REAL;
	}

	class IfcRectangleProfileDef extends IfcParameterizedProfileDef {
		attribute XDim : REAL;
		attribute YDim : REAL;
	}

	class IfcRectangularPyramid extends IfcCsgPrimitive3D {
		attribute XLength : REAL;
		attribute YLength : REAL;
		attribute Height : REAL;
	}

	class IfcRectangularTrimmedSurface extends IfcBoundedSurface {
		attribute U1 : REAL;
		attribute V1 : REAL;
		attribute U2 : REAL;
		attribute V2 : REAL;
		attribute Usense : BOOLEAN;
		attribute Vsense : BOOLEAN;
		reference BasisSurface : IfcSurface;
	}

	class IfcReferencesValueDocument {
		attribute Name[0-1] : STRING;
		attribute Description[0-1] : STRING;
		reference ReferencedDocument : IfcDocumentSelect;
		reference ReferencingValues[1-*] ordered : IfcAppliedValue oppositeOf ValuesReferenced;
	}

	class IfcRegularTimeSeries extends IfcTimeSeries {
		reference Values[1-*] ordered : IfcTimeSeriesValue;
		attribute TimeStep : REAL;
	}

	class IfcReinforcementBarProperties {
		attribute TotalCrossSectionArea : REAL;
		attribute SteelGrade : STRING;
		attribute BarSurface[0-1] : IfcReinforcingBarSurfaceEnum;
		attribute EffectiveDepth[0-1] : REAL;
		attribute NominalBarDiameter[0-1] : REAL;
		attribute BarCount[0-1] : NUMBER;
	}

	class IfcReinforcementDefinitionProperties extends IfcPropertySetDefinition {
		reference ReinforcementSectionDefinitions[1-*] ordered : IfcSectionReinforcementProperties;
		attribute DefinitionType[0-1] : STRING;
	}

	class IfcReinforcingBar extends IfcReinforcingElement {
		attribute NominalDiameter : REAL;
		attribute CrossSectionArea : REAL;
		attribute BarLength[0-1] : REAL;
		attribute BarRole : IfcReinforcingBarRoleEnum;
		attribute BarSurface[0-1] : IfcReinforcingBarSurfaceEnum;
	}

	class IfcReinforcingElement extends IfcBuildingElementComponent {
		attribute SteelGrade[0-1] : STRING;
	}

	class IfcReinforcingMesh extends IfcReinforcingElement {
		attribute MeshLength[0-1] : REAL;
		attribute MeshWidth[0-1] : REAL;
		attribute LongitudinalBarNominalDiameter : REAL;
		attribute TransverseBarNominalDiameter : REAL;
		attribute LongitudinalBarCrossSectionArea : REAL;
		attribute TransverseBarCrossSectionArea : REAL;
		attribute LongitudinalBarSpacing : REAL;
		attribute TransverseBarSpacing : REAL;
	}

	class IfcRelAggregates extends IfcRelDecomposes {
		
	}

	class IfcRelAssigns extends IfcRelationship {
		reference RelatedObjects[1-*] ordered : IfcObjectDefinition oppositeOf HasAssignments;
		attribute RelatedObjectsType[0-1] : IfcObjectTypeEnum;
	}

	class IfcRelAssignsTasks extends IfcRelAssignsToControl {
		reference TimeForTask[0-1] : IfcScheduleTimeControl oppositeOf ScheduleTimeControlAssigned;
	}

	class IfcRelAssignsToActor extends IfcRelAssigns {
		reference RelatingActor : IfcActor oppositeOf IsActingUpon;
		reference ActingRole[0-1] : IfcActorRole;
	}

	class IfcRelAssignsToControl extends IfcRelAssigns {
		reference RelatingControl : IfcControl oppositeOf Controls;
	}

	class IfcRelAssignsToGroup extends IfcRelAssigns {
		reference RelatingGroup : IfcGroup oppositeOf IsGroupedBy;
	}

	class IfcRelAssignsToProcess extends IfcRelAssigns {
		reference RelatingProcess : IfcProcess oppositeOf OperatesOn;
		reference QuantityInProcess[0-1] : IfcMeasureWithUnit;
	}

	class IfcRelAssignsToProduct extends IfcRelAssigns {
		reference RelatingProduct : IfcProduct oppositeOf ReferencedBy;
	}

	class IfcRelAssignsToProjectOrder extends IfcRelAssignsToControl {
		
	}

	class IfcRelAssignsToResource extends IfcRelAssigns {
		reference RelatingResource : IfcResource oppositeOf ResourceOf;
	}

	class IfcRelAssociates extends IfcRelationship {
		reference RelatedObjects[1-*] ordered : IfcRoot oppositeOf HasAssociations;
	}

	class IfcRelAssociatesAppliedValue extends IfcRelAssociates {
		reference RelatingAppliedValue : IfcAppliedValue;
	}

	class IfcRelAssociatesApproval extends IfcRelAssociates {
		reference RelatingApproval : IfcApproval;
	}

	class IfcRelAssociatesClassification extends IfcRelAssociates {
		reference RelatingClassification : IfcClassificationNotationSelect;
	}

	class IfcRelAssociatesConstraint extends IfcRelAssociates {
		reference RelatingConstraint : IfcConstraint;
		attribute Intent : STRING;
	}

	class IfcRelAssociatesDocument extends IfcRelAssociates {
		reference RelatingDocument : IfcDocumentSelect;
	}

	class IfcRelAssociatesLibrary extends IfcRelAssociates {
		reference RelatingLibrary : IfcLibrarySelect;
	}

	class IfcRelAssociatesMaterial extends IfcRelAssociates {
		reference RelatingMaterial : IfcMaterialSelect;
	}

	class IfcRelAssociatesProfileProperties extends IfcRelAssociates {
		reference ProfileOrientation[0-1] : IfcOrientationSelect;
		reference RelatingProfileProperties : IfcProfileProperties;
		reference ProfileSectionLocation[0-1] : IfcShapeAspect;
	}

	class IfcRelConnects extends IfcRelationship {
		
	}

	class IfcRelConnectsElements extends IfcRelConnects {
		reference ConnectionGeometry[0-1] : IfcConnectionGeometry;
		reference RelatingElement : IfcElement oppositeOf ConnectedTo;
		reference RelatedElement : IfcElement oppositeOf ConnectedFrom;
	}

	class IfcRelConnectsPathElements extends IfcRelConnectsElements {
		attribute RelatingPriorities[*] ordered unique : INTEGER;
		attribute RelatedPriorities[*] ordered unique : INTEGER;
		attribute RelatedConnectionType : IfcConnectionTypeEnum;
		attribute RelatingConnectionType : IfcConnectionTypeEnum;
	}

	class IfcRelConnectsPortToElement extends IfcRelConnects {
		reference RelatingPort : IfcPort oppositeOf ContainedIn;
		reference RelatedElement : IfcElement oppositeOf HasPorts;
	}

	class IfcRelConnectsPorts extends IfcRelConnects {
		reference RelatingPort : IfcPort oppositeOf ConnectedTo;
		reference RelatedPort : IfcPort oppositeOf ConnectedFrom;
		reference RealizingElement[0-1] : IfcElement;
	}

	class IfcRelConnectsStructuralActivity extends IfcRelConnects {
		reference RelatingElement : IfcStructuralActivityAssignmentSelect oppositeOf AssignedStructuralActivity;
		reference RelatedStructuralActivity : IfcStructuralActivity oppositeOf AssignedToStructuralItem;
	}

	class IfcRelConnectsStructuralElement extends IfcRelConnects {
		reference RelatingElement : IfcElement oppositeOf HasStructuralMember;
		reference RelatedStructuralMember : IfcStructuralMember oppositeOf ReferencesElement;
	}

	class IfcRelConnectsStructuralMember extends IfcRelConnects {
		reference RelatingStructuralMember : IfcStructuralMember oppositeOf ConnectedBy;
		reference RelatedStructuralConnection : IfcStructuralConnection oppositeOf ConnectsStructuralMembers;
		reference AppliedCondition[0-1] : IfcBoundaryCondition;
		reference AdditionalConditions[0-1] : IfcStructuralConnectionCondition;
		reference ConditionCoordinateSystem[0-1] : IfcAxis2Placement3D;
		attribute SupportedLength[0-1] : REAL;
	}

	class IfcRelConnectsWithEccentricity extends IfcRelConnectsStructuralMember {
		reference ConnectionConstraint : IfcConnectionGeometry;
	}

	class IfcRelConnectsWithRealizingElements extends IfcRelConnectsElements {
		reference RealizingElements[1-*] ordered : IfcElement oppositeOf IsConnectionRealization;
		attribute ConnectionType[0-1] : STRING;
	}

	class IfcRelContainedInSpatialStructure extends IfcRelConnects {
		reference RelatedElements[1-*] ordered : IfcProduct oppositeOf ContainedInStructure;
		reference RelatingStructure : IfcSpatialStructureElement oppositeOf ContainsElements;
	}

	class IfcRelCoversBldgElements extends IfcRelConnects {
		reference RelatingBuildingElement : IfcElement oppositeOf HasCoverings;
		reference RelatedCoverings[1-*] ordered : IfcCovering oppositeOf Covers;
	}

	class IfcRelCoversSpaces extends IfcRelConnects {
		reference RelatedSpace : IfcSpace oppositeOf HasCoverings;
		reference RelatedCoverings[1-*] ordered : IfcCovering oppositeOf CoversSpaces;
	}

	class IfcRelDecomposes extends IfcRelationship {
		reference RelatingObject : IfcObjectDefinition oppositeOf IsDecomposedBy;
		reference RelatedObjects[1-*] ordered : IfcObjectDefinition oppositeOf Decomposes;
	}

	class IfcRelDefines extends IfcRelationship {
		reference RelatedObjects[1-*] ordered : IfcObject oppositeOf IsDefinedBy;
	}

	class IfcRelDefinesByProperties extends IfcRelDefines {
		reference RelatingPropertyDefinition : IfcPropertySetDefinition oppositeOf PropertyDefinitionOf;
	}

	class IfcRelDefinesByType extends IfcRelDefines {
		reference RelatingType : IfcTypeObject oppositeOf ObjectTypeOf;
	}

	class IfcRelFillsElement extends IfcRelConnects {
		reference RelatingOpeningElement : IfcOpeningElement oppositeOf HasFillings;
		reference RelatedBuildingElement : IfcElement oppositeOf FillsVoids;
	}

	class IfcRelFlowControlElements extends IfcRelConnects {
		reference RelatedControlElements[1-*] ordered : IfcDistributionControlElement oppositeOf AssignedToFlowElement;
		reference RelatingFlowElement : IfcDistributionFlowElement oppositeOf HasControlElements;
	}

	class IfcRelInteractionRequirements extends IfcRelConnects {
		attribute DailyInteraction[0-1] : NUMBER;
		attribute ImportanceRating[0-1] : REAL;
		reference LocationOfInteraction[0-1] : IfcSpatialStructureElement;
		reference RelatedSpaceProgram : IfcSpaceProgram oppositeOf HasInteractionReqsFrom;
		reference RelatingSpaceProgram : IfcSpaceProgram oppositeOf HasInteractionReqsTo;
	}

	class IfcRelNests extends IfcRelDecomposes {
		
	}

	class IfcRelOccupiesSpaces extends IfcRelAssignsToActor {
		
	}

	class IfcRelOverridesProperties extends IfcRelDefinesByProperties {
		reference OverridingProperties[1-*] ordered : IfcProperty;
	}

	class IfcRelProjectsElement extends IfcRelConnects {
		reference RelatingElement : IfcElement oppositeOf HasProjections;
		reference RelatedFeatureElement : IfcFeatureElementAddition oppositeOf ProjectsElements;
	}

	class IfcRelReferencedInSpatialStructure extends IfcRelConnects {
		reference RelatedElements[1-*] ordered : IfcProduct oppositeOf ReferencedInStructures;
		reference RelatingStructure : IfcSpatialStructureElement oppositeOf ReferencesElements;
	}

	class IfcRelSchedulesCostItems extends IfcRelAssignsToControl {
		
	}

	class IfcRelSequence extends IfcRelConnects {
		attribute TimeLag : REAL;
		attribute SequenceType : IfcSequenceEnum;
		reference RelatingProcess : IfcProcess oppositeOf IsPredecessorTo;
		reference RelatedProcess : IfcProcess oppositeOf IsSuccessorFrom;
	}

	class IfcRelServicesBuildings extends IfcRelConnects {
		reference RelatingSystem : IfcSystem oppositeOf ServicesBuildings;
		reference RelatedBuildings[1-*] ordered : IfcSpatialStructureElement oppositeOf ServicedBySystems;
	}

	class IfcRelSpaceBoundary extends IfcRelConnects {
		attribute PhysicalOrVirtualBoundary : IfcPhysicalOrVirtualEnum;
		attribute InternalOrExternalBoundary : IfcInternalOrExternalEnum;
		reference RelatingSpace : IfcSpace oppositeOf BoundedBy;
		reference RelatedBuildingElement[0-1] : IfcElement oppositeOf ProvidesBoundaries;
		reference ConnectionGeometry[0-1] : IfcConnectionGeometry;
	}

	class IfcRelVoidsElement extends IfcRelConnects {
		reference RelatingBuildingElement : IfcElement oppositeOf HasOpenings;
		reference RelatedOpeningElement : IfcFeatureElementSubtraction oppositeOf VoidsElements;
	}

	class IfcRelationship extends IfcRoot {
		
	}

	class IfcRelaxation {
		attribute RelaxationValue : REAL;
		attribute InitialStress : REAL;
	}

	class IfcRepresentation extends IfcLayeredItem {
		attribute RepresentationIdentifier[0-1] : STRING;
		attribute RepresentationType[0-1] : STRING;
		reference RepresentationMap : IfcRepresentationMap oppositeOf MappedRepresentation;
		reference OfProductRepresentation : IfcProductRepresentation oppositeOf Representations;
		reference ContextOfItems : IfcRepresentationContext oppositeOf RepresentationsInContext;
		reference Items[1-*] ordered : IfcRepresentationItem;
	}

	class IfcRepresentationContext {
		attribute ContextIdentifier[0-1] : STRING;
		attribute ContextType[0-1] : STRING;
		reference RepresentationsInContext : IfcRepresentation oppositeOf ContextOfItems;
	}

	class IfcRepresentationItem extends IfcLayeredItem {
		reference StyledByItem : IfcStyledItem oppositeOf Item;
	}

	class IfcRepresentationMap {
		reference MapUsage : IfcMappedItem oppositeOf MappingSource;
		reference MappingOrigin : IfcAxis2Placement;
		reference MappedRepresentation : IfcRepresentation oppositeOf RepresentationMap;
	}

	class IfcResource extends IfcObject {
		reference ResourceOf : IfcRelAssignsToResource oppositeOf RelatingResource;
	}

	class IfcRevolvedAreaSolid extends IfcSweptAreaSolid {
		reference Axis : IfcAxis1Placement;
		attribute Angle : REAL;
	}

	class IfcRibPlateProfileProperties extends IfcProfileProperties {
		attribute Thickness[0-1] : REAL;
		attribute RibHeight[0-1] : REAL;
		attribute RibWidth[0-1] : REAL;
		attribute RibSpacing[0-1] : REAL;
		attribute Direction : IfcRibPlateDirectionEnum;
	}

	class IfcRightCircularCone extends IfcCsgPrimitive3D {
		attribute Height : REAL;
		attribute BottomRadius : REAL;
	}

	class IfcRightCircularCylinder extends IfcCsgPrimitive3D {
		attribute Height : REAL;
		attribute Radius : REAL;
	}

	class IfcRoof extends IfcBuildingElement {
		attribute ShapeType : IfcRoofTypeEnum;
	}

	class IfcRoot {
		attribute GlobalId : STRING;
		attribute Name[0-1] : STRING;
		attribute Description[0-1] : STRING;
		reference OwnerHistory : IfcOwnerHistory;
		reference HasAssociations : IfcRelAssociates oppositeOf RelatedObjects;
	}

	class IfcRoundedEdgeFeature extends IfcEdgeFeature {
		attribute Radius[0-1] : REAL;
	}

	class IfcRoundedRectangleProfileDef extends IfcRectangleProfileDef {
		attribute RoundingRadius : REAL;
	}

	class IfcSIUnit extends IfcNamedUnit {
		attribute Prefix[0-1] : IfcSIPrefix;
		attribute Name : IfcSIUnitName;
	}

	class IfcSanitaryTerminalType extends IfcFlowTerminalType {
		attribute PredefinedType : IfcSanitaryTerminalTypeEnum;
	}

	class IfcScheduleTimeControl extends IfcControl {
		attribute ScheduleDuration[0-1] : REAL;
		attribute ActualDuration[0-1] : REAL;
		attribute RemainingTime[0-1] : REAL;
		attribute FreeFloat[0-1] : REAL;
		attribute TotalFloat[0-1] : REAL;
		attribute IsCritical[0-1] : BOOLEAN;
		attribute StartFloat[0-1] : REAL;
		attribute FinishFloat[0-1] : REAL;
		attribute Completion[0-1] : REAL;
		reference ScheduleTimeControlAssigned : IfcRelAssignsTasks oppositeOf TimeForTask;
		reference ActualStart[0-1] : IfcDateTimeSelect;
		reference EarlyStart[0-1] : IfcDateTimeSelect;
		reference LateStart[0-1] : IfcDateTimeSelect;
		reference ScheduleStart[0-1] : IfcDateTimeSelect;
		reference ActualFinish[0-1] : IfcDateTimeSelect;
		reference EarlyFinish[0-1] : IfcDateTimeSelect;
		reference LateFinish[0-1] : IfcDateTimeSelect;
		reference ScheduleFinish[0-1] : IfcDateTimeSelect;
		reference StatusTime[0-1] : IfcDateTimeSelect;
	}

	class IfcSectionProperties {
		reference StartProfile : IfcProfileDef;
		reference EndProfile[0-1] : IfcProfileDef;
		attribute SectionType : IfcSectionTypeEnum;
	}

	class IfcSectionReinforcementProperties {
		attribute LongitudinalStartPosition : REAL;
		attribute LongitudinalEndPosition : REAL;
		attribute TransversePosition[0-1] : REAL;
		attribute ReinforcementRole : IfcReinforcingBarRoleEnum;
		reference SectionDefinition : IfcSectionProperties;
		reference CrossSectionReinforcementDefinitions[1-*] ordered : IfcReinforcementBarProperties;
	}

	class IfcSectionedSpine extends IfcGeometricRepresentationItem {
		reference SpineCurve : IfcCompositeCurve;
		reference CrossSections[2-*] ordered : IfcProfileDef;
		reference CrossSectionPositions[2-*] ordered : IfcAxis2Placement3D;
	}

	class IfcSensorType extends IfcDistributionControlElementType {
		attribute PredefinedType : IfcSensorTypeEnum;
	}

	class IfcServiceLife extends IfcControl {
		attribute ServiceLifeType : IfcServiceLifeTypeEnum;
		attribute ServiceLifeDuration : REAL;
	}

	class IfcServiceLifeFactor extends IfcPropertySetDefinition {
		reference UpperValue[0-1] : IfcMeasureValue;
		reference MostUsedValue : IfcMeasureValue;
		reference LowerValue[0-1] : IfcMeasureValue;
		attribute PredefinedType : IfcServiceLifeFactorTypeEnum;
	}

	class IfcShapeAspect {
		attribute Name[0-1] : STRING;
		attribute Description[0-1] : STRING;
		attribute ProductDefinitional : LOGICAL;
		reference ShapeRepresentations[1-*] ordered : IfcShapeModel oppositeOf OfShapeAspect;
		reference PartOfProductDefinitionShape : IfcProductDefinitionShape oppositeOf HasShapeAspects;
	}

	class IfcShapeModel extends IfcRepresentation {
		reference OfShapeAspect : IfcShapeAspect oppositeOf ShapeRepresentations;
	}

	class IfcShapeRepresentation extends IfcShapeModel {
		
	}

	class IfcShellBasedSurfaceModel extends IfcGeometricRepresentationItem {
		reference SbsmBoundary[1-*] ordered : IfcShell;
	}

	class IfcSimpleProperty extends IfcProperty {
		
	}

	class IfcSite extends IfcSpatialStructureElement {
		attribute RefLatitude[0-3] ordered unique : INTEGER;
		attribute RefLongitude[0-3] ordered unique : INTEGER;
		attribute RefElevation[0-1] : REAL;
		attribute LandTitleNumber[0-1] : STRING;
		reference SiteAddress[0-1] : IfcPostalAddress;
	}

	class IfcSlab extends IfcBuildingElement {
		attribute PredefinedType[0-1] : IfcSlabTypeEnum;
	}

	class IfcSlabType extends IfcBuildingElementType {
		attribute PredefinedType : IfcSlabTypeEnum;
	}

	class IfcSlippageConnectionCondition extends IfcStructuralConnectionCondition {
		attribute SlippageX[0-1] : REAL;
		attribute SlippageY[0-1] : REAL;
		attribute SlippageZ[0-1] : REAL;
	}

	class IfcSolidModel extends IfcBooleanOperand, IfcGeometricRepresentationItem {
		
	}

	class IfcSoundProperties extends IfcPropertySetDefinition {
		attribute IsAttenuating : BOOLEAN;
		attribute SoundScale[0-1] : IfcSoundScaleEnum;
		reference SoundValues[1-8] ordered : IfcSoundValue;
	}

	class IfcSoundValue extends IfcPropertySetDefinition {
		reference SoundLevelSingleValue[0-1] : IfcDerivedMeasureValue;
		reference SoundLevelTimeSeries[0-1] : IfcTimeSeries;
		attribute Frequency : REAL;
	}

	class IfcSpace extends IfcSpatialStructureElement {
		attribute InteriorOrExteriorSpace : IfcInternalOrExternalEnum;
		attribute ElevationWithFlooring[0-1] : REAL;
		reference HasCoverings : IfcRelCoversSpaces oppositeOf RelatedSpace;
		reference BoundedBy : IfcRelSpaceBoundary oppositeOf RelatingSpace;
	}

	class IfcSpaceHeaterType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcSpaceHeaterTypeEnum;
	}

	class IfcSpaceProgram extends IfcControl {
		attribute SpaceProgramIdentifier : STRING;
		attribute MaxRequiredArea[0-1] : REAL;
		attribute MinRequiredArea[0-1] : REAL;
		attribute StandardRequiredArea : REAL;
		reference HasInteractionReqsFrom : IfcRelInteractionRequirements oppositeOf RelatedSpaceProgram;
		reference HasInteractionReqsTo : IfcRelInteractionRequirements oppositeOf RelatingSpaceProgram;
		reference RequestedLocation[0-1] : IfcSpatialStructureElement;
	}

	class IfcSpaceThermalLoadProperties extends IfcPropertySetDefinition {
		attribute ApplicableValueRatio[0-1] : REAL;
		attribute ThermalLoadSource : IfcThermalLoadSourceEnum;
		attribute PropertySource : IfcPropertySourceEnum;
		attribute SourceDescription[0-1] : STRING;
		attribute MaximumValue : REAL;
		attribute MinimumValue[0-1] : REAL;
		attribute UserDefinedThermalLoadSource[0-1] : STRING;
		attribute UserDefinedPropertySource[0-1] : STRING;
		attribute ThermalLoadType : IfcThermalLoadTypeEnum;
		reference ThermalLoadTimeSeriesValues[0-1] : IfcTimeSeries;
	}

	class IfcSpaceType extends IfcSpatialStructureElementType {
		attribute PredefinedType : IfcSpaceTypeEnum;
	}

	class IfcSpatialStructureElement extends IfcProduct {
		attribute LongName[0-1] : STRING;
		attribute CompositionType : IfcElementCompositionEnum;
		reference ReferencesElements : IfcRelReferencedInSpatialStructure oppositeOf RelatingStructure;
		reference ServicedBySystems : IfcRelServicesBuildings oppositeOf RelatedBuildings;
		reference ContainsElements : IfcRelContainedInSpatialStructure oppositeOf RelatingStructure;
	}

	class IfcSpatialStructureElementType extends IfcElementType {
		
	}

	class IfcSphere extends IfcCsgPrimitive3D {
		attribute Radius : REAL;
	}

	class IfcStackTerminalType extends IfcFlowTerminalType {
		attribute PredefinedType : IfcStackTerminalTypeEnum;
	}

	class IfcStair extends IfcBuildingElement {
		attribute ShapeType : IfcStairTypeEnum;
	}

	class IfcStairFlight extends IfcBuildingElement {
		attribute NumberOfRiser[0-1] : INTEGER;
		attribute NumberOfTreads[0-1] : INTEGER;
		attribute RiserHeight[0-1] : REAL;
		attribute TreadLength[0-1] : REAL;
	}

	class IfcStairFlightType extends IfcBuildingElementType {
		attribute PredefinedType : IfcStairFlightTypeEnum;
	}

	class IfcStructuralAction extends IfcStructuralActivity {
		reference CausedBy[0-1] : IfcStructuralReaction oppositeOf Causes;
		attribute DestabilizingLoad : BOOLEAN;
	}

	class IfcStructuralActivity extends IfcProduct {
		reference AssignedToStructuralItem : IfcRelConnectsStructuralActivity oppositeOf RelatedStructuralActivity;
		reference AppliedLoad : IfcStructuralLoad;
		attribute GlobalOrLocal : IfcGlobalOrLocalEnum;
	}

	class IfcStructuralAnalysisModel extends IfcSystem {
		reference OrientationOf2DPlane[0-1] : IfcAxis2Placement3D;
		reference LoadedBy[*] ordered : IfcStructuralLoadGroup oppositeOf LoadGroupFor;
		reference HasResults[*] ordered : IfcStructuralResultGroup oppositeOf ResultGroupFor;
		attribute PredefinedType : IfcAnalysisModelTypeEnum;
	}

	class IfcStructuralConnection extends IfcStructuralItem {
		reference ConnectsStructuralMembers : IfcRelConnectsStructuralMember oppositeOf RelatedStructuralConnection;
		reference AppliedCondition[0-1] : IfcBoundaryCondition;
	}

	class IfcStructuralConnectionCondition {
		attribute Name[0-1] : STRING;
	}

	class IfcStructuralCurveConnection extends IfcStructuralConnection {
		
	}

	class IfcStructuralCurveMember extends IfcStructuralMember {
		attribute PredefinedType : IfcStructuralCurveTypeEnum;
	}

	class IfcStructuralCurveMemberVarying extends IfcStructuralCurveMember {
		
	}

	class IfcStructuralItem extends IfcStructuralActivityAssignmentSelect, IfcProduct {
		
	}

	class IfcStructuralLinearAction extends IfcStructuralAction {
		attribute ProjectedOrTrue : IfcProjectedOrTrueLengthEnum;
	}

	class IfcStructuralLinearActionVarying extends IfcStructuralLinearAction {
		reference VaryingAppliedLoadLocation : IfcShapeAspect;
		reference SubsequentAppliedLoads[1-*] ordered : IfcStructuralLoad;
	}

	class IfcStructuralLoad {
		attribute Name[0-1] : STRING;
	}

	class IfcStructuralLoadGroup extends IfcGroup {
		attribute PredefinedType : IfcLoadGroupTypeEnum;
		attribute ActionType : IfcActionTypeEnum;
		attribute ActionSource : IfcActionSourceTypeEnum;
		attribute Coefficient[0-1] : REAL;
		attribute Purpose[0-1] : STRING;
		reference SourceOfResultGroup : IfcStructuralResultGroup oppositeOf ResultForLoadGroup;
		reference LoadGroupFor : IfcStructuralAnalysisModel oppositeOf LoadedBy;
	}

	class IfcStructuralLoadLinearForce extends IfcStructuralLoadStatic {
		attribute LinearForceX[0-1] : REAL;
		attribute LinearForceY[0-1] : REAL;
		attribute LinearForceZ[0-1] : REAL;
		attribute LinearMomentX[0-1] : REAL;
		attribute LinearMomentY[0-1] : REAL;
		attribute LinearMomentZ[0-1] : REAL;
	}

	class IfcStructuralLoadPlanarForce extends IfcStructuralLoadStatic {
		attribute PlanarForceX[0-1] : REAL;
		attribute PlanarForceY[0-1] : REAL;
		attribute PlanarForceZ[0-1] : REAL;
	}

	class IfcStructuralLoadSingleDisplacement extends IfcStructuralLoadStatic {
		attribute DisplacementX[0-1] : REAL;
		attribute DisplacementY[0-1] : REAL;
		attribute DisplacementZ[0-1] : REAL;
		attribute RotationalDisplacementRX[0-1] : REAL;
		attribute RotationalDisplacementRY[0-1] : REAL;
		attribute RotationalDisplacementRZ[0-1] : REAL;
	}

	class IfcStructuralLoadSingleDisplacementDistortion extends IfcStructuralLoadSingleDisplacement {
		attribute Distortion[0-1] : REAL;
	}

	class IfcStructuralLoadSingleForce extends IfcStructuralLoadStatic {
		attribute ForceX[0-1] : REAL;
		attribute ForceY[0-1] : REAL;
		attribute ForceZ[0-1] : REAL;
		attribute MomentX[0-1] : REAL;
		attribute MomentY[0-1] : REAL;
		attribute MomentZ[0-1] : REAL;
	}

	class IfcStructuralLoadSingleForceWarping extends IfcStructuralLoadSingleForce {
		attribute WarpingMoment[0-1] : REAL;
	}

	class IfcStructuralLoadStatic extends IfcStructuralLoad {
		
	}

	class IfcStructuralLoadTemperature extends IfcStructuralLoadStatic {
		attribute DeltaT_Constant[0-1] : REAL;
		attribute DeltaT_Y[0-1] : REAL;
		attribute DeltaT_Z[0-1] : REAL;
	}

	class IfcStructuralMember extends IfcStructuralItem {
		reference ReferencesElement : IfcRelConnectsStructuralElement oppositeOf RelatedStructuralMember;
		reference ConnectedBy : IfcRelConnectsStructuralMember oppositeOf RelatingStructuralMember;
	}

	class IfcStructuralPlanarAction extends IfcStructuralAction {
		attribute ProjectedOrTrue : IfcProjectedOrTrueLengthEnum;
	}

	class IfcStructuralPlanarActionVarying extends IfcStructuralPlanarAction {
		reference VaryingAppliedLoadLocation : IfcShapeAspect;
		reference SubsequentAppliedLoads[2-*] ordered : IfcStructuralLoad;
	}

	class IfcStructuralPointAction extends IfcStructuralAction {
		
	}

	class IfcStructuralPointConnection extends IfcStructuralConnection {
		
	}

	class IfcStructuralPointReaction extends IfcStructuralReaction {
		
	}

	class IfcStructuralProfileProperties extends IfcGeneralProfileProperties {
		attribute TorsionalConstantX[0-1] : REAL;
		attribute MomentOfInertiaYZ[0-1] : REAL;
		attribute MomentOfInertiaY[0-1] : REAL;
		attribute MomentOfInertiaZ[0-1] : REAL;
		attribute WarpingConstant[0-1] : REAL;
		attribute ShearCentreZ[0-1] : REAL;
		attribute ShearCentreY[0-1] : REAL;
		attribute ShearDeformationAreaZ[0-1] : REAL;
		attribute ShearDeformationAreaY[0-1] : REAL;
		attribute MaximumSectionModulusY[0-1] : REAL;
		attribute MinimumSectionModulusY[0-1] : REAL;
		attribute MaximumSectionModulusZ[0-1] : REAL;
		attribute MinimumSectionModulusZ[0-1] : REAL;
		attribute TorsionalSectionModulus[0-1] : REAL;
		attribute CentreOfGravityInX[0-1] : REAL;
		attribute CentreOfGravityInY[0-1] : REAL;
	}

	class IfcStructuralReaction extends IfcStructuralActivity {
		reference Causes : IfcStructuralAction oppositeOf CausedBy;
	}

	class IfcStructuralResultGroup extends IfcGroup {
		attribute TheoryType : IfcAnalysisTheoryTypeEnum;
		attribute IsLinear : BOOLEAN;
		reference ResultGroupFor : IfcStructuralAnalysisModel oppositeOf HasResults;
		reference ResultForLoadGroup[0-1] : IfcStructuralLoadGroup oppositeOf SourceOfResultGroup;
	}

	class IfcStructuralSteelProfileProperties extends IfcStructuralProfileProperties {
		attribute ShearAreaZ[0-1] : REAL;
		attribute ShearAreaY[0-1] : REAL;
		attribute PlasticShapeFactorY[0-1] : REAL;
		attribute PlasticShapeFactorZ[0-1] : REAL;
	}

	class IfcStructuralSurfaceConnection extends IfcStructuralConnection {
		
	}

	class IfcStructuralSurfaceMember extends IfcStructuralMember {
		attribute PredefinedType : IfcStructuralSurfaceTypeEnum;
		attribute Thickness[0-1] : REAL;
	}

	class IfcStructuralSurfaceMemberVarying extends IfcStructuralSurfaceMember {
		reference VaryingThicknessLocation : IfcShapeAspect;
		attribute SubsequentThickness[2-*] ordered unique : REAL;
	}

	class IfcStructuredDimensionCallout extends IfcDraughtingCallout {
		
	}

	class IfcStyleModel extends IfcRepresentation {
		
	}

	class IfcStyledItem extends IfcRepresentationItem {
		reference Item[0-1] : IfcRepresentationItem oppositeOf StyledByItem;
		reference Styles[1-*] ordered : IfcPresentationStyleAssignment;
		attribute Name[0-1] : STRING;
	}

	class IfcStyledRepresentation extends IfcStyleModel {
		
	}

	class IfcSubContractResource extends IfcConstructionResource {
		reference SubContractor[0-1] : IfcActorSelect;
		attribute JobDescription[0-1] : STRING;
	}

	class IfcSubedge extends IfcEdge {
		reference ParentEdge : IfcEdge;
	}

	class IfcSurface extends IfcGeometricSetSelect, IfcSurfaceOrFaceSurface, IfcGeometricRepresentationItem {
		
	}

	class IfcSurfaceCurveSweptAreaSolid extends IfcSweptAreaSolid {
		attribute StartParam : REAL;
		attribute EndParam : REAL;
		reference Directrix : IfcCurve;
		reference ReferenceSurface : IfcSurface;
	}

	class IfcSurfaceOfLinearExtrusion extends IfcSweptSurface {
		reference ExtrudedDirection : IfcDirection;
		attribute Depth : REAL;
	}

	class IfcSurfaceOfRevolution extends IfcSweptSurface {
		reference AxisPosition : IfcAxis1Placement;
	}

	class IfcSurfaceStyle extends IfcPresentationStyle {
		reference Styles[1-5] ordered : IfcSurfaceStyleElementSelect;
		attribute Side : IfcSurfaceSide;
	}

	class IfcSurfaceStyleLighting extends IfcSurfaceStyleElementSelect {
		reference DiffuseTransmissionColour : IfcColourRgb;
		reference DiffuseReflectionColour : IfcColourRgb;
		reference TransmissionColour : IfcColourRgb;
		reference ReflectanceColour : IfcColourRgb;
	}

	class IfcSurfaceStyleRefraction extends IfcSurfaceStyleElementSelect {
		attribute RefractionIndex[0-1] : REAL;
		attribute DispersionFactor[0-1] : REAL;
	}

	class IfcSurfaceStyleRendering extends IfcSurfaceStyleShading {
		attribute Transparency[0-1] : REAL;
		attribute ReflectanceMethod : IfcReflectanceMethodEnum;
		reference DiffuseColour[0-1] : IfcColourOrFactor;
		reference TransmissionColour[0-1] : IfcColourOrFactor;
		reference DiffuseTransmissionColour[0-1] : IfcColourOrFactor;
		reference ReflectionColour[0-1] : IfcColourOrFactor;
		reference SpecularColour[0-1] : IfcColourOrFactor;
		reference SpecularHighlight[0-1] : IfcSpecularHighlightSelect;
	}

	class IfcSurfaceStyleShading extends IfcSurfaceStyleElementSelect {
		reference SurfaceColour : IfcColourRgb;
	}

	class IfcSurfaceStyleWithTextures extends IfcSurfaceStyleElementSelect {
		reference Textures[1-*] ordered : IfcSurfaceTexture;
	}

	class IfcSurfaceTexture {
		attribute RepeatS : BOOLEAN;
		attribute RepeatT : BOOLEAN;
		attribute TextureType : IfcSurfaceTextureEnum;
		reference TextureTransform[0-1] : IfcCartesianTransformationOperator2D;
	}

	class IfcSweptAreaSolid extends IfcSolidModel {
		reference SweptArea : IfcProfileDef;
		reference Position : IfcAxis2Placement3D;
	}

	class IfcSweptDiskSolid extends IfcSolidModel {
		attribute Radius : REAL;
		attribute InnerRadius[0-1] : REAL;
		attribute StartParam : REAL;
		attribute EndParam : REAL;
		reference Directrix : IfcCurve;
	}

	class IfcSweptSurface extends IfcSurface {
		reference SweptCurve : IfcProfileDef;
		reference Position : IfcAxis2Placement3D;
	}

	class IfcSwitchingDeviceType extends IfcFlowControllerType {
		attribute PredefinedType : IfcSwitchingDeviceTypeEnum;
	}

	class IfcSymbolStyle extends IfcPresentationStyle {
		reference StyleOfSymbol : IfcSymbolStyleSelect;
	}

	class IfcSystem extends IfcGroup {
		reference ServicesBuildings : IfcRelServicesBuildings oppositeOf RelatingSystem;
	}

	class IfcSystemFurnitureElementType extends IfcFurnishingElementType {
		
	}

	class IfcTShapeProfileDef extends IfcParameterizedProfileDef {
		attribute Depth : REAL;
		attribute FlangeWidth : REAL;
		attribute WebThickness : REAL;
		attribute FlangeThickness : REAL;
		attribute FilletRadius[0-1] : REAL;
		attribute FlangeEdgeRadius[0-1] : REAL;
		attribute WebEdgeRadius[0-1] : REAL;
		attribute WebSlope[0-1] : REAL;
		attribute FlangeSlope[0-1] : REAL;
		attribute CentreOfGravityInY[0-1] : REAL;
	}

	class IfcTable {
		reference Rows[1-*] ordered : IfcTableRow oppositeOf OfTable;
		attribute Name : STRING;
	}

	class IfcTableRow {
		reference RowCells[1-*] ordered : IfcValue;
		reference OfTable : IfcTable oppositeOf Rows;
		attribute IsHeading : BOOLEAN;
	}

	class IfcTankType extends IfcFlowStorageDeviceType {
		attribute PredefinedType : IfcTankTypeEnum;
	}

	class IfcTask extends IfcProcess {
		attribute TaskId : STRING;
		attribute Status[0-1] : STRING;
		attribute WorkMethod[0-1] : STRING;
		attribute IsMilestone : BOOLEAN;
		attribute Priority[0-1] : INTEGER;
	}

	class IfcTelecomAddress extends IfcAddress {
		attribute TelephoneNumbers[*] ordered unique : STRING;
		attribute FacsimileNumbers[*] ordered unique : STRING;
		attribute PagerNumber[0-1] : STRING;
		attribute ElectronicMailAddresses[*] ordered unique : STRING;
		attribute WWWHomePageURL[0-1] : STRING;
	}

	class IfcTendon extends IfcReinforcingElement {
		attribute PredefinedType : IfcTendonTypeEnum;
		attribute NominalDiameter : REAL;
		attribute CrossSectionArea : REAL;
		attribute TensionForce[0-1] : REAL;
		attribute PreStress[0-1] : REAL;
		attribute FrictionCoefficient[0-1] : REAL;
		attribute AnchorageSlip[0-1] : REAL;
		attribute MinCurvatureRadius[0-1] : REAL;
	}

	class IfcTendonAnchor extends IfcReinforcingElement {
		
	}

	class IfcTerminatorSymbol extends IfcAnnotationSymbolOccurrence {
		reference AnnotatedCurve : IfcAnnotationCurveOccurrence oppositeOf AnnotatedBySymbols;
	}

	class IfcTextLiteral extends IfcGeometricRepresentationItem {
		attribute Literal : STRING;
		attribute Path : IfcTextPath;
		reference Placement : IfcAxis2Placement;
	}

	class IfcTextLiteralWithExtent extends IfcTextLiteral {
		reference Extent : IfcPlanarExtent;
		attribute BoxAlignment : STRING;
	}

	class IfcTextStyle extends IfcPresentationStyle {
		reference TextCharacterAppearance[0-1] : IfcCharacterStyleSelect;
		reference TextStyle[0-1] : IfcTextStyleSelect;
		reference TextFontStyle : IfcTextFontSelect;
	}

	class IfcTextStyleFontModel extends IfcPreDefinedTextFont {
		attribute FontFamily[*] ordered unique : STRING;
		attribute FontStyle[0-1] : STRING;
		attribute FontVariant[0-1] : STRING;
		attribute FontWeight[0-1] : STRING;
		reference FontSize : IfcSizeSelect;
	}

	class IfcTextStyleForDefinedFont extends IfcCharacterStyleSelect {
		reference Colour : IfcColour;
		reference BackgroundColour[0-1] : IfcColour;
	}

	class IfcTextStyleTextModel extends IfcTextStyleSelect {
		attribute TextAlign[0-1] : STRING;
		attribute TextDecoration[0-1] : STRING;
		attribute TextTransform[0-1] : STRING;
		reference TextIndent[0-1] : IfcSizeSelect;
		reference LetterSpacing[0-1] : IfcSizeSelect;
		reference WordSpacing[0-1] : IfcSizeSelect;
		reference LineHeight[0-1] : IfcSizeSelect;
	}

	class IfcTextStyleWithBoxCharacteristics extends IfcTextStyleSelect {
		attribute BoxHeight[0-1] : REAL;
		attribute BoxWidth[0-1] : REAL;
		attribute BoxSlantAngle[0-1] : REAL;
		attribute BoxRotateAngle[0-1] : REAL;
		reference CharacterSpacing[0-1] : IfcSizeSelect;
	}

	class IfcTextureCoordinate {
		reference AnnotatedSurface : IfcAnnotationSurface oppositeOf TextureCoordinates;
	}

	class IfcTextureCoordinateGenerator extends IfcTextureCoordinate {
		reference Parameter[1-*] ordered : IfcSimpleValue;
		attribute Mode : STRING;
	}

	class IfcTextureMap extends IfcTextureCoordinate {
		reference TextureMaps[1-*] ordered : IfcVertexBasedTextureMap;
	}

	class IfcTextureVertex {
		attribute Coordinates[2-2] ordered unique : REAL;
	}

	class IfcThermalMaterialProperties extends IfcMaterialProperties {
		attribute SpecificHeatCapacity[0-1] : REAL;
		attribute BoilingPoint[0-1] : REAL;
		attribute FreezingPoint[0-1] : REAL;
		attribute ThermalConductivity[0-1] : REAL;
	}

	class IfcTimeSeries extends IfcObjectReferenceSelect {
		attribute Name : STRING;
		attribute Description[0-1] : STRING;
		attribute TimeSeriesDataType : IfcTimeSeriesDataTypeEnum;
		attribute DataOrigin : IfcDataOriginEnum;
		attribute UserDefinedDataOrigin[0-1] : STRING;
		reference DocumentedBy : IfcTimeSeriesReferenceRelationship oppositeOf ReferencedTimeSeries;
		reference StartTime : IfcDateTimeSelect;
		reference EndTime : IfcDateTimeSelect;
		reference Unit[0-1] : IfcUnit;
	}

	class IfcTimeSeriesReferenceRelationship {
		reference ReferencedTimeSeries : IfcTimeSeries oppositeOf DocumentedBy;
		reference TimeSeriesReferences[1-*] ordered : IfcDocumentSelect;
	}

	class IfcTimeSeriesSchedule extends IfcControl {
		reference ApplicableDates[*] ordered : IfcDateTimeSelect;
		reference TimeSeries : IfcTimeSeries;
		attribute TimeSeriesScheduleType : IfcTimeSeriesScheduleTypeEnum;
	}

	class IfcTimeSeriesValue {
		reference ListValues[1-*] ordered : IfcValue;
	}

	class IfcTopologicalRepresentationItem extends IfcRepresentationItem {
		
	}

	class IfcTopologyRepresentation extends IfcShapeModel {
		
	}

	class IfcTransformerType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcTransformerTypeEnum;
	}

	class IfcTransportElement extends IfcElement {
		attribute OperationType[0-1] : IfcTransportElementTypeEnum;
		attribute CapacityByWeight[0-1] : REAL;
		attribute CapacityByNumber[0-1] : NUMBER;
	}

	class IfcTransportElementType extends IfcElementType {
		attribute PredefinedType : IfcTransportElementTypeEnum;
	}

	class IfcTrapeziumProfileDef extends IfcParameterizedProfileDef {
		attribute BottomXDim : REAL;
		attribute TopXDim : REAL;
		attribute YDim : REAL;
		attribute TopXOffset : REAL;
	}

	class IfcTrimmedCurve extends IfcBoundedCurve {
		attribute SenseAgreement : BOOLEAN;
		attribute MasterRepresentation : IfcTrimmingPreference;
		reference Trim1[1-2] ordered : IfcTrimmingSelect;
		reference Trim2[1-2] ordered : IfcTrimmingSelect;
		reference BasisCurve : IfcCurve;
	}

	class IfcTubeBundleType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcTubeBundleTypeEnum;
	}

	class IfcTwoDirectionRepeatFactor extends IfcOneDirectionRepeatFactor {
		reference SecondRepeatFactor : IfcVector;
	}

	class IfcTypeObject extends IfcObjectDefinition {
		reference ObjectTypeOf : IfcRelDefinesByType oppositeOf RelatingType;
		reference HasPropertySets[*] ordered : IfcPropertySetDefinition oppositeOf DefinesType;
		attribute ApplicableOccurrence[0-1] : STRING;
	}

	class IfcTypeProduct extends IfcTypeObject {
		reference RepresentationMaps[*] ordered : IfcRepresentationMap;
		attribute Tag[0-1] : STRING;
	}

	class IfcUShapeProfileDef extends IfcParameterizedProfileDef {
		attribute Depth : REAL;
		attribute FlangeWidth : REAL;
		attribute WebThickness : REAL;
		attribute FlangeThickness : REAL;
		attribute FilletRadius[0-1] : REAL;
		attribute EdgeRadius[0-1] : REAL;
		attribute FlangeSlope[0-1] : REAL;
		attribute CentreOfGravityInX[0-1] : REAL;
	}

	class IfcUnitAssignment {
		reference Units[1-*] ordered : IfcUnit;
	}

	class IfcUnitaryEquipmentType extends IfcEnergyConversionDeviceType {
		attribute PredefinedType : IfcUnitaryEquipmentTypeEnum;
	}

	class IfcValveType extends IfcFlowControllerType {
		attribute PredefinedType : IfcValveTypeEnum;
	}

	class IfcVector extends IfcVectorOrDirection, IfcGeometricRepresentationItem {
		reference Orientation : IfcDirection;
		attribute Magnitude : REAL;
	}

	class IfcVertex extends IfcTopologicalRepresentationItem {
		
	}

	class IfcVertexBasedTextureMap {
		reference TextureVertices[3-*] ordered : IfcTextureVertex;
		reference TexturePoints[3-*] ordered : IfcCartesianPoint;
	}

	class IfcVertexLoop extends IfcLoop {
		reference LoopVertex : IfcVertex;
	}

	class IfcVertexPoint extends IfcPointOrVertexPoint, IfcVertex {
		reference VertexGeometry : IfcPoint;
	}

	class IfcVibrationIsolatorType extends IfcDiscreteAccessoryType {
		attribute PredefinedType : IfcVibrationIsolatorTypeEnum;
	}

	class IfcVirtualElement extends IfcElement {
		
	}

	class IfcVirtualGridIntersection {
		reference IntersectingAxes[2-2] ordered : IfcGridAxis oppositeOf HasIntersections;
		attribute OffsetDistances[2-3] ordered unique : REAL;
	}

	class IfcWall extends IfcBuildingElement {
		
	}

	class IfcWallStandardCase extends IfcWall {
		
	}

	class IfcWallType extends IfcBuildingElementType {
		attribute PredefinedType : IfcWallTypeEnum;
	}

	class IfcWasteTerminalType extends IfcFlowTerminalType {
		attribute PredefinedType : IfcWasteTerminalTypeEnum;
	}

	class IfcWaterProperties extends IfcMaterialProperties {
		attribute IsPotable[0-1] : BOOLEAN;
		attribute Hardness[0-1] : REAL;
		attribute AlkalinityConcentration[0-1] : REAL;
		attribute AcidityConcentration[0-1] : REAL;
		attribute ImpuritiesContent[0-1] : REAL;
		attribute PHLevel[0-1] : REAL;
		attribute DissolvedSolidsContent[0-1] : REAL;
	}

	class IfcWindow extends IfcBuildingElement {
		attribute OverallHeight[0-1] : REAL;
		attribute OverallWidth[0-1] : REAL;
	}

	class IfcWindowLiningProperties extends IfcPropertySetDefinition {
		attribute LiningDepth[0-1] : REAL;
		attribute LiningThickness[0-1] : REAL;
		attribute TransomThickness[0-1] : REAL;
		attribute MullionThickness[0-1] : REAL;
		attribute FirstTransomOffset[0-1] : REAL;
		attribute SecondTransomOffset[0-1] : REAL;
		attribute FirstMullionOffset[0-1] : REAL;
		attribute SecondMullionOffset[0-1] : REAL;
		reference ShapeAspectStyle[0-1] : IfcShapeAspect;
	}

	class IfcWindowPanelProperties extends IfcPropertySetDefinition {
		attribute OperationType : IfcWindowPanelOperationEnum;
		attribute PanelPosition : IfcWindowPanelPositionEnum;
		attribute FrameDepth[0-1] : REAL;
		attribute FrameThickness[0-1] : REAL;
		reference ShapeAspectStyle[0-1] : IfcShapeAspect;
	}

	class IfcWindowStyle extends IfcTypeProduct {
		attribute ConstructionType : IfcWindowStyleConstructionEnum;
		attribute OperationType : IfcWindowStyleOperationEnum;
		attribute ParameterTakesPrecedence : BOOLEAN;
		attribute Sizeable : BOOLEAN;
	}

	class IfcWorkControl extends IfcControl {
		attribute Identifier : STRING;
		attribute Purpose[0-1] : STRING;
		attribute Duration[0-1] : REAL;
		attribute TotalFloat[0-1] : REAL;
		attribute WorkControlType[0-1] : IfcWorkControlTypeEnum;
		attribute UserDefinedControlType[0-1] : STRING;
		reference CreationDate : IfcDateTimeSelect;
		reference Creators[*] ordered : IfcPerson;
		reference StartTime : IfcDateTimeSelect;
		reference FinishTime[0-1] : IfcDateTimeSelect;
	}

	class IfcWorkPlan extends IfcWorkControl {
		
	}

	class IfcWorkSchedule extends IfcWorkControl {
		
	}

	class IfcZShapeProfileDef extends IfcParameterizedProfileDef {
		attribute Depth : REAL;
		attribute FlangeWidth : REAL;
		attribute WebThickness : REAL;
		attribute FlangeThickness : REAL;
		attribute FilletRadius[0-1] : REAL;
		attribute EdgeRadius[0-1] : REAL;
	}

	class IfcZone extends IfcGroup {
		
	}

	datatype REAL;

	datatype BOOLEAN;

	datatype LOGICAL;

	datatype INTEGER;

	datatype NUMBER;

	datatype STRING;

	datatype BINARY;

	enumeration IfcActionSourceTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal BRAKES;
		literal RAIN;
		literal WAVE;
		literal CURRENT;
		literal ICE;
		literal BUOYANCY;
		literal LACK_OF_FIT;
		literal CREEP;
		literal SHRINKAGE;
		literal SYSTEM_IMPERFECTION;
		literal PROPPING;
		literal ERECTION;
		literal TRANSPORT;
		literal IMPACT;
		literal IMPULSE;
		literal FIRE;
		literal EARTHQUAKE_E;
		literal TEMPERATURE_T;
		literal SETTLEMENT_U;
		literal PRESTRESSING_P;
		literal WIND_W;
		literal SNOW_S;
		literal LIVE_LOAD_Q;
		literal COMPLETION_G1;
		literal DEAD_LOAD_G;
	}

	enumeration IfcActionTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal EXTRAORDINARY_A;
		literal VARIABLE_Q;
		literal PERMANENT_G;
	}

	enumeration IfcActuatorTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal THERMOSTATICACTUATOR;
		literal PNEUMATICACTUATOR;
		literal HYDRAULICACTUATOR;
		literal HANDOPERATEDACTUATOR;
		literal ELECTRICACTUATOR;
	}

	enumeration IfcAddressTypeEnum {
		literal USERDEFINED;
		literal DISTRIBUTIONPOINT;
		literal HOME;
		literal SITE;
		literal OFFICE;
	}

	enumeration IfcAheadOrBehind {
		literal BEHIND;
		literal AHEAD;
	}

	enumeration IfcAirTerminalBoxTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal VARIABLEFLOWPRESSUREINDEPENDANT;
		literal VARIABLEFLOWPRESSUREDEPENDANT;
		literal CONSTANTFLOW;
	}

	enumeration IfcAirTerminalTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal LINEARDIFFUSER;
		literal LINEARGRILLE;
		literal IRIS;
		literal EYEBALL;
		literal DIFFUSER;
		literal REGISTER;
		literal GRILLE;
	}

	enumeration IfcAirToAirHeatRecoveryTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal THERMOSIPHONCOILTYPEHEATEXCHANGERS;
		literal THERMOSIPHONSEALEDTUBEHEATEXCHANGERS;
		literal TWINTOWERENTHALPYRECOVERYLOOPS;
		literal HEATPIPE;
		literal RUNAROUNDCOILLOOP;
		literal ROTARYWHEEL;
		literal FIXEDPLATEPARALLELFLOWEXCHANGER;
		literal FIXEDPLATECROSSFLOWEXCHANGER;
		literal FIXEDPLATECOUNTERFLOWEXCHANGER;
	}

	enumeration IfcAlarmTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal WHISTLE;
		literal SIREN;
		literal MANUALPULLBOX;
		literal LIGHT;
		literal BREAKGLASSBUTTON;
		literal BELL;
	}

	enumeration IfcAnalysisModelTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal LOADING_3D;
		literal OUT_PLANE_LOADING_2D;
		literal IN_PLANE_LOADING_2D;
	}

	enumeration IfcAnalysisTheoryTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal FULL_NONLINEAR_THEORY;
		literal THIRD_ORDER_THEORY;
		literal SECOND_ORDER_THEORY;
		literal FIRST_ORDER_THEORY;
	}

	enumeration IfcArithmeticOperatorEnum {
		literal SUBTRACT;
		literal MULTIPLY;
		literal DIVIDE;
		literal ADD;
	}

	enumeration IfcAssemblyPlaceEnum {
		literal NOTDEFINED;
		literal FACTORY;
		literal SITE;
	}

	enumeration IfcBSplineCurveForm {
		literal UNSPECIFIED;
		literal HYPERBOLIC_ARC;
		literal PARABOLIC_ARC;
		literal ELLIPTIC_ARC;
		literal CIRCULAR_ARC;
		literal POLYLINE_FORM;
	}

	enumeration IfcBeamTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal T_BEAM;
		literal LINTEL;
		literal JOIST;
		literal BEAM;
	}

	enumeration IfcBenchmarkEnum {
		literal NOTEQUALTO;
		literal EQUALTO;
		literal LESSTHANOREQUALTO;
		literal LESSTHAN;
		literal GREATERTHANOREQUALTO;
		literal GREATERTHAN;
	}

	enumeration IfcBoilerTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal STEAM;
		literal WATER;
	}

	enumeration IfcBooleanOperator {
		literal DIFFERENCE;
		literal INTERSECTION;
		literal UNION;
	}

	enumeration IfcBuildingElementProxyTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
	}

	enumeration IfcCableCarrierFittingTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TEE;
		literal REDUCER;
		literal CROSS;
		literal BEND;
	}

	enumeration IfcCableCarrierSegmentTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal CONDUITSEGMENT;
		literal CABLETRUNKINGSEGMENT;
		literal CABLETRAYSEGMENT;
		literal CABLELADDERSEGMENT;
	}

	enumeration IfcCableSegmentTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal CONDUCTORSEGMENT;
		literal CABLESEGMENT;
	}

	enumeration IfcChangeActionEnum {
		literal MODIFIEDDELETED;
		literal MODIFIEDADDED;
		literal DELETED;
		literal ADDED;
		literal MODIFIED;
		literal NOCHANGE;
	}

	enumeration IfcChillerTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal HEATRECOVERY;
		literal WATERCOOLED;
		literal AIRCOOLED;
	}

	enumeration IfcCoilTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal GASHEATINGCOIL;
		literal ELECTRICHEATINGCOIL;
		literal WATERHEATINGCOIL;
		literal STEAMHEATINGCOIL;
		literal WATERCOOLINGCOIL;
		literal DXCOOLINGCOIL;
	}

	enumeration IfcColumnTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal COLUMN;
	}

	enumeration IfcCompressorTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TWINSCREW;
		literal SINGLESCREW;
		literal ROTARYVANE;
		literal ROLLINGPISTON;
		literal WELDEDSHELLHERMETIC;
		literal SEMIHERMETIC;
		literal HERMETIC;
		literal OPENTYPE;
		literal BOOSTER;
		literal SINGLESTAGE;
		literal TROCHOIDAL;
		literal SCROLL;
		literal ROTARY;
		literal RECIPROCATING;
		literal DYNAMIC;
	}

	enumeration IfcCondenserTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal EVAPORATIVECOOLED;
		literal AIRCOOLED;
		literal WATERCOOLEDBRAZEDPLATE;
		literal WATERCOOLEDTUBEINTUBE;
		literal WATERCOOLEDSHELLCOIL;
		literal WATERCOOLEDSHELLTUBE;
	}

	enumeration IfcConnectionTypeEnum {
		literal NOTDEFINED;
		literal ATEND;
		literal ATSTART;
		literal ATPATH;
	}

	enumeration IfcConstraintEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal ADVISORY;
		literal SOFT;
		literal HARD;
	}

	enumeration IfcControllerTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TWOPOSITION;
		literal TIMEDTWOPOSITION;
		literal PROPORTIONALINTEGRALDERIVATIVE;
		literal PROPORTIONALINTEGRAL;
		literal PROPORTIONAL;
		literal FLOATING;
	}

	enumeration IfcCooledBeamTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal PASSIVE;
		literal ACTIVE;
	}

	enumeration IfcCoolingTowerTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal MECHANICALFORCEDDRAFT;
		literal MECHANICALINDUCEDDRAFT;
		literal NATURALDRAFT;
	}

	enumeration IfcCostScheduleTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SCHEDULEOFRATES;
		literal UNPRICEDBILLOFQUANTITIES;
		literal PRICEDBILLOFQUANTITIES;
		literal TENDER;
		literal ESTIMATE;
		literal COSTPLAN;
		literal BUDGET;
	}

	enumeration IfcCoveringTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal WRAPPING;
		literal SLEEVING;
		literal MEMBRANE;
		literal INSULATION;
		literal ROOFING;
		literal CLADDING;
		literal FLOORING;
		literal CEILING;
	}

	enumeration IfcCurrencyEnum {
		literal NOK;
		literal ZWD;
		literal ZAR;
		literal XEU;
		literal VND;
		literal VEB;
		literal USD;
		literal TWD;
		literal TTD;
		literal TRL;
		literal THB;
		literal SKP;
		literal SGD;
		literal SEK;
		literal SCR;
		literal SAR;
		literal RUR;
		literal QAR;
		literal PTN;
		literal PLN;
		literal PKR;
		literal PHP;
		literal PGK;
		literal OMR;
		literal NZD;
		literal NLG;
		literal MYR;
		literal MXN;
		literal MUR;
		literal MTL;
		literal LUF;
		literal LKR;
		literal KYD;
		literal KWD;
		literal KRW;
		literal KES;
		literal JPY;
		literal JOD;
		literal JMD;
		literal ITL;
		literal IRP;
		literal INR;
		literal ILS;
		literal IDR;
		literal ICK;
		literal HUF;
		literal HKD;
		literal GRX;
		literal GMD;
		literal GIP;
		literal GBP;
		literal FRF;
		literal FKP;
		literal FJD;
		literal FIM;
		literal FAK;
		literal EUR;
		literal EST;
		literal EGL;
		literal DKK;
		literal DEM;
		literal DDP;
		literal CZK;
		literal CYS;
		literal CNY;
		literal CLP;
		literal CHF;
		literal CBD;
		literal CAD;
		literal BZD;
		literal BWP;
		literal BSD;
		literal BRL;
		literal BND;
		literal BMD;
		literal BHD;
		literal BGL;
		literal BEG;
		literal BBD;
		literal AUD;
		literal ATS;
		literal AES;
		literal AED;
	}

	enumeration IfcCurtainWallTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
	}

	enumeration IfcDamperTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal FUMEHOODEXHAUST;
		literal BALANCINGDAMPER;
		literal GRAVITYRELIEFDAMPER;
		literal GRAVITYDAMPER;
		literal BLASTDAMPER;
		literal RELIEFDAMPER;
		literal BACKDRAFTDAMPER;
		literal FIRESMOKEDAMPER;
		literal SMOKEDAMPER;
		literal FIREDAMPER;
		literal CONTROLDAMPER;
	}

	enumeration IfcDataOriginEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SIMULATED;
		literal PREDICTED;
		literal MEASURED;
	}

	enumeration IfcDerivedUnitEnum {
		literal USERDEFINED;
		literal WARPINGMOMENTUNIT;
		literal WARPINGCONSTANTUNIT;
		literal THERMALEXPANSIONCOEFFICIENTUNIT;
		literal TEMPERATUREGRADIENTUNIT;
		literal SOUNDPRESSUREUNIT;
		literal SOUNDPOWERUNIT;
		literal SECTIONMODULUSUNIT;
		literal SECTIONAREAINTEGRALUNIT;
		literal ROTATIONALMASSUNIT;
		literal PHUNIT;
		literal MODULUSOFROTATIONALSUBGRADEREACTIONUNIT;
		literal MODULUSOFLINEARSUBGRADEREACTIONUNIT;
		literal MASSPERLENGTHUNIT;
		literal LUMINOUSINTENSITYDISTRIBUTIONUNIT;
		literal IONCONCENTRATIONUNIT;
		literal HEATINGVALUEUNIT;
		literal CURVATUREUNIT;
		literal ACCELERATIONUNIT;
		literal MODULUSOFSUBGRADEREACTIONUNIT;
		literal ROTATIONALSTIFFNESSUNIT;
		literal LINEARSTIFFNESSUNIT;
		literal SHEARMODULUSUNIT;
		literal MODULUSOFELASTICITYUNIT;
		literal PLANARFORCEUNIT;
		literal LINEARFORCEUNIT;
		literal LINEARMOMENTUNIT;
		literal MOMENTOFINERTIAUNIT;
		literal TORQUEUNIT;
		literal ROTATIONALFREQUENCYUNIT;
		literal VOLUMETRICFLOWRATEUNIT;
		literal VAPORPERMEABILITYUNIT;
		literal THERMALTRANSMITTANCEUNIT;
		literal THERMALRESISTANCEUNIT;
		literal THERMALCONDUCTANCEUNIT;
		literal THERMALADMITTANCEUNIT;
		literal SPECIFICHEATCAPACITYUNIT;
		literal MOLECULARWEIGHTUNIT;
		literal MOISTUREDIFFUSIVITYUNIT;
		literal MASSFLOWRATEUNIT;
		literal MASSDENSITYUNIT;
		literal LINEARVELOCITYUNIT;
		literal KINEMATICVISCOSITYUNIT;
		literal ISOTHERMALMOISTURECAPACITYUNIT;
		literal INTEGERCOUNTRATEUNIT;
		literal HEATFLUXDENSITYUNIT;
		literal DYNAMICVISCOSITYUNIT;
		literal COMPOUNDPLANEANGLEUNIT;
		literal ANGULARVELOCITYUNIT;
	}

	enumeration IfcDimensionExtentUsage {
		literal TARGET;
		literal ORIGIN;
	}

	enumeration IfcDirectionSenseEnum {
		literal NEGATIVE;
		literal POSITIVE;
	}

	enumeration IfcDistributionChamberElementTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal VALVECHAMBER;
		literal TRENCH;
		literal SUMP;
		literal METERCHAMBER;
		literal MANHOLE;
		literal INSPECTIONPIT;
		literal INSPECTIONCHAMBER;
		literal FORMEDDUCT;
	}

	enumeration IfcDocumentConfidentialityEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal PERSONAL;
		literal CONFIDENTIAL;
		literal RESTRICTED;
		literal PUBLIC;
	}

	enumeration IfcDocumentStatusEnum {
		literal NOTDEFINED;
		literal REVISION;
		literal FINAL;
		literal FINALDRAFT;
		literal DRAFT;
	}

	enumeration IfcDoorPanelOperationEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal ROLLINGUP;
		literal REVOLVING;
		literal FOLDING;
		literal SLIDING;
		literal DOUBLE_ACTING;
		literal SWINGING;
	}

	enumeration IfcDoorPanelPositionEnum {
		literal NOTDEFINED;
		literal RIGHT;
		literal MIDDLE;
		literal LEFT;
	}

	enumeration IfcDoorStyleConstructionEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal PLASTIC;
		literal ALUMINIUM_PLASTIC;
		literal ALUMINIUM_WOOD;
		literal WOOD;
		literal STEEL;
		literal HIGH_GRADE_STEEL;
		literal ALUMINIUM;
	}

	enumeration IfcDoorStyleOperationEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal ROLLINGUP;
		literal REVOLVING;
		literal DOUBLE_DOOR_FOLDING;
		literal FOLDING_TO_RIGHT;
		literal FOLDING_TO_LEFT;
		literal DOUBLE_DOOR_SLIDING;
		literal SLIDING_TO_RIGHT;
		literal SLIDING_TO_LEFT;
		literal DOUBLE_DOOR_DOUBLE_SWING;
		literal DOUBLE_SWING_RIGHT;
		literal DOUBLE_SWING_LEFT;
		literal DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT;
		literal DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT;
		literal DOUBLE_DOOR_SINGLE_SWING;
		literal SINGLE_SWING_RIGHT;
		literal SINGLE_SWING_LEFT;
	}

	enumeration IfcDuctFittingTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TRANSITION;
		literal OBSTRUCTION;
		literal JUNCTION;
		literal EXIT;
		literal ENTRY;
		literal CONNECTOR;
		literal BEND;
	}

	enumeration IfcDuctSegmentTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal FLEXIBLESEGMENT;
		literal RIGIDSEGMENT;
	}

	enumeration IfcDuctSilencerTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal ROUND;
		literal RECTANGULAR;
		literal FLATOVAL;
	}

	enumeration IfcElectricApplianceTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal WATERCOOLER;
		literal WATERHEATER;
		literal WASHINGMACHINE;
		literal VENDINGMACHINE;
		literal TV;
		literal TUMBLEDRYER;
		literal TELEPHONE;
		literal SCANNER;
		literal RADIANTHEATER;
		literal REFRIGERATOR;
		literal PRINTER;
		literal PHOTOCOPIER;
		literal MICROWAVE;
		literal INDIRECTWATERHEATER;
		literal HANDDRYER;
		literal FRIDGE_FREEZER;
		literal FREEZER;
		literal FREESTANDINGFAN;
		literal FACSIMILE;
		literal ELECTRICHEATER;
		literal ELECTRICCOOKER;
		literal DISHWASHER;
		literal DIRECTWATERHEATER;
		literal COMPUTER;
	}

	enumeration IfcElectricCurrentEnum {
		literal NOTDEFINED;
		literal DIRECT;
		literal ALTERNATING;
	}

	enumeration IfcElectricDistributionPointFunctionEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SWITCHBOARD;
		literal MOTORCONTROLCENTRE;
		literal MIMICPANEL;
		literal INDICATORPANEL;
		literal GASDETECTORPANEL;
		literal DISTRIBUTIONBOARD;
		literal CONTROLPANEL;
		literal CONSUMERUNIT;
		literal ALARMPANEL;
	}

	enumeration IfcElectricFlowStorageDeviceTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal UPS;
		literal INDUCTORBANK;
		literal HARMONICFILTER;
		literal CAPACITORBANK;
		literal BATTERY;
	}

	enumeration IfcElectricGeneratorTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
	}

	enumeration IfcElectricHeaterTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal ELECTRICMATHEATER;
		literal ELECTRICCABLEHEATER;
		literal ELECTRICPOINTHEATER;
	}

	enumeration IfcElectricMotorTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SYNCHRONOUS;
		literal RELUCTANCESYNCHRONOUS;
		literal POLYPHASE;
		literal INDUCTION;
		literal DC;
	}

	enumeration IfcElectricTimeControlTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal RELAY;
		literal TIMEDELAY;
		literal TIMECLOCK;
	}

	enumeration IfcElementAssemblyTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TRUSS;
		literal SLAB_FIELD;
		literal RIGID_FRAME;
		literal REINFORCEMENT_UNIT;
		literal GIRDER;
		literal BRACED_FRAME;
		literal BEAM_GRID;
		literal ARCH;
		literal ACCESSORY_ASSEMBLY;
	}

	enumeration IfcElementCompositionEnum {
		literal PARTIAL;
		literal ELEMENT;
		literal COMPLEX;
	}

	enumeration IfcEnergySequenceEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal AUXILIARY;
		literal TERTIARY;
		literal SECONDARY;
		literal PRIMARY;
	}

	enumeration IfcEnvironmentalImpactCategoryEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TRANSPORTATION;
		literal MANUFACTURE;
		literal INSTALLATION;
		literal EXTRACTION;
		literal DISPOSAL;
		literal COMBINEDVALUE;
	}

	enumeration IfcEvaporativeCoolerTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal INDIRECTDIRECTCOMBINATION;
		literal INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER;
		literal INDIRECTEVAPORATIVEWETCOIL;
		literal INDIRECTEVAPORATIVEPACKAGEAIRCOOLER;
		literal DIRECTEVAPORATIVEAIRWASHER;
		literal DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER;
		literal DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER;
		literal DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER;
		literal DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER;
	}

	enumeration IfcEvaporatorTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SHELLANDCOIL;
		literal FLOODEDSHELLANDTUBE;
		literal DIRECTEXPANSIONBRAZEDPLATE;
		literal DIRECTEXPANSIONTUBEINTUBE;
		literal DIRECTEXPANSIONSHELLANDTUBE;
	}

	enumeration IfcFanTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal PROPELLORAXIAL;
		literal VANEAXIAL;
		literal TUBEAXIAL;
		literal CENTRIFUGALAIRFOIL;
		literal CENTRIFUGALBACKWARDINCLINEDCURVED;
		literal CENTRIFUGALRADIAL;
		literal CENTRIFUGALFORWARDCURVED;
	}

	enumeration IfcFilterTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal WATERFILTER;
		literal STRAINER;
		literal OILFILTER;
		literal ODORFILTER;
		literal AIRPARTICLEFILTER;
	}

	enumeration IfcFireSuppressionTerminalTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SPRINKLERDEFLECTOR;
		literal SPRINKLER;
		literal HOSEREEL;
		literal FIREHYDRANT;
		literal BREECHINGINLET;
	}

	enumeration IfcFlowDirectionEnum {
		literal NOTDEFINED;
		literal SOURCEANDSINK;
		literal SINK;
		literal SOURCE;
	}

	enumeration IfcFlowInstrumentTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal VOLTMETER_RMS;
		literal VOLTMETER_PEAK;
		literal PHASEANGLEMETER;
		literal POWERFACTORMETER;
		literal FREQUENCYMETER;
		literal AMMETER;
		literal THERMOMETER;
		literal PRESSUREGAUGE;
	}

	enumeration IfcFlowMeterTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal WATERMETER;
		literal OILMETER;
		literal GASMETER;
		literal FLOWMETER;
		literal ENERGYMETER;
		literal ELECTRICMETER;
	}

	enumeration IfcFootingTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal STRIP_FOOTING;
		literal PILE_CAP;
		literal PAD_FOOTING;
		literal FOOTING_BEAM;
	}

	enumeration IfcGasTerminalTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal GASBURNER;
		literal GASBOOSTER;
		literal GASAPPLIANCE;
	}

	enumeration IfcGeometricProjectionEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal ELEVATION_VIEW;
		literal SECTION_VIEW;
		literal REFLECTED_PLAN_VIEW;
		literal PLAN_VIEW;
		literal MODEL_VIEW;
		literal SKETCH_VIEW;
		literal GRAPH_VIEW;
	}

	enumeration IfcGlobalOrLocalEnum {
		literal LOCAL_COORDS;
		literal GLOBAL_COORDS;
	}

	enumeration IfcHeatExchangerTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SHELLANDTUBE;
		literal PLATE;
	}

	enumeration IfcHumidifierTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal ASSISTEDSTEAM;
		literal ASSISTEDBUTANE;
		literal ASSISTEDPROPANE;
		literal ASSISTEDNATURALGAS;
		literal ASSISTEDELECTRIC;
		literal ADIABATICCOMPRESSEDAIRNOZZLE;
		literal ADIABATICRIGIDMEDIA;
		literal ADIABATICULTRASONIC;
		literal ADIABATICATOMIZING;
		literal ADIABATICWETTEDELEMENT;
		literal ADIABATICPAN;
		literal ADIABATICAIRWASHER;
		literal STEAMINJECTION;
	}

	enumeration IfcInternalOrExternalEnum {
		literal NOTDEFINED;
		literal EXTERNAL;
		literal INTERNAL;
	}

	enumeration IfcInventoryTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal FURNITUREINVENTORY;
		literal SPACEINVENTORY;
		literal ASSETINVENTORY;
	}

	enumeration IfcJunctionBoxTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
	}

	enumeration IfcLampTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TUNGSTENFILAMENT;
		literal METALHALIDE;
		literal HIGHPRESSURESODIUM;
		literal HIGHPRESSUREMERCURY;
		literal FLUORESCENT;
		literal COMPACTFLUORESCENT;
	}

	enumeration IfcLayerSetDirectionEnum {
		literal AXIS3;
		literal AXIS2;
		literal AXIS1;
	}

	enumeration IfcLightDistributionCurveEnum {
		literal NOTDEFINED;
		literal TYPE_C;
		literal TYPE_B;
		literal TYPE_A;
	}

	enumeration IfcLightEmissionSourceEnum {
		literal NOTDEFINED;
		literal TUNGSTENFILAMENT;
		literal METALHALIDE;
		literal MAINVOLTAGEHALOGEN;
		literal LOWVOLTAGEHALOGEN;
		literal LOWPRESSURESODIUM;
		literal LIGHTEMITTINGDIODE;
		literal HIGHPRESSURESODIUM;
		literal HIGHPRESSUREMERCURY;
		literal FLUORESCENT;
		literal COMPACTFLUORESCENT;
	}

	enumeration IfcLightFixtureTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal DIRECTIONSOURCE;
		literal POINTSOURCE;
	}

	enumeration IfcLoadGroupTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal LOAD_COMBINATION;
		literal LOAD_COMBINATION_GROUP;
		literal LOAD_CASE;
		literal LOAD_GROUP;
	}

	enumeration IfcLogicalOperatorEnum {
		literal LOGICALOR;
		literal LOGICALAND;
	}

	enumeration IfcMemberTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal STUD;
		literal STRUT;
		literal STRINGER;
		literal RAFTER;
		literal PURLIN;
		literal POST;
		literal PLATE;
		literal MULLION;
		literal MEMBER;
		literal COLLAR;
		literal CHORD;
		literal BRACE;
	}

	enumeration IfcMotorConnectionTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal DIRECTDRIVE;
		literal COUPLING;
		literal BELTDRIVE;
	}

	enumeration IfcNullStyle {
		literal NULL;
	}

	enumeration IfcObjectTypeEnum {
		literal NOTDEFINED;
		literal PROJECT;
		literal GROUP;
		literal ACTOR;
		literal RESOURCE;
		literal CONTROL;
		literal PROCESS;
		literal PRODUCT;
	}

	enumeration IfcObjectiveEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TRIGGERCONDITION;
		literal SPECIFICATION;
		literal REQUIREMENT;
		literal HEALTHANDSAFETY;
		literal DESIGNINTENT;
		literal CODECOMPLIANCE;
	}

	enumeration IfcOccupantTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TENANT;
		literal OWNER;
		literal LETTINGAGENT;
		literal LESSOR;
		literal LESSEE;
		literal ASSIGNOR;
		literal ASSIGNEE;
	}

	enumeration IfcOutletTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal POWEROUTLET;
		literal COMMUNICATIONSOUTLET;
		literal AUDIOVISUALOUTLET;
	}

	enumeration IfcPermeableCoveringOperationEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SCREEN;
		literal LOUVER;
		literal GRILL;
	}

	enumeration IfcPhysicalOrVirtualEnum {
		literal NOTDEFINED;
		literal VIRTUAL;
		literal PHYSICAL;
	}

	enumeration IfcPileConstructionEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal PREFAB_STEEL;
		literal PRECAST_CONCRETE;
		literal COMPOSITE;
		literal CAST_IN_PLACE;
	}

	enumeration IfcPileTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SUPPORT;
		literal FRICTION;
		literal COHESION;
	}

	enumeration IfcPipeFittingTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TRANSITION;
		literal OBSTRUCTION;
		literal JUNCTION;
		literal EXIT;
		literal ENTRY;
		literal CONNECTOR;
		literal BEND;
	}

	enumeration IfcPipeSegmentTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SPOOL;
		literal GUTTER;
		literal RIGIDSEGMENT;
		literal FLEXIBLESEGMENT;
	}

	enumeration IfcPlateTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SHEET;
		literal CURTAIN_PANEL;
	}

	enumeration IfcProcedureTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal STARTUP;
		literal SHUTDOWN;
		literal DIAGNOSTIC;
		literal CALIBRATION;
		literal ADVICE_WARNING;
		literal ADVICE_NOTE;
		literal ADVICE_CAUTION;
	}

	enumeration IfcProfileTypeEnum {
		literal AREA;
		literal CURVE;
	}

	enumeration IfcProjectOrderRecordTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal WORK;
		literal PURCHASE;
		literal MOVE;
		literal MAINTENANCE;
		literal CHANGE;
	}

	enumeration IfcProjectOrderTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal WORKORDER;
		literal PURCHASEORDER;
		literal MOVEORDER;
		literal MAINTENANCEWORKORDER;
		literal CHANGEORDER;
	}

	enumeration IfcProjectedOrTrueLengthEnum {
		literal TRUE_LENGTH;
		literal PROJECTED_LENGTH;
	}

	enumeration IfcPropertySourceEnum {
		literal NOTKNOWN;
		literal USERDEFINED;
		literal MEASURED;
		literal COMMISSIONING;
		literal ASBUILT;
		literal SIMULATED;
		literal DESIGNMINIMUM;
		literal DESIGNMAXIMUM;
		literal DESIGN;
	}

	enumeration IfcProtectiveDeviceTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal VARISTOR;
		literal RESIDUALCURRENTSWITCH;
		literal RESIDUALCURRENTCIRCUITBREAKER;
		literal EARTHFAILUREDEVICE;
		literal CIRCUITBREAKER;
		literal FUSEDISCONNECTOR;
	}

	enumeration IfcPumpTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal VERTICALTURBINE;
		literal VERTICALINLINE;
		literal SPLITCASE;
		literal ENDSUCTION;
		literal CIRCULATOR;
	}

	enumeration IfcRailingTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal BALUSTRADE;
		literal GUARDRAIL;
		literal HANDRAIL;
	}

	enumeration IfcRampFlightTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SPIRAL;
		literal STRAIGHT;
	}

	enumeration IfcRampTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SPIRAL_RAMP;
		literal HALF_TURN_RAMP;
		literal TWO_QUARTER_TURN_RAMP;
		literal QUARTER_TURN_RAMP;
		literal TWO_STRAIGHT_RUN_RAMP;
		literal STRAIGHT_RUN_RAMP;
	}

	enumeration IfcReflectanceMethodEnum {
		literal NOTDEFINED;
		literal STRAUSS;
		literal PLASTIC;
		literal PHONG;
		literal MIRROR;
		literal METAL;
		literal MATT;
		literal GLASS;
		literal FLAT;
		literal BLINN;
	}

	enumeration IfcReinforcingBarRoleEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal RING;
		literal EDGE;
		literal PUNCHING;
		literal STUD;
		literal LIGATURE;
		literal SHEAR;
		literal MAIN;
	}

	enumeration IfcReinforcingBarSurfaceEnum {
		literal TEXTURED;
		literal PLAIN;
	}

	enumeration IfcResourceConsumptionEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal NOTOCCUPIED;
		literal PARTIALLYOCCUPIED;
		literal OCCUPIED;
		literal NOTCONSUMED;
		literal PARTIALLYCONSUMED;
		literal CONSUMED;
	}

	enumeration IfcRibPlateDirectionEnum {
		literal DIRECTION_Y;
		literal DIRECTION_X;
	}

	enumeration IfcRoleEnum {
		literal USERDEFINED;
		literal RESELLER;
		literal FIELDCONSTRUCTIONMANAGER;
		literal CONSTRUCTIONMANAGER;
		literal CONSULTANT;
		literal OWNER;
		literal ENGINEER;
		literal COMISSIONINGENGINEER;
		literal CIVILENGINEER;
		literal FACILITIESMANAGER;
		literal PROJECTMANAGER;
		literal ELECTRICALENGINEER;
		literal MECHANICALENGINEER;
		literal BUILDINGOPERATOR;
		literal BUILDINGOWNER;
		literal CLIENT;
		literal COSTENGINEER;
		literal STRUCTURALENGINEER;
		literal ARCHITECT;
		literal SUBCONTRACTOR;
		literal CONTRACTOR;
		literal MANUFACTURER;
		literal SUPPLIER;
	}

	enumeration IfcRoofTypeEnum {
		literal NOTDEFINED;
		literal FREEFORM;
		literal DOME_ROOF;
		literal PAVILION_ROOF;
		literal BUTTERFLY_ROOF;
		literal RAINBOW_ROOF;
		literal BARREL_ROOF;
		literal MANSARD_ROOF;
		literal GAMBREL_ROOF;
		literal HIPPED_GABLE_ROOF;
		literal HIP_ROOF;
		literal GABLE_ROOF;
		literal SHED_ROOF;
		literal FLAT_ROOF;
	}

	enumeration IfcSIPrefix {
		literal ATTO;
		literal FEMTO;
		literal PICO;
		literal NANO;
		literal MICRO;
		literal MILLI;
		literal CENTI;
		literal DECI;
		literal DECA;
		literal HECTO;
		literal KILO;
		literal MEGA;
		literal GIGA;
		literal TERA;
		literal PETA;
		literal EXA;
	}

	enumeration IfcSIUnitName {
		literal WEBER;
		literal WATT;
		literal VOLT;
		literal TESLA;
		literal STERADIAN;
		literal SQUARE_METRE;
		literal SIEVERT;
		literal SIEMENS;
		literal SECOND;
		literal RADIAN;
		literal PASCAL;
		literal OHM;
		literal NEWTON;
		literal MOLE;
		literal METRE;
		literal LUX;
		literal LUMEN;
		literal KELVIN;
		literal JOULE;
		literal HERTZ;
		literal HENRY;
		literal GRAY;
		literal GRAM;
		literal FARAD;
		literal DEGREE_CELSIUS;
		literal CUBIC_METRE;
		literal COULOMB;
		literal CANDELA;
		literal BECQUEREL;
		literal AMPERE;
	}

	enumeration IfcSanitaryTerminalTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal WCSEAT;
		literal WASHHANDBASIN;
		literal URINAL;
		literal TOILETPAN;
		literal SANITARYFOUNTAIN;
		literal SINK;
		literal SHOWER;
		literal CISTERN;
		literal BIDET;
		literal BATH;
	}

	enumeration IfcSectionTypeEnum {
		literal TAPERED;
		literal UNIFORM;
	}

	enumeration IfcSensorTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TEMPERATURESENSOR;
		literal SOUNDSENSOR;
		literal SMOKESENSOR;
		literal PRESSURESENSOR;
		literal MOVEMENTSENSOR;
		literal MOISTURESENSOR;
		literal LIGHTSENSOR;
		literal HUMIDITYSENSOR;
		literal HEATSENSOR;
		literal GASSENSOR;
		literal FLOWSENSOR;
		literal FIRESENSOR;
		literal CO2SENSOR;
	}

	enumeration IfcSequenceEnum {
		literal NOTDEFINED;
		literal FINISH_FINISH;
		literal FINISH_START;
		literal START_FINISH;
		literal START_START;
	}

	enumeration IfcServiceLifeFactorTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal G_MAINTENANCELEVEL;
		literal F_INUSECONDITIONS;
		literal E_OUTDOORENVIRONMENT;
		literal D_INDOORENVIRONMENT;
		literal C_WORKEXECUTIONLEVEL;
		literal B_DESIGNLEVEL;
		literal A_QUALITYOFCOMPONENTS;
	}

	enumeration IfcServiceLifeTypeEnum {
		literal REFERENCESERVICELIFE;
		literal PESSIMISTICREFERENCESERVICELIFE;
		literal OPTIMISTICREFERENCESERVICELIFE;
		literal EXPECTEDSERVICELIFE;
		literal ACTUALSERVICELIFE;
	}

	enumeration IfcSlabTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal BASESLAB;
		literal LANDING;
		literal ROOF;
		literal FLOOR;
	}

	enumeration IfcSoundScaleEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal NR;
		literal NC;
		literal DBC;
		literal DBB;
		literal DBA;
	}

	enumeration IfcSpaceHeaterTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal UNITHEATER;
		literal FINNEDTUBEUNIT;
		literal BASEBOARDHEATER;
		literal CONVECTOR;
		literal TUBULARRADIATOR;
		literal PANELRADIATOR;
		literal SECTIONALRADIATOR;
	}

	enumeration IfcSpaceTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
	}

	enumeration IfcStackTerminalTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal RAINWATERHOPPER;
		literal COWL;
		literal BIRDCAGE;
	}

	enumeration IfcStairFlightTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal FREEFORM;
		literal CURVED;
		literal SPIRAL;
		literal WINDER;
		literal STRAIGHT;
	}

	enumeration IfcStairTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TWO_CURVED_RUN_STAIR;
		literal CURVED_RUN_STAIR;
		literal DOUBLE_RETURN_STAIR;
		literal SPIRAL_STAIR;
		literal THREE_QUARTER_TURN_STAIR;
		literal THREE_QUARTER_WINDING_STAIR;
		literal TWO_QUARTER_TURN_STAIR;
		literal TWO_QUARTER_WINDING_STAIR;
		literal HALF_TURN_STAIR;
		literal HALF_WINDING_STAIR;
		literal QUARTER_TURN_STAIR;
		literal QUARTER_WINDING_STAIR;
		literal TWO_STRAIGHT_RUN_STAIR;
		literal STRAIGHT_RUN_STAIR;
	}

	enumeration IfcStateEnum {
		literal READONLYLOCKED;
		literal READWRITELOCKED;
		literal LOCKED;
		literal READONLY;
		literal READWRITE;
	}

	enumeration IfcStructuralCurveTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal COMPRESSION_MEMBER;
		literal TENSION_MEMBER;
		literal CABLE;
		literal PIN_JOINED_MEMBER;
		literal RIGID_JOINED_MEMBER;
	}

	enumeration IfcStructuralSurfaceTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SHELL;
		literal MEMBRANE_ELEMENT;
		literal BENDING_ELEMENT;
	}

	enumeration IfcSurfaceSide {
		literal BOTH;
		literal NEGATIVE;
		literal POSITIVE;
	}

	enumeration IfcSurfaceTextureEnum {
		literal NOTDEFINED;
		literal TRANSPARENCYMAP;
		literal TEXTURE;
		literal SPECULAR;
		literal SHININESS;
		literal SELFILLUMINATION;
		literal REFLECTION;
		literal OPACITY;
		literal BUMP;
	}

	enumeration IfcSwitchingDeviceTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TOGGLESWITCH;
		literal SWITCHDISCONNECTOR;
		literal STARTER;
		literal EMERGENCYSTOP;
		literal CONTACTOR;
	}

	enumeration IfcTankTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal PRESSUREVESSEL;
		literal EXPANSION;
		literal SECTIONAL;
		literal PREFORMED;
	}

	enumeration IfcTendonTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal COATED;
		literal BAR;
		literal WIRE;
		literal STRAND;
	}

	enumeration IfcTextPath {
		literal DOWN;
		literal UP;
		literal RIGHT;
		literal LEFT;
	}

	enumeration IfcThermalLoadSourceEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal INFILTRATION;
		literal RELATIVEHUMIDITY;
		literal DRYBULBTEMPERATURE;
		literal AIREXCHANGERATE;
		literal EXHAUSTAIR;
		literal RECIRCULATEDAIR;
		literal VENTILATIONOUTSIDEAIR;
		literal VENTILATIONINDOORAIR;
		literal EQUIPMENT;
		literal LIGHTING;
		literal PEOPLE;
	}

	enumeration IfcThermalLoadTypeEnum {
		literal NOTDEFINED;
		literal RADIANT;
		literal LATENT;
		literal SENSIBLE;
	}

	enumeration IfcTimeSeriesDataTypeEnum {
		literal NOTDEFINED;
		literal PIECEWISECONTINUOUS;
		literal PIECEWISECONSTANT;
		literal PIECEWISEBINARY;
		literal DISCRETEBINARY;
		literal DISCRETE;
		literal CONTINUOUS;
	}

	enumeration IfcTimeSeriesScheduleTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal DAILY;
		literal WEEKLY;
		literal MONTHLY;
		literal ANNUAL;
	}

	enumeration IfcTransformerTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal VOLTAGE;
		literal FREQUENCY;
		literal CURRENT;
	}

	enumeration IfcTransitionCode {
		literal CONTSAMEGRADIENTSAMECURVATURE;
		literal CONTSAMEGRADIENT;
		literal CONTINUOUS;
		literal DISCONTINUOUS;
	}

	enumeration IfcTransportElementTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal MOVINGWALKWAY;
		literal ESCALATOR;
		literal ELEVATOR;
	}

	enumeration IfcTrimmingPreference {
		literal UNSPECIFIED;
		literal PARAMETER;
		literal CARTESIAN;
	}

	enumeration IfcTubeBundleTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal FINNED;
	}

	enumeration IfcUnitEnum {
		literal USERDEFINED;
		literal VOLUMEUNIT;
		literal TIMEUNIT;
		literal THERMODYNAMICTEMPERATUREUNIT;
		literal SOLIDANGLEUNIT;
		literal RADIOACTIVITYUNIT;
		literal PRESSUREUNIT;
		literal POWERUNIT;
		literal PLANEANGLEUNIT;
		literal MASSUNIT;
		literal MAGNETICFLUXUNIT;
		literal MAGNETICFLUXDENSITYUNIT;
		literal LUMINOUSINTENSITYUNIT;
		literal LUMINOUSFLUXUNIT;
		literal LENGTHUNIT;
		literal INDUCTANCEUNIT;
		literal ILLUMINANCEUNIT;
		literal FREQUENCYUNIT;
		literal FORCEUNIT;
		literal ENERGYUNIT;
		literal ELECTRICVOLTAGEUNIT;
		literal ELECTRICRESISTANCEUNIT;
		literal ELECTRICCURRENTUNIT;
		literal ELECTRICCONDUCTANCEUNIT;
		literal ELECTRICCHARGEUNIT;
		literal ELECTRICCAPACITANCEUNIT;
		literal DOSEEQUIVALENTUNIT;
		literal AREAUNIT;
		literal AMOUNTOFSUBSTANCEUNIT;
		literal ABSORBEDDOSEUNIT;
	}

	enumeration IfcUnitaryEquipmentTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal ROOFTOPUNIT;
		literal SPLITSYSTEM;
		literal AIRCONDITIONINGUNIT;
		literal AIRHANDLER;
	}

	enumeration IfcValveTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal STOPCOCK;
		literal STEAMTRAP;
		literal SAFETYCUTOFF;
		literal REGULATING;
		literal PRESSURERELIEF;
		literal PRESSUREREDUCING;
		literal MIXING;
		literal ISOLATING;
		literal GASTAP;
		literal GASCOCK;
		literal FLUSHING;
		literal FAUCET;
		literal DOUBLEREGULATING;
		literal DOUBLECHECK;
		literal DRAWOFFCOCK;
		literal DIVERTING;
		literal COMMISSIONING;
		literal CHECK;
		literal CHANGEOVER;
		literal ANTIVACUUM;
		literal AIRRELEASE;
	}

	enumeration IfcVibrationIsolatorTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal SPRING;
		literal COMPRESSION;
	}

	enumeration IfcWallTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal PLUMBINGWALL;
		literal ELEMENTEDWALL;
		literal SHEAR;
		literal POLYGONAL;
		literal STANDARD;
	}

	enumeration IfcWasteTerminalTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal WASTETRAP;
		literal WASTEDISPOSALUNIT;
		literal ROOFDRAIN;
		literal PETROLINTERCEPTOR;
		literal OILINTERCEPTOR;
		literal GREASEINTERCEPTOR;
		literal GULLYTRAP;
		literal GULLYSUMP;
		literal FLOORWASTE;
		literal FLOORTRAP;
	}

	enumeration IfcWindowPanelOperationEnum {
		literal NOTDEFINED;
		literal OTHEROPERATION;
		literal FIXEDCASEMENT;
		literal REMOVABLECASEMENT;
		literal SLIDINGVERTICAL;
		literal SLIDINGHORIZONTAL;
		literal PIVOTVERTICAL;
		literal PIVOTHORIZONTAL;
		literal BOTTOMHUNG;
		literal TOPHUNG;
		literal TILTANDTURNLEFTHAND;
		literal TILTANDTURNRIGHTHAND;
		literal SIDEHUNGLEFTHAND;
		literal SIDEHUNGRIGHTHAND;
	}

	enumeration IfcWindowPanelPositionEnum {
		literal NOTDEFINED;
		literal TOP;
		literal BOTTOM;
		literal RIGHT;
		literal MIDDLE;
		literal LEFT;
	}

	enumeration IfcWindowStyleConstructionEnum {
		literal NOTDEFINED;
		literal OTHER_CONSTRUCTION;
		literal PLASTIC;
		literal ALUMINIUM_WOOD;
		literal WOOD;
		literal STEEL;
		literal HIGH_GRADE_STEEL;
		literal ALUMINIUM;
	}

	enumeration IfcWindowStyleOperationEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal TRIPLE_PANEL_HORIZONTAL;
		literal TRIPLE_PANEL_RIGHT;
		literal TRIPLE_PANEL_LEFT;
		literal TRIPLE_PANEL_TOP;
		literal TRIPLE_PANEL_BOTTOM;
		literal TRIPLE_PANEL_VERTICAL;
		literal DOUBLE_PANEL_HORIZONTAL;
		literal DOUBLE_PANEL_VERTICAL;
		literal SINGLE_PANEL;
	}

	enumeration IfcWorkControlTypeEnum {
		literal NOTDEFINED;
		literal USERDEFINED;
		literal PLANNED;
		literal BASELINE;
		literal ACTUAL;
	}
}
