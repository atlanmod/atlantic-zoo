-- @name		Unified Ontology Language
-- @version		1.0
-- @domains		Ontology
-- @authors		Hugo Bruneliere (hugo.bruneliere <at> gmail.com), Pierrick Guyard (pierrick.guyard <at> gmail.com)
-- @date		2005/08/10
-- @description	This metamodel describes Unified Ontology Language. An ontology is an explicit specification of a conceptualization. Formally, an ontology is the statement of a logical theory. We use common ontologies to describe ontological commitments for a set of agents so that they can communicate about a domain of discourse without necessarily operating on a globally shared theory. We say that an agent commits to an ontology if its observable actions are consistent with the definitions in the ontology. The Knowledge Level is a level of description of the knowledge of an agent that is independent of the symbol-level representation used internally by the agent. Knowledge is attributed to agents by observing their actions; an agent "knows" something if it acts as if it had the information and is acting rationally to achieve its goals. The "actions" of agents (including knowledge base servers and knowledge-based systems) can be seen through a tell and ask functional interface, where a client interacts with an agent by making logical assertions (tell), and posing queries (ask). Pragmatically, a common ontology defines the vocabulary with which queries and assertions are exchanged among agents. Ontological commitments are agreements to use the shared vocabulary in a coherent and consistent manner. The agents sharing a vocabulary need not share a knowledge base; each knows things the other does not, and an agent that commits to an ontology is not required to answer all queries that can be formulated in the shared vocabulary.
-- @see			MDA Standards for Ontology Development, http://afrodita.rcub.bg.ac.yu/~gasevic/tutorials/ICWE2004/	

package UnifiedOntologyLanguage {

	-- @begin Unified Ontology Language structure

	class Node {}
	
	class Resource extends Node {
		reference context : Package;
	}
	
	class Literal extends Node {}
	
	class Fact {
		reference object : Node;
		reference subject : Resource;
		reference predicate : Resource;
		reference context : Package;
	}
	
	class Package extends Resource {}
	
	class Ontology extends Package {
		reference imports[*] : Package;
	}
	
	-- @end Unified Ontology Language structure

}


package PrimitiveTypes {
	
	datatype Integer;
	datatype String;
	datatype Boolean;
	datatype Double;

}