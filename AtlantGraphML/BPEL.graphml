<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'BPELGraph' edgedefault = 'undirected'>
    <edge id = 'Process_extends_BPELExtensibleElement' source = 'class_BPEL::Process' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'PartnerLink_extends_BPELExtensibleElement' source = 'class_BPEL::PartnerLink' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'FaultHandler_extends_BPELExtensibleElement' source = 'class_BPEL::FaultHandler' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Activity_extends_BPELExtensibleElement' source = 'class_BPEL::Activity' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'CorrelationSet_extends_BPELExtensibleElement' source = 'class_BPEL::CorrelationSet' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Invoke_extends_PartnerActivity' source = 'class_BPEL::Invoke' target = 'class_BPEL::PartnerActivity'/>
    <edge id = 'Link_extends_BPELExtensibleElement' source = 'class_BPEL::Link' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Catch_extends_BPELExtensibleElement' source = 'class_BPEL::Catch' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Reply_extends_PartnerActivity' source = 'class_BPEL::Reply' target = 'class_BPEL::PartnerActivity'/>
    <edge id = 'Receive_extends_PartnerActivity' source = 'class_BPEL::Receive' target = 'class_BPEL::PartnerActivity'/>
    <edge id = 'Exit_extends_Activity' source = 'class_BPEL::Exit' target = 'class_BPEL::Activity'/>
    <edge id = 'Throw_extends_Activity' source = 'class_BPEL::Throw' target = 'class_BPEL::Activity'/>
    <edge id = 'Wait_extends_Activity' source = 'class_BPEL::Wait' target = 'class_BPEL::Activity'/>
    <edge id = 'Empty_extends_Activity' source = 'class_BPEL::Empty' target = 'class_BPEL::Activity'/>
    <edge id = 'Sequence_extends_Activity' source = 'class_BPEL::Sequence' target = 'class_BPEL::Activity'/>
    <edge id = 'Switch_extends_Activity' source = 'class_BPEL::Switch' target = 'class_BPEL::Activity'/>
    <edge id = 'Case_extends_BPELExtensibleElement' source = 'class_BPEL::Case' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'While_extends_Activity' source = 'class_BPEL::While' target = 'class_BPEL::Activity'/>
    <edge id = 'Pick_extends_Activity' source = 'class_BPEL::Pick' target = 'class_BPEL::Activity'/>
    <edge id = 'Flow_extends_Activity' source = 'class_BPEL::Flow' target = 'class_BPEL::Activity'/>
    <edge id = 'OnAlarm_extends_BPELExtensibleElement' source = 'class_BPEL::OnAlarm' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Assign_extends_Activity' source = 'class_BPEL::Assign' target = 'class_BPEL::Activity'/>
    <edge id = 'Copy_extends_BPELExtensibleElement' source = 'class_BPEL::Copy' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Extension_extends_BPELExtensibleElement' source = 'class_BPEL::Extension' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Scope_extends_Activity' source = 'class_BPEL::Scope' target = 'class_BPEL::Activity'/>
    <edge id = 'Compensate_extends_Activity' source = 'class_BPEL::Compensate' target = 'class_BPEL::Activity'/>
    <edge id = 'CompensationHandler_extends_BPELExtensibleElement' source = 'class_BPEL::CompensationHandler' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'To_extends_BPELExtensibleElement' source = 'class_BPEL::To' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'From_extends_To' source = 'class_BPEL::From' target = 'class_BPEL::To'/>
    <edge id = 'OnMessage_extends_BPELExtensibleElement' source = 'class_BPEL::OnMessage' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Expression_extends_ExtensibilityElement' source = 'class_BPEL::Expression' target = 'class_WSDL::ExtensibilityElement'/>
    <edge id = 'BooleanExpression_extends_Expression' source = 'class_BPEL::BooleanExpression' target = 'class_BPEL::Expression'/>
    <edge id = 'Correlation_extends_BPELExtensibleElement' source = 'class_BPEL::Correlation' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'EventHandler_extends_BPELExtensibleElement' source = 'class_BPEL::EventHandler' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Source_extends_BPELExtensibleElement' source = 'class_BPEL::Source' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Target_extends_BPELExtensibleElement' source = 'class_BPEL::Target' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'PartnerLinks_extends_BPELExtensibleElement' source = 'class_BPEL::PartnerLinks' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Variables_extends_BPELExtensibleElement' source = 'class_BPEL::Variables' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'CorrelationSets_extends_BPELExtensibleElement' source = 'class_BPEL::CorrelationSets' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Links_extends_BPELExtensibleElement' source = 'class_BPEL::Links' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'CatchAll_extends_BPELExtensibleElement' source = 'class_BPEL::CatchAll' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Correlations_extends_BPELExtensibleElement' source = 'class_BPEL::Correlations' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Variable_extends_BPELExtensibleElement' source = 'class_BPEL::Variable' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Otherwise_extends_BPELExtensibleElement' source = 'class_BPEL::Otherwise' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'OnEvent_extends_BPELExtensibleElement' source = 'class_BPEL::OnEvent' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Rethrow_extends_Activity' source = 'class_BPEL::Rethrow' target = 'class_BPEL::Activity'/>
    <edge id = 'Condition_extends_Expression' source = 'class_BPEL::Condition' target = 'class_BPEL::Expression'/>
    <edge id = 'Targets_extends_BPELExtensibleElement' source = 'class_BPEL::Targets' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Sources_extends_BPELExtensibleElement' source = 'class_BPEL::Sources' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Extensions_extends_BPELExtensibleElement' source = 'class_BPEL::Extensions' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'ExtensionActivity_extends_Activity' source = 'class_BPEL::ExtensionActivity' target = 'class_BPEL::Activity'/>
    <edge id = 'OpaqueActivity_extends_Activity' source = 'class_BPEL::OpaqueActivity' target = 'class_BPEL::Activity'/>
    <edge id = 'ForEach_extends_Activity' source = 'class_BPEL::ForEach' target = 'class_BPEL::Activity'/>
    <edge id = 'RepeatUntil_extends_Activity' source = 'class_BPEL::RepeatUntil' target = 'class_BPEL::Activity'/>
    <edge id = 'TerminationHandler_extends_BPELExtensibleElement' source = 'class_BPEL::TerminationHandler' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Validate_extends_Activity' source = 'class_BPEL::Validate' target = 'class_BPEL::Activity'/>
    <edge id = 'If_extends_Activity' source = 'class_BPEL::If' target = 'class_BPEL::Activity'/>
    <edge id = 'Then_extends_BPELExtensibleElement' source = 'class_BPEL::Then' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'ElseIf_extends_BPELExtensibleElement' source = 'class_BPEL::ElseIf' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Else_extends_BPELExtensibleElement' source = 'class_BPEL::Else' target = 'class_BPEL::BPELExtensibleElement'/>
    <edge id = 'Branches_extends_Expression' source = 'class_BPEL::Branches' target = 'class_BPEL::Expression'/>
    <edge id = 'referenceEdge_Process2PartnerLinks' source = 'class_BPEL::Process' target = 'class_BPEL::PartnerLinks'/>
    <edge id = 'referenceEdge_PartnerLink2Role' source = 'class_BPEL::PartnerLink' target = 'class_partnerlinktype::Role'/>
    <edge id = 'referenceEdge_FaultHandler2Catch' source = 'class_BPEL::FaultHandler' target = 'class_BPEL::Catch'/>
    <edge id = 'referenceEdge_Activity2Targets' source = 'class_BPEL::Activity' target = 'class_BPEL::Targets'/>
    <edge id = 'referenceEdge_CorrelationSet2Property' source = 'class_BPEL::CorrelationSet' target = 'class_messageproperties::Property'/>
    <edge id = 'referenceEdge_Invoke2Variable' source = 'class_BPEL::Invoke' target = 'class_BPEL::Variable'/>
    <edge id = 'referenceEdge_Link2Source' source = 'class_BPEL::Link' target = 'class_BPEL::Source'/>
    <edge id = 'referenceEdge_Reply2Variable' source = 'class_BPEL::Reply' target = 'class_BPEL::Variable'/>
    <edge id = 'referenceEdge_PartnerActivity2PartnerLink' source = 'class_BPEL::PartnerActivity' target = 'class_BPEL::PartnerLink'/>
    <edge id = 'referenceEdge_Receive2Variable' source = 'class_BPEL::Receive' target = 'class_BPEL::Variable'/>
    <edge id = 'referenceEdge_Throw2Variable' source = 'class_BPEL::Throw' target = 'class_BPEL::Variable'/>
    <edge id = 'referenceEdge_Wait2Expression' source = 'class_BPEL::Wait' target = 'class_BPEL::Expression'/>
    <edge id = 'referenceEdge_Sequence2Activity' source = 'class_BPEL::Sequence' target = 'class_BPEL::Activity'/>
    <edge id = 'referenceEdge_Switch2Case' source = 'class_BPEL::Switch' target = 'class_BPEL::Case'/>
    <edge id = 'referenceEdge_While2Activity' source = 'class_BPEL::While' target = 'class_BPEL::Activity'/>
    <edge id = 'referenceEdge_Pick2OnMessage' source = 'class_BPEL::Pick' target = 'class_BPEL::OnMessage'/>
    <edge id = 'referenceEdge_Flow2Activity' source = 'class_BPEL::Flow' target = 'class_BPEL::Activity'/>
    <edge id = 'referenceEdge_OnAlarm2Activity' source = 'class_BPEL::OnAlarm' target = 'class_BPEL::Activity'/>
    <edge id = 'referenceEdge_Assign2Copy' source = 'class_BPEL::Assign' target = 'class_BPEL::Copy'/>
    <edge id = 'referenceEdge_Scope2FaultHandler' source = 'class_BPEL::Scope' target = 'class_BPEL::FaultHandler'/>
    <edge id = 'referenceEdge_Compensate2EObject' source = 'class_BPEL::Compensate' target = 'class_ecore::EObject'/>
    <edge id = 'referenceEdge_CompensationHandler2Activity' source = 'class_BPEL::CompensationHandler' target = 'class_BPEL::Activity'/>
    <edge id = 'referenceEdge_To2Variable' source = 'class_BPEL::To' target = 'class_BPEL::Variable'/>
    <edge id = 'referenceEdge_From2Expression' source = 'class_BPEL::From' target = 'class_BPEL::Expression'/>
    <edge id = 'referenceEdge_Correlation2CorrelationSet' source = 'class_BPEL::Correlation' target = 'class_BPEL::CorrelationSet'/>
    <edge id = 'referenceEdge_EventHandler2OnAlarm' source = 'class_BPEL::EventHandler' target = 'class_BPEL::OnAlarm'/>
    <edge id = 'referenceEdge_Target2Link' source = 'class_BPEL::Target' target = 'class_BPEL::Link'/>
    <edge id = 'referenceEdge_Variables2Variable' source = 'class_BPEL::Variables' target = 'class_BPEL::Variable'/>
    <edge id = 'referenceEdge_CorrelationSets2CorrelationSet' source = 'class_BPEL::CorrelationSets' target = 'class_BPEL::CorrelationSet'/>
    <edge id = 'referenceEdge_Links2Link' source = 'class_BPEL::Links' target = 'class_BPEL::Link'/>
    <edge id = 'referenceEdge_CatchAll2Activity' source = 'class_BPEL::CatchAll' target = 'class_BPEL::Activity'/>
    <edge id = 'referenceEdge_Correlations2Correlation' source = 'class_BPEL::Correlations' target = 'class_BPEL::Correlation'/>
    <edge id = 'referenceEdge_Otherwise2Activity' source = 'class_BPEL::Otherwise' target = 'class_BPEL::Activity'/>
    <edge id = 'referenceEdge_OnEvent2Activity' source = 'class_BPEL::OnEvent' target = 'class_BPEL::Activity'/>
    <edge id = 'referenceEdge_Sources2Source' source = 'class_BPEL::Sources' target = 'class_BPEL::Source'/>
    <edge id = 'referenceEdge_Extensions2Extension' source = 'class_BPEL::Extensions' target = 'class_BPEL::Extension'/>
    <edge id = 'referenceEdge_FromPart2To' source = 'class_BPEL::FromPart' target = 'class_BPEL::To'/>
    <edge id = 'referenceEdge_ToPart2From' source = 'class_BPEL::ToPart' target = 'class_BPEL::From'/>
    <edge id = 'referenceEdge_ForEach2Variable' source = 'class_BPEL::ForEach' target = 'class_BPEL::Variable'/>
    <edge id = 'referenceEdge_RepeatUntil2Activity' source = 'class_BPEL::RepeatUntil' target = 'class_BPEL::Activity'/>
    <edge id = 'referenceEdge_TerminationHandler2Activity' source = 'class_BPEL::TerminationHandler' target = 'class_BPEL::Activity'/>
    <edge id = 'referenceEdge_Validate2Variable' source = 'class_BPEL::Validate' target = 'class_BPEL::Variable'/>
    <edge id = 'referenceEdge_If2Condition' source = 'class_BPEL::If' target = 'class_BPEL::Condition'/>
    <edge id = 'referenceEdge_Then2Activity' source = 'class_BPEL::Then' target = 'class_BPEL::Activity'/>
    <edge id = 'referenceEdge_ElseIf2Condition' source = 'class_BPEL::ElseIf' target = 'class_BPEL::Condition'/>
    <edge id = 'referenceEdge_Else2Activity' source = 'class_BPEL::Else' target = 'class_BPEL::Activity'/>
    <edge id = 'referenceEdge_CompletionCondition2Branches' source = 'class_BPEL::CompletionCondition' target = 'class_BPEL::Branches'/>
    <edge id = 'referenceEdge_BPELExtensibleElement2Documentation' source = 'class_BPEL::BPELExtensibleElement' target = 'class_BPEL::Documentation'/>
    <edge id = 'referenceEdge_Iterator2Expression' source = 'class_BPEL::Iterator' target = 'class_BPEL::Expression'/>
    <node id = 'class_BPEL::Process'>
      <data key = 'label'>class_BPEL::Process</data>
    </node>
    <node id = 'class_BPEL::PartnerLink'>
      <data key = 'label'>class_BPEL::PartnerLink</data>
    </node>
    <node id = 'class_BPEL::FaultHandler'>
      <data key = 'label'>class_BPEL::FaultHandler</data>
    </node>
    <node id = 'class_BPEL::Activity'>
      <data key = 'label'>class_BPEL::Activity</data>
    </node>
    <node id = 'class_BPEL::CorrelationSet'>
      <data key = 'label'>class_BPEL::CorrelationSet</data>
    </node>
    <node id = 'class_BPEL::Invoke'>
      <data key = 'label'>class_BPEL::Invoke</data>
    </node>
    <node id = 'class_BPEL::Link'>
      <data key = 'label'>class_BPEL::Link</data>
    </node>
    <node id = 'class_BPEL::Catch'>
      <data key = 'label'>class_BPEL::Catch</data>
    </node>
    <node id = 'class_BPEL::Reply'>
      <data key = 'label'>class_BPEL::Reply</data>
    </node>
    <node id = 'class_BPEL::PartnerActivity'>
      <data key = 'label'>class_BPEL::PartnerActivity</data>
    </node>
    <node id = 'class_BPEL::Receive'>
      <data key = 'label'>class_BPEL::Receive</data>
    </node>
    <node id = 'class_BPEL::Exit'>
      <data key = 'label'>class_BPEL::Exit</data>
    </node>
    <node id = 'class_BPEL::Throw'>
      <data key = 'label'>class_BPEL::Throw</data>
    </node>
    <node id = 'class_BPEL::Wait'>
      <data key = 'label'>class_BPEL::Wait</data>
    </node>
    <node id = 'class_BPEL::Empty'>
      <data key = 'label'>class_BPEL::Empty</data>
    </node>
    <node id = 'class_BPEL::Sequence'>
      <data key = 'label'>class_BPEL::Sequence</data>
    </node>
    <node id = 'class_BPEL::Switch'>
      <data key = 'label'>class_BPEL::Switch</data>
    </node>
    <node id = 'class_BPEL::Case'>
      <data key = 'label'>class_BPEL::Case</data>
    </node>
    <node id = 'class_BPEL::While'>
      <data key = 'label'>class_BPEL::While</data>
    </node>
    <node id = 'class_BPEL::Pick'>
      <data key = 'label'>class_BPEL::Pick</data>
    </node>
    <node id = 'class_BPEL::Flow'>
      <data key = 'label'>class_BPEL::Flow</data>
    </node>
    <node id = 'class_BPEL::OnAlarm'>
      <data key = 'label'>class_BPEL::OnAlarm</data>
    </node>
    <node id = 'class_BPEL::Assign'>
      <data key = 'label'>class_BPEL::Assign</data>
    </node>
    <node id = 'class_BPEL::Copy'>
      <data key = 'label'>class_BPEL::Copy</data>
    </node>
    <node id = 'class_BPEL::Extension'>
      <data key = 'label'>class_BPEL::Extension</data>
    </node>
    <node id = 'class_BPEL::Scope'>
      <data key = 'label'>class_BPEL::Scope</data>
    </node>
    <node id = 'class_BPEL::Compensate'>
      <data key = 'label'>class_BPEL::Compensate</data>
    </node>
    <node id = 'class_BPEL::CompensationHandler'>
      <data key = 'label'>class_BPEL::CompensationHandler</data>
    </node>
    <node id = 'class_BPEL::To'>
      <data key = 'label'>class_BPEL::To</data>
    </node>
    <node id = 'class_BPEL::From'>
      <data key = 'label'>class_BPEL::From</data>
    </node>
    <node id = 'class_BPEL::OnMessage'>
      <data key = 'label'>class_BPEL::OnMessage</data>
    </node>
    <node id = 'class_BPEL::Expression'>
      <data key = 'label'>class_BPEL::Expression</data>
    </node>
    <node id = 'class_BPEL::BooleanExpression'>
      <data key = 'label'>class_BPEL::BooleanExpression</data>
    </node>
    <node id = 'class_BPEL::Correlation'>
      <data key = 'label'>class_BPEL::Correlation</data>
    </node>
    <node id = 'enum_CorrelationPattern'>
      <data key = 'label'>enum_CorrelationPattern</data>
    </node>
    <node id = 'enum_EndpointReferenceRole'>
      <data key = 'label'>enum_EndpointReferenceRole</data>
    </node>
    <node id = 'class_BPEL::EventHandler'>
      <data key = 'label'>class_BPEL::EventHandler</data>
    </node>
    <node id = 'class_BPEL::Source'>
      <data key = 'label'>class_BPEL::Source</data>
    </node>
    <node id = 'class_BPEL::Target'>
      <data key = 'label'>class_BPEL::Target</data>
    </node>
    <node id = 'class_BPEL::PartnerLinks'>
      <data key = 'label'>class_BPEL::PartnerLinks</data>
    </node>
    <node id = 'class_BPEL::Variables'>
      <data key = 'label'>class_BPEL::Variables</data>
    </node>
    <node id = 'class_BPEL::CorrelationSets'>
      <data key = 'label'>class_BPEL::CorrelationSets</data>
    </node>
    <node id = 'class_BPEL::Links'>
      <data key = 'label'>class_BPEL::Links</data>
    </node>
    <node id = 'class_BPEL::CatchAll'>
      <data key = 'label'>class_BPEL::CatchAll</data>
    </node>
    <node id = 'class_BPEL::Correlations'>
      <data key = 'label'>class_BPEL::Correlations</data>
    </node>
    <node id = 'class_BPEL::Variable'>
      <data key = 'label'>class_BPEL::Variable</data>
    </node>
    <node id = 'class_BPEL::Otherwise'>
      <data key = 'label'>class_BPEL::Otherwise</data>
    </node>
    <node id = 'class_BPEL::UnknownExtensibilityAttribute'>
      <data key = 'label'>class_BPEL::UnknownExtensibilityAttribute</data>
    </node>
    <node id = 'class_BPEL::OnEvent'>
      <data key = 'label'>class_BPEL::OnEvent</data>
    </node>
    <node id = 'class_BPEL::BPELImport'>
      <data key = 'label'>class_BPEL::BPELImport</data>
    </node>
    <node id = 'class_BPEL::Rethrow'>
      <data key = 'label'>class_BPEL::Rethrow</data>
    </node>
    <node id = 'class_BPEL::Condition'>
      <data key = 'label'>class_BPEL::Condition</data>
    </node>
    <node id = 'class_BPEL::Targets'>
      <data key = 'label'>class_BPEL::Targets</data>
    </node>
    <node id = 'class_BPEL::Sources'>
      <data key = 'label'>class_BPEL::Sources</data>
    </node>
    <node id = 'class_BPEL::BPELQuery'>
      <data key = 'label'>class_BPEL::BPELQuery</data>
    </node>
    <node id = 'class_BPEL::ServiceRef'>
      <data key = 'label'>class_BPEL::ServiceRef</data>
    </node>
    <node id = 'class_BPEL::Extensions'>
      <data key = 'label'>class_BPEL::Extensions</data>
    </node>
    <node id = 'class_BPEL::ExtensionActivity'>
      <data key = 'label'>class_BPEL::ExtensionActivity</data>
    </node>
    <node id = 'class_BPEL::FromPart'>
      <data key = 'label'>class_BPEL::FromPart</data>
    </node>
    <node id = 'class_BPEL::ToPart'>
      <data key = 'label'>class_BPEL::ToPart</data>
    </node>
    <node id = 'class_BPEL::OpaqueActivity'>
      <data key = 'label'>class_BPEL::OpaqueActivity</data>
    </node>
    <node id = 'class_BPEL::ForEach'>
      <data key = 'label'>class_BPEL::ForEach</data>
    </node>
    <node id = 'class_BPEL::RepeatUntil'>
      <data key = 'label'>class_BPEL::RepeatUntil</data>
    </node>
    <node id = 'class_BPEL::TerminationHandler'>
      <data key = 'label'>class_BPEL::TerminationHandler</data>
    </node>
    <node id = 'class_BPEL::Validate'>
      <data key = 'label'>class_BPEL::Validate</data>
    </node>
    <node id = 'class_BPEL::If'>
      <data key = 'label'>class_BPEL::If</data>
    </node>
    <node id = 'class_BPEL::Then'>
      <data key = 'label'>class_BPEL::Then</data>
    </node>
    <node id = 'class_BPEL::ElseIf'>
      <data key = 'label'>class_BPEL::ElseIf</data>
    </node>
    <node id = 'class_BPEL::Else'>
      <data key = 'label'>class_BPEL::Else</data>
    </node>
    <node id = 'class_BPEL::CompletionCondition'>
      <data key = 'label'>class_BPEL::CompletionCondition</data>
    </node>
    <node id = 'class_BPEL::Branches'>
      <data key = 'label'>class_BPEL::Branches</data>
    </node>
    <node id = 'class_BPEL::BPELExtensibleElement'>
      <data key = 'label'>class_BPEL::BPELExtensibleElement</data>
    </node>
    <node id = 'class_BPEL::Documentation'>
      <data key = 'label'>class_BPEL::Documentation</data>
    </node>
    <node id = 'class_BPEL::Iterator'>
      <data key = 'label'>class_BPEL::Iterator</data>
    </node>
    <node id = 'package_BPEL'>
      <data key = 'label'>package_BPEL</data>
    </node>
  </graph>
  <graph id = 'messagepropertiesGraph' edgedefault = 'undirected'>
    <edge id = 'Property_extends_ExtensibilityElement' source = 'class_messageproperties::Property' target = 'class_WSDL::ExtensibilityElement'/>
    <edge id = 'PropertyAlias_extends_ExtensibilityElement' source = 'class_messageproperties::PropertyAlias' target = 'class_WSDL::ExtensibilityElement'/>
    <edge id = 'referenceEdge_PropertyAlias2Part' source = 'class_messageproperties::PropertyAlias' target = 'class_WSDL::Part'/>
    <node id = 'class_messageproperties::Property'>
      <data key = 'label'>class_messageproperties::Property</data>
    </node>
    <node id = 'class_messageproperties::PropertyAlias'>
      <data key = 'label'>class_messageproperties::PropertyAlias</data>
    </node>
    <node id = 'class_messageproperties::messagepropertiesQuery'>
      <data key = 'label'>class_messageproperties::messagepropertiesQuery</data>
    </node>
    <node id = 'package_messageproperties'>
      <data key = 'label'>package_messageproperties</data>
    </node>
  </graph>
  <graph id = 'WSDLGraph' edgedefault = 'undirected'>
    <edge id = 'PortType_extends_WSDLElement' source = 'class_WSDL::PortType' target = 'class_WSDL::WSDLElement'/>
    <edge id = 'Operation_extends_WSDLElement' source = 'class_WSDL::Operation' target = 'class_WSDL::WSDLElement'/>
    <edge id = 'Message_extends_WSDLElement' source = 'class_WSDL::Message' target = 'class_WSDL::WSDLElement'/>
    <edge id = 'Part_extends_WSDLElement' source = 'class_WSDL::Part' target = 'class_WSDL::WSDLElement'/>
    <edge id = 'Binding_extends_WSDLExtensibleElement' source = 'class_WSDL::Binding' target = 'class_WSDL::WSDLExtensibleElement'/>
    <edge id = 'BindingOperation_extends_WSDLExtensibleElement' source = 'class_WSDL::BindingOperation' target = 'class_WSDL::WSDLExtensibleElement'/>
    <edge id = 'Service_extends_WSDLExtensibleElement' source = 'class_WSDL::Service' target = 'class_WSDL::WSDLExtensibleElement'/>
    <edge id = 'Port_extends_WSDLExtensibleElement' source = 'class_WSDL::Port' target = 'class_WSDL::WSDLExtensibleElement'/>
    <edge id = 'messagepropertiesQuery_extends_ExtensibilityElement' source = 'class_messageproperties::messagepropertiesQuery' target = 'class_WSDL::ExtensibilityElement'/>
    <edge id = 'Definition_extends_WSDLExtensibleElement' source = 'class_WSDL::Definition' target = 'class_WSDL::WSDLExtensibleElement'/>
    <edge id = 'WSDLImport_extends_WSDLElement' source = 'class_WSDL::WSDLImport' target = 'class_WSDL::WSDLElement'/>
    <edge id = 'Input_extends_MessageReference' source = 'class_WSDL::Input' target = 'class_WSDL::MessageReference'/>
    <edge id = 'Output_extends_MessageReference' source = 'class_WSDL::Output' target = 'class_WSDL::MessageReference'/>
    <edge id = 'Fault_extends_MessageReference' source = 'class_WSDL::Fault' target = 'class_WSDL::MessageReference'/>
    <edge id = 'BindingInput_extends_WSDLExtensibleElement' source = 'class_WSDL::BindingInput' target = 'class_WSDL::WSDLExtensibleElement'/>
    <edge id = 'BindingOutput_extends_WSDLExtensibleElement' source = 'class_WSDL::BindingOutput' target = 'class_WSDL::WSDLExtensibleElement'/>
    <edge id = 'BindingFault_extends_WSDLExtensibleElement' source = 'class_WSDL::BindingFault' target = 'class_WSDL::WSDLExtensibleElement'/>
    <edge id = 'Types_extends_WSDLExtensibleElement' source = 'class_WSDL::Types' target = 'class_WSDL::WSDLExtensibleElement'/>
    <edge id = 'UnknownExtensibilityAttribute_extends_UnknownExtensibilityElement' source = 'class_BPEL::UnknownExtensibilityAttribute' target = 'class_WSDL::UnknownExtensibilityElement'/>
    <edge id = 'XSDSchemaExtensibilityElement_extends_ExtensibilityElement' source = 'class_WSDL::XSDSchemaExtensibilityElement' target = 'class_WSDL::ExtensibilityElement'/>
    <edge id = 'referenceEdge_PortType2Operation' source = 'class_WSDL::PortType' target = 'class_WSDL::Operation'/>
    <edge id = 'referenceEdge_Message2Part' source = 'class_WSDL::Message' target = 'class_WSDL::Part'/>
    <edge id = 'referenceEdge_Binding2PortType' source = 'class_WSDL::Binding' target = 'class_WSDL::PortType'/>
    <edge id = 'referenceEdge_BindingOperation2Operation' source = 'class_WSDL::BindingOperation' target = 'class_WSDL::Operation'/>
    <edge id = 'referenceEdge_Service2Port' source = 'class_WSDL::Service' target = 'class_WSDL::Port'/>
    <edge id = 'referenceEdge_Definition2WSDLImport' source = 'class_WSDL::Definition' target = 'class_WSDL::WSDLImport'/>
    <edge id = 'referenceEdge_WSDLExtensibleElement2ExtensibilityElement' source = 'class_WSDL::WSDLExtensibleElement' target = 'class_WSDL::ExtensibilityElement'/>
    <edge id = 'referenceEdge_BindingInput2Input' source = 'class_WSDL::BindingInput' target = 'class_WSDL::Input'/>
    <edge id = 'referenceEdge_BindingOutput2Output' source = 'class_WSDL::BindingOutput' target = 'class_WSDL::Output'/>
    <edge id = 'referenceEdge_BindingFault2Fault' source = 'class_WSDL::BindingFault' target = 'class_WSDL::Fault'/>
    <edge id = 'referenceEdge_UnknownExtensibilityElement2UnknownExtensibilityElement' source = 'class_WSDL::UnknownExtensibilityElement' target = 'class_WSDL::UnknownExtensibilityElement'/>
    <edge id = 'referenceEdge_MessageReference2Message' source = 'class_WSDL::MessageReference' target = 'class_WSDL::Message'/>
    <node id = 'class_WSDL::WSDLElement'>
      <data key = 'label'>class_WSDL::WSDLElement</data>
    </node>
    <node id = 'class_WSDL::PortType'>
      <data key = 'label'>class_WSDL::PortType</data>
    </node>
    <node id = 'class_WSDL::Operation'>
      <data key = 'label'>class_WSDL::Operation</data>
    </node>
    <node id = 'class_WSDL::Message'>
      <data key = 'label'>class_WSDL::Message</data>
    </node>
    <node id = 'class_WSDL::Part'>
      <data key = 'label'>class_WSDL::Part</data>
    </node>
    <node id = 'class_WSDL::Binding'>
      <data key = 'label'>class_WSDL::Binding</data>
    </node>
    <node id = 'class_WSDL::BindingOperation'>
      <data key = 'label'>class_WSDL::BindingOperation</data>
    </node>
    <node id = 'class_WSDL::Service'>
      <data key = 'label'>class_WSDL::Service</data>
    </node>
    <node id = 'class_WSDL::Port'>
      <data key = 'label'>class_WSDL::Port</data>
    </node>
    <node id = 'class_WSDL::ExtensibilityElement'>
      <data key = 'label'>class_WSDL::ExtensibilityElement</data>
    </node>
    <node id = 'class_WSDL::Definition'>
      <data key = 'label'>class_WSDL::Definition</data>
    </node>
    <node id = 'class_WSDL::WSDLImport'>
      <data key = 'label'>class_WSDL::WSDLImport</data>
    </node>
    <node id = 'class_WSDL::WSDLExtensibleElement'>
      <data key = 'label'>class_WSDL::WSDLExtensibleElement</data>
    </node>
    <node id = 'class_WSDL::Input'>
      <data key = 'label'>class_WSDL::Input</data>
    </node>
    <node id = 'class_WSDL::Output'>
      <data key = 'label'>class_WSDL::Output</data>
    </node>
    <node id = 'class_WSDL::Fault'>
      <data key = 'label'>class_WSDL::Fault</data>
    </node>
    <node id = 'class_WSDL::BindingInput'>
      <data key = 'label'>class_WSDL::BindingInput</data>
    </node>
    <node id = 'class_WSDL::BindingOutput'>
      <data key = 'label'>class_WSDL::BindingOutput</data>
    </node>
    <node id = 'class_WSDL::BindingFault'>
      <data key = 'label'>class_WSDL::BindingFault</data>
    </node>
    <node id = 'dataType_QName'>
      <data key = 'label'>dataType_QName</data>
    </node>
    <node id = 'class_WSDL::Namespace'>
      <data key = 'label'>class_WSDL::Namespace</data>
    </node>
    <node id = 'dataType_OperationType'>
      <data key = 'label'>dataType_OperationType</data>
    </node>
    <node id = 'class_WSDL::IPortType'>
      <data key = 'label'>class_WSDL::IPortType</data>
    </node>
    <node id = 'class_WSDL::IOperation'>
      <data key = 'label'>class_WSDL::IOperation</data>
    </node>
    <node id = 'class_WSDL::IInput'>
      <data key = 'label'>class_WSDL::IInput</data>
    </node>
    <node id = 'class_WSDL::IOutput'>
      <data key = 'label'>class_WSDL::IOutput</data>
    </node>
    <node id = 'class_WSDL::IFault'>
      <data key = 'label'>class_WSDL::IFault</data>
    </node>
    <node id = 'class_WSDL::IMessage'>
      <data key = 'label'>class_WSDL::IMessage</data>
    </node>
    <node id = 'class_WSDL::IPart'>
      <data key = 'label'>class_WSDL::IPart</data>
    </node>
    <node id = 'class_WSDL::IService'>
      <data key = 'label'>class_WSDL::IService</data>
    </node>
    <node id = 'class_WSDL::IPort'>
      <data key = 'label'>class_WSDL::IPort</data>
    </node>
    <node id = 'class_WSDL::IBinding'>
      <data key = 'label'>class_WSDL::IBinding</data>
    </node>
    <node id = 'class_WSDL::IBindingOperation'>
      <data key = 'label'>class_WSDL::IBindingOperation</data>
    </node>
    <node id = 'class_WSDL::IBindingInput'>
      <data key = 'label'>class_WSDL::IBindingInput</data>
    </node>
    <node id = 'class_WSDL::IBindingOutput'>
      <data key = 'label'>class_WSDL::IBindingOutput</data>
    </node>
    <node id = 'class_WSDL::IBindingFault'>
      <data key = 'label'>class_WSDL::IBindingFault</data>
    </node>
    <node id = 'dataType_WSDLDOMElement'>
      <data key = 'label'>dataType_WSDLDOMElement</data>
    </node>
    <node id = 'class_WSDL::IExtensibilityElement'>
      <data key = 'label'>class_WSDL::IExtensibilityElement</data>
    </node>
    <node id = 'class_WSDL::IDefinition'>
      <data key = 'label'>class_WSDL::IDefinition</data>
    </node>
    <node id = 'class_WSDL::IImport'>
      <data key = 'label'>class_WSDL::IImport</data>
    </node>
    <node id = 'class_WSDL::IList'>
      <data key = 'label'>class_WSDL::IList</data>
    </node>
    <node id = 'class_WSDL::IMap'>
      <data key = 'label'>class_WSDL::IMap</data>
    </node>
    <node id = 'class_WSDL::IURL'>
      <data key = 'label'>class_WSDL::IURL</data>
    </node>
    <node id = 'class_WSDL::IExtensionRegistry'>
      <data key = 'label'>class_WSDL::IExtensionRegistry</data>
    </node>
    <node id = 'class_WSDL::Types'>
      <data key = 'label'>class_WSDL::Types</data>
    </node>
    <node id = 'class_WSDL::IIterator'>
      <data key = 'label'>class_WSDL::IIterator</data>
    </node>
    <node id = 'dataType_WSDLException'>
      <data key = 'label'>dataType_WSDLException</data>
    </node>
    <node id = 'class_WSDL::ITypes'>
      <data key = 'label'>class_WSDL::ITypes</data>
    </node>
    <node id = 'class_WSDL::UnknownExtensibilityElement'>
      <data key = 'label'>class_WSDL::UnknownExtensibilityElement</data>
    </node>
    <node id = 'class_WSDL::XSDSchemaExtensibilityElement'>
      <data key = 'label'>class_WSDL::XSDSchemaExtensibilityElement</data>
    </node>
    <node id = 'dataType_WSDLDOMDocument'>
      <data key = 'label'>dataType_WSDLDOMDocument</data>
    </node>
    <node id = 'class_WSDL::MessageReference'>
      <data key = 'label'>class_WSDL::MessageReference</data>
    </node>
    <node id = 'package_WSDL'>
      <data key = 'label'>package_WSDL</data>
    </node>
  </graph>
  <graph id = 'partnerlinktypeGraph' edgedefault = 'undirected'>
    <edge id = 'PartnerLinkType_extends_ExtensibilityElement' source = 'class_partnerlinktype::PartnerLinkType' target = 'class_WSDL::ExtensibilityElement'/>
    <edge id = 'Role_extends_ExtensibilityElement' source = 'class_partnerlinktype::Role' target = 'class_WSDL::ExtensibilityElement'/>
    <edge id = 'referenceEdge_PartnerLinkType2Role' source = 'class_partnerlinktype::PartnerLinkType' target = 'class_partnerlinktype::Role'/>
    <node id = 'class_partnerlinktype::PartnerLinkType'>
      <data key = 'label'>class_partnerlinktype::PartnerLinkType</data>
    </node>
    <node id = 'class_partnerlinktype::Role'>
      <data key = 'label'>class_partnerlinktype::Role</data>
    </node>
    <node id = 'package_partnerlinktype'>
      <data key = 'label'>package_partnerlinktype</data>
    </node>
  </graph>
  <graph id = 'ecoreGraph' edgedefault = 'undirected'>
    <node id = 'class_ecore::EObject'>
      <data key = 'label'>class_ecore::EObject</data>
    </node>
    <node id = 'dataType_EBoolean'>
      <data key = 'label'>dataType_EBoolean</data>
    </node>
    <node id = 'dataType_EBooleanObject'>
      <data key = 'label'>dataType_EBooleanObject</data>
    </node>
    <node id = 'dataType_EInt'>
      <data key = 'label'>dataType_EInt</data>
    </node>
    <node id = 'dataType_EJavaObject'>
      <data key = 'label'>dataType_EJavaObject</data>
    </node>
    <node id = 'dataType_EString'>
      <data key = 'label'>dataType_EString</data>
    </node>
    <node id = 'package_ecore'>
      <data key = 'label'>package_ecore</data>
    </node>
  </graph>
  <graph id = 'XSDGraph' edgedefault = 'undirected'>
    <edge id = 'XSDAnnotation_extends_XSDComponent' source = 'class_XSD::XSDAnnotation' target = 'class_XSD::XSDComponent'/>
    <edge id = 'XSDAttributeDeclaration_extends_XSDFeature' source = 'class_XSD::XSDAttributeDeclaration' target = 'class_XSD::XSDFeature'/>
    <edge id = 'XSDAttributeGroupContent_extends_XSDConcreteComponent' source = 'class_XSD::XSDAttributeGroupContent' target = 'class_XSD::XSDConcreteComponent'/>
    <edge id = 'XSDAttributeGroupDefinition_extends_XSDRedefinableComponent' source = 'class_XSD::XSDAttributeGroupDefinition' target = 'class_XSD::XSDRedefinableComponent'/>
    <edge id = 'XSDAttributeUse_extends_XSDComponent' source = 'class_XSD::XSDAttributeUse' target = 'class_XSD::XSDComponent'/>
    <edge id = 'XSDBoundedFacet_extends_XSDFundamentalFacet' source = 'class_XSD::XSDBoundedFacet' target = 'class_XSD::XSDFundamentalFacet'/>
    <edge id = 'XSDCardinalityFacet_extends_XSDFundamentalFacet' source = 'class_XSD::XSDCardinalityFacet' target = 'class_XSD::XSDFundamentalFacet'/>
    <edge id = 'XSDComplexTypeContent_extends_XSDComponent' source = 'class_XSD::XSDComplexTypeContent' target = 'class_XSD::XSDComponent'/>
    <edge id = 'XSDComplexTypeDefinition_extends_XSDTypeDefinition' source = 'class_XSD::XSDComplexTypeDefinition' target = 'class_XSD::XSDTypeDefinition'/>
    <edge id = 'XSDConstrainingFacet_extends_XSDFacet' source = 'class_XSD::XSDConstrainingFacet' target = 'class_XSD::XSDFacet'/>
    <edge id = 'XSDDiagnostic_extends_XSDConcreteComponent' source = 'class_XSD::XSDDiagnostic' target = 'class_XSD::XSDConcreteComponent'/>
    <edge id = 'XSDElementDeclaration_extends_XSDFeature' source = 'class_XSD::XSDElementDeclaration' target = 'class_XSD::XSDFeature'/>
    <edge id = 'XSDEnumerationFacet_extends_XSDRepeatableFacet' source = 'class_XSD::XSDEnumerationFacet' target = 'class_XSD::XSDRepeatableFacet'/>
    <edge id = 'XSDFixedFacet_extends_XSDConstrainingFacet' source = 'class_XSD::XSDFixedFacet' target = 'class_XSD::XSDConstrainingFacet'/>
    <edge id = 'XSDFractionDigitsFacet_extends_XSDFixedFacet' source = 'class_XSD::XSDFractionDigitsFacet' target = 'class_XSD::XSDFixedFacet'/>
    <edge id = 'XSDIdentityConstraintDefinition_extends_XSDNamedComponent' source = 'class_XSD::XSDIdentityConstraintDefinition' target = 'class_XSD::XSDNamedComponent'/>
    <edge id = 'XSDImport_extends_XSDSchemaDirective' source = 'class_XSD::XSDImport' target = 'class_XSD::XSDSchemaDirective'/>
    <edge id = 'XSDInclude_extends_XSDSchemaCompositor' source = 'class_XSD::XSDInclude' target = 'class_XSD::XSDSchemaCompositor'/>
    <edge id = 'XSDLengthFacet_extends_XSDFixedFacet' source = 'class_XSD::XSDLengthFacet' target = 'class_XSD::XSDFixedFacet'/>
    <edge id = 'XSDMaxExclusiveFacet_extends_XSDMaxFacet' source = 'class_XSD::XSDMaxExclusiveFacet' target = 'class_XSD::XSDMaxFacet'/>
    <edge id = 'XSDMaxInclusiveFacet_extends_XSDMaxFacet' source = 'class_XSD::XSDMaxInclusiveFacet' target = 'class_XSD::XSDMaxFacet'/>
    <edge id = 'XSDMaxLengthFacet_extends_XSDFixedFacet' source = 'class_XSD::XSDMaxLengthFacet' target = 'class_XSD::XSDFixedFacet'/>
    <edge id = 'XSDMinExclusiveFacet_extends_XSDMinFacet' source = 'class_XSD::XSDMinExclusiveFacet' target = 'class_XSD::XSDMinFacet'/>
    <edge id = 'XSDMinInclusiveFacet_extends_XSDMinFacet' source = 'class_XSD::XSDMinInclusiveFacet' target = 'class_XSD::XSDMinFacet'/>
    <edge id = 'XSDMinLengthFacet_extends_XSDFixedFacet' source = 'class_XSD::XSDMinLengthFacet' target = 'class_XSD::XSDFixedFacet'/>
    <edge id = 'XSDModelGroup_extends_XSDTerm' source = 'class_XSD::XSDModelGroup' target = 'class_XSD::XSDTerm'/>
    <edge id = 'XSDModelGroupDefinition_extends_XSDRedefinableComponent' source = 'class_XSD::XSDModelGroupDefinition' target = 'class_XSD::XSDRedefinableComponent'/>
    <edge id = 'XSDNotationDeclaration_extends_XSDNamedComponent' source = 'class_XSD::XSDNotationDeclaration' target = 'class_XSD::XSDNamedComponent'/>
    <edge id = 'XSDNumericFacet_extends_XSDFundamentalFacet' source = 'class_XSD::XSDNumericFacet' target = 'class_XSD::XSDFundamentalFacet'/>
    <edge id = 'XSDOrderedFacet_extends_XSDFundamentalFacet' source = 'class_XSD::XSDOrderedFacet' target = 'class_XSD::XSDFundamentalFacet'/>
    <edge id = 'XSDParticle_extends_XSDComplexTypeContent' source = 'class_XSD::XSDParticle' target = 'class_XSD::XSDComplexTypeContent'/>
    <edge id = 'XSDParticleContent_extends_XSDConcreteComponent' source = 'class_XSD::XSDParticleContent' target = 'class_XSD::XSDConcreteComponent'/>
    <edge id = 'XSDPatternFacet_extends_XSDRepeatableFacet' source = 'class_XSD::XSDPatternFacet' target = 'class_XSD::XSDRepeatableFacet'/>
    <edge id = 'XSDRedefineContent_extends_XSDSchemaContent' source = 'class_XSD::XSDRedefineContent' target = 'class_XSD::XSDSchemaContent'/>
    <edge id = 'XSDRedefine_extends_XSDSchemaCompositor' source = 'class_XSD::XSDRedefine' target = 'class_XSD::XSDSchemaCompositor'/>
    <edge id = 'XSDSchema_extends_XSDScope' source = 'class_XSD::XSDSchema' target = 'class_XSD::XSDScope'/>
    <edge id = 'XSDSimpleTypeDefinition_extends_XSDTypeDefinition' source = 'class_XSD::XSDSimpleTypeDefinition' target = 'class_XSD::XSDTypeDefinition'/>
    <edge id = 'XSDTotalDigitsFacet_extends_XSDFixedFacet' source = 'class_XSD::XSDTotalDigitsFacet' target = 'class_XSD::XSDFixedFacet'/>
    <edge id = 'XSDWhiteSpaceFacet_extends_XSDFixedFacet' source = 'class_XSD::XSDWhiteSpaceFacet' target = 'class_XSD::XSDFixedFacet'/>
    <edge id = 'XSDWildcard_extends_XSDTerm' source = 'class_XSD::XSDWildcard' target = 'class_XSD::XSDTerm'/>
    <edge id = 'XSDXPathDefinition_extends_XSDComponent' source = 'class_XSD::XSDXPathDefinition' target = 'class_XSD::XSDComponent'/>
    <edge id = 'referenceEdge_XSDAttributeDeclaration2XSDAnnotation' source = 'class_XSD::XSDAttributeDeclaration' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDAttributeGroupDefinition2XSDAnnotation' source = 'class_XSD::XSDAttributeGroupDefinition' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDAttributeUse2XSDAttributeDeclaration' source = 'class_XSD::XSDAttributeUse' target = 'class_XSD::XSDAttributeDeclaration'/>
    <edge id = 'referenceEdge_XSDComplexTypeDefinition2XSDAnnotation' source = 'class_XSD::XSDComplexTypeDefinition' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDConcreteComponent2XSDConcreteComponent' source = 'class_XSD::XSDConcreteComponent' target = 'class_XSD::XSDConcreteComponent'/>
    <edge id = 'referenceEdge_XSDDiagnostic2XSDConcreteComponent' source = 'class_XSD::XSDDiagnostic' target = 'class_XSD::XSDConcreteComponent'/>
    <edge id = 'referenceEdge_XSDElementDeclaration2XSDAnnotation' source = 'class_XSD::XSDElementDeclaration' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDFacet2XSDAnnotation' source = 'class_XSD::XSDFacet' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDFeature2XSDScope' source = 'class_XSD::XSDFeature' target = 'class_XSD::XSDScope'/>
    <edge id = 'referenceEdge_XSDIdentityConstraintDefinition2XSDAnnotation' source = 'class_XSD::XSDIdentityConstraintDefinition' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDImport2XSDAnnotation' source = 'class_XSD::XSDImport' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDInclude2XSDAnnotation' source = 'class_XSD::XSDInclude' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDModelGroup2XSDAnnotation' source = 'class_XSD::XSDModelGroup' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDModelGroupDefinition2XSDAnnotation' source = 'class_XSD::XSDModelGroupDefinition' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDNotationDeclaration2XSDAnnotation' source = 'class_XSD::XSDNotationDeclaration' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDParticle2XSDParticleContent' source = 'class_XSD::XSDParticle' target = 'class_XSD::XSDParticleContent'/>
    <edge id = 'referenceEdge_XSDRedefine2XSDAnnotation' source = 'class_XSD::XSDRedefine' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDRepeatableFacet2XSDAnnotation' source = 'class_XSD::XSDRepeatableFacet' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDSchemaExtensibilityElement2XSDSchema' source = 'class_WSDL::XSDSchemaExtensibilityElement' target = 'class_XSD::XSDSchema'/>
    <edge id = 'referenceEdge_XSDSchemaCompositor2XSDSchema' source = 'class_XSD::XSDSchemaCompositor' target = 'class_XSD::XSDSchema'/>
    <edge id = 'referenceEdge_XSDSchemaDirective2XSDSchema' source = 'class_XSD::XSDSchemaDirective' target = 'class_XSD::XSDSchema'/>
    <edge id = 'referenceEdge_XSDSimpleTypeDefinition2XSDSimpleTypeDefinition' source = 'class_XSD::XSDSimpleTypeDefinition' target = 'class_XSD::XSDSimpleTypeDefinition'/>
    <edge id = 'referenceEdge_XSDTypeDefinition2XSDAnnotation' source = 'class_XSD::XSDTypeDefinition' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDWildcard2XSDAnnotation' source = 'class_XSD::XSDWildcard' target = 'class_XSD::XSDAnnotation'/>
    <edge id = 'referenceEdge_XSDXPathDefinition2XSDAnnotation' source = 'class_XSD::XSDXPathDefinition' target = 'class_XSD::XSDAnnotation'/>
    <node id = 'class_XSD::XSDAnnotation'>
      <data key = 'label'>class_XSD::XSDAnnotation</data>
    </node>
    <node id = 'class_XSD::XSDAttributeDeclaration'>
      <data key = 'label'>class_XSD::XSDAttributeDeclaration</data>
    </node>
    <node id = 'class_XSD::XSDAttributeGroupContent'>
      <data key = 'label'>class_XSD::XSDAttributeGroupContent</data>
    </node>
    <node id = 'class_XSD::XSDAttributeGroupDefinition'>
      <data key = 'label'>class_XSD::XSDAttributeGroupDefinition</data>
    </node>
    <node id = 'class_XSD::XSDAttributeUse'>
      <data key = 'label'>class_XSD::XSDAttributeUse</data>
    </node>
    <node id = 'class_XSD::XSDBoundedFacet'>
      <data key = 'label'>class_XSD::XSDBoundedFacet</data>
    </node>
    <node id = 'class_XSD::XSDCardinalityFacet'>
      <data key = 'label'>class_XSD::XSDCardinalityFacet</data>
    </node>
    <node id = 'class_XSD::XSDComplexTypeContent'>
      <data key = 'label'>class_XSD::XSDComplexTypeContent</data>
    </node>
    <node id = 'class_XSD::XSDComplexTypeDefinition'>
      <data key = 'label'>class_XSD::XSDComplexTypeDefinition</data>
    </node>
    <node id = 'class_XSD::XSDComponent'>
      <data key = 'label'>class_XSD::XSDComponent</data>
    </node>
    <node id = 'class_XSD::XSDConcreteComponent'>
      <data key = 'label'>class_XSD::XSDConcreteComponent</data>
    </node>
    <node id = 'class_XSD::XSDConstrainingFacet'>
      <data key = 'label'>class_XSD::XSDConstrainingFacet</data>
    </node>
    <node id = 'class_XSD::XSDDiagnostic'>
      <data key = 'label'>class_XSD::XSDDiagnostic</data>
    </node>
    <node id = 'class_XSD::XSDElementDeclaration'>
      <data key = 'label'>class_XSD::XSDElementDeclaration</data>
    </node>
    <node id = 'class_XSD::XSDEnumerationFacet'>
      <data key = 'label'>class_XSD::XSDEnumerationFacet</data>
    </node>
    <node id = 'class_XSD::XSDFacet'>
      <data key = 'label'>class_XSD::XSDFacet</data>
    </node>
    <node id = 'class_XSD::XSDFeature'>
      <data key = 'label'>class_XSD::XSDFeature</data>
    </node>
    <node id = 'class_XSD::XSDFixedFacet'>
      <data key = 'label'>class_XSD::XSDFixedFacet</data>
    </node>
    <node id = 'class_XSD::XSDFractionDigitsFacet'>
      <data key = 'label'>class_XSD::XSDFractionDigitsFacet</data>
    </node>
    <node id = 'class_XSD::XSDFundamentalFacet'>
      <data key = 'label'>class_XSD::XSDFundamentalFacet</data>
    </node>
    <node id = 'class_XSD::XSDIdentityConstraintDefinition'>
      <data key = 'label'>class_XSD::XSDIdentityConstraintDefinition</data>
    </node>
    <node id = 'class_XSD::XSDImport'>
      <data key = 'label'>class_XSD::XSDImport</data>
    </node>
    <node id = 'class_XSD::XSDInclude'>
      <data key = 'label'>class_XSD::XSDInclude</data>
    </node>
    <node id = 'class_XSD::XSDLengthFacet'>
      <data key = 'label'>class_XSD::XSDLengthFacet</data>
    </node>
    <node id = 'class_XSD::XSDMaxExclusiveFacet'>
      <data key = 'label'>class_XSD::XSDMaxExclusiveFacet</data>
    </node>
    <node id = 'class_XSD::XSDMaxFacet'>
      <data key = 'label'>class_XSD::XSDMaxFacet</data>
    </node>
    <node id = 'class_XSD::XSDMaxInclusiveFacet'>
      <data key = 'label'>class_XSD::XSDMaxInclusiveFacet</data>
    </node>
    <node id = 'class_XSD::XSDMaxLengthFacet'>
      <data key = 'label'>class_XSD::XSDMaxLengthFacet</data>
    </node>
    <node id = 'class_XSD::XSDMinExclusiveFacet'>
      <data key = 'label'>class_XSD::XSDMinExclusiveFacet</data>
    </node>
    <node id = 'class_XSD::XSDMinFacet'>
      <data key = 'label'>class_XSD::XSDMinFacet</data>
    </node>
    <node id = 'class_XSD::XSDMinInclusiveFacet'>
      <data key = 'label'>class_XSD::XSDMinInclusiveFacet</data>
    </node>
    <node id = 'class_XSD::XSDMinLengthFacet'>
      <data key = 'label'>class_XSD::XSDMinLengthFacet</data>
    </node>
    <node id = 'class_XSD::XSDModelGroup'>
      <data key = 'label'>class_XSD::XSDModelGroup</data>
    </node>
    <node id = 'class_XSD::XSDModelGroupDefinition'>
      <data key = 'label'>class_XSD::XSDModelGroupDefinition</data>
    </node>
    <node id = 'class_XSD::XSDNamedComponent'>
      <data key = 'label'>class_XSD::XSDNamedComponent</data>
    </node>
    <node id = 'class_XSD::XSDNotationDeclaration'>
      <data key = 'label'>class_XSD::XSDNotationDeclaration</data>
    </node>
    <node id = 'class_XSD::XSDNumericFacet'>
      <data key = 'label'>class_XSD::XSDNumericFacet</data>
    </node>
    <node id = 'class_XSD::XSDOrderedFacet'>
      <data key = 'label'>class_XSD::XSDOrderedFacet</data>
    </node>
    <node id = 'class_XSD::XSDParticle'>
      <data key = 'label'>class_XSD::XSDParticle</data>
    </node>
    <node id = 'class_XSD::XSDParticleContent'>
      <data key = 'label'>class_XSD::XSDParticleContent</data>
    </node>
    <node id = 'class_XSD::XSDPatternFacet'>
      <data key = 'label'>class_XSD::XSDPatternFacet</data>
    </node>
    <node id = 'class_XSD::XSDRedefinableComponent'>
      <data key = 'label'>class_XSD::XSDRedefinableComponent</data>
    </node>
    <node id = 'class_XSD::XSDRedefineContent'>
      <data key = 'label'>class_XSD::XSDRedefineContent</data>
    </node>
    <node id = 'class_XSD::XSDRedefine'>
      <data key = 'label'>class_XSD::XSDRedefine</data>
    </node>
    <node id = 'class_XSD::XSDRepeatableFacet'>
      <data key = 'label'>class_XSD::XSDRepeatableFacet</data>
    </node>
    <node id = 'class_XSD::XSDSchema'>
      <data key = 'label'>class_XSD::XSDSchema</data>
    </node>
    <node id = 'class_XSD::XSDSchemaCompositor'>
      <data key = 'label'>class_XSD::XSDSchemaCompositor</data>
    </node>
    <node id = 'class_XSD::XSDSchemaContent'>
      <data key = 'label'>class_XSD::XSDSchemaContent</data>
    </node>
    <node id = 'class_XSD::XSDSchemaDirective'>
      <data key = 'label'>class_XSD::XSDSchemaDirective</data>
    </node>
    <node id = 'class_XSD::XSDScope'>
      <data key = 'label'>class_XSD::XSDScope</data>
    </node>
    <node id = 'class_XSD::XSDSimpleTypeDefinition'>
      <data key = 'label'>class_XSD::XSDSimpleTypeDefinition</data>
    </node>
    <node id = 'class_XSD::XSDTerm'>
      <data key = 'label'>class_XSD::XSDTerm</data>
    </node>
    <node id = 'class_XSD::XSDTotalDigitsFacet'>
      <data key = 'label'>class_XSD::XSDTotalDigitsFacet</data>
    </node>
    <node id = 'class_XSD::XSDTypeDefinition'>
      <data key = 'label'>class_XSD::XSDTypeDefinition</data>
    </node>
    <node id = 'class_XSD::XSDWhiteSpaceFacet'>
      <data key = 'label'>class_XSD::XSDWhiteSpaceFacet</data>
    </node>
    <node id = 'class_XSD::XSDWildcard'>
      <data key = 'label'>class_XSD::XSDWildcard</data>
    </node>
    <node id = 'class_XSD::XSDXPathDefinition'>
      <data key = 'label'>class_XSD::XSDXPathDefinition</data>
    </node>
    <node id = 'dataType_DOMAttr'>
      <data key = 'label'>dataType_DOMAttr</data>
    </node>
    <node id = 'dataType_XSDDOMDocument'>
      <data key = 'label'>dataType_XSDDOMDocument</data>
    </node>
    <node id = 'dataType_XSDDOMElement'>
      <data key = 'label'>dataType_XSDDOMElement</data>
    </node>
    <node id = 'dataType_DOMNode'>
      <data key = 'label'>dataType_DOMNode</data>
    </node>
    <node id = 'dataType_Value'>
      <data key = 'label'>dataType_Value</data>
    </node>
    <node id = 'enum_XSDAttributeUseCategory'>
      <data key = 'label'>enum_XSDAttributeUseCategory</data>
    </node>
    <node id = 'enum_XSDCardinality'>
      <data key = 'label'>enum_XSDCardinality</data>
    </node>
    <node id = 'enum_XSDComplexFinal'>
      <data key = 'label'>enum_XSDComplexFinal</data>
    </node>
    <node id = 'enum_XSDCompositor'>
      <data key = 'label'>enum_XSDCompositor</data>
    </node>
    <node id = 'enum_XSDConstraint'>
      <data key = 'label'>enum_XSDConstraint</data>
    </node>
    <node id = 'enum_XSDContentTypeCategory'>
      <data key = 'label'>enum_XSDContentTypeCategory</data>
    </node>
    <node id = 'enum_XSDDerivationMethod'>
      <data key = 'label'>enum_XSDDerivationMethod</data>
    </node>
    <node id = 'enum_XSDDiagnosticSeverity'>
      <data key = 'label'>enum_XSDDiagnosticSeverity</data>
    </node>
    <node id = 'enum_XSDDisallowedSubstitutions'>
      <data key = 'label'>enum_XSDDisallowedSubstitutions</data>
    </node>
    <node id = 'enum_XSDForm'>
      <data key = 'label'>enum_XSDForm</data>
    </node>
    <node id = 'enum_XSDIdentityConstraintCategory'>
      <data key = 'label'>enum_XSDIdentityConstraintCategory</data>
    </node>
    <node id = 'enum_XSDNamespaceConstraintCategory'>
      <data key = 'label'>enum_XSDNamespaceConstraintCategory</data>
    </node>
    <node id = 'enum_XSDOrdered'>
      <data key = 'label'>enum_XSDOrdered</data>
    </node>
    <node id = 'enum_XSDProcessContents'>
      <data key = 'label'>enum_XSDProcessContents</data>
    </node>
    <node id = 'enum_XSDProhibitedSubstitutions'>
      <data key = 'label'>enum_XSDProhibitedSubstitutions</data>
    </node>
    <node id = 'enum_XSDSimpleFinal'>
      <data key = 'label'>enum_XSDSimpleFinal</data>
    </node>
    <node id = 'enum_XSDSubstitutionGroupExclusions'>
      <data key = 'label'>enum_XSDSubstitutionGroupExclusions</data>
    </node>
    <node id = 'enum_XSDVariety'>
      <data key = 'label'>enum_XSDVariety</data>
    </node>
    <node id = 'enum_XSDWhiteSpace'>
      <data key = 'label'>enum_XSDWhiteSpace</data>
    </node>
    <node id = 'enum_XSDXPathVariety'>
      <data key = 'label'>enum_XSDXPathVariety</data>
    </node>
    <node id = 'package_XSD'>
      <data key = 'label'>package_XSD</data>
    </node>
  </graph>
</graphml>
