<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'UMLWithReuseContratsGraph' edgedefault = 'undirected'>
    <edge id = 'ReuseContract_extends_Dependency' source = 'class_UMLWithReuseContrats::ReuseContract' target = 'class_UMLWithReuseContrats::Dependency'/>
    <edge id = 'ProviderClause_extends_Package' source = 'class_UMLWithReuseContrats::ProviderClause' target = 'class_UMLWithReuseContrats::Package'/>
    <edge id = 'ReuserClause_extends_Package' source = 'class_UMLWithReuseContrats::ReuserClause' target = 'class_UMLWithReuseContrats::Package'/>
    <edge id = 'CompositeProvider_extends_ProviderClause' source = 'class_UMLWithReuseContrats::CompositeProvider' target = 'class_UMLWithReuseContrats::ProviderClause'/>
    <edge id = 'BasicProvider_extends_ProviderClause' source = 'class_UMLWithReuseContrats::BasicProvider' target = 'class_UMLWithReuseContrats::ProviderClause'/>
    <edge id = 'CompositeReuser_extends_ReuserClause' source = 'class_UMLWithReuseContrats::CompositeReuser' target = 'class_UMLWithReuseContrats::ReuserClause'/>
    <edge id = 'BasicReuser_extends_ReuserClause' source = 'class_UMLWithReuseContrats::BasicReuser' target = 'class_UMLWithReuseContrats::ReuserClause'/>
    <edge id = 'referenceEdge_ReuseContract2ProviderClause' source = 'class_UMLWithReuseContrats::ReuseContract' target = 'class_UMLWithReuseContrats::ProviderClause'/>
    <edge id = 'referenceEdge_Dependency2Dependency' source = 'class_UMLWithReuseContrats::Dependency' target = 'class_UMLWithReuseContrats::Dependency'/>
    <edge id = 'referenceEdge_CompositeProvider2ReuseContract' source = 'class_UMLWithReuseContrats::CompositeProvider' target = 'class_UMLWithReuseContrats::ReuseContract'/>
    <edge id = 'referenceEdge_CompositeReuser2ReuserClause' source = 'class_UMLWithReuseContrats::CompositeReuser' target = 'class_UMLWithReuseContrats::ReuserClause'/>
    <node id = 'class_UMLWithReuseContrats::ReuseContract'>
      <data key = 'label'>class_UMLWithReuseContrats::ReuseContract</data>
    </node>
    <node id = 'class_UMLWithReuseContrats::Dependency'>
      <data key = 'label'>class_UMLWithReuseContrats::Dependency</data>
    </node>
    <node id = 'class_UMLWithReuseContrats::ProviderClause'>
      <data key = 'label'>class_UMLWithReuseContrats::ProviderClause</data>
    </node>
    <node id = 'class_UMLWithReuseContrats::Package'>
      <data key = 'label'>class_UMLWithReuseContrats::Package</data>
    </node>
    <node id = 'class_UMLWithReuseContrats::ReuserClause'>
      <data key = 'label'>class_UMLWithReuseContrats::ReuserClause</data>
    </node>
    <node id = 'class_UMLWithReuseContrats::CompositeProvider'>
      <data key = 'label'>class_UMLWithReuseContrats::CompositeProvider</data>
    </node>
    <node id = 'class_UMLWithReuseContrats::BasicProvider'>
      <data key = 'label'>class_UMLWithReuseContrats::BasicProvider</data>
    </node>
    <node id = 'class_UMLWithReuseContrats::CompositeReuser'>
      <data key = 'label'>class_UMLWithReuseContrats::CompositeReuser</data>
    </node>
    <node id = 'class_UMLWithReuseContrats::BasicReuser'>
      <data key = 'label'>class_UMLWithReuseContrats::BasicReuser</data>
    </node>
    <node id = 'package_UMLWithReuseContrats'>
      <data key = 'label'>package_UMLWithReuseContrats</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'dataType_Integer'>
      <data key = 'label'>dataType_Integer</data>
    </node>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
