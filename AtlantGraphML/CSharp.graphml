<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'CSharpGraph' edgedefault = 'undirected'>
    <edge id = 'TypedAttribute_extends_Member' source = 'class_CSharp::TypedAttribute' target = 'class_CSharp::Member'/>
    <edge id = 'Field_extends_TypedAttribute' source = 'class_CSharp::Field' target = 'class_CSharp::TypedAttribute'/>
    <edge id = 'Property_extends_TypedAttribute' source = 'class_CSharp::Property' target = 'class_CSharp::TypedAttribute'/>
    <edge id = 'MethodBase_extends_Member' source = 'class_CSharp::MethodBase' target = 'class_CSharp::Member'/>
    <edge id = 'Constructor_extends_MethodBase' source = 'class_CSharp::Constructor' target = 'class_CSharp::MethodBase'/>
    <edge id = 'Method_extends_MethodBase' source = 'class_CSharp::Method' target = 'class_CSharp::MethodBase'/>
    <edge id = 'Type_extends_Member' source = 'class_CSharp::Type' target = 'class_CSharp::Member'/>
    <edge id = 'referenceEdge_Member2Type' source = 'class_CSharp::Member' target = 'class_CSharp::Type'/>
    <edge id = 'referenceEdge_TypedAttribute2Type' source = 'class_CSharp::TypedAttribute' target = 'class_CSharp::Type'/>
    <edge id = 'referenceEdge_MethodBase2Parameter' source = 'class_CSharp::MethodBase' target = 'class_CSharp::Parameter'/>
    <edge id = 'referenceEdge_Method2Type' source = 'class_CSharp::Method' target = 'class_CSharp::Type'/>
    <edge id = 'referenceEdge_Assembly2Type' source = 'class_CSharp::Assembly' target = 'class_CSharp::Type'/>
    <node id = 'class_CSharp::Member'>
      <data key = 'label'>class_CSharp::Member</data>
    </node>
    <node id = 'class_CSharp::TypedAttribute'>
      <data key = 'label'>class_CSharp::TypedAttribute</data>
    </node>
    <node id = 'class_CSharp::Field'>
      <data key = 'label'>class_CSharp::Field</data>
    </node>
    <node id = 'class_CSharp::Property'>
      <data key = 'label'>class_CSharp::Property</data>
    </node>
    <node id = 'class_CSharp::MethodBase'>
      <data key = 'label'>class_CSharp::MethodBase</data>
    </node>
    <node id = 'class_CSharp::Constructor'>
      <data key = 'label'>class_CSharp::Constructor</data>
    </node>
    <node id = 'class_CSharp::Method'>
      <data key = 'label'>class_CSharp::Method</data>
    </node>
    <node id = 'class_CSharp::Type'>
      <data key = 'label'>class_CSharp::Type</data>
    </node>
    <node id = 'class_CSharp::Parameter'>
      <data key = 'label'>class_CSharp::Parameter</data>
    </node>
    <node id = 'class_CSharp::Assembly'>
      <data key = 'label'>class_CSharp::Assembly</data>
    </node>
    <node id = 'package_CSharp'>
      <data key = 'label'>package_CSharp</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_Integer'>
      <data key = 'label'>dataType_Integer</data>
    </node>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'dataType_Double'>
      <data key = 'label'>dataType_Double</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
