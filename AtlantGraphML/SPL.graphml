<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'SPLGraph' edgedefault = 'undirected'>
    <edge id = 'Program_extends_LocatedElement' source = 'class_SPL::Program' target = 'class_SPL::LocatedElement'/>
    <edge id = 'Service_extends_LocatedElement' source = 'class_SPL::Service' target = 'class_SPL::LocatedElement'/>
    <edge id = 'Session_extends_LocatedElement' source = 'class_SPL::Session' target = 'class_SPL::LocatedElement'/>
    <edge id = 'Registration_extends_Session' source = 'class_SPL::Registration' target = 'class_SPL::Session'/>
    <edge id = 'Dialog_extends_Session' source = 'class_SPL::Dialog' target = 'class_SPL::Session'/>
    <edge id = 'Event_extends_Session' source = 'class_SPL::Event' target = 'class_SPL::Session'/>
    <edge id = 'Method_extends_Session' source = 'class_SPL::Method' target = 'class_SPL::Session'/>
    <edge id = 'Argument_extends_VariableDeclaration' source = 'class_SPL::Argument' target = 'class_SPL::VariableDeclaration'/>
    <edge id = 'MethodName_extends_LocatedElement' source = 'class_SPL::MethodName' target = 'class_SPL::LocatedElement'/>
    <edge id = 'SIPMethodName_extends_MethodName' source = 'class_SPL::SIPMethodName' target = 'class_SPL::MethodName'/>
    <edge id = 'ControlMethodName_extends_MethodName' source = 'class_SPL::ControlMethodName' target = 'class_SPL::MethodName'/>
    <edge id = 'Branch_extends_LocatedElement' source = 'class_SPL::Branch' target = 'class_SPL::LocatedElement'/>
    <edge id = 'DefaultBranch_extends_Branch' source = 'class_SPL::DefaultBranch' target = 'class_SPL::Branch'/>
    <edge id = 'NamedBranch_extends_Branch' source = 'class_SPL::NamedBranch' target = 'class_SPL::Branch'/>
    <edge id = 'TypeExpression_extends_LocatedElement' source = 'class_SPL::TypeExpression' target = 'class_SPL::LocatedElement'/>
    <edge id = 'SimpleType_extends_TypeExpression' source = 'class_SPL::SimpleType' target = 'class_SPL::TypeExpression'/>
    <edge id = 'SequenceType_extends_TypeExpression' source = 'class_SPL::SequenceType' target = 'class_SPL::TypeExpression'/>
    <edge id = 'DefinedType_extends_TypeExpression' source = 'class_SPL::DefinedType' target = 'class_SPL::TypeExpression'/>
    <edge id = 'Declaration_extends_LocatedElement' source = 'class_SPL::Declaration' target = 'class_SPL::LocatedElement'/>
    <edge id = 'FunctionDeclaration_extends_Declaration' source = 'class_SPL::FunctionDeclaration' target = 'class_SPL::Declaration'/>
    <edge id = 'RemoteFunctionDeclaration_extends_FunctionDeclaration' source = 'class_SPL::RemoteFunctionDeclaration' target = 'class_SPL::FunctionDeclaration'/>
    <edge id = 'LocalFunctionDeclaration_extends_FunctionDeclaration' source = 'class_SPL::LocalFunctionDeclaration' target = 'class_SPL::FunctionDeclaration'/>
    <edge id = 'StructureDeclaration_extends_Declaration' source = 'class_SPL::StructureDeclaration' target = 'class_SPL::Declaration'/>
    <edge id = 'StructureProperty_extends_LocatedElement' source = 'class_SPL::StructureProperty' target = 'class_SPL::LocatedElement'/>
    <edge id = 'FunctionCall_extends_LocatedElement' source = 'class_SPL::FunctionCall' target = 'class_SPL::LocatedElement'/>
    <edge id = 'Statement_extends_LocatedElement' source = 'class_SPL::Statement' target = 'class_SPL::LocatedElement'/>
    <edge id = 'CompoundStat_extends_Statement' source = 'class_SPL::CompoundStat' target = 'class_SPL::Statement'/>
    <edge id = 'SetStat_extends_Statement' source = 'class_SPL::SetStat' target = 'class_SPL::Statement'/>
    <edge id = 'DeclarationStat_extends_Statement' source = 'class_SPL::DeclarationStat' target = 'class_SPL::Statement'/>
    <edge id = 'ReturnStat_extends_Statement' source = 'class_SPL::ReturnStat' target = 'class_SPL::Statement'/>
    <edge id = 'IfStat_extends_Statement' source = 'class_SPL::IfStat' target = 'class_SPL::Statement'/>
    <edge id = 'WhenStat_extends_Statement' source = 'class_SPL::WhenStat' target = 'class_SPL::Statement'/>
    <edge id = 'ForeachStat_extends_Statement' source = 'class_SPL::ForeachStat' target = 'class_SPL::Statement'/>
    <edge id = 'SelectStat_extends_Statement' source = 'class_SPL::SelectStat' target = 'class_SPL::Statement'/>
    <edge id = 'FunctionCallStat_extends_Statement' source = 'class_SPL::FunctionCallStat' target = 'class_SPL::Statement'/>
    <edge id = 'ContinueStat_extends_Statement' source = 'class_SPL::ContinueStat' target = 'class_SPL::Statement'/>
    <edge id = 'BreakStat_extends_Statement' source = 'class_SPL::BreakStat' target = 'class_SPL::Statement'/>
    <edge id = 'PushStat_extends_Statement' source = 'class_SPL::PushStat' target = 'class_SPL::Statement'/>
    <edge id = 'WhenHeader_extends_VariableDeclaration' source = 'class_SPL::WhenHeader' target = 'class_SPL::VariableDeclaration'/>
    <edge id = 'SelectMember_extends_LocatedElement' source = 'class_SPL::SelectMember' target = 'class_SPL::LocatedElement'/>
    <edge id = 'SelectDefault_extends_SelectMember' source = 'class_SPL::SelectDefault' target = 'class_SPL::SelectMember'/>
    <edge id = 'SelectCase_extends_SelectMember' source = 'class_SPL::SelectCase' target = 'class_SPL::SelectMember'/>
    <edge id = 'Expression_extends_LocatedElement' source = 'class_SPL::Expression' target = 'class_SPL::LocatedElement'/>
    <edge id = 'ConstantExp_extends_Expression' source = 'class_SPL::ConstantExp' target = 'class_SPL::Expression'/>
    <edge id = 'OperatorExp_extends_Expression' source = 'class_SPL::OperatorExp' target = 'class_SPL::Expression'/>
    <edge id = 'ForwardExp_extends_Expression' source = 'class_SPL::ForwardExp' target = 'class_SPL::Expression'/>
    <edge id = 'WithExp_extends_Expression' source = 'class_SPL::WithExp' target = 'class_SPL::Expression'/>
    <edge id = 'BlockExp_extends_Expression' source = 'class_SPL::BlockExp' target = 'class_SPL::Expression'/>
    <edge id = 'ReasonExp_extends_Expression' source = 'class_SPL::ReasonExp' target = 'class_SPL::Expression'/>
    <edge id = 'BODYExp_extends_Expression' source = 'class_SPL::BODYExp' target = 'class_SPL::Expression'/>
    <edge id = 'RequestURIExp_extends_Expression' source = 'class_SPL::RequestURIExp' target = 'class_SPL::Expression'/>
    <edge id = 'PopExp_extends_Expression' source = 'class_SPL::PopExp' target = 'class_SPL::Expression'/>
    <edge id = 'FunctionCallExp_extends_Expression' source = 'class_SPL::FunctionCallExp' target = 'class_SPL::Expression'/>
    <edge id = 'Place_extends_Expression' source = 'class_SPL::Place' target = 'class_SPL::Expression'/>
    <edge id = 'SIPHeaderPlace_extends_Place' source = 'class_SPL::SIPHeaderPlace' target = 'class_SPL::Place'/>
    <edge id = 'VariablePlace_extends_Place' source = 'class_SPL::VariablePlace' target = 'class_SPL::Place'/>
    <edge id = 'PropertyCallPlace_extends_VariablePlace' source = 'class_SPL::PropertyCallPlace' target = 'class_SPL::VariablePlace'/>
    <edge id = 'Variable_extends_VariablePlace' source = 'class_SPL::Variable' target = 'class_SPL::VariablePlace'/>
    <edge id = 'MessageField_extends_LocatedElement' source = 'class_SPL::MessageField' target = 'class_SPL::LocatedElement'/>
    <edge id = 'ReasonMessageField_extends_MessageField' source = 'class_SPL::ReasonMessageField' target = 'class_SPL::MessageField'/>
    <edge id = 'HeadedMessageField_extends_MessageField' source = 'class_SPL::HeadedMessageField' target = 'class_SPL::MessageField'/>
    <edge id = 'Constant_extends_LocatedElement' source = 'class_SPL::Constant' target = 'class_SPL::LocatedElement'/>
    <edge id = 'BooleanConstant_extends_Constant' source = 'class_SPL::BooleanConstant' target = 'class_SPL::Constant'/>
    <edge id = 'IntegerConstant_extends_Constant' source = 'class_SPL::IntegerConstant' target = 'class_SPL::Constant'/>
    <edge id = 'StringConstant_extends_Constant' source = 'class_SPL::StringConstant' target = 'class_SPL::Constant'/>
    <edge id = 'URIConstant_extends_Constant' source = 'class_SPL::URIConstant' target = 'class_SPL::Constant'/>
    <edge id = 'SequenceConstant_extends_Constant' source = 'class_SPL::SequenceConstant' target = 'class_SPL::Constant'/>
    <edge id = 'ResponseConstant_extends_Constant' source = 'class_SPL::ResponseConstant' target = 'class_SPL::Constant'/>
    <edge id = 'Response_extends_LocatedElement' source = 'class_SPL::Response' target = 'class_SPL::LocatedElement'/>
    <edge id = 'SuccessResponse_extends_Response' source = 'class_SPL::SuccessResponse' target = 'class_SPL::Response'/>
    <edge id = 'ErrorResponse_extends_Response' source = 'class_SPL::ErrorResponse' target = 'class_SPL::Response'/>
    <edge id = 'ClientErrorResponse_extends_ErrorResponse' source = 'class_SPL::ClientErrorResponse' target = 'class_SPL::ErrorResponse'/>
    <edge id = 'GlobalErrorResponse_extends_ErrorResponse' source = 'class_SPL::GlobalErrorResponse' target = 'class_SPL::ErrorResponse'/>
    <edge id = 'RedirectionErrorResponse_extends_ErrorResponse' source = 'class_SPL::RedirectionErrorResponse' target = 'class_SPL::ErrorResponse'/>
    <edge id = 'ServerErrorResponse_extends_ErrorResponse' source = 'class_SPL::ServerErrorResponse' target = 'class_SPL::ErrorResponse'/>
    <edge id = 'referenceEdge_Program2Service' source = 'class_SPL::Program' target = 'class_SPL::Service'/>
    <edge id = 'referenceEdge_Registration2Declaration' source = 'class_SPL::Registration' target = 'class_SPL::Declaration'/>
    <edge id = 'referenceEdge_Dialog2Declaration' source = 'class_SPL::Dialog' target = 'class_SPL::Declaration'/>
    <edge id = 'referenceEdge_Event2Declaration' source = 'class_SPL::Event' target = 'class_SPL::Declaration'/>
    <edge id = 'referenceEdge_Method2TypeExpression' source = 'class_SPL::Method' target = 'class_SPL::TypeExpression'/>
    <edge id = 'referenceEdge_Branch2Statement' source = 'class_SPL::Branch' target = 'class_SPL::Statement'/>
    <edge id = 'referenceEdge_VariableDeclaration2TypeExpression' source = 'class_SPL::VariableDeclaration' target = 'class_SPL::TypeExpression'/>
    <edge id = 'referenceEdge_FunctionDeclaration2TypeExpression' source = 'class_SPL::FunctionDeclaration' target = 'class_SPL::TypeExpression'/>
    <edge id = 'referenceEdge_LocalFunctionDeclaration2Statement' source = 'class_SPL::LocalFunctionDeclaration' target = 'class_SPL::Statement'/>
    <edge id = 'referenceEdge_StructureDeclaration2Argument' source = 'class_SPL::StructureDeclaration' target = 'class_SPL::Argument'/>
    <edge id = 'referenceEdge_StructureProperty2TypeExpression' source = 'class_SPL::StructureProperty' target = 'class_SPL::TypeExpression'/>
    <edge id = 'referenceEdge_FunctionCall2FunctionDeclaration' source = 'class_SPL::FunctionCall' target = 'class_SPL::FunctionDeclaration'/>
    <edge id = 'referenceEdge_CompoundStat2Statement' source = 'class_SPL::CompoundStat' target = 'class_SPL::Statement'/>
    <edge id = 'referenceEdge_SetStat2Place' source = 'class_SPL::SetStat' target = 'class_SPL::Place'/>
    <edge id = 'referenceEdge_DeclarationStat2Declaration' source = 'class_SPL::DeclarationStat' target = 'class_SPL::Declaration'/>
    <edge id = 'referenceEdge_ReturnStat2Expression' source = 'class_SPL::ReturnStat' target = 'class_SPL::Expression'/>
    <edge id = 'referenceEdge_IfStat2Expression' source = 'class_SPL::IfStat' target = 'class_SPL::Expression'/>
    <edge id = 'referenceEdge_WhenStat2Variable' source = 'class_SPL::WhenStat' target = 'class_SPL::Variable'/>
    <edge id = 'referenceEdge_ForeachStat2Expression' source = 'class_SPL::ForeachStat' target = 'class_SPL::Expression'/>
    <edge id = 'referenceEdge_SelectStat2Expression' source = 'class_SPL::SelectStat' target = 'class_SPL::Expression'/>
    <edge id = 'referenceEdge_FunctionCallStat2FunctionCall' source = 'class_SPL::FunctionCallStat' target = 'class_SPL::FunctionCall'/>
    <edge id = 'referenceEdge_PushStat2Place' source = 'class_SPL::PushStat' target = 'class_SPL::Place'/>
    <edge id = 'referenceEdge_WhenHeader2Constant' source = 'class_SPL::WhenHeader' target = 'class_SPL::Constant'/>
    <edge id = 'referenceEdge_SelectMember2Statement' source = 'class_SPL::SelectMember' target = 'class_SPL::Statement'/>
    <edge id = 'referenceEdge_SelectCase2Constant' source = 'class_SPL::SelectCase' target = 'class_SPL::Constant'/>
    <edge id = 'referenceEdge_ConstantExp2Constant' source = 'class_SPL::ConstantExp' target = 'class_SPL::Constant'/>
    <edge id = 'referenceEdge_OperatorExp2Expression' source = 'class_SPL::OperatorExp' target = 'class_SPL::Expression'/>
    <edge id = 'referenceEdge_ForwardExp2Expression' source = 'class_SPL::ForwardExp' target = 'class_SPL::Expression'/>
    <edge id = 'referenceEdge_WithExp2Expression' source = 'class_SPL::WithExp' target = 'class_SPL::Expression'/>
    <edge id = 'referenceEdge_BlockExp2Expression' source = 'class_SPL::BlockExp' target = 'class_SPL::Expression'/>
    <edge id = 'referenceEdge_PopExp2Place' source = 'class_SPL::PopExp' target = 'class_SPL::Place'/>
    <edge id = 'referenceEdge_FunctionCallExp2FunctionCall' source = 'class_SPL::FunctionCallExp' target = 'class_SPL::FunctionCall'/>
    <edge id = 'referenceEdge_PropertyCallPlace2VariablePlace' source = 'class_SPL::PropertyCallPlace' target = 'class_SPL::VariablePlace'/>
    <edge id = 'referenceEdge_MessageField2Expression' source = 'class_SPL::MessageField' target = 'class_SPL::Expression'/>
    <edge id = 'referenceEdge_SequenceConstant2Constant' source = 'class_SPL::SequenceConstant' target = 'class_SPL::Constant'/>
    <edge id = 'referenceEdge_ResponseConstant2Response' source = 'class_SPL::ResponseConstant' target = 'class_SPL::Response'/>
    <node id = 'class_SPL::LocatedElement'>
      <data key = 'label'>class_SPL::LocatedElement</data>
    </node>
    <node id = 'class_SPL::Program'>
      <data key = 'label'>class_SPL::Program</data>
    </node>
    <node id = 'class_SPL::Service'>
      <data key = 'label'>class_SPL::Service</data>
    </node>
    <node id = 'class_SPL::Session'>
      <data key = 'label'>class_SPL::Session</data>
    </node>
    <node id = 'class_SPL::Registration'>
      <data key = 'label'>class_SPL::Registration</data>
    </node>
    <node id = 'class_SPL::Dialog'>
      <data key = 'label'>class_SPL::Dialog</data>
    </node>
    <node id = 'class_SPL::Event'>
      <data key = 'label'>class_SPL::Event</data>
    </node>
    <node id = 'class_SPL::Method'>
      <data key = 'label'>class_SPL::Method</data>
    </node>
    <node id = 'class_SPL::Argument'>
      <data key = 'label'>class_SPL::Argument</data>
    </node>
    <node id = 'class_SPL::MethodName'>
      <data key = 'label'>class_SPL::MethodName</data>
    </node>
    <node id = 'class_SPL::SIPMethodName'>
      <data key = 'label'>class_SPL::SIPMethodName</data>
    </node>
    <node id = 'class_SPL::ControlMethodName'>
      <data key = 'label'>class_SPL::ControlMethodName</data>
    </node>
    <node id = 'class_SPL::Branch'>
      <data key = 'label'>class_SPL::Branch</data>
    </node>
    <node id = 'class_SPL::DefaultBranch'>
      <data key = 'label'>class_SPL::DefaultBranch</data>
    </node>
    <node id = 'class_SPL::NamedBranch'>
      <data key = 'label'>class_SPL::NamedBranch</data>
    </node>
    <node id = 'class_SPL::TypeExpression'>
      <data key = 'label'>class_SPL::TypeExpression</data>
    </node>
    <node id = 'class_SPL::SimpleType'>
      <data key = 'label'>class_SPL::SimpleType</data>
    </node>
    <node id = 'class_SPL::SequenceType'>
      <data key = 'label'>class_SPL::SequenceType</data>
    </node>
    <node id = 'class_SPL::DefinedType'>
      <data key = 'label'>class_SPL::DefinedType</data>
    </node>
    <node id = 'class_SPL::Declaration'>
      <data key = 'label'>class_SPL::Declaration</data>
    </node>
    <node id = 'class_SPL::VariableDeclaration'>
      <data key = 'label'>class_SPL::VariableDeclaration</data>
    </node>
    <node id = 'class_SPL::FunctionDeclaration'>
      <data key = 'label'>class_SPL::FunctionDeclaration</data>
    </node>
    <node id = 'class_SPL::RemoteFunctionDeclaration'>
      <data key = 'label'>class_SPL::RemoteFunctionDeclaration</data>
    </node>
    <node id = 'class_SPL::LocalFunctionDeclaration'>
      <data key = 'label'>class_SPL::LocalFunctionDeclaration</data>
    </node>
    <node id = 'class_SPL::StructureDeclaration'>
      <data key = 'label'>class_SPL::StructureDeclaration</data>
    </node>
    <node id = 'class_SPL::StructureProperty'>
      <data key = 'label'>class_SPL::StructureProperty</data>
    </node>
    <node id = 'class_SPL::FunctionCall'>
      <data key = 'label'>class_SPL::FunctionCall</data>
    </node>
    <node id = 'class_SPL::Statement'>
      <data key = 'label'>class_SPL::Statement</data>
    </node>
    <node id = 'class_SPL::CompoundStat'>
      <data key = 'label'>class_SPL::CompoundStat</data>
    </node>
    <node id = 'class_SPL::SetStat'>
      <data key = 'label'>class_SPL::SetStat</data>
    </node>
    <node id = 'class_SPL::DeclarationStat'>
      <data key = 'label'>class_SPL::DeclarationStat</data>
    </node>
    <node id = 'class_SPL::ReturnStat'>
      <data key = 'label'>class_SPL::ReturnStat</data>
    </node>
    <node id = 'class_SPL::IfStat'>
      <data key = 'label'>class_SPL::IfStat</data>
    </node>
    <node id = 'class_SPL::WhenStat'>
      <data key = 'label'>class_SPL::WhenStat</data>
    </node>
    <node id = 'class_SPL::ForeachStat'>
      <data key = 'label'>class_SPL::ForeachStat</data>
    </node>
    <node id = 'class_SPL::SelectStat'>
      <data key = 'label'>class_SPL::SelectStat</data>
    </node>
    <node id = 'class_SPL::FunctionCallStat'>
      <data key = 'label'>class_SPL::FunctionCallStat</data>
    </node>
    <node id = 'class_SPL::ContinueStat'>
      <data key = 'label'>class_SPL::ContinueStat</data>
    </node>
    <node id = 'class_SPL::BreakStat'>
      <data key = 'label'>class_SPL::BreakStat</data>
    </node>
    <node id = 'class_SPL::PushStat'>
      <data key = 'label'>class_SPL::PushStat</data>
    </node>
    <node id = 'class_SPL::WhenHeader'>
      <data key = 'label'>class_SPL::WhenHeader</data>
    </node>
    <node id = 'class_SPL::SelectMember'>
      <data key = 'label'>class_SPL::SelectMember</data>
    </node>
    <node id = 'class_SPL::SelectDefault'>
      <data key = 'label'>class_SPL::SelectDefault</data>
    </node>
    <node id = 'class_SPL::SelectCase'>
      <data key = 'label'>class_SPL::SelectCase</data>
    </node>
    <node id = 'class_SPL::Expression'>
      <data key = 'label'>class_SPL::Expression</data>
    </node>
    <node id = 'class_SPL::ConstantExp'>
      <data key = 'label'>class_SPL::ConstantExp</data>
    </node>
    <node id = 'class_SPL::OperatorExp'>
      <data key = 'label'>class_SPL::OperatorExp</data>
    </node>
    <node id = 'class_SPL::ForwardExp'>
      <data key = 'label'>class_SPL::ForwardExp</data>
    </node>
    <node id = 'class_SPL::WithExp'>
      <data key = 'label'>class_SPL::WithExp</data>
    </node>
    <node id = 'class_SPL::BlockExp'>
      <data key = 'label'>class_SPL::BlockExp</data>
    </node>
    <node id = 'class_SPL::ReasonExp'>
      <data key = 'label'>class_SPL::ReasonExp</data>
    </node>
    <node id = 'class_SPL::BODYExp'>
      <data key = 'label'>class_SPL::BODYExp</data>
    </node>
    <node id = 'class_SPL::RequestURIExp'>
      <data key = 'label'>class_SPL::RequestURIExp</data>
    </node>
    <node id = 'class_SPL::PopExp'>
      <data key = 'label'>class_SPL::PopExp</data>
    </node>
    <node id = 'class_SPL::FunctionCallExp'>
      <data key = 'label'>class_SPL::FunctionCallExp</data>
    </node>
    <node id = 'class_SPL::Place'>
      <data key = 'label'>class_SPL::Place</data>
    </node>
    <node id = 'class_SPL::SIPHeaderPlace'>
      <data key = 'label'>class_SPL::SIPHeaderPlace</data>
    </node>
    <node id = 'class_SPL::VariablePlace'>
      <data key = 'label'>class_SPL::VariablePlace</data>
    </node>
    <node id = 'class_SPL::PropertyCallPlace'>
      <data key = 'label'>class_SPL::PropertyCallPlace</data>
    </node>
    <node id = 'class_SPL::Variable'>
      <data key = 'label'>class_SPL::Variable</data>
    </node>
    <node id = 'class_SPL::MessageField'>
      <data key = 'label'>class_SPL::MessageField</data>
    </node>
    <node id = 'class_SPL::ReasonMessageField'>
      <data key = 'label'>class_SPL::ReasonMessageField</data>
    </node>
    <node id = 'class_SPL::HeadedMessageField'>
      <data key = 'label'>class_SPL::HeadedMessageField</data>
    </node>
    <node id = 'class_SPL::Constant'>
      <data key = 'label'>class_SPL::Constant</data>
    </node>
    <node id = 'class_SPL::BooleanConstant'>
      <data key = 'label'>class_SPL::BooleanConstant</data>
    </node>
    <node id = 'class_SPL::IntegerConstant'>
      <data key = 'label'>class_SPL::IntegerConstant</data>
    </node>
    <node id = 'class_SPL::StringConstant'>
      <data key = 'label'>class_SPL::StringConstant</data>
    </node>
    <node id = 'class_SPL::URIConstant'>
      <data key = 'label'>class_SPL::URIConstant</data>
    </node>
    <node id = 'class_SPL::SequenceConstant'>
      <data key = 'label'>class_SPL::SequenceConstant</data>
    </node>
    <node id = 'class_SPL::ResponseConstant'>
      <data key = 'label'>class_SPL::ResponseConstant</data>
    </node>
    <node id = 'class_SPL::Response'>
      <data key = 'label'>class_SPL::Response</data>
    </node>
    <node id = 'class_SPL::SuccessResponse'>
      <data key = 'label'>class_SPL::SuccessResponse</data>
    </node>
    <node id = 'class_SPL::ErrorResponse'>
      <data key = 'label'>class_SPL::ErrorResponse</data>
    </node>
    <node id = 'class_SPL::ClientErrorResponse'>
      <data key = 'label'>class_SPL::ClientErrorResponse</data>
    </node>
    <node id = 'class_SPL::GlobalErrorResponse'>
      <data key = 'label'>class_SPL::GlobalErrorResponse</data>
    </node>
    <node id = 'class_SPL::RedirectionErrorResponse'>
      <data key = 'label'>class_SPL::RedirectionErrorResponse</data>
    </node>
    <node id = 'class_SPL::ServerErrorResponse'>
      <data key = 'label'>class_SPL::ServerErrorResponse</data>
    </node>
    <node id = 'package_SPL'>
      <data key = 'label'>package_SPL</data>
    </node>
  </graph>
  <graph id = 'EnumGraph' edgedefault = 'undirected'>
    <node id = 'enum_Direction'>
      <data key = 'label'>enum_Direction</data>
    </node>
    <node id = 'enum_SIPMethod'>
      <data key = 'label'>enum_SIPMethod</data>
    </node>
    <node id = 'enum_ControlMethod'>
      <data key = 'label'>enum_ControlMethod</data>
    </node>
    <node id = 'enum_PrimitiveType'>
      <data key = 'label'>enum_PrimitiveType</data>
    </node>
    <node id = 'enum_Modifier'>
      <data key = 'label'>enum_Modifier</data>
    </node>
    <node id = 'enum_FunctionLocation'>
      <data key = 'label'>enum_FunctionLocation</data>
    </node>
    <node id = 'enum_SIPHeader'>
      <data key = 'label'>enum_SIPHeader</data>
    </node>
    <node id = 'enum_SuccessKind'>
      <data key = 'label'>enum_SuccessKind</data>
    </node>
    <node id = 'enum_ClientErrorKind'>
      <data key = 'label'>enum_ClientErrorKind</data>
    </node>
    <node id = 'enum_GlobalErrorKind'>
      <data key = 'label'>enum_GlobalErrorKind</data>
    </node>
    <node id = 'enum_RedirectionErrorKind'>
      <data key = 'label'>enum_RedirectionErrorKind</data>
    </node>
    <node id = 'enum_ServerErrorKind'>
      <data key = 'label'>enum_ServerErrorKind</data>
    </node>
    <node id = 'package_Enum'>
      <data key = 'label'>package_Enum</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'dataType_Integer'>
      <data key = 'label'>dataType_Integer</data>
    </node>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
