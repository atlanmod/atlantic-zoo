<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'ViewAbstractSyntaxOfXMorphLanguageGraph' edgedefault = 'undirected'>
    <edge id = 'VarUse_extends_Expression' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::VarUse' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Expression'/>
    <edge id = 'PatternScope_extends_VarScope' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternScope' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::VarScope'/>
    <edge id = 'PatternDefn_extends_VarScope' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternDefn' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::VarScope'/>
    <edge id = 'TRule_extends_VarScope' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::TRule' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::VarScope'/>
    <edge id = 'Transformation_extends_PatternScope' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::Transformation' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternScope'/>
    <edge id = 'Query_extends_PatternScope' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::Query' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternScope'/>
    <edge id = 'TRuleVar_extends_AbstractVar' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::TRuleVar' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::AbstractVar'/>
    <edge id = 'PatternVar_extends_AbstractVar' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternVar' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::AbstractVar'/>
    <edge id = 'ExtentVar_extends_AbstractVar' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::ExtentVar' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::AbstractVar'/>
    <edge id = 'CompoundTerm_extends_Term' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Term'/>
    <edge id = 'AndTerm_extends_CompoundTerm' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::AndTerm' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm'/>
    <edge id = 'OrTerm_extends_CompoundTerm' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::OrTerm' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm'/>
    <edge id = 'NotTerm_extends_CompoundTerm' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::NotTerm' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm'/>
    <edge id = 'IfTerm_extends_CompoundTerm' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::IfTerm' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm'/>
    <edge id = 'SimpleTerm_extends_Term' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Term'/>
    <edge id = 'TrackingUse_extends_SimpleTerm' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::TrackingUse' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm'/>
    <edge id = 'PatternUse_extends_SimpleTerm' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternUse' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm'/>
    <edge id = 'MofTerm_extends_SimpleTerm' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::MofTerm' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm'/>
    <edge id = 'Condition_extends_SimpleTerm' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::Condition' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm'/>
    <edge id = 'MofInstance_extends_MofTerm' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::MofInstance' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::MofTerm'/>
    <edge id = 'MofOrder_extends_MofTerm' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::MofOrder' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::MofTerm'/>
    <edge id = 'CoumpoundExpr_extends_Expression' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::CoumpoundExpr' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Expression'/>
    <edge id = 'CollectionExpr_extends_CoumpoundExpr' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::CollectionExpr' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::CoumpoundExpr'/>
    <edge id = 'FunctionExpr_extends_CoumpoundExpr' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::FunctionExpr' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::CoumpoundExpr'/>
    <edge id = 'FeatureExpr_extends_CoumpoundExpr' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::FeatureExpr' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::CoumpoundExpr'/>
    <edge id = 'InstanceRef_extends_Expression' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::InstanceRef' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Expression'/>
    <edge id = 'MOF::Object_extends_Expression' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::MOF::Object' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Expression'/>
    <edge id = 'SimpleExpr_extends_Expression' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleExpr' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Expression'/>
    <edge id = 'StringConstant_extends_SimpleExpr' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::StringConstant' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleExpr'/>
    <edge id = 'IntConstant_extends_SimpleExpr' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::IntConstant' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleExpr'/>
    <edge id = 'BooleanConstant_extends_SimpleExpr' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::BooleanConstant' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleExpr'/>
    <edge id = 'EnumConstant_extends_SimpleExpr' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::EnumConstant' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleExpr'/>
    <edge id = 'referenceEdge_VarScope2AbstractVar' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::VarScope' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::AbstractVar'/>
    <edge id = 'referenceEdge_VarUse2AbstractVar' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::VarUse' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::AbstractVar'/>
    <edge id = 'referenceEdge_MOF::Property2Key' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::MOF::Property' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Key'/>
    <edge id = 'referenceEdge_PatternScope2PatternDefn' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternScope' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternDefn'/>
    <edge id = 'referenceEdge_TRule2TRule' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::TRule' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::TRule'/>
    <edge id = 'referenceEdge_Transformation2Key' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::Transformation' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Key'/>
    <edge id = 'referenceEdge_Query2Term' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::Query' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Term'/>
    <edge id = 'referenceEdge_TRuleVar2TRuleVar' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::TRuleVar' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::TRuleVar'/>
    <edge id = 'referenceEdge_PatternVar2Query' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternVar' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Query'/>
    <edge id = 'referenceEdge_ExtentVar2Term' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::ExtentVar' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Term'/>
    <edge id = 'referenceEdge_CompoundTerm2Term' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Term'/>
    <edge id = 'referenceEdge_SimpleTerm2TRule' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::TRule'/>
    <edge id = 'referenceEdge_TrackingUse2MOF::Class' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::TrackingUse' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::MOF::Class'/>
    <edge id = 'referenceEdge_MofInstance2Expression' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::MofInstance' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Expression'/>
    <edge id = 'referenceEdge_MofOrder2Expression' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::MofOrder' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Expression'/>
    <edge id = 'referenceEdge_CoumpoundExpr2Expression' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::CoumpoundExpr' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::Expression'/>
    <edge id = 'referenceEdge_InstanceRef2MOF::Object' source = 'class_ViewAbstractSyntaxOfXMorphLanguage::InstanceRef' target = 'class_ViewAbstractSyntaxOfXMorphLanguage::MOF::Object'/>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::VarScope'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::VarScope</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::AbstractVar'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::AbstractVar</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::VarUse'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::VarUse</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::MOF::Property'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::MOF::Property</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::Key'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::Key</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternScope'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::PatternScope</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternDefn'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::PatternDefn</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::TRule'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::TRule</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::Transformation'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::Transformation</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::Query'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::Query</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::Term'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::Term</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::TRuleVar'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::TRuleVar</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternVar'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::PatternVar</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::ExtentVar'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::ExtentVar</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::CompoundTerm</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::AndTerm'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::AndTerm</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::OrTerm'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::OrTerm</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::NotTerm'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::NotTerm</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::IfTerm'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::IfTerm</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::SimpleTerm</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::TrackingUse'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::TrackingUse</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::MOF::Class'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::MOF::Class</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::PatternUse'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::PatternUse</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::MofTerm'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::MofTerm</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::Condition'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::Condition</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::MofInstance'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::MofInstance</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::MofOrder'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::MofOrder</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::Expression'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::Expression</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::CoumpoundExpr'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::CoumpoundExpr</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::CollectionExpr'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::CollectionExpr</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::FunctionExpr'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::FunctionExpr</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::FeatureExpr'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::FeatureExpr</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::InstanceRef'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::InstanceRef</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::MOF::Object'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::MOF::Object</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::SimpleExpr'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::SimpleExpr</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::StringConstant'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::StringConstant</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::IntConstant'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::IntConstant</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::BooleanConstant'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::BooleanConstant</data>
    </node>
    <node id = 'class_ViewAbstractSyntaxOfXMorphLanguage::EnumConstant'>
      <data key = 'label'>class_ViewAbstractSyntaxOfXMorphLanguage::EnumConstant</data>
    </node>
    <node id = 'package_ViewAbstractSyntaxOfXMorphLanguage'>
      <data key = 'label'>package_ViewAbstractSyntaxOfXMorphLanguage</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
