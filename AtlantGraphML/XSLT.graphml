<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'XSLTGraph' edgedefault = 'undirected'>
    <edge id = 'ElementNode_extends_Node' source = 'class_XSLT::ElementNode' target = 'class_XSLT::Node'/>
    <edge id = 'AttributeNode_extends_Node' source = 'class_XSLT::AttributeNode' target = 'class_XSLT::Node'/>
    <edge id = 'RootNode_extends_ElementNode' source = 'class_XSLT::RootNode' target = 'class_XSLT::ElementNode'/>
    <edge id = 'TextNode_extends_ElementNode' source = 'class_XSLT::TextNode' target = 'class_XSLT::ElementNode'/>
    <edge id = 'XSLTNode_extends_ElementNode' source = 'class_XSLT::XSLTNode' target = 'class_XSLT::ElementNode'/>
    <edge id = 'XSLTRootNode_extends_RootNode' source = 'class_XSLT::XSLTRootNode' target = 'class_XSLT::RootNode'/>
    <edge id = 'ApplyTemplates_extends_XSLTNode' source = 'class_XSLT::ApplyTemplates' target = 'class_XSLT::XSLTNode'/>
    <edge id = 'If_extends_XSLTNode' source = 'class_XSLT::If' target = 'class_XSLT::XSLTNode'/>
    <edge id = 'Template_extends_XSLTNode' source = 'class_XSLT::Template' target = 'class_XSLT::XSLTNode'/>
    <edge id = 'ValueOf_extends_XSLTNode' source = 'class_XSLT::ValueOf' target = 'class_XSLT::XSLTNode'/>
    <edge id = 'When_extends_XSLTNode' source = 'class_XSLT::When' target = 'class_XSLT::XSLTNode'/>
    <edge id = 'Choose_extends_XSLTNode' source = 'class_XSLT::Choose' target = 'class_XSLT::XSLTNode'/>
    <edge id = 'Otherwise_extends_XSLTNode' source = 'class_XSLT::Otherwise' target = 'class_XSLT::XSLTNode'/>
    <edge id = 'Sort_extends_XSLTNode' source = 'class_XSLT::Sort' target = 'class_XSLT::XSLTNode'/>
    <edge id = 'referenceEdge_Node2ElementNode' source = 'class_XSLT::Node' target = 'class_XSLT::ElementNode'/>
    <edge id = 'referenceEdge_RootNode2Document' source = 'class_XSLT::RootNode' target = 'class_XSLT::Document'/>
    <edge id = 'referenceEdge_Choose2When' source = 'class_XSLT::Choose' target = 'class_XSLT::When'/>
    <node id = 'class_XSLT::Node'>
      <data key = 'label'>class_XSLT::Node</data>
    </node>
    <node id = 'class_XSLT::ElementNode'>
      <data key = 'label'>class_XSLT::ElementNode</data>
    </node>
    <node id = 'class_XSLT::AttributeNode'>
      <data key = 'label'>class_XSLT::AttributeNode</data>
    </node>
    <node id = 'class_XSLT::RootNode'>
      <data key = 'label'>class_XSLT::RootNode</data>
    </node>
    <node id = 'class_XSLT::TextNode'>
      <data key = 'label'>class_XSLT::TextNode</data>
    </node>
    <node id = 'class_XSLT::XSLTNode'>
      <data key = 'label'>class_XSLT::XSLTNode</data>
    </node>
    <node id = 'class_XSLT::XSLTRootNode'>
      <data key = 'label'>class_XSLT::XSLTRootNode</data>
    </node>
    <node id = 'class_XSLT::Document'>
      <data key = 'label'>class_XSLT::Document</data>
    </node>
    <node id = 'class_XSLT::ApplyTemplates'>
      <data key = 'label'>class_XSLT::ApplyTemplates</data>
    </node>
    <node id = 'class_XSLT::If'>
      <data key = 'label'>class_XSLT::If</data>
    </node>
    <node id = 'class_XSLT::Template'>
      <data key = 'label'>class_XSLT::Template</data>
    </node>
    <node id = 'class_XSLT::ValueOf'>
      <data key = 'label'>class_XSLT::ValueOf</data>
    </node>
    <node id = 'class_XSLT::When'>
      <data key = 'label'>class_XSLT::When</data>
    </node>
    <node id = 'class_XSLT::Choose'>
      <data key = 'label'>class_XSLT::Choose</data>
    </node>
    <node id = 'class_XSLT::Otherwise'>
      <data key = 'label'>class_XSLT::Otherwise</data>
    </node>
    <node id = 'class_XSLT::Sort'>
      <data key = 'label'>class_XSLT::Sort</data>
    </node>
    <node id = 'package_XSLT'>
      <data key = 'label'>package_XSLT</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'dataType_Integer'>
      <data key = 'label'>dataType_Integer</data>
    </node>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
