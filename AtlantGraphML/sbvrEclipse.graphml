<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'SBVRGraph' edgedefault = 'undirected'>
    <edge id = 'Actuality_extends_StateOfAffairs' source = 'class_SBVR::Actuality' target = 'class_SBVR::StateOfAffairs'/>
    <edge id = 'Name_extends_Designation' source = 'class_SBVR::Name' target = 'class_SBVR::Designation'/>
    <edge id = 'Representation_extends_Actuality' source = 'class_SBVR::Representation' target = 'class_SBVR::Actuality'/>
    <edge id = 'Meaning_extends_Thing' source = 'class_SBVR::Meaning' target = 'class_SBVR::Thing'/>
    <edge id = 'Expression_extends_BindableTarget' source = 'class_SBVR::Expression' target = 'class_SBVR::BindableTarget'/>
    <edge id = 'AdoptedDefinition_extends_Definition' source = 'class_SBVR::AdoptedDefinition' target = 'class_SBVR::Definition'/>
    <edge id = 'Advice_extends_ElementOfGuidance' source = 'class_SBVR::Advice' target = 'class_SBVR::ElementOfGuidance'/>
    <edge id = 'Proposition_extends_Meaning' source = 'class_SBVR::Proposition' target = 'class_SBVR::Meaning'/>
    <edge id = 'Statement_extends_Representation' source = 'class_SBVR::Statement' target = 'class_SBVR::Representation'/>
    <edge id = 'AdviceOfContingency_extends_AdviceOfPossibility' source = 'class_SBVR::AdviceOfContingency' target = 'class_SBVR::AdviceOfPossibility'/>
    <edge id = 'AdviceOfOptionality_extends_AdviceOfPermission' source = 'class_SBVR::AdviceOfOptionality' target = 'class_SBVR::AdviceOfPermission'/>
    <edge id = 'AdviceStatement_extends_GuidanceStatement' source = 'class_SBVR::AdviceStatement' target = 'class_SBVR::GuidanceStatement'/>
    <edge id = 'AggregationFormulation_extends_ProjectingFormulation' source = 'class_SBVR::AggregationFormulation' target = 'class_SBVR::ProjectingFormulation'/>
    <edge id = 'LogicalFormulation_extends_SemanticFormulation' source = 'class_SBVR::LogicalFormulation' target = 'class_SBVR::SemanticFormulation'/>
    <edge id = 'Projection_extends_SemanticFormulation' source = 'class_SBVR::Projection' target = 'class_SBVR::SemanticFormulation'/>
    <edge id = 'Variable_extends_BindableTarget' source = 'class_SBVR::Variable' target = 'class_SBVR::BindableTarget'/>
    <edge id = 'PositiveInteger_extends_NonnegativeInteger' source = 'class_SBVR::PositiveInteger' target = 'class_SBVR::NonnegativeInteger'/>
    <edge id = 'Integer_extends_Number' source = 'class_SBVR::Integer' target = 'class_SBVR::Number'/>
    <edge id = 'Quantity_extends_NounConcept' source = 'class_SBVR::Quantity' target = 'class_SBVR::NounConcept'/>
    <edge id = 'Concept_extends_Meaning' source = 'class_SBVR::Concept' target = 'class_SBVR::Meaning'/>
    <edge id = 'AttributiveNamespace_extends_Namespace' source = 'class_SBVR::AttributiveNamespace' target = 'class_SBVR::Namespace'/>
    <edge id = 'Uri_extends_Text' source = 'class_SBVR::Uri' target = 'class_SBVR::Text'/>
    <edge id = 'Characteristic_extends_FactType' source = 'class_SBVR::Characteristic' target = 'class_SBVR::FactType'/>
    <edge id = 'FactTypeForm_extends_Representation' source = 'class_SBVR::FactTypeForm' target = 'class_SBVR::Representation'/>
    <edge id = 'Placeholder_extends_Designation' source = 'class_SBVR::Placeholder' target = 'class_SBVR::Designation'/>
    <edge id = 'FactTypeRole_extends_Role' source = 'class_SBVR::FactTypeRole' target = 'class_SBVR::Role'/>
    <edge id = 'RoleBinding_extends_Thing' source = 'class_SBVR::RoleBinding' target = 'class_SBVR::Thing'/>
    <edge id = 'ReferenceScheme_extends_Thing' source = 'class_SBVR::ReferenceScheme' target = 'class_SBVR::Thing'/>
    <edge id = 'Set_extends_Thing' source = 'class_SBVR::Set' target = 'class_SBVR::Thing'/>
    <edge id = 'AuxiliaryVariable_extends_Variable' source = 'class_SBVR::AuxiliaryVariable' target = 'class_SBVR::Variable'/>
    <edge id = 'AnswerNominalization_extends_ProjectingFormulation' source = 'class_SBVR::AnswerNominalization' target = 'class_SBVR::ProjectingFormulation'/>
    <edge id = 'AssociativeFactType_extends_FactType' source = 'class_SBVR::AssociativeFactType' target = 'class_SBVR::FactType'/>
    <edge id = 'AssortmentFactType_extends_FactType' source = 'class_SBVR::AssortmentFactType' target = 'class_SBVR::FactType'/>
    <edge id = 'AtleastnQuantification_extends_Quantification' source = 'class_SBVR::AtleastnQuantification' target = 'class_SBVR::Quantification'/>
    <edge id = 'AtmostnQuantification_extends_Quantification' source = 'class_SBVR::AtmostnQuantification' target = 'class_SBVR::Quantification'/>
    <edge id = 'AtmostoneQuantification_extends_AtmostnQuantification' source = 'class_SBVR::AtmostoneQuantification' target = 'class_SBVR::AtmostnQuantification'/>
    <edge id = 'AtomicFormulation_extends_LogicalFormulation' source = 'class_SBVR::AtomicFormulation' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'BagProjection_extends_Projection' source = 'class_SBVR::BagProjection' target = 'class_SBVR::Projection'/>
    <edge id = 'BinaryFactType_extends_FactType' source = 'class_SBVR::BinaryFactType' target = 'class_SBVR::FactType'/>
    <edge id = 'BinaryLogicalOperation_extends_LogicalOperation' source = 'class_SBVR::BinaryLogicalOperation' target = 'class_SBVR::LogicalOperation'/>
    <edge id = 'BodyOfSharedConcepts_extends_Thing' source = 'class_SBVR::BodyOfSharedConcepts' target = 'class_SBVR::Thing'/>
    <edge id = 'BodyOfSharedGuidance_extends_Thing' source = 'class_SBVR::BodyOfSharedGuidance' target = 'class_SBVR::Thing'/>
    <edge id = 'BodyOfSharedMeanings_extends_Set' source = 'class_SBVR::BodyOfSharedMeanings' target = 'class_SBVR::Set'/>
    <edge id = 'BusinessPolicy_extends_ElementOfGovernance' source = 'class_SBVR::BusinessPolicy' target = 'class_SBVR::ElementOfGovernance'/>
    <edge id = 'BusinessPolicyStatement_extends_GuidanceStatement' source = 'class_SBVR::BusinessPolicyStatement' target = 'class_SBVR::GuidanceStatement'/>
    <edge id = 'BusinessRule_extends_ElementOfGuidance' source = 'class_SBVR::BusinessRule' target = 'class_SBVR::ElementOfGuidance'/>
    <edge id = 'Rule_extends_Proposition' source = 'class_SBVR::Rule' target = 'class_SBVR::Proposition'/>
    <edge id = 'BusinessVocabulary_extends_Vocabulary' source = 'class_SBVR::BusinessVocabulary' target = 'class_SBVR::Vocabulary'/>
    <edge id = 'CategorizationFactType_extends_SpecializationFactType' source = 'class_SBVR::CategorizationFactType' target = 'class_SBVR::SpecializationFactType'/>
    <edge id = 'CategorizationScheme_extends_Thing' source = 'class_SBVR::CategorizationScheme' target = 'class_SBVR::Thing'/>
    <edge id = 'CategorizationType_extends_Concept' source = 'class_SBVR::CategorizationType' target = 'class_SBVR::Concept'/>
    <edge id = 'CharacteristicType_extends_ConceptType' source = 'class_SBVR::CharacteristicType' target = 'class_SBVR::ConceptType'/>
    <edge id = 'ObjectType_extends_Concept' source = 'class_SBVR::ObjectType' target = 'class_SBVR::Concept'/>
    <edge id = 'ClosedLogicalFormulation_extends_ClosedSemanticFormulation' source = 'class_SBVR::ClosedLogicalFormulation' target = 'class_SBVR::ClosedSemanticFormulation'/>
    <edge id = 'ClosedProjection_extends_Projection' source = 'class_SBVR::ClosedProjection' target = 'class_SBVR::Projection'/>
    <edge id = 'CommunicationContent_extends_Representation' source = 'class_SBVR::CommunicationContent' target = 'class_SBVR::Representation'/>
    <edge id = 'Community_extends_Thing' source = 'class_SBVR::Community' target = 'class_SBVR::Thing'/>
    <edge id = 'ConceptOfThingAsComposite_extends_Concept' source = 'class_SBVR::ConceptOfThingAsComposite' target = 'class_SBVR::Concept'/>
    <edge id = 'ConceptOfThingAsContinuant_extends_Concept' source = 'class_SBVR::ConceptOfThingAsContinuant' target = 'class_SBVR::Concept'/>
    <edge id = 'ConceptOfThingAsDeveloped_extends_Concept' source = 'class_SBVR::ConceptOfThingAsDeveloped' target = 'class_SBVR::Concept'/>
    <edge id = 'ConceptOfThingAsOccurrent_extends_Concept' source = 'class_SBVR::ConceptOfThingAsOccurrent' target = 'class_SBVR::Concept'/>
    <edge id = 'ConceptOfThingAsPrimitive_extends_Concept' source = 'class_SBVR::ConceptOfThingAsPrimitive' target = 'class_SBVR::Concept'/>
    <edge id = 'ConceptOfThingAsUnitary_extends_Concept' source = 'class_SBVR::ConceptOfThingAsUnitary' target = 'class_SBVR::Concept'/>
    <edge id = 'ConceptOfThingExistingDependently_extends_Concept' source = 'class_SBVR::ConceptOfThingExistingDependently' target = 'class_SBVR::Concept'/>
    <edge id = 'ConceptOfThingExistingIndependently_extends_Concept' source = 'class_SBVR::ConceptOfThingExistingIndependently' target = 'class_SBVR::Concept'/>
    <edge id = 'ConceptualSchema_extends_Thing' source = 'class_SBVR::ConceptualSchema' target = 'class_SBVR::Thing'/>
    <edge id = 'Conjunction_extends_BinaryLogicalOperation' source = 'class_SBVR::Conjunction' target = 'class_SBVR::BinaryLogicalOperation'/>
    <edge id = 'ContextOfThing_extends_Segmentation' source = 'class_SBVR::ContextOfThing' target = 'class_SBVR::Segmentation'/>
    <edge id = 'ContextualizationFactType_extends_SpecializationFactType' source = 'class_SBVR::ContextualizationFactType' target = 'class_SBVR::SpecializationFactType'/>
    <edge id = 'ContextualizedConcept_extends_NounConcept' source = 'class_SBVR::ContextualizedConcept' target = 'class_SBVR::NounConcept'/>
    <edge id = 'ContingencyStatement_extends_StatementOfAdviceOfPossibility' source = 'class_SBVR::ContingencyStatement' target = 'class_SBVR::StatementOfAdviceOfPossibility'/>
    <edge id = 'DefiniteDescription_extends_IntensionalDefinition' source = 'class_SBVR::DefiniteDescription' target = 'class_SBVR::IntensionalDefinition'/>
    <edge id = 'DerivableConcept_extends_Concept' source = 'class_SBVR::DerivableConcept' target = 'class_SBVR::Concept'/>
    <edge id = 'Description_extends_Representation' source = 'class_SBVR::Description' target = 'class_SBVR::Representation'/>
    <edge id = 'DescriptiveExample_extends_Representation' source = 'class_SBVR::DescriptiveExample' target = 'class_SBVR::Representation'/>
    <edge id = 'Disjunction_extends_BinaryLogicalOperation' source = 'class_SBVR::Disjunction' target = 'class_SBVR::BinaryLogicalOperation'/>
    <edge id = 'Equivalence_extends_BinaryLogicalOperation' source = 'class_SBVR::Equivalence' target = 'class_SBVR::BinaryLogicalOperation'/>
    <edge id = 'ExactlynQuantification_extends_Quantification' source = 'class_SBVR::ExactlynQuantification' target = 'class_SBVR::Quantification'/>
    <edge id = 'ExactlyoneQuantification_extends_ExactlynQuantification' source = 'class_SBVR::ExactlyoneQuantification' target = 'class_SBVR::ExactlynQuantification'/>
    <edge id = 'ExclusiveDisjunction_extends_BinaryLogicalOperation' source = 'class_SBVR::ExclusiveDisjunction' target = 'class_SBVR::BinaryLogicalOperation'/>
    <edge id = 'ExistentialQuantification_extends_AtleastnQuantification' source = 'class_SBVR::ExistentialQuantification' target = 'class_SBVR::AtleastnQuantification'/>
    <edge id = 'ExplicitnessOfRepresentation_extends_CategorizationScheme' source = 'class_SBVR::ExplicitnessOfRepresentation' target = 'class_SBVR::CategorizationScheme'/>
    <edge id = 'ExtensionalDefinition_extends_Definition' source = 'class_SBVR::ExtensionalDefinition' target = 'class_SBVR::Definition'/>
    <edge id = 'Facet_extends_ContextualizedConcept' source = 'class_SBVR::Facet' target = 'class_SBVR::ContextualizedConcept'/>
    <edge id = 'Fact_extends_Proposition' source = 'class_SBVR::Fact' target = 'class_SBVR::Proposition'/>
    <edge id = 'FactModel_extends_Thing' source = 'class_SBVR::FactModel' target = 'class_SBVR::Thing'/>
    <edge id = 'FactSymbol_extends_Designation' source = 'class_SBVR::FactSymbol' target = 'class_SBVR::Designation'/>
    <edge id = 'FactTypeNominalization_extends_ProjectingFormulation' source = 'class_SBVR::FactTypeNominalization' target = 'class_SBVR::ProjectingFormulation'/>
    <edge id = 'FactTypeRoleDesignation_extends_Designation' source = 'class_SBVR::FactTypeRoleDesignation' target = 'class_SBVR::Designation'/>
    <edge id = 'FactTypeTemplating_extends_CategorizationScheme' source = 'class_SBVR::FactTypeTemplating' target = 'class_SBVR::CategorizationScheme'/>
    <edge id = 'FormalRepresentation_extends_Representation' source = 'class_SBVR::FormalRepresentation' target = 'class_SBVR::Representation'/>
    <edge id = 'FundamentalConcept_extends_ObjectType' source = 'class_SBVR::FundamentalConcept' target = 'class_SBVR::ObjectType'/>
    <edge id = 'Icon_extends_NonverbalDesignation' source = 'class_SBVR::Icon' target = 'class_SBVR::NonverbalDesignation'/>
    <edge id = 'Implication_extends_BinaryLogicalOperation' source = 'class_SBVR::Implication' target = 'class_SBVR::BinaryLogicalOperation'/>
    <edge id = 'ImpossibilityStatement_extends_StructuralRuleStatement' source = 'class_SBVR::ImpossibilityStatement' target = 'class_SBVR::StructuralRuleStatement'/>
    <edge id = 'RuleStatement_extends_GuidanceStatement' source = 'class_SBVR::RuleStatement' target = 'class_SBVR::GuidanceStatement'/>
    <edge id = 'IndividualConcept_extends_NounConcept' source = 'class_SBVR::IndividualConcept' target = 'class_SBVR::NounConcept'/>
    <edge id = 'InformalRepresentation_extends_Representation' source = 'class_SBVR::InformalRepresentation' target = 'class_SBVR::Representation'/>
    <edge id = 'InstantiationFormulation_extends_LogicalFormulation' source = 'class_SBVR::InstantiationFormulation' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'IsfacetofFactType_extends_ContextualizationFactType' source = 'class_SBVR::IsfacetofFactType' target = 'class_SBVR::ContextualizationFactType'/>
    <edge id = 'IspropertyofFactType_extends_AssociativeFactType' source = 'class_SBVR::IspropertyofFactType' target = 'class_SBVR::AssociativeFactType'/>
    <edge id = 'IsroleofFactType_extends_FactType' source = 'class_SBVR::IsroleofFactType' target = 'class_SBVR::FactType'/>
    <edge id = 'KindOfGuidanceStatement_extends_CategorizationScheme' source = 'class_SBVR::KindOfGuidanceStatement' target = 'class_SBVR::CategorizationScheme'/>
    <edge id = 'Language_extends_Thing' source = 'class_SBVR::Language' target = 'class_SBVR::Thing'/>
    <edge id = 'LevelOfEnforcement_extends_Thing' source = 'class_SBVR::LevelOfEnforcement' target = 'class_SBVR::Thing'/>
    <edge id = 'LogicalFormulationKind_extends_ObjectType' source = 'class_SBVR::LogicalFormulationKind' target = 'class_SBVR::ObjectType'/>
    <edge id = 'LogicalNegation_extends_LogicalOperation' source = 'class_SBVR::LogicalNegation' target = 'class_SBVR::LogicalOperation'/>
    <edge id = 'ModalFormulation_extends_LogicalFormulation' source = 'class_SBVR::ModalFormulation' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'NandFormulation_extends_BinaryLogicalOperation' source = 'class_SBVR::NandFormulation' target = 'class_SBVR::BinaryLogicalOperation'/>
    <edge id = 'NecessityFormulation_extends_ModalFormulation' source = 'class_SBVR::NecessityFormulation' target = 'class_SBVR::ModalFormulation'/>
    <edge id = 'NecessityStatement_extends_StructuralRuleStatement' source = 'class_SBVR::NecessityStatement' target = 'class_SBVR::StructuralRuleStatement'/>
    <edge id = 'NonnecessityStatement_extends_StatementOfAdviceOfPossibility' source = 'class_SBVR::NonnecessityStatement' target = 'class_SBVR::StatementOfAdviceOfPossibility'/>
    <edge id = 'NonobligationStatement_extends_StatementOfAdviceOfPermission' source = 'class_SBVR::NonobligationStatement' target = 'class_SBVR::StatementOfAdviceOfPermission'/>
    <edge id = 'NorFormulation_extends_BinaryLogicalOperation' source = 'class_SBVR::NorFormulation' target = 'class_SBVR::BinaryLogicalOperation'/>
    <edge id = 'Note_extends_Representation' source = 'class_SBVR::Note' target = 'class_SBVR::Representation'/>
    <edge id = 'NounConceptNominalization_extends_ProjectingFormulation' source = 'class_SBVR::NounConceptNominalization' target = 'class_SBVR::ProjectingFormulation'/>
    <edge id = 'NounForm_extends_FactTypeForm' source = 'class_SBVR::NounForm' target = 'class_SBVR::FactTypeForm'/>
    <edge id = 'NumericRangeQuantification_extends_Quantification' source = 'class_SBVR::NumericRangeQuantification' target = 'class_SBVR::Quantification'/>
    <edge id = 'Objectification_extends_LogicalFormulation' source = 'class_SBVR::Objectification' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'ObligationFormulation_extends_ModalFormulation' source = 'class_SBVR::ObligationFormulation' target = 'class_SBVR::ModalFormulation'/>
    <edge id = 'ObligationStatement_extends_OperativeBusinessRuleStatement' source = 'class_SBVR::ObligationStatement' target = 'class_SBVR::OperativeBusinessRuleStatement'/>
    <edge id = 'OperativeBusinessRule_extends_ElementOfGovernance' source = 'class_SBVR::OperativeBusinessRule' target = 'class_SBVR::ElementOfGovernance'/>
    <edge id = 'OptionalityStatement_extends_StatementOfAdviceOfPermission' source = 'class_SBVR::OptionalityStatement' target = 'class_SBVR::StatementOfAdviceOfPermission'/>
    <edge id = 'OwnedDefinition_extends_Definition' source = 'class_SBVR::OwnedDefinition' target = 'class_SBVR::Definition'/>
    <edge id = 'PartitiveFactType_extends_BinaryFactType' source = 'class_SBVR::PartitiveFactType' target = 'class_SBVR::BinaryFactType'/>
    <edge id = 'PermissibilityFormulation_extends_ModalFormulation' source = 'class_SBVR::PermissibilityFormulation' target = 'class_SBVR::ModalFormulation'/>
    <edge id = 'PermissionStatement_extends_StatementOfAdviceOfPermission' source = 'class_SBVR::PermissionStatement' target = 'class_SBVR::StatementOfAdviceOfPermission'/>
    <edge id = 'PossibilityFormulation_extends_ModalFormulation' source = 'class_SBVR::PossibilityFormulation' target = 'class_SBVR::ModalFormulation'/>
    <edge id = 'PossibilityStatement_extends_StatementOfAdviceOfPossibility' source = 'class_SBVR::PossibilityStatement' target = 'class_SBVR::StatementOfAdviceOfPossibility'/>
    <edge id = 'PreferredDesignation_extends_Designation' source = 'class_SBVR::PreferredDesignation' target = 'class_SBVR::Designation'/>
    <edge id = 'ProhibitedDesignation_extends_Designation' source = 'class_SBVR::ProhibitedDesignation' target = 'class_SBVR::Designation'/>
    <edge id = 'ProhibitionStatement_extends_OperativeBusinessRuleStatement' source = 'class_SBVR::ProhibitionStatement' target = 'class_SBVR::OperativeBusinessRuleStatement'/>
    <edge id = 'PropositionNominalization_extends_LogicalFormulation' source = 'class_SBVR::PropositionNominalization' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'Question_extends_Meaning' source = 'class_SBVR::Question' target = 'class_SBVR::Meaning'/>
    <edge id = 'QuestionNominalization_extends_ProjectingFormulation' source = 'class_SBVR::QuestionNominalization' target = 'class_SBVR::ProjectingFormulation'/>
    <edge id = 'RealworldNumericalCorrespondence_extends_CategorizationScheme' source = 'class_SBVR::RealworldNumericalCorrespondence' target = 'class_SBVR::CategorizationScheme'/>
    <edge id = 'Reference_extends_Representation' source = 'class_SBVR::Reference' target = 'class_SBVR::Representation'/>
    <edge id = 'RepresentationFormality_extends_Segmentation' source = 'class_SBVR::RepresentationFormality' target = 'class_SBVR::Segmentation'/>
    <edge id = 'Res_extends_Thing' source = 'class_SBVR::Res' target = 'class_SBVR::Thing'/>
    <edge id = 'RestrictedPermissionStatement_extends_OperativeBusinessRuleStatement' source = 'class_SBVR::RestrictedPermissionStatement' target = 'class_SBVR::OperativeBusinessRuleStatement'/>
    <edge id = 'RestrictedPossibilityStatement_extends_StructuralRuleStatement' source = 'class_SBVR::RestrictedPossibilityStatement' target = 'class_SBVR::StructuralRuleStatement'/>
    <edge id = 'Rulebook_extends_Set' source = 'class_SBVR::Rulebook' target = 'class_SBVR::Set'/>
    <edge id = 'SemanticCommunity_extends_Community' source = 'class_SBVR::SemanticCommunity' target = 'class_SBVR::Community'/>
    <edge id = 'SpeechCommunity_extends_Community' source = 'class_SBVR::SpeechCommunity' target = 'class_SBVR::Community'/>
    <edge id = 'SententialForm_extends_FactTypeForm' source = 'class_SBVR::SententialForm' target = 'class_SBVR::FactTypeForm'/>
    <edge id = 'SetProjection_extends_Projection' source = 'class_SBVR::SetProjection' target = 'class_SBVR::Projection'/>
    <edge id = 'Situation_extends_Thing' source = 'class_SBVR::Situation' target = 'class_SBVR::Thing'/>
    <edge id = 'SituationalRole_extends_ObjectType' source = 'class_SBVR::SituationalRole' target = 'class_SBVR::ObjectType'/>
    <edge id = 'StructuralBusinessRule_extends_BusinessRule' source = 'class_SBVR::StructuralBusinessRule' target = 'class_SBVR::BusinessRule'/>
    <edge id = 'StructuralRule_extends_Rule' source = 'class_SBVR::StructuralRule' target = 'class_SBVR::Rule'/>
    <edge id = 'SubjectField_extends_Thing' source = 'class_SBVR::SubjectField' target = 'class_SBVR::Thing'/>
    <edge id = 'Term_extends_Designation' source = 'class_SBVR::Term' target = 'class_SBVR::Designation'/>
    <edge id = 'TerminologicalDictionary_extends_Thing' source = 'class_SBVR::TerminologicalDictionary' target = 'class_SBVR::Thing'/>
    <edge id = 'ThingInContext_extends_Segmentation' source = 'class_SBVR::ThingInContext' target = 'class_SBVR::Segmentation'/>
    <edge id = 'UniversalQuantification_extends_Quantification' source = 'class_SBVR::UniversalQuantification' target = 'class_SBVR::Quantification'/>
    <edge id = 'Viewpoint_extends_Thing' source = 'class_SBVR::Viewpoint' target = 'class_SBVR::Thing'/>
    <edge id = 'VocabularyNamespace_extends_Namespace' source = 'class_SBVR::VocabularyNamespace' target = 'class_SBVR::Namespace'/>
    <edge id = 'WhetherornotFormulation_extends_BinaryLogicalOperation' source = 'class_SBVR::WhetherornotFormulation' target = 'class_SBVR::BinaryLogicalOperation'/>
    <edge id = 'referenceEdge_Thing2Name' source = 'class_SBVR::Thing' target = 'class_SBVR::Name'/>
    <edge id = 'referenceEdge_Designation2Expression' source = 'class_SBVR::Designation' target = 'class_SBVR::Expression'/>
    <edge id = 'referenceEdge_Representation2Meaning' source = 'class_SBVR::Representation' target = 'class_SBVR::Meaning'/>
    <edge id = 'referenceEdge_Proposition2Statement' source = 'class_SBVR::Proposition' target = 'class_SBVR::Statement'/>
    <edge id = 'referenceEdge_ProjectingFormulation2Projection' source = 'class_SBVR::ProjectingFormulation' target = 'class_SBVR::Projection'/>
    <edge id = 'referenceEdge_Variable2LogicalFormulation' source = 'class_SBVR::Variable' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'referenceEdge_Concept2AttributiveNamespace' source = 'class_SBVR::Concept' target = 'class_SBVR::AttributiveNamespace'/>
    <edge id = 'referenceEdge_Namespace2Uri' source = 'class_SBVR::Namespace' target = 'class_SBVR::Uri'/>
    <edge id = 'referenceEdge_FactType2FactTypeForm' source = 'class_SBVR::FactType' target = 'class_SBVR::FactTypeForm'/>
    <edge id = 'referenceEdge_Placeholder2PositiveInteger' source = 'class_SBVR::Placeholder' target = 'class_SBVR::PositiveInteger'/>
    <edge id = 'referenceEdge_FactTypeRole2RoleBinding' source = 'class_SBVR::FactTypeRole' target = 'class_SBVR::RoleBinding'/>
    <edge id = 'referenceEdge_ReferenceScheme2FactTypeRole' source = 'class_SBVR::ReferenceScheme' target = 'class_SBVR::FactTypeRole'/>
    <edge id = 'referenceEdge_Set2NonnegativeInteger' source = 'class_SBVR::Set' target = 'class_SBVR::NonnegativeInteger'/>
    <edge id = 'referenceEdge_AtleastnQuantification2NonnegativeInteger' source = 'class_SBVR::AtleastnQuantification' target = 'class_SBVR::NonnegativeInteger'/>
    <edge id = 'referenceEdge_Quantification2LogicalFormulation' source = 'class_SBVR::Quantification' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'referenceEdge_AtmostnQuantification2NonnegativeInteger' source = 'class_SBVR::AtmostnQuantification' target = 'class_SBVR::NonnegativeInteger'/>
    <edge id = 'referenceEdge_AtomicFormulation2RoleBinding' source = 'class_SBVR::AtomicFormulation' target = 'class_SBVR::RoleBinding'/>
    <edge id = 'referenceEdge_BinaryLogicalOperation2LogicalFormulation' source = 'class_SBVR::BinaryLogicalOperation' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'referenceEdge_LogicalOperation2LogicalFormulation' source = 'class_SBVR::LogicalOperation' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'referenceEdge_BodyOfSharedMeanings2FactType' source = 'class_SBVR::BodyOfSharedMeanings' target = 'class_SBVR::FactType'/>
    <edge id = 'referenceEdge_ObjectType2CategorizationScheme' source = 'class_SBVR::ObjectType' target = 'class_SBVR::CategorizationScheme'/>
    <edge id = 'referenceEdge_Community2Uri' source = 'class_SBVR::Community' target = 'class_SBVR::Uri'/>
    <edge id = 'referenceEdge_ExactlynQuantification2NonnegativeInteger' source = 'class_SBVR::ExactlynQuantification' target = 'class_SBVR::NonnegativeInteger'/>
    <edge id = 'referenceEdge_FactTypeHasFactInFactModel2FactType' source = 'class_SBVR::FactTypeHasFactInFactModel' target = 'class_SBVR::FactType'/>
    <edge id = 'referenceEdge_Implication2LogicalFormulation' source = 'class_SBVR::Implication' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'referenceEdge_NumericRangeQuantification2NonnegativeInteger' source = 'class_SBVR::NumericRangeQuantification' target = 'class_SBVR::NonnegativeInteger'/>
    <edge id = 'referenceEdge_OperativeBusinessRule2LevelOfEnforcement' source = 'class_SBVR::OperativeBusinessRule' target = 'class_SBVR::LevelOfEnforcement'/>
    <edge id = 'referenceEdge_SemanticCommunity2SpeechCommunity' source = 'class_SBVR::SemanticCommunity' target = 'class_SBVR::SpeechCommunity'/>
    <edge id = 'referenceEdge_SpeechCommunityAdoptsAdoptedDefinitionCitingReference2SpeechCommunity' source = 'class_SBVR::SpeechCommunityAdoptsAdoptedDefinitionCitingReference' target = 'class_SBVR::SpeechCommunity'/>
    <edge id = 'referenceEdge_StateOfAffairsInvolvesThingInRole2StateOfAffairs' source = 'class_SBVR::StateOfAffairsInvolvesThingInRole' target = 'class_SBVR::StateOfAffairs'/>
    <edge id = 'referenceEdge_TerminologicalDictionary2Uri' source = 'class_SBVR::TerminologicalDictionary' target = 'class_SBVR::Uri'/>
    <edge id = 'referenceEdge_WhetherornotFormulation2LogicalFormulation' source = 'class_SBVR::WhetherornotFormulation' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'referenceEdge_AtleastnQuantificationHasMinimumCardinality2AtleastnQuantification' source = 'class_SBVR::AtleastnQuantificationHasMinimumCardinality' target = 'class_SBVR::AtleastnQuantification'/>
    <edge id = 'referenceEdge_AtmostnQuantificationHasMaximumCardinality2AtmostnQuantification' source = 'class_SBVR::AtmostnQuantificationHasMaximumCardinality' target = 'class_SBVR::AtmostnQuantification'/>
    <edge id = 'referenceEdge_AtomicFormulationIsBasedOnFactType2AtomicFormulation' source = 'class_SBVR::AtomicFormulationIsBasedOnFactType' target = 'class_SBVR::AtomicFormulation'/>
    <edge id = 'referenceEdge_AttributiveNamespaceIsForSubjectConcept2AttributiveNamespace' source = 'class_SBVR::AttributiveNamespaceIsForSubjectConcept' target = 'class_SBVR::AttributiveNamespace'/>
    <edge id = 'referenceEdge_AttributiveNamespaceIsWithinVocabularyNamespace2AttributiveNamespace' source = 'class_SBVR::AttributiveNamespaceIsWithinVocabularyNamespace' target = 'class_SBVR::AttributiveNamespace'/>
    <edge id = 'referenceEdge_BinaryLogicalOperationHasLogicalOperand12BinaryLogicalOperation' source = 'class_SBVR::BinaryLogicalOperationHasLogicalOperand1' target = 'class_SBVR::BinaryLogicalOperation'/>
    <edge id = 'referenceEdge_BinaryLogicalOperationHasLogicalOperand22BinaryLogicalOperation' source = 'class_SBVR::BinaryLogicalOperationHasLogicalOperand2' target = 'class_SBVR::BinaryLogicalOperation'/>
    <edge id = 'referenceEdge_BodyOfSharedMeaningsIncludesBodyOfSharedConcepts2BodyOfSharedMeanings' source = 'class_SBVR::BodyOfSharedMeaningsIncludesBodyOfSharedConcepts' target = 'class_SBVR::BodyOfSharedMeanings'/>
    <edge id = 'referenceEdge_BodyOfSharedMeaningsIncludesBodyOfSharedGuidance2BodyOfSharedMeanings' source = 'class_SBVR::BodyOfSharedMeaningsIncludesBodyOfSharedGuidance' target = 'class_SBVR::BodyOfSharedMeanings'/>
    <edge id = 'referenceEdge_BodyOfSharedMeaningsUnitesSemanticCommunity2BodyOfSharedMeanings' source = 'class_SBVR::BodyOfSharedMeaningsUnitesSemanticCommunity' target = 'class_SBVR::BodyOfSharedMeanings'/>
    <edge id = 'referenceEdge_BodyOfSharedMeanings1ContainsBodyOfSharedMeanings22BodyOfSharedMeanings' source = 'class_SBVR::BodyOfSharedMeanings1ContainsBodyOfSharedMeanings2' target = 'class_SBVR::BodyOfSharedMeanings'/>
    <edge id = 'referenceEdge_BusinessPolicyIsBasisForAdvice2BusinessPolicy' source = 'class_SBVR::BusinessPolicyIsBasisForAdvice' target = 'class_SBVR::BusinessPolicy'/>
    <edge id = 'referenceEdge_BusinessRuleIsDerivedFromBusinessPolicy2BusinessRule' source = 'class_SBVR::BusinessRuleIsDerivedFromBusinessPolicy' target = 'class_SBVR::BusinessRule'/>
    <edge id = 'referenceEdge_CategorizationSchemeContainsCategory2CategorizationScheme' source = 'class_SBVR::CategorizationSchemeContainsCategory' target = 'class_SBVR::CategorizationScheme'/>
    <edge id = 'referenceEdge_CategorizationSchemeIsForGeneralConcept2CategorizationScheme' source = 'class_SBVR::CategorizationSchemeIsForGeneralConcept' target = 'class_SBVR::CategorizationScheme'/>
    <edge id = 'referenceEdge_CategorizationTypeIsForGeneralConcept2CategorizationType' source = 'class_SBVR::CategorizationTypeIsForGeneralConcept' target = 'class_SBVR::CategorizationType'/>
    <edge id = 'referenceEdge_ClosedLogicalFormulationFormalizesStatement2ClosedLogicalFormulation' source = 'class_SBVR::ClosedLogicalFormulationFormalizesStatement' target = 'class_SBVR::ClosedLogicalFormulation'/>
    <edge id = 'referenceEdge_ClosedLogicalFormulationMeansProposition2ClosedLogicalFormulation' source = 'class_SBVR::ClosedLogicalFormulationMeansProposition' target = 'class_SBVR::ClosedLogicalFormulation'/>
    <edge id = 'referenceEdge_ClosedProjectionDefinesFactType2ClosedProjection' source = 'class_SBVR::ClosedProjectionDefinesFactType' target = 'class_SBVR::ClosedProjection'/>
    <edge id = 'referenceEdge_ClosedProjectionDefinesNounConcept2ClosedProjection' source = 'class_SBVR::ClosedProjectionDefinesNounConcept' target = 'class_SBVR::ClosedProjection'/>
    <edge id = 'referenceEdge_ClosedProjectionFormalizesDefinition2ClosedProjection' source = 'class_SBVR::ClosedProjectionFormalizesDefinition' target = 'class_SBVR::ClosedProjection'/>
    <edge id = 'referenceEdge_ClosedProjectionMeansQuestion2ClosedProjection' source = 'class_SBVR::ClosedProjectionMeansQuestion' target = 'class_SBVR::ClosedProjection'/>
    <edge id = 'referenceEdge_ClosedSemanticFormulationFormulatesMeaning2ClosedSemanticFormulation' source = 'class_SBVR::ClosedSemanticFormulationFormulatesMeaning' target = 'class_SBVR::ClosedSemanticFormulation'/>
    <edge id = 'referenceEdge_CommunicationContentIsComposedOfRepresentation2CommunicationContent' source = 'class_SBVR::CommunicationContentIsComposedOfRepresentation' target = 'class_SBVR::CommunicationContent'/>
    <edge id = 'referenceEdge_CommunityHasSubcommunity2Community' source = 'class_SBVR::CommunityHasSubcommunity' target = 'class_SBVR::Community'/>
    <edge id = 'referenceEdge_CommunityHasUri2Community' source = 'class_SBVR::CommunityHasUri' target = 'class_SBVR::Community'/>
    <edge id = 'referenceEdge_ConceptHasDefinition2Concept' source = 'class_SBVR::ConceptHasDefinition' target = 'class_SBVR::Concept'/>
    <edge id = 'referenceEdge_ConceptHasDesignation2Concept' source = 'class_SBVR::ConceptHasDesignation' target = 'class_SBVR::Concept'/>
    <edge id = 'referenceEdge_ConceptHasExtension2Concept' source = 'class_SBVR::ConceptHasExtension' target = 'class_SBVR::Concept'/>
    <edge id = 'referenceEdge_ConceptHasImpliedCharacteristic2Concept' source = 'class_SBVR::ConceptHasImpliedCharacteristic' target = 'class_SBVR::Concept'/>
    <edge id = 'referenceEdge_ConceptHasInstance2Concept' source = 'class_SBVR::ConceptHasInstance' target = 'class_SBVR::Concept'/>
    <edge id = 'referenceEdge_ConceptHasNecessaryCharacteristic2Concept' source = 'class_SBVR::ConceptHasNecessaryCharacteristic' target = 'class_SBVR::Concept'/>
    <edge id = 'referenceEdge_ConceptHasSharedUnderstandingBySemanticCommunity2Concept' source = 'class_SBVR::ConceptHasSharedUnderstandingBySemanticCommunity' target = 'class_SBVR::Concept'/>
    <edge id = 'referenceEdge_ConceptIncorporatesCharacteristic2Concept' source = 'class_SBVR::ConceptIncorporatesCharacteristic' target = 'class_SBVR::Concept'/>
    <edge id = 'referenceEdge_ConceptIsClosedInConceptualSchema2Concept' source = 'class_SBVR::ConceptIsClosedInConceptualSchema' target = 'class_SBVR::Concept'/>
    <edge id = 'referenceEdge_ConceptIsIncludedInBodyOfSharedConcepts2Concept' source = 'class_SBVR::ConceptIsIncludedInBodyOfSharedConcepts' target = 'class_SBVR::Concept'/>
    <edge id = 'referenceEdge_Concept1IsCoextensiveWithConcept22Concept' source = 'class_SBVR::Concept1IsCoextensiveWithConcept2' target = 'class_SBVR::Concept'/>
    <edge id = 'referenceEdge_Concept1SpecializesConcept22Concept' source = 'class_SBVR::Concept1SpecializesConcept2' target = 'class_SBVR::Concept'/>
    <edge id = 'referenceEdge_ConceptualSchemaIncludesConcept2ConceptualSchema' source = 'class_SBVR::ConceptualSchemaIncludesConcept' target = 'class_SBVR::ConceptualSchema'/>
    <edge id = 'referenceEdge_ConceptualSchemaIncludesFact2ConceptualSchema' source = 'class_SBVR::ConceptualSchemaIncludesFact' target = 'class_SBVR::ConceptualSchema'/>
    <edge id = 'referenceEdge_DefinitionServesAsDesignation2Definition' source = 'class_SBVR::DefinitionServesAsDesignation' target = 'class_SBVR::Definition'/>
    <edge id = 'referenceEdge_DescriptionPortraysMeaning2Description' source = 'class_SBVR::DescriptionPortraysMeaning' target = 'class_SBVR::Description'/>
    <edge id = 'referenceEdge_DescriptiveExampleIllustratesMeaning2DescriptiveExample' source = 'class_SBVR::DescriptiveExampleIllustratesMeaning' target = 'class_SBVR::DescriptiveExample'/>
    <edge id = 'referenceEdge_DesignationHasSignifier2Designation' source = 'class_SBVR::DesignationHasSignifier' target = 'class_SBVR::Designation'/>
    <edge id = 'referenceEdge_DesignationIsInNamespace2Designation' source = 'class_SBVR::DesignationIsInNamespace' target = 'class_SBVR::Designation'/>
    <edge id = 'referenceEdge_ElementOfGuidanceAuthorizesStateOfAffairs2ElementOfGuidance' source = 'class_SBVR::ElementOfGuidanceAuthorizesStateOfAffairs' target = 'class_SBVR::ElementOfGuidance'/>
    <edge id = 'referenceEdge_ElementOfGuidanceIsIncludedInBodyOfSharedGuidance2ElementOfGuidance' source = 'class_SBVR::ElementOfGuidanceIsIncludedInBodyOfSharedGuidance' target = 'class_SBVR::ElementOfGuidance'/>
    <edge id = 'referenceEdge_ElementOfGuidanceObligatesStateOfAffairs2ElementOfGuidance' source = 'class_SBVR::ElementOfGuidanceObligatesStateOfAffairs' target = 'class_SBVR::ElementOfGuidance'/>
    <edge id = 'referenceEdge_ElementOfGuidanceProhibitsStateOfAffairs2ElementOfGuidance' source = 'class_SBVR::ElementOfGuidanceProhibitsStateOfAffairs' target = 'class_SBVR::ElementOfGuidance'/>
    <edge id = 'referenceEdge_ExactlynQuantificationHasCardinality2ExactlynQuantification' source = 'class_SBVR::ExactlynQuantificationHasCardinality' target = 'class_SBVR::ExactlynQuantification'/>
    <edge id = 'referenceEdge_ExpressionRepresentsMeaning2Expression' source = 'class_SBVR::ExpressionRepresentsMeaning' target = 'class_SBVR::Expression'/>
    <edge id = 'referenceEdge_FactModelIncludesFact2FactModel' source = 'class_SBVR::FactModelIncludesFact' target = 'class_SBVR::FactModel'/>
    <edge id = 'referenceEdge_FactModelIsBasedOnConceptualSchema2FactModel' source = 'class_SBVR::FactModelIsBasedOnConceptualSchema' target = 'class_SBVR::FactModel'/>
    <edge id = 'referenceEdge_FactTypeFormDemonstratesDesignation2FactTypeForm' source = 'class_SBVR::FactTypeFormDemonstratesDesignation' target = 'class_SBVR::FactTypeForm'/>
    <edge id = 'referenceEdge_FactTypeFormIncorporatesFactSymbol2FactTypeForm' source = 'class_SBVR::FactTypeFormIncorporatesFactSymbol' target = 'class_SBVR::FactTypeForm'/>
    <edge id = 'referenceEdge_FactTypeFormIsInNamespace2FactTypeForm' source = 'class_SBVR::FactTypeFormIsInNamespace' target = 'class_SBVR::FactTypeForm'/>
    <edge id = 'referenceEdge_FactTypeHasFactTypeForm2FactType' source = 'class_SBVR::FactTypeHasFactTypeForm' target = 'class_SBVR::FactType'/>
    <edge id = 'referenceEdge_FactTypeInternallyIsClosedInConceptualSchema2FactType' source = 'class_SBVR::FactTypeInternallyIsClosedInConceptualSchema' target = 'class_SBVR::FactType'/>
    <edge id = 'referenceEdge_FactTypeIsElementaryInBodyOfSharedMeanings2FactType' source = 'class_SBVR::FactTypeIsElementaryInBodyOfSharedMeanings' target = 'class_SBVR::FactType'/>
    <edge id = 'referenceEdge_FactTypeRoleHasRoleBinding2FactTypeRole' source = 'class_SBVR::FactTypeRoleHasRoleBinding' target = 'class_SBVR::FactTypeRole'/>
    <edge id = 'referenceEdge_FactTypeRoleIsInFactType2FactTypeRole' source = 'class_SBVR::FactTypeRoleIsInFactType' target = 'class_SBVR::FactTypeRole'/>
    <edge id = 'referenceEdge_ImplicationHasAntecedent2Implication' source = 'class_SBVR::ImplicationHasAntecedent' target = 'class_SBVR::Implication'/>
    <edge id = 'referenceEdge_ImplicationHasConsequent2Implication' source = 'class_SBVR::ImplicationHasConsequent' target = 'class_SBVR::Implication'/>
    <edge id = 'referenceEdge_InstantiationFormulationBindsToBindableTarget2InstantiationFormulation' source = 'class_SBVR::InstantiationFormulationBindsToBindableTarget' target = 'class_SBVR::InstantiationFormulation'/>
    <edge id = 'referenceEdge_InstantiationFormulationConsidersConcept2InstantiationFormulation' source = 'class_SBVR::InstantiationFormulationConsidersConcept' target = 'class_SBVR::InstantiationFormulation'/>
    <edge id = 'referenceEdge_IntensionalDefinitionUsesDelimitingCharacteristic2IntensionalDefinition' source = 'class_SBVR::IntensionalDefinitionUsesDelimitingCharacteristic' target = 'class_SBVR::IntensionalDefinition'/>
    <edge id = 'referenceEdge_LogicalFormulationConstrainsProjection2LogicalFormulation' source = 'class_SBVR::LogicalFormulationConstrainsProjection' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'referenceEdge_LogicalFormulationRestrictsVariable2LogicalFormulation' source = 'class_SBVR::LogicalFormulationRestrictsVariable' target = 'class_SBVR::LogicalFormulation'/>
    <edge id = 'referenceEdge_LogicalOperationHasLogicalOperand2LogicalOperation' source = 'class_SBVR::LogicalOperationHasLogicalOperand' target = 'class_SBVR::LogicalOperation'/>
    <edge id = 'referenceEdge_MeaningCorrespondsToThing2Meaning' source = 'class_SBVR::MeaningCorrespondsToThing' target = 'class_SBVR::Meaning'/>
    <edge id = 'referenceEdge_ModalFormulationEmbedsLogicalFormulation2ModalFormulation' source = 'class_SBVR::ModalFormulationEmbedsLogicalFormulation' target = 'class_SBVR::ModalFormulation'/>
    <edge id = 'referenceEdge_NameReferencesThing2Name' source = 'class_SBVR::NameReferencesThing' target = 'class_SBVR::Name'/>
    <edge id = 'referenceEdge_NamespaceHasUri2Namespace' source = 'class_SBVR::NamespaceHasUri' target = 'class_SBVR::Namespace'/>
    <edge id = 'referenceEdge_Namespace1IncorporatesNamespace22Namespace' source = 'class_SBVR::Namespace1IncorporatesNamespace2' target = 'class_SBVR::Namespace'/>
    <edge id = 'referenceEdge_NoteCommentsOnMeaning2Note' source = 'class_SBVR::NoteCommentsOnMeaning' target = 'class_SBVR::Note'/>
    <edge id = 'referenceEdge_NumericRangeQuantificationHasMaximumCardinality2NumericRangeQuantification' source = 'class_SBVR::NumericRangeQuantificationHasMaximumCardinality' target = 'class_SBVR::NumericRangeQuantification'/>
    <edge id = 'referenceEdge_NumericRangeQuantificationHasMinimumCardinality2NumericRangeQuantification' source = 'class_SBVR::NumericRangeQuantificationHasMinimumCardinality' target = 'class_SBVR::NumericRangeQuantification'/>
    <edge id = 'referenceEdge_ObjectificationBindsToBindableTarget2Objectification' source = 'class_SBVR::ObjectificationBindsToBindableTarget' target = 'class_SBVR::Objectification'/>
    <edge id = 'referenceEdge_ObjectificationConsidersLogicalFormulation2Objectification' source = 'class_SBVR::ObjectificationConsidersLogicalFormulation' target = 'class_SBVR::Objectification'/>
    <edge id = 'referenceEdge_OperativeBusinessRuleHasLevelOfEnforcement2OperativeBusinessRule' source = 'class_SBVR::OperativeBusinessRuleHasLevelOfEnforcement' target = 'class_SBVR::OperativeBusinessRule'/>
    <edge id = 'referenceEdge_PlaceholderIsAtStartingCharacterPosition2Placeholder' source = 'class_SBVR::PlaceholderIsAtStartingCharacterPosition' target = 'class_SBVR::Placeholder'/>
    <edge id = 'referenceEdge_PlaceholderIsInFactTypeForm2Placeholder' source = 'class_SBVR::PlaceholderIsInFactTypeForm' target = 'class_SBVR::Placeholder'/>
    <edge id = 'referenceEdge_PlaceholderUsesDesignation2Placeholder' source = 'class_SBVR::PlaceholderUsesDesignation' target = 'class_SBVR::Placeholder'/>
    <edge id = 'referenceEdge_ProjectingFormulationBindsToBindableTarget2ProjectingFormulation' source = 'class_SBVR::ProjectingFormulationBindsToBindableTarget' target = 'class_SBVR::ProjectingFormulation'/>
    <edge id = 'referenceEdge_ProjectingFormulationHasProjection2ProjectingFormulation' source = 'class_SBVR::ProjectingFormulationHasProjection' target = 'class_SBVR::ProjectingFormulation'/>
    <edge id = 'referenceEdge_ProjectionHasAuxiliaryVariable2Projection' source = 'class_SBVR::ProjectionHasAuxiliaryVariable' target = 'class_SBVR::Projection'/>
    <edge id = 'referenceEdge_ProjectionIsOnVariable2Projection' source = 'class_SBVR::ProjectionIsOnVariable' target = 'class_SBVR::Projection'/>
    <edge id = 'referenceEdge_PropositionIsBasedOnFactType2Proposition' source = 'class_SBVR::PropositionIsBasedOnFactType' target = 'class_SBVR::Proposition'/>
    <edge id = 'referenceEdge_PropositionNominalizationBindsToBindableTarget2PropositionNominalization' source = 'class_SBVR::PropositionNominalizationBindsToBindableTarget' target = 'class_SBVR::PropositionNominalization'/>
    <edge id = 'referenceEdge_PropositionNominalizationConsidersLogicalFormulation2PropositionNominalization' source = 'class_SBVR::PropositionNominalizationConsidersLogicalFormulation' target = 'class_SBVR::PropositionNominalization'/>
    <edge id = 'referenceEdge_QuantificationIntroducesVariable2Quantification' source = 'class_SBVR::QuantificationIntroducesVariable' target = 'class_SBVR::Quantification'/>
    <edge id = 'referenceEdge_QuantificationScopesOverLogicalFormulation2Quantification' source = 'class_SBVR::QuantificationScopesOverLogicalFormulation' target = 'class_SBVR::Quantification'/>
    <edge id = 'referenceEdge_Quantity1EqualsQuantity22Quantity' source = 'class_SBVR::Quantity1EqualsQuantity2' target = 'class_SBVR::Quantity'/>
    <edge id = 'referenceEdge_Quantity1IsLessThanQuantity22Quantity' source = 'class_SBVR::Quantity1IsLessThanQuantity2' target = 'class_SBVR::Quantity'/>
    <edge id = 'referenceEdge_ReferencePointsToInformationSource2Reference' source = 'class_SBVR::ReferencePointsToInformationSource' target = 'class_SBVR::Reference'/>
    <edge id = 'referenceEdge_ReferenceSchemeExtensionallyUsesFactTypeRole2ReferenceScheme' source = 'class_SBVR::ReferenceSchemeExtensionallyUsesFactTypeRole' target = 'class_SBVR::ReferenceScheme'/>
    <edge id = 'referenceEdge_ReferenceSchemeIsForConcept2ReferenceScheme' source = 'class_SBVR::ReferenceSchemeIsForConcept' target = 'class_SBVR::ReferenceScheme'/>
    <edge id = 'referenceEdge_ReferenceSchemeSimplyUsesFactTypeRole2ReferenceScheme' source = 'class_SBVR::ReferenceSchemeSimplyUsesFactTypeRole' target = 'class_SBVR::ReferenceScheme'/>
    <edge id = 'referenceEdge_ReferenceSchemeUsesCharacteristic2ReferenceScheme' source = 'class_SBVR::ReferenceSchemeUsesCharacteristic' target = 'class_SBVR::ReferenceScheme'/>
    <edge id = 'referenceEdge_ReferenceSupportsMeaning2Reference' source = 'class_SBVR::ReferenceSupportsMeaning' target = 'class_SBVR::Reference'/>
    <edge id = 'referenceEdge_RepresentationHasExpression2Representation' source = 'class_SBVR::RepresentationHasExpression' target = 'class_SBVR::Representation'/>
    <edge id = 'referenceEdge_RepresentationIsInDesignationContext2Representation' source = 'class_SBVR::RepresentationIsInDesignationContext' target = 'class_SBVR::Representation'/>
    <edge id = 'referenceEdge_RepresentationIsInSubjectField2Representation' source = 'class_SBVR::RepresentationIsInSubjectField' target = 'class_SBVR::Representation'/>
    <edge id = 'referenceEdge_RepresentationRepresentsMeaning2Representation' source = 'class_SBVR::RepresentationRepresentsMeaning' target = 'class_SBVR::Representation'/>
    <edge id = 'referenceEdge_RepresentationUsesVocabulary2Representation' source = 'class_SBVR::RepresentationUsesVocabulary' target = 'class_SBVR::Representation'/>
    <edge id = 'referenceEdge_ResIsSensoryManifestationOfSignifier2Res' source = 'class_SBVR::ResIsSensoryManifestationOfSignifier' target = 'class_SBVR::Res'/>
    <edge id = 'referenceEdge_RoleBindingBindsToBindableTarget2RoleBinding' source = 'class_SBVR::RoleBindingBindsToBindableTarget' target = 'class_SBVR::RoleBinding'/>
    <edge id = 'referenceEdge_RoleBindingOccursInAtomicFormulation2RoleBinding' source = 'class_SBVR::RoleBindingOccursInAtomicFormulation' target = 'class_SBVR::RoleBinding'/>
    <edge id = 'referenceEdge_RoleRangesOverObjectType2Role' source = 'class_SBVR::RoleRangesOverObjectType' target = 'class_SBVR::Role'/>
    <edge id = 'referenceEdge_RulebookIncludesRepresentation2Rulebook' source = 'class_SBVR::RulebookIncludesRepresentation' target = 'class_SBVR::Rulebook'/>
    <edge id = 'referenceEdge_SemanticCommunityHasSpeechCommunity2SemanticCommunity' source = 'class_SBVR::SemanticCommunityHasSpeechCommunity' target = 'class_SBVR::SemanticCommunity'/>
    <edge id = 'referenceEdge_SetHasCardinality2Set' source = 'class_SBVR::SetHasCardinality' target = 'class_SBVR::Set'/>
    <edge id = 'referenceEdge_SpeechCommunityDeterminesRulebook2SpeechCommunity' source = 'class_SBVR::SpeechCommunityDeterminesRulebook' target = 'class_SBVR::SpeechCommunity'/>
    <edge id = 'referenceEdge_SpeechCommunityOwnsOwnedDefinition2SpeechCommunity' source = 'class_SBVR::SpeechCommunityOwnsOwnedDefinition' target = 'class_SBVR::SpeechCommunity'/>
    <edge id = 'referenceEdge_SpeechCommunityOwnsVocabulary2SpeechCommunity' source = 'class_SBVR::SpeechCommunityOwnsVocabulary' target = 'class_SBVR::SpeechCommunity'/>
    <edge id = 'referenceEdge_SpeechCommunityRegulatesItsUsageOfSignifier2SpeechCommunity' source = 'class_SBVR::SpeechCommunityRegulatesItsUsageOfSignifier' target = 'class_SBVR::SpeechCommunity'/>
    <edge id = 'referenceEdge_SpeechCommunityUsesLanguage2SpeechCommunity' source = 'class_SBVR::SpeechCommunityUsesLanguage' target = 'class_SBVR::SpeechCommunity'/>
    <edge id = 'referenceEdge_SpeechCommunityUsesVocabulary2SpeechCommunity' source = 'class_SBVR::SpeechCommunityUsesVocabulary' target = 'class_SBVR::SpeechCommunity'/>
    <edge id = 'referenceEdge_StatementExpressesProposition2Statement' source = 'class_SBVR::StatementExpressesProposition' target = 'class_SBVR::Statement'/>
    <edge id = 'referenceEdge_TermDenotesThing2Term' source = 'class_SBVR::TermDenotesThing' target = 'class_SBVR::Term'/>
    <edge id = 'referenceEdge_TerminologicalDictionaryExpressesBodyOfSharedMeanings2TerminologicalDictionary' source = 'class_SBVR::TerminologicalDictionaryExpressesBodyOfSharedMeanings' target = 'class_SBVR::TerminologicalDictionary'/>
    <edge id = 'referenceEdge_TerminologicalDictionaryHasUri2TerminologicalDictionary' source = 'class_SBVR::TerminologicalDictionaryHasUri' target = 'class_SBVR::TerminologicalDictionary'/>
    <edge id = 'referenceEdge_TerminologicalDictionaryPresentsVocabulary2TerminologicalDictionary' source = 'class_SBVR::TerminologicalDictionaryPresentsVocabulary' target = 'class_SBVR::TerminologicalDictionary'/>
    <edge id = 'referenceEdge_ThingIsInSet2Thing' source = 'class_SBVR::ThingIsInSet' target = 'class_SBVR::Thing'/>
    <edge id = 'referenceEdge_Thing1IsThing22Thing' source = 'class_SBVR::Thing1IsThing2' target = 'class_SBVR::Thing'/>
    <edge id = 'referenceEdge_VariableHasProjectionPosition2Variable' source = 'class_SBVR::VariableHasProjectionPosition' target = 'class_SBVR::Variable'/>
    <edge id = 'referenceEdge_VariableIsFreesWithinSemanticFormulation2Variable' source = 'class_SBVR::VariableIsFreesWithinSemanticFormulation' target = 'class_SBVR::Variable'/>
    <edge id = 'referenceEdge_VariableMapsToFactTypeRole2Variable' source = 'class_SBVR::VariableMapsToFactTypeRole' target = 'class_SBVR::Variable'/>
    <edge id = 'referenceEdge_VariableRangesOverConcept2Variable' source = 'class_SBVR::VariableRangesOverConcept' target = 'class_SBVR::Variable'/>
    <edge id = 'referenceEdge_VocabularyIsDesignedForSpeechCommunity2Vocabulary' source = 'class_SBVR::VocabularyIsDesignedForSpeechCommunity' target = 'class_SBVR::Vocabulary'/>
    <edge id = 'referenceEdge_VocabularyIsExpressedInLanguage2Vocabulary' source = 'class_SBVR::VocabularyIsExpressedInLanguage' target = 'class_SBVR::Vocabulary'/>
    <edge id = 'referenceEdge_VocabularyIsUsedToExpressBodyOfSharedMeanings2Vocabulary' source = 'class_SBVR::VocabularyIsUsedToExpressBodyOfSharedMeanings' target = 'class_SBVR::Vocabulary'/>
    <edge id = 'referenceEdge_VocabularyNamespaceIsDerivedFromVocabulary2VocabularyNamespace' source = 'class_SBVR::VocabularyNamespaceIsDerivedFromVocabulary' target = 'class_SBVR::VocabularyNamespace'/>
    <edge id = 'referenceEdge_VocabularyNamespaceIsForLanguage2VocabularyNamespace' source = 'class_SBVR::VocabularyNamespaceIsForLanguage' target = 'class_SBVR::VocabularyNamespace'/>
    <edge id = 'referenceEdge_VocabularyNamespaceIsSpecificToDesignationContext2VocabularyNamespace' source = 'class_SBVR::VocabularyNamespaceIsSpecificToDesignationContext' target = 'class_SBVR::VocabularyNamespace'/>
    <edge id = 'referenceEdge_VocabularyNamespaceIsSpecificToSubjectField2VocabularyNamespace' source = 'class_SBVR::VocabularyNamespaceIsSpecificToSubjectField' target = 'class_SBVR::VocabularyNamespace'/>
    <edge id = 'referenceEdge_Vocabulary1IncorporatesVocabulary22Vocabulary' source = 'class_SBVR::Vocabulary1IncorporatesVocabulary2' target = 'class_SBVR::Vocabulary'/>
    <edge id = 'referenceEdge_WhetherornotFormulationHasConsequent2WhetherornotFormulation' source = 'class_SBVR::WhetherornotFormulationHasConsequent' target = 'class_SBVR::WhetherornotFormulation'/>
    <edge id = 'referenceEdge_WhetherornotFormulationHasInconsequent2WhetherornotFormulation' source = 'class_SBVR::WhetherornotFormulationHasInconsequent' target = 'class_SBVR::WhetherornotFormulation'/>
    <node id = 'class_SBVR::Actuality'>
      <data key = 'label'>class_SBVR::Actuality</data>
    </node>
    <node id = 'class_SBVR::StateOfAffairs'>
      <data key = 'label'>class_SBVR::StateOfAffairs</data>
    </node>
    <node id = 'class_SBVR::Thing'>
      <data key = 'label'>class_SBVR::Thing</data>
    </node>
    <node id = 'class_SBVR::Name'>
      <data key = 'label'>class_SBVR::Name</data>
    </node>
    <node id = 'class_SBVR::Designation'>
      <data key = 'label'>class_SBVR::Designation</data>
    </node>
    <node id = 'class_SBVR::Representation'>
      <data key = 'label'>class_SBVR::Representation</data>
    </node>
    <node id = 'class_SBVR::Meaning'>
      <data key = 'label'>class_SBVR::Meaning</data>
    </node>
    <node id = 'class_SBVR::Expression'>
      <data key = 'label'>class_SBVR::Expression</data>
    </node>
    <node id = 'class_SBVR::BindableTarget'>
      <data key = 'label'>class_SBVR::BindableTarget</data>
    </node>
    <node id = 'class_SBVR::AdoptedDefinition'>
      <data key = 'label'>class_SBVR::AdoptedDefinition</data>
    </node>
    <node id = 'class_SBVR::Definition'>
      <data key = 'label'>class_SBVR::Definition</data>
    </node>
    <node id = 'class_SBVR::Advice'>
      <data key = 'label'>class_SBVR::Advice</data>
    </node>
    <node id = 'class_SBVR::ElementOfGuidance'>
      <data key = 'label'>class_SBVR::ElementOfGuidance</data>
    </node>
    <node id = 'class_SBVR::Proposition'>
      <data key = 'label'>class_SBVR::Proposition</data>
    </node>
    <node id = 'class_SBVR::Statement'>
      <data key = 'label'>class_SBVR::Statement</data>
    </node>
    <node id = 'class_SBVR::AdviceOfContingency'>
      <data key = 'label'>class_SBVR::AdviceOfContingency</data>
    </node>
    <node id = 'class_SBVR::AdviceOfPossibility'>
      <data key = 'label'>class_SBVR::AdviceOfPossibility</data>
    </node>
    <node id = 'class_SBVR::AdviceOfOptionality'>
      <data key = 'label'>class_SBVR::AdviceOfOptionality</data>
    </node>
    <node id = 'class_SBVR::AdviceOfPermission'>
      <data key = 'label'>class_SBVR::AdviceOfPermission</data>
    </node>
    <node id = 'class_SBVR::AdviceStatement'>
      <data key = 'label'>class_SBVR::AdviceStatement</data>
    </node>
    <node id = 'class_SBVR::GuidanceStatement'>
      <data key = 'label'>class_SBVR::GuidanceStatement</data>
    </node>
    <node id = 'class_SBVR::AggregationFormulation'>
      <data key = 'label'>class_SBVR::AggregationFormulation</data>
    </node>
    <node id = 'class_SBVR::ProjectingFormulation'>
      <data key = 'label'>class_SBVR::ProjectingFormulation</data>
    </node>
    <node id = 'class_SBVR::LogicalFormulation'>
      <data key = 'label'>class_SBVR::LogicalFormulation</data>
    </node>
    <node id = 'class_SBVR::SemanticFormulation'>
      <data key = 'label'>class_SBVR::SemanticFormulation</data>
    </node>
    <node id = 'class_SBVR::Projection'>
      <data key = 'label'>class_SBVR::Projection</data>
    </node>
    <node id = 'class_SBVR::Variable'>
      <data key = 'label'>class_SBVR::Variable</data>
    </node>
    <node id = 'class_SBVR::PositiveInteger'>
      <data key = 'label'>class_SBVR::PositiveInteger</data>
    </node>
    <node id = 'class_SBVR::NonnegativeInteger'>
      <data key = 'label'>class_SBVR::NonnegativeInteger</data>
    </node>
    <node id = 'class_SBVR::Integer'>
      <data key = 'label'>class_SBVR::Integer</data>
    </node>
    <node id = 'class_SBVR::Number'>
      <data key = 'label'>class_SBVR::Number</data>
    </node>
    <node id = 'class_SBVR::Quantity'>
      <data key = 'label'>class_SBVR::Quantity</data>
    </node>
    <node id = 'class_SBVR::NounConcept'>
      <data key = 'label'>class_SBVR::NounConcept</data>
    </node>
    <node id = 'class_SBVR::Concept'>
      <data key = 'label'>class_SBVR::Concept</data>
    </node>
    <node id = 'class_SBVR::AttributiveNamespace'>
      <data key = 'label'>class_SBVR::AttributiveNamespace</data>
    </node>
    <node id = 'class_SBVR::Namespace'>
      <data key = 'label'>class_SBVR::Namespace</data>
    </node>
    <node id = 'class_SBVR::Uri'>
      <data key = 'label'>class_SBVR::Uri</data>
    </node>
    <node id = 'class_SBVR::Text'>
      <data key = 'label'>class_SBVR::Text</data>
    </node>
    <node id = 'class_SBVR::Characteristic'>
      <data key = 'label'>class_SBVR::Characteristic</data>
    </node>
    <node id = 'class_SBVR::FactType'>
      <data key = 'label'>class_SBVR::FactType</data>
    </node>
    <node id = 'class_SBVR::FactTypeForm'>
      <data key = 'label'>class_SBVR::FactTypeForm</data>
    </node>
    <node id = 'class_SBVR::Placeholder'>
      <data key = 'label'>class_SBVR::Placeholder</data>
    </node>
    <node id = 'class_SBVR::FactTypeRole'>
      <data key = 'label'>class_SBVR::FactTypeRole</data>
    </node>
    <node id = 'class_SBVR::Role'>
      <data key = 'label'>class_SBVR::Role</data>
    </node>
    <node id = 'class_SBVR::RoleBinding'>
      <data key = 'label'>class_SBVR::RoleBinding</data>
    </node>
    <node id = 'class_SBVR::ReferenceScheme'>
      <data key = 'label'>class_SBVR::ReferenceScheme</data>
    </node>
    <node id = 'class_SBVR::Set'>
      <data key = 'label'>class_SBVR::Set</data>
    </node>
    <node id = 'class_SBVR::AuxiliaryVariable'>
      <data key = 'label'>class_SBVR::AuxiliaryVariable</data>
    </node>
    <node id = 'class_SBVR::AnswerNominalization'>
      <data key = 'label'>class_SBVR::AnswerNominalization</data>
    </node>
    <node id = 'class_SBVR::AssociativeFactType'>
      <data key = 'label'>class_SBVR::AssociativeFactType</data>
    </node>
    <node id = 'class_SBVR::AssortmentFactType'>
      <data key = 'label'>class_SBVR::AssortmentFactType</data>
    </node>
    <node id = 'class_SBVR::AtleastnQuantification'>
      <data key = 'label'>class_SBVR::AtleastnQuantification</data>
    </node>
    <node id = 'class_SBVR::Quantification'>
      <data key = 'label'>class_SBVR::Quantification</data>
    </node>
    <node id = 'class_SBVR::AtmostnQuantification'>
      <data key = 'label'>class_SBVR::AtmostnQuantification</data>
    </node>
    <node id = 'class_SBVR::AtmostoneQuantification'>
      <data key = 'label'>class_SBVR::AtmostoneQuantification</data>
    </node>
    <node id = 'class_SBVR::AtomicFormulation'>
      <data key = 'label'>class_SBVR::AtomicFormulation</data>
    </node>
    <node id = 'class_SBVR::BagProjection'>
      <data key = 'label'>class_SBVR::BagProjection</data>
    </node>
    <node id = 'class_SBVR::BinaryFactType'>
      <data key = 'label'>class_SBVR::BinaryFactType</data>
    </node>
    <node id = 'class_SBVR::BinaryLogicalOperation'>
      <data key = 'label'>class_SBVR::BinaryLogicalOperation</data>
    </node>
    <node id = 'class_SBVR::LogicalOperation'>
      <data key = 'label'>class_SBVR::LogicalOperation</data>
    </node>
    <node id = 'class_SBVR::BodyOfSharedConcepts'>
      <data key = 'label'>class_SBVR::BodyOfSharedConcepts</data>
    </node>
    <node id = 'class_SBVR::BodyOfSharedGuidance'>
      <data key = 'label'>class_SBVR::BodyOfSharedGuidance</data>
    </node>
    <node id = 'class_SBVR::BodyOfSharedMeanings'>
      <data key = 'label'>class_SBVR::BodyOfSharedMeanings</data>
    </node>
    <node id = 'class_SBVR::BusinessPolicy'>
      <data key = 'label'>class_SBVR::BusinessPolicy</data>
    </node>
    <node id = 'class_SBVR::ElementOfGovernance'>
      <data key = 'label'>class_SBVR::ElementOfGovernance</data>
    </node>
    <node id = 'class_SBVR::BusinessPolicyStatement'>
      <data key = 'label'>class_SBVR::BusinessPolicyStatement</data>
    </node>
    <node id = 'class_SBVR::BusinessRule'>
      <data key = 'label'>class_SBVR::BusinessRule</data>
    </node>
    <node id = 'class_SBVR::Rule'>
      <data key = 'label'>class_SBVR::Rule</data>
    </node>
    <node id = 'class_SBVR::BusinessVocabulary'>
      <data key = 'label'>class_SBVR::BusinessVocabulary</data>
    </node>
    <node id = 'class_SBVR::Vocabulary'>
      <data key = 'label'>class_SBVR::Vocabulary</data>
    </node>
    <node id = 'class_SBVR::CategorizationFactType'>
      <data key = 'label'>class_SBVR::CategorizationFactType</data>
    </node>
    <node id = 'class_SBVR::SpecializationFactType'>
      <data key = 'label'>class_SBVR::SpecializationFactType</data>
    </node>
    <node id = 'class_SBVR::CategorizationScheme'>
      <data key = 'label'>class_SBVR::CategorizationScheme</data>
    </node>
    <node id = 'class_SBVR::CategorizationType'>
      <data key = 'label'>class_SBVR::CategorizationType</data>
    </node>
    <node id = 'class_SBVR::CharacteristicType'>
      <data key = 'label'>class_SBVR::CharacteristicType</data>
    </node>
    <node id = 'class_SBVR::ConceptType'>
      <data key = 'label'>class_SBVR::ConceptType</data>
    </node>
    <node id = 'class_SBVR::ObjectType'>
      <data key = 'label'>class_SBVR::ObjectType</data>
    </node>
    <node id = 'class_SBVR::ClosedLogicalFormulation'>
      <data key = 'label'>class_SBVR::ClosedLogicalFormulation</data>
    </node>
    <node id = 'class_SBVR::ClosedSemanticFormulation'>
      <data key = 'label'>class_SBVR::ClosedSemanticFormulation</data>
    </node>
    <node id = 'class_SBVR::ClosedProjection'>
      <data key = 'label'>class_SBVR::ClosedProjection</data>
    </node>
    <node id = 'class_SBVR::CommunicationContent'>
      <data key = 'label'>class_SBVR::CommunicationContent</data>
    </node>
    <node id = 'class_SBVR::Community'>
      <data key = 'label'>class_SBVR::Community</data>
    </node>
    <node id = 'class_SBVR::ConceptOfThingAsComposite'>
      <data key = 'label'>class_SBVR::ConceptOfThingAsComposite</data>
    </node>
    <node id = 'class_SBVR::ConceptOfThingAsContinuant'>
      <data key = 'label'>class_SBVR::ConceptOfThingAsContinuant</data>
    </node>
    <node id = 'class_SBVR::ConceptOfThingAsDeveloped'>
      <data key = 'label'>class_SBVR::ConceptOfThingAsDeveloped</data>
    </node>
    <node id = 'class_SBVR::ConceptOfThingAsOccurrent'>
      <data key = 'label'>class_SBVR::ConceptOfThingAsOccurrent</data>
    </node>
    <node id = 'class_SBVR::ConceptOfThingAsPrimitive'>
      <data key = 'label'>class_SBVR::ConceptOfThingAsPrimitive</data>
    </node>
    <node id = 'class_SBVR::ConceptOfThingAsUnitary'>
      <data key = 'label'>class_SBVR::ConceptOfThingAsUnitary</data>
    </node>
    <node id = 'class_SBVR::ConceptOfThingExistingDependently'>
      <data key = 'label'>class_SBVR::ConceptOfThingExistingDependently</data>
    </node>
    <node id = 'class_SBVR::ConceptOfThingExistingIndependently'>
      <data key = 'label'>class_SBVR::ConceptOfThingExistingIndependently</data>
    </node>
    <node id = 'class_SBVR::ConceptualSchema'>
      <data key = 'label'>class_SBVR::ConceptualSchema</data>
    </node>
    <node id = 'class_SBVR::Conjunction'>
      <data key = 'label'>class_SBVR::Conjunction</data>
    </node>
    <node id = 'class_SBVR::ContextOfThing'>
      <data key = 'label'>class_SBVR::ContextOfThing</data>
    </node>
    <node id = 'class_SBVR::Segmentation'>
      <data key = 'label'>class_SBVR::Segmentation</data>
    </node>
    <node id = 'class_SBVR::ContextualizationFactType'>
      <data key = 'label'>class_SBVR::ContextualizationFactType</data>
    </node>
    <node id = 'class_SBVR::ContextualizedConcept'>
      <data key = 'label'>class_SBVR::ContextualizedConcept</data>
    </node>
    <node id = 'class_SBVR::ContingencyStatement'>
      <data key = 'label'>class_SBVR::ContingencyStatement</data>
    </node>
    <node id = 'class_SBVR::StatementOfAdviceOfPossibility'>
      <data key = 'label'>class_SBVR::StatementOfAdviceOfPossibility</data>
    </node>
    <node id = 'class_SBVR::DefiniteDescription'>
      <data key = 'label'>class_SBVR::DefiniteDescription</data>
    </node>
    <node id = 'class_SBVR::IntensionalDefinition'>
      <data key = 'label'>class_SBVR::IntensionalDefinition</data>
    </node>
    <node id = 'class_SBVR::DerivableConcept'>
      <data key = 'label'>class_SBVR::DerivableConcept</data>
    </node>
    <node id = 'class_SBVR::Description'>
      <data key = 'label'>class_SBVR::Description</data>
    </node>
    <node id = 'class_SBVR::DescriptiveExample'>
      <data key = 'label'>class_SBVR::DescriptiveExample</data>
    </node>
    <node id = 'class_SBVR::Disjunction'>
      <data key = 'label'>class_SBVR::Disjunction</data>
    </node>
    <node id = 'class_SBVR::Equivalence'>
      <data key = 'label'>class_SBVR::Equivalence</data>
    </node>
    <node id = 'class_SBVR::ExactlynQuantification'>
      <data key = 'label'>class_SBVR::ExactlynQuantification</data>
    </node>
    <node id = 'class_SBVR::ExactlyoneQuantification'>
      <data key = 'label'>class_SBVR::ExactlyoneQuantification</data>
    </node>
    <node id = 'class_SBVR::ExclusiveDisjunction'>
      <data key = 'label'>class_SBVR::ExclusiveDisjunction</data>
    </node>
    <node id = 'class_SBVR::ExistentialQuantification'>
      <data key = 'label'>class_SBVR::ExistentialQuantification</data>
    </node>
    <node id = 'class_SBVR::ExplicitnessOfRepresentation'>
      <data key = 'label'>class_SBVR::ExplicitnessOfRepresentation</data>
    </node>
    <node id = 'class_SBVR::ExtensionalDefinition'>
      <data key = 'label'>class_SBVR::ExtensionalDefinition</data>
    </node>
    <node id = 'class_SBVR::Facet'>
      <data key = 'label'>class_SBVR::Facet</data>
    </node>
    <node id = 'class_SBVR::Fact'>
      <data key = 'label'>class_SBVR::Fact</data>
    </node>
    <node id = 'class_SBVR::FactModel'>
      <data key = 'label'>class_SBVR::FactModel</data>
    </node>
    <node id = 'class_SBVR::FactSymbol'>
      <data key = 'label'>class_SBVR::FactSymbol</data>
    </node>
    <node id = 'class_SBVR::FactTypeHasFactInFactModel'>
      <data key = 'label'>class_SBVR::FactTypeHasFactInFactModel</data>
    </node>
    <node id = 'class_SBVR::FactTypeNominalization'>
      <data key = 'label'>class_SBVR::FactTypeNominalization</data>
    </node>
    <node id = 'class_SBVR::FactTypeRoleDesignation'>
      <data key = 'label'>class_SBVR::FactTypeRoleDesignation</data>
    </node>
    <node id = 'class_SBVR::FactTypeTemplating'>
      <data key = 'label'>class_SBVR::FactTypeTemplating</data>
    </node>
    <node id = 'class_SBVR::FormalRepresentation'>
      <data key = 'label'>class_SBVR::FormalRepresentation</data>
    </node>
    <node id = 'class_SBVR::FundamentalConcept'>
      <data key = 'label'>class_SBVR::FundamentalConcept</data>
    </node>
    <node id = 'class_SBVR::Icon'>
      <data key = 'label'>class_SBVR::Icon</data>
    </node>
    <node id = 'class_SBVR::NonverbalDesignation'>
      <data key = 'label'>class_SBVR::NonverbalDesignation</data>
    </node>
    <node id = 'class_SBVR::Implication'>
      <data key = 'label'>class_SBVR::Implication</data>
    </node>
    <node id = 'class_SBVR::ImpossibilityStatement'>
      <data key = 'label'>class_SBVR::ImpossibilityStatement</data>
    </node>
    <node id = 'class_SBVR::StructuralRuleStatement'>
      <data key = 'label'>class_SBVR::StructuralRuleStatement</data>
    </node>
    <node id = 'class_SBVR::RuleStatement'>
      <data key = 'label'>class_SBVR::RuleStatement</data>
    </node>
    <node id = 'class_SBVR::IndividualConcept'>
      <data key = 'label'>class_SBVR::IndividualConcept</data>
    </node>
    <node id = 'class_SBVR::InformalRepresentation'>
      <data key = 'label'>class_SBVR::InformalRepresentation</data>
    </node>
    <node id = 'class_SBVR::InstantiationFormulation'>
      <data key = 'label'>class_SBVR::InstantiationFormulation</data>
    </node>
    <node id = 'class_SBVR::IsfacetofFactType'>
      <data key = 'label'>class_SBVR::IsfacetofFactType</data>
    </node>
    <node id = 'class_SBVR::IspropertyofFactType'>
      <data key = 'label'>class_SBVR::IspropertyofFactType</data>
    </node>
    <node id = 'class_SBVR::IsroleofFactType'>
      <data key = 'label'>class_SBVR::IsroleofFactType</data>
    </node>
    <node id = 'class_SBVR::KindOfGuidanceStatement'>
      <data key = 'label'>class_SBVR::KindOfGuidanceStatement</data>
    </node>
    <node id = 'class_SBVR::Language'>
      <data key = 'label'>class_SBVR::Language</data>
    </node>
    <node id = 'class_SBVR::LevelOfEnforcement'>
      <data key = 'label'>class_SBVR::LevelOfEnforcement</data>
    </node>
    <node id = 'class_SBVR::LogicalFormulationKind'>
      <data key = 'label'>class_SBVR::LogicalFormulationKind</data>
    </node>
    <node id = 'class_SBVR::LogicalNegation'>
      <data key = 'label'>class_SBVR::LogicalNegation</data>
    </node>
    <node id = 'class_SBVR::ModalFormulation'>
      <data key = 'label'>class_SBVR::ModalFormulation</data>
    </node>
    <node id = 'class_SBVR::NandFormulation'>
      <data key = 'label'>class_SBVR::NandFormulation</data>
    </node>
    <node id = 'class_SBVR::NecessityFormulation'>
      <data key = 'label'>class_SBVR::NecessityFormulation</data>
    </node>
    <node id = 'class_SBVR::NecessityStatement'>
      <data key = 'label'>class_SBVR::NecessityStatement</data>
    </node>
    <node id = 'class_SBVR::NonnecessityStatement'>
      <data key = 'label'>class_SBVR::NonnecessityStatement</data>
    </node>
    <node id = 'class_SBVR::NonobligationStatement'>
      <data key = 'label'>class_SBVR::NonobligationStatement</data>
    </node>
    <node id = 'class_SBVR::StatementOfAdviceOfPermission'>
      <data key = 'label'>class_SBVR::StatementOfAdviceOfPermission</data>
    </node>
    <node id = 'class_SBVR::NorFormulation'>
      <data key = 'label'>class_SBVR::NorFormulation</data>
    </node>
    <node id = 'class_SBVR::Note'>
      <data key = 'label'>class_SBVR::Note</data>
    </node>
    <node id = 'class_SBVR::NounConceptNominalization'>
      <data key = 'label'>class_SBVR::NounConceptNominalization</data>
    </node>
    <node id = 'class_SBVR::NounForm'>
      <data key = 'label'>class_SBVR::NounForm</data>
    </node>
    <node id = 'class_SBVR::NumericRangeQuantification'>
      <data key = 'label'>class_SBVR::NumericRangeQuantification</data>
    </node>
    <node id = 'class_SBVR::Objectification'>
      <data key = 'label'>class_SBVR::Objectification</data>
    </node>
    <node id = 'class_SBVR::ObligationFormulation'>
      <data key = 'label'>class_SBVR::ObligationFormulation</data>
    </node>
    <node id = 'class_SBVR::ObligationStatement'>
      <data key = 'label'>class_SBVR::ObligationStatement</data>
    </node>
    <node id = 'class_SBVR::OperativeBusinessRuleStatement'>
      <data key = 'label'>class_SBVR::OperativeBusinessRuleStatement</data>
    </node>
    <node id = 'class_SBVR::OperativeBusinessRule'>
      <data key = 'label'>class_SBVR::OperativeBusinessRule</data>
    </node>
    <node id = 'class_SBVR::OptionalityStatement'>
      <data key = 'label'>class_SBVR::OptionalityStatement</data>
    </node>
    <node id = 'class_SBVR::OwnedDefinition'>
      <data key = 'label'>class_SBVR::OwnedDefinition</data>
    </node>
    <node id = 'class_SBVR::PartitiveFactType'>
      <data key = 'label'>class_SBVR::PartitiveFactType</data>
    </node>
    <node id = 'class_SBVR::PermissibilityFormulation'>
      <data key = 'label'>class_SBVR::PermissibilityFormulation</data>
    </node>
    <node id = 'class_SBVR::PermissionStatement'>
      <data key = 'label'>class_SBVR::PermissionStatement</data>
    </node>
    <node id = 'class_SBVR::PossibilityFormulation'>
      <data key = 'label'>class_SBVR::PossibilityFormulation</data>
    </node>
    <node id = 'class_SBVR::PossibilityStatement'>
      <data key = 'label'>class_SBVR::PossibilityStatement</data>
    </node>
    <node id = 'class_SBVR::PreferredDesignation'>
      <data key = 'label'>class_SBVR::PreferredDesignation</data>
    </node>
    <node id = 'class_SBVR::ProhibitedDesignation'>
      <data key = 'label'>class_SBVR::ProhibitedDesignation</data>
    </node>
    <node id = 'class_SBVR::ProhibitionStatement'>
      <data key = 'label'>class_SBVR::ProhibitionStatement</data>
    </node>
    <node id = 'class_SBVR::PropositionNominalization'>
      <data key = 'label'>class_SBVR::PropositionNominalization</data>
    </node>
    <node id = 'class_SBVR::Question'>
      <data key = 'label'>class_SBVR::Question</data>
    </node>
    <node id = 'class_SBVR::QuestionNominalization'>
      <data key = 'label'>class_SBVR::QuestionNominalization</data>
    </node>
    <node id = 'class_SBVR::RealworldNumericalCorrespondence'>
      <data key = 'label'>class_SBVR::RealworldNumericalCorrespondence</data>
    </node>
    <node id = 'class_SBVR::Reference'>
      <data key = 'label'>class_SBVR::Reference</data>
    </node>
    <node id = 'class_SBVR::RepresentationFormality'>
      <data key = 'label'>class_SBVR::RepresentationFormality</data>
    </node>
    <node id = 'class_SBVR::Res'>
      <data key = 'label'>class_SBVR::Res</data>
    </node>
    <node id = 'class_SBVR::RestrictedPermissionStatement'>
      <data key = 'label'>class_SBVR::RestrictedPermissionStatement</data>
    </node>
    <node id = 'class_SBVR::RestrictedPossibilityStatement'>
      <data key = 'label'>class_SBVR::RestrictedPossibilityStatement</data>
    </node>
    <node id = 'class_SBVR::Rulebook'>
      <data key = 'label'>class_SBVR::Rulebook</data>
    </node>
    <node id = 'class_SBVR::SemanticCommunity'>
      <data key = 'label'>class_SBVR::SemanticCommunity</data>
    </node>
    <node id = 'class_SBVR::SpeechCommunity'>
      <data key = 'label'>class_SBVR::SpeechCommunity</data>
    </node>
    <node id = 'class_SBVR::SententialForm'>
      <data key = 'label'>class_SBVR::SententialForm</data>
    </node>
    <node id = 'class_SBVR::SetProjection'>
      <data key = 'label'>class_SBVR::SetProjection</data>
    </node>
    <node id = 'class_SBVR::Situation'>
      <data key = 'label'>class_SBVR::Situation</data>
    </node>
    <node id = 'class_SBVR::SituationalRole'>
      <data key = 'label'>class_SBVR::SituationalRole</data>
    </node>
    <node id = 'class_SBVR::SpeechCommunityAdoptsAdoptedDefinitionCitingReference'>
      <data key = 'label'>class_SBVR::SpeechCommunityAdoptsAdoptedDefinitionCitingReference</data>
    </node>
    <node id = 'class_SBVR::StateOfAffairsInvolvesThingInRole'>
      <data key = 'label'>class_SBVR::StateOfAffairsInvolvesThingInRole</data>
    </node>
    <node id = 'class_SBVR::StructuralBusinessRule'>
      <data key = 'label'>class_SBVR::StructuralBusinessRule</data>
    </node>
    <node id = 'class_SBVR::StructuralRule'>
      <data key = 'label'>class_SBVR::StructuralRule</data>
    </node>
    <node id = 'class_SBVR::SubjectField'>
      <data key = 'label'>class_SBVR::SubjectField</data>
    </node>
    <node id = 'class_SBVR::Term'>
      <data key = 'label'>class_SBVR::Term</data>
    </node>
    <node id = 'class_SBVR::TerminologicalDictionary'>
      <data key = 'label'>class_SBVR::TerminologicalDictionary</data>
    </node>
    <node id = 'class_SBVR::ThingInContext'>
      <data key = 'label'>class_SBVR::ThingInContext</data>
    </node>
    <node id = 'class_SBVR::UniversalQuantification'>
      <data key = 'label'>class_SBVR::UniversalQuantification</data>
    </node>
    <node id = 'class_SBVR::Viewpoint'>
      <data key = 'label'>class_SBVR::Viewpoint</data>
    </node>
    <node id = 'class_SBVR::VocabularyNamespace'>
      <data key = 'label'>class_SBVR::VocabularyNamespace</data>
    </node>
    <node id = 'class_SBVR::WhetherornotFormulation'>
      <data key = 'label'>class_SBVR::WhetherornotFormulation</data>
    </node>
    <node id = 'class_SBVR::AtleastnQuantificationHasMinimumCardinality'>
      <data key = 'label'>class_SBVR::AtleastnQuantificationHasMinimumCardinality</data>
    </node>
    <node id = 'class_SBVR::AtmostnQuantificationHasMaximumCardinality'>
      <data key = 'label'>class_SBVR::AtmostnQuantificationHasMaximumCardinality</data>
    </node>
    <node id = 'class_SBVR::AtomicFormulationIsBasedOnFactType'>
      <data key = 'label'>class_SBVR::AtomicFormulationIsBasedOnFactType</data>
    </node>
    <node id = 'class_SBVR::AttributiveNamespaceIsForSubjectConcept'>
      <data key = 'label'>class_SBVR::AttributiveNamespaceIsForSubjectConcept</data>
    </node>
    <node id = 'class_SBVR::AttributiveNamespaceIsWithinVocabularyNamespace'>
      <data key = 'label'>class_SBVR::AttributiveNamespaceIsWithinVocabularyNamespace</data>
    </node>
    <node id = 'class_SBVR::BinaryLogicalOperationHasLogicalOperand1'>
      <data key = 'label'>class_SBVR::BinaryLogicalOperationHasLogicalOperand1</data>
    </node>
    <node id = 'class_SBVR::BinaryLogicalOperationHasLogicalOperand2'>
      <data key = 'label'>class_SBVR::BinaryLogicalOperationHasLogicalOperand2</data>
    </node>
    <node id = 'class_SBVR::BodyOfSharedMeaningsIncludesBodyOfSharedConcepts'>
      <data key = 'label'>class_SBVR::BodyOfSharedMeaningsIncludesBodyOfSharedConcepts</data>
    </node>
    <node id = 'class_SBVR::BodyOfSharedMeaningsIncludesBodyOfSharedGuidance'>
      <data key = 'label'>class_SBVR::BodyOfSharedMeaningsIncludesBodyOfSharedGuidance</data>
    </node>
    <node id = 'class_SBVR::BodyOfSharedMeaningsUnitesSemanticCommunity'>
      <data key = 'label'>class_SBVR::BodyOfSharedMeaningsUnitesSemanticCommunity</data>
    </node>
    <node id = 'class_SBVR::BodyOfSharedMeanings1ContainsBodyOfSharedMeanings2'>
      <data key = 'label'>class_SBVR::BodyOfSharedMeanings1ContainsBodyOfSharedMeanings2</data>
    </node>
    <node id = 'class_SBVR::BusinessPolicyIsBasisForAdvice'>
      <data key = 'label'>class_SBVR::BusinessPolicyIsBasisForAdvice</data>
    </node>
    <node id = 'class_SBVR::BusinessRuleIsDerivedFromBusinessPolicy'>
      <data key = 'label'>class_SBVR::BusinessRuleIsDerivedFromBusinessPolicy</data>
    </node>
    <node id = 'class_SBVR::CategorizationSchemeContainsCategory'>
      <data key = 'label'>class_SBVR::CategorizationSchemeContainsCategory</data>
    </node>
    <node id = 'class_SBVR::CategorizationSchemeIsForGeneralConcept'>
      <data key = 'label'>class_SBVR::CategorizationSchemeIsForGeneralConcept</data>
    </node>
    <node id = 'class_SBVR::CategorizationTypeIsForGeneralConcept'>
      <data key = 'label'>class_SBVR::CategorizationTypeIsForGeneralConcept</data>
    </node>
    <node id = 'class_SBVR::ClosedLogicalFormulationFormalizesStatement'>
      <data key = 'label'>class_SBVR::ClosedLogicalFormulationFormalizesStatement</data>
    </node>
    <node id = 'class_SBVR::ClosedLogicalFormulationMeansProposition'>
      <data key = 'label'>class_SBVR::ClosedLogicalFormulationMeansProposition</data>
    </node>
    <node id = 'class_SBVR::ClosedProjectionDefinesFactType'>
      <data key = 'label'>class_SBVR::ClosedProjectionDefinesFactType</data>
    </node>
    <node id = 'class_SBVR::ClosedProjectionDefinesNounConcept'>
      <data key = 'label'>class_SBVR::ClosedProjectionDefinesNounConcept</data>
    </node>
    <node id = 'class_SBVR::ClosedProjectionFormalizesDefinition'>
      <data key = 'label'>class_SBVR::ClosedProjectionFormalizesDefinition</data>
    </node>
    <node id = 'class_SBVR::ClosedProjectionMeansQuestion'>
      <data key = 'label'>class_SBVR::ClosedProjectionMeansQuestion</data>
    </node>
    <node id = 'class_SBVR::ClosedSemanticFormulationFormulatesMeaning'>
      <data key = 'label'>class_SBVR::ClosedSemanticFormulationFormulatesMeaning</data>
    </node>
    <node id = 'class_SBVR::CommunicationContentIsComposedOfRepresentation'>
      <data key = 'label'>class_SBVR::CommunicationContentIsComposedOfRepresentation</data>
    </node>
    <node id = 'class_SBVR::CommunityHasSubcommunity'>
      <data key = 'label'>class_SBVR::CommunityHasSubcommunity</data>
    </node>
    <node id = 'class_SBVR::CommunityHasUri'>
      <data key = 'label'>class_SBVR::CommunityHasUri</data>
    </node>
    <node id = 'class_SBVR::ConceptHasDefinition'>
      <data key = 'label'>class_SBVR::ConceptHasDefinition</data>
    </node>
    <node id = 'class_SBVR::ConceptHasDesignation'>
      <data key = 'label'>class_SBVR::ConceptHasDesignation</data>
    </node>
    <node id = 'class_SBVR::ConceptHasExtension'>
      <data key = 'label'>class_SBVR::ConceptHasExtension</data>
    </node>
    <node id = 'class_SBVR::ConceptHasImpliedCharacteristic'>
      <data key = 'label'>class_SBVR::ConceptHasImpliedCharacteristic</data>
    </node>
    <node id = 'class_SBVR::ConceptHasInstance'>
      <data key = 'label'>class_SBVR::ConceptHasInstance</data>
    </node>
    <node id = 'class_SBVR::ConceptHasNecessaryCharacteristic'>
      <data key = 'label'>class_SBVR::ConceptHasNecessaryCharacteristic</data>
    </node>
    <node id = 'class_SBVR::ConceptHasSharedUnderstandingBySemanticCommunity'>
      <data key = 'label'>class_SBVR::ConceptHasSharedUnderstandingBySemanticCommunity</data>
    </node>
    <node id = 'class_SBVR::ConceptIncorporatesCharacteristic'>
      <data key = 'label'>class_SBVR::ConceptIncorporatesCharacteristic</data>
    </node>
    <node id = 'class_SBVR::ConceptIsClosedInConceptualSchema'>
      <data key = 'label'>class_SBVR::ConceptIsClosedInConceptualSchema</data>
    </node>
    <node id = 'class_SBVR::ConceptIsIncludedInBodyOfSharedConcepts'>
      <data key = 'label'>class_SBVR::ConceptIsIncludedInBodyOfSharedConcepts</data>
    </node>
    <node id = 'class_SBVR::Concept1IsCoextensiveWithConcept2'>
      <data key = 'label'>class_SBVR::Concept1IsCoextensiveWithConcept2</data>
    </node>
    <node id = 'class_SBVR::Concept1SpecializesConcept2'>
      <data key = 'label'>class_SBVR::Concept1SpecializesConcept2</data>
    </node>
    <node id = 'class_SBVR::ConceptualSchemaIncludesConcept'>
      <data key = 'label'>class_SBVR::ConceptualSchemaIncludesConcept</data>
    </node>
    <node id = 'class_SBVR::ConceptualSchemaIncludesFact'>
      <data key = 'label'>class_SBVR::ConceptualSchemaIncludesFact</data>
    </node>
    <node id = 'class_SBVR::DefinitionServesAsDesignation'>
      <data key = 'label'>class_SBVR::DefinitionServesAsDesignation</data>
    </node>
    <node id = 'class_SBVR::DescriptionPortraysMeaning'>
      <data key = 'label'>class_SBVR::DescriptionPortraysMeaning</data>
    </node>
    <node id = 'class_SBVR::DescriptiveExampleIllustratesMeaning'>
      <data key = 'label'>class_SBVR::DescriptiveExampleIllustratesMeaning</data>
    </node>
    <node id = 'class_SBVR::DesignationHasSignifier'>
      <data key = 'label'>class_SBVR::DesignationHasSignifier</data>
    </node>
    <node id = 'class_SBVR::DesignationIsInNamespace'>
      <data key = 'label'>class_SBVR::DesignationIsInNamespace</data>
    </node>
    <node id = 'class_SBVR::ElementOfGuidanceAuthorizesStateOfAffairs'>
      <data key = 'label'>class_SBVR::ElementOfGuidanceAuthorizesStateOfAffairs</data>
    </node>
    <node id = 'class_SBVR::ElementOfGuidanceIsIncludedInBodyOfSharedGuidance'>
      <data key = 'label'>class_SBVR::ElementOfGuidanceIsIncludedInBodyOfSharedGuidance</data>
    </node>
    <node id = 'class_SBVR::ElementOfGuidanceObligatesStateOfAffairs'>
      <data key = 'label'>class_SBVR::ElementOfGuidanceObligatesStateOfAffairs</data>
    </node>
    <node id = 'class_SBVR::ElementOfGuidanceProhibitsStateOfAffairs'>
      <data key = 'label'>class_SBVR::ElementOfGuidanceProhibitsStateOfAffairs</data>
    </node>
    <node id = 'class_SBVR::ExactlynQuantificationHasCardinality'>
      <data key = 'label'>class_SBVR::ExactlynQuantificationHasCardinality</data>
    </node>
    <node id = 'class_SBVR::ExpressionRepresentsMeaning'>
      <data key = 'label'>class_SBVR::ExpressionRepresentsMeaning</data>
    </node>
    <node id = 'class_SBVR::FactModelIncludesFact'>
      <data key = 'label'>class_SBVR::FactModelIncludesFact</data>
    </node>
    <node id = 'class_SBVR::FactModelIsBasedOnConceptualSchema'>
      <data key = 'label'>class_SBVR::FactModelIsBasedOnConceptualSchema</data>
    </node>
    <node id = 'class_SBVR::FactTypeFormDemonstratesDesignation'>
      <data key = 'label'>class_SBVR::FactTypeFormDemonstratesDesignation</data>
    </node>
    <node id = 'class_SBVR::FactTypeFormIncorporatesFactSymbol'>
      <data key = 'label'>class_SBVR::FactTypeFormIncorporatesFactSymbol</data>
    </node>
    <node id = 'class_SBVR::FactTypeFormIsInNamespace'>
      <data key = 'label'>class_SBVR::FactTypeFormIsInNamespace</data>
    </node>
    <node id = 'class_SBVR::FactTypeHasFactTypeForm'>
      <data key = 'label'>class_SBVR::FactTypeHasFactTypeForm</data>
    </node>
    <node id = 'class_SBVR::FactTypeInternallyIsClosedInConceptualSchema'>
      <data key = 'label'>class_SBVR::FactTypeInternallyIsClosedInConceptualSchema</data>
    </node>
    <node id = 'class_SBVR::FactTypeIsElementaryInBodyOfSharedMeanings'>
      <data key = 'label'>class_SBVR::FactTypeIsElementaryInBodyOfSharedMeanings</data>
    </node>
    <node id = 'class_SBVR::FactTypeRoleHasRoleBinding'>
      <data key = 'label'>class_SBVR::FactTypeRoleHasRoleBinding</data>
    </node>
    <node id = 'class_SBVR::FactTypeRoleIsInFactType'>
      <data key = 'label'>class_SBVR::FactTypeRoleIsInFactType</data>
    </node>
    <node id = 'class_SBVR::ImplicationHasAntecedent'>
      <data key = 'label'>class_SBVR::ImplicationHasAntecedent</data>
    </node>
    <node id = 'class_SBVR::ImplicationHasConsequent'>
      <data key = 'label'>class_SBVR::ImplicationHasConsequent</data>
    </node>
    <node id = 'class_SBVR::InstantiationFormulationBindsToBindableTarget'>
      <data key = 'label'>class_SBVR::InstantiationFormulationBindsToBindableTarget</data>
    </node>
    <node id = 'class_SBVR::InstantiationFormulationConsidersConcept'>
      <data key = 'label'>class_SBVR::InstantiationFormulationConsidersConcept</data>
    </node>
    <node id = 'class_SBVR::IntensionalDefinitionUsesDelimitingCharacteristic'>
      <data key = 'label'>class_SBVR::IntensionalDefinitionUsesDelimitingCharacteristic</data>
    </node>
    <node id = 'class_SBVR::LogicalFormulationConstrainsProjection'>
      <data key = 'label'>class_SBVR::LogicalFormulationConstrainsProjection</data>
    </node>
    <node id = 'class_SBVR::LogicalFormulationRestrictsVariable'>
      <data key = 'label'>class_SBVR::LogicalFormulationRestrictsVariable</data>
    </node>
    <node id = 'class_SBVR::LogicalOperationHasLogicalOperand'>
      <data key = 'label'>class_SBVR::LogicalOperationHasLogicalOperand</data>
    </node>
    <node id = 'class_SBVR::MeaningCorrespondsToThing'>
      <data key = 'label'>class_SBVR::MeaningCorrespondsToThing</data>
    </node>
    <node id = 'class_SBVR::ModalFormulationEmbedsLogicalFormulation'>
      <data key = 'label'>class_SBVR::ModalFormulationEmbedsLogicalFormulation</data>
    </node>
    <node id = 'class_SBVR::NameReferencesThing'>
      <data key = 'label'>class_SBVR::NameReferencesThing</data>
    </node>
    <node id = 'class_SBVR::NamespaceHasUri'>
      <data key = 'label'>class_SBVR::NamespaceHasUri</data>
    </node>
    <node id = 'class_SBVR::Namespace1IncorporatesNamespace2'>
      <data key = 'label'>class_SBVR::Namespace1IncorporatesNamespace2</data>
    </node>
    <node id = 'class_SBVR::NoteCommentsOnMeaning'>
      <data key = 'label'>class_SBVR::NoteCommentsOnMeaning</data>
    </node>
    <node id = 'class_SBVR::NumericRangeQuantificationHasMaximumCardinality'>
      <data key = 'label'>class_SBVR::NumericRangeQuantificationHasMaximumCardinality</data>
    </node>
    <node id = 'class_SBVR::NumericRangeQuantificationHasMinimumCardinality'>
      <data key = 'label'>class_SBVR::NumericRangeQuantificationHasMinimumCardinality</data>
    </node>
    <node id = 'class_SBVR::ObjectificationBindsToBindableTarget'>
      <data key = 'label'>class_SBVR::ObjectificationBindsToBindableTarget</data>
    </node>
    <node id = 'class_SBVR::ObjectificationConsidersLogicalFormulation'>
      <data key = 'label'>class_SBVR::ObjectificationConsidersLogicalFormulation</data>
    </node>
    <node id = 'class_SBVR::OperativeBusinessRuleHasLevelOfEnforcement'>
      <data key = 'label'>class_SBVR::OperativeBusinessRuleHasLevelOfEnforcement</data>
    </node>
    <node id = 'class_SBVR::PlaceholderIsAtStartingCharacterPosition'>
      <data key = 'label'>class_SBVR::PlaceholderIsAtStartingCharacterPosition</data>
    </node>
    <node id = 'class_SBVR::PlaceholderIsInFactTypeForm'>
      <data key = 'label'>class_SBVR::PlaceholderIsInFactTypeForm</data>
    </node>
    <node id = 'class_SBVR::PlaceholderUsesDesignation'>
      <data key = 'label'>class_SBVR::PlaceholderUsesDesignation</data>
    </node>
    <node id = 'class_SBVR::ProjectingFormulationBindsToBindableTarget'>
      <data key = 'label'>class_SBVR::ProjectingFormulationBindsToBindableTarget</data>
    </node>
    <node id = 'class_SBVR::ProjectingFormulationHasProjection'>
      <data key = 'label'>class_SBVR::ProjectingFormulationHasProjection</data>
    </node>
    <node id = 'class_SBVR::ProjectionHasAuxiliaryVariable'>
      <data key = 'label'>class_SBVR::ProjectionHasAuxiliaryVariable</data>
    </node>
    <node id = 'class_SBVR::ProjectionIsOnVariable'>
      <data key = 'label'>class_SBVR::ProjectionIsOnVariable</data>
    </node>
    <node id = 'class_SBVR::PropositionIsBasedOnFactType'>
      <data key = 'label'>class_SBVR::PropositionIsBasedOnFactType</data>
    </node>
    <node id = 'class_SBVR::PropositionNominalizationBindsToBindableTarget'>
      <data key = 'label'>class_SBVR::PropositionNominalizationBindsToBindableTarget</data>
    </node>
    <node id = 'class_SBVR::PropositionNominalizationConsidersLogicalFormulation'>
      <data key = 'label'>class_SBVR::PropositionNominalizationConsidersLogicalFormulation</data>
    </node>
    <node id = 'class_SBVR::QuantificationIntroducesVariable'>
      <data key = 'label'>class_SBVR::QuantificationIntroducesVariable</data>
    </node>
    <node id = 'class_SBVR::QuantificationScopesOverLogicalFormulation'>
      <data key = 'label'>class_SBVR::QuantificationScopesOverLogicalFormulation</data>
    </node>
    <node id = 'class_SBVR::Quantity1EqualsQuantity2'>
      <data key = 'label'>class_SBVR::Quantity1EqualsQuantity2</data>
    </node>
    <node id = 'class_SBVR::Quantity1IsLessThanQuantity2'>
      <data key = 'label'>class_SBVR::Quantity1IsLessThanQuantity2</data>
    </node>
    <node id = 'class_SBVR::ReferencePointsToInformationSource'>
      <data key = 'label'>class_SBVR::ReferencePointsToInformationSource</data>
    </node>
    <node id = 'class_SBVR::ReferenceSchemeExtensionallyUsesFactTypeRole'>
      <data key = 'label'>class_SBVR::ReferenceSchemeExtensionallyUsesFactTypeRole</data>
    </node>
    <node id = 'class_SBVR::ReferenceSchemeIsForConcept'>
      <data key = 'label'>class_SBVR::ReferenceSchemeIsForConcept</data>
    </node>
    <node id = 'class_SBVR::ReferenceSchemeSimplyUsesFactTypeRole'>
      <data key = 'label'>class_SBVR::ReferenceSchemeSimplyUsesFactTypeRole</data>
    </node>
    <node id = 'class_SBVR::ReferenceSchemeUsesCharacteristic'>
      <data key = 'label'>class_SBVR::ReferenceSchemeUsesCharacteristic</data>
    </node>
    <node id = 'class_SBVR::ReferenceSupportsMeaning'>
      <data key = 'label'>class_SBVR::ReferenceSupportsMeaning</data>
    </node>
    <node id = 'class_SBVR::RepresentationHasExpression'>
      <data key = 'label'>class_SBVR::RepresentationHasExpression</data>
    </node>
    <node id = 'class_SBVR::RepresentationIsInDesignationContext'>
      <data key = 'label'>class_SBVR::RepresentationIsInDesignationContext</data>
    </node>
    <node id = 'class_SBVR::RepresentationIsInSubjectField'>
      <data key = 'label'>class_SBVR::RepresentationIsInSubjectField</data>
    </node>
    <node id = 'class_SBVR::RepresentationRepresentsMeaning'>
      <data key = 'label'>class_SBVR::RepresentationRepresentsMeaning</data>
    </node>
    <node id = 'class_SBVR::RepresentationUsesVocabulary'>
      <data key = 'label'>class_SBVR::RepresentationUsesVocabulary</data>
    </node>
    <node id = 'class_SBVR::ResIsSensoryManifestationOfSignifier'>
      <data key = 'label'>class_SBVR::ResIsSensoryManifestationOfSignifier</data>
    </node>
    <node id = 'class_SBVR::RoleBindingBindsToBindableTarget'>
      <data key = 'label'>class_SBVR::RoleBindingBindsToBindableTarget</data>
    </node>
    <node id = 'class_SBVR::RoleBindingOccursInAtomicFormulation'>
      <data key = 'label'>class_SBVR::RoleBindingOccursInAtomicFormulation</data>
    </node>
    <node id = 'class_SBVR::RoleRangesOverObjectType'>
      <data key = 'label'>class_SBVR::RoleRangesOverObjectType</data>
    </node>
    <node id = 'class_SBVR::RulebookIncludesRepresentation'>
      <data key = 'label'>class_SBVR::RulebookIncludesRepresentation</data>
    </node>
    <node id = 'class_SBVR::SemanticCommunityHasSpeechCommunity'>
      <data key = 'label'>class_SBVR::SemanticCommunityHasSpeechCommunity</data>
    </node>
    <node id = 'class_SBVR::SetHasCardinality'>
      <data key = 'label'>class_SBVR::SetHasCardinality</data>
    </node>
    <node id = 'class_SBVR::SpeechCommunityDeterminesRulebook'>
      <data key = 'label'>class_SBVR::SpeechCommunityDeterminesRulebook</data>
    </node>
    <node id = 'class_SBVR::SpeechCommunityOwnsOwnedDefinition'>
      <data key = 'label'>class_SBVR::SpeechCommunityOwnsOwnedDefinition</data>
    </node>
    <node id = 'class_SBVR::SpeechCommunityOwnsVocabulary'>
      <data key = 'label'>class_SBVR::SpeechCommunityOwnsVocabulary</data>
    </node>
    <node id = 'class_SBVR::SpeechCommunityRegulatesItsUsageOfSignifier'>
      <data key = 'label'>class_SBVR::SpeechCommunityRegulatesItsUsageOfSignifier</data>
    </node>
    <node id = 'class_SBVR::SpeechCommunityUsesLanguage'>
      <data key = 'label'>class_SBVR::SpeechCommunityUsesLanguage</data>
    </node>
    <node id = 'class_SBVR::SpeechCommunityUsesVocabulary'>
      <data key = 'label'>class_SBVR::SpeechCommunityUsesVocabulary</data>
    </node>
    <node id = 'class_SBVR::StatementExpressesProposition'>
      <data key = 'label'>class_SBVR::StatementExpressesProposition</data>
    </node>
    <node id = 'class_SBVR::TermDenotesThing'>
      <data key = 'label'>class_SBVR::TermDenotesThing</data>
    </node>
    <node id = 'class_SBVR::TerminologicalDictionaryExpressesBodyOfSharedMeanings'>
      <data key = 'label'>class_SBVR::TerminologicalDictionaryExpressesBodyOfSharedMeanings</data>
    </node>
    <node id = 'class_SBVR::TerminologicalDictionaryHasUri'>
      <data key = 'label'>class_SBVR::TerminologicalDictionaryHasUri</data>
    </node>
    <node id = 'class_SBVR::TerminologicalDictionaryPresentsVocabulary'>
      <data key = 'label'>class_SBVR::TerminologicalDictionaryPresentsVocabulary</data>
    </node>
    <node id = 'class_SBVR::ThingIsInSet'>
      <data key = 'label'>class_SBVR::ThingIsInSet</data>
    </node>
    <node id = 'class_SBVR::Thing1IsThing2'>
      <data key = 'label'>class_SBVR::Thing1IsThing2</data>
    </node>
    <node id = 'class_SBVR::VariableHasProjectionPosition'>
      <data key = 'label'>class_SBVR::VariableHasProjectionPosition</data>
    </node>
    <node id = 'class_SBVR::VariableIsFreesWithinSemanticFormulation'>
      <data key = 'label'>class_SBVR::VariableIsFreesWithinSemanticFormulation</data>
    </node>
    <node id = 'class_SBVR::VariableMapsToFactTypeRole'>
      <data key = 'label'>class_SBVR::VariableMapsToFactTypeRole</data>
    </node>
    <node id = 'class_SBVR::VariableRangesOverConcept'>
      <data key = 'label'>class_SBVR::VariableRangesOverConcept</data>
    </node>
    <node id = 'class_SBVR::VocabularyIsDesignedForSpeechCommunity'>
      <data key = 'label'>class_SBVR::VocabularyIsDesignedForSpeechCommunity</data>
    </node>
    <node id = 'class_SBVR::VocabularyIsExpressedInLanguage'>
      <data key = 'label'>class_SBVR::VocabularyIsExpressedInLanguage</data>
    </node>
    <node id = 'class_SBVR::VocabularyIsUsedToExpressBodyOfSharedMeanings'>
      <data key = 'label'>class_SBVR::VocabularyIsUsedToExpressBodyOfSharedMeanings</data>
    </node>
    <node id = 'class_SBVR::VocabularyNamespaceIsDerivedFromVocabulary'>
      <data key = 'label'>class_SBVR::VocabularyNamespaceIsDerivedFromVocabulary</data>
    </node>
    <node id = 'class_SBVR::VocabularyNamespaceIsForLanguage'>
      <data key = 'label'>class_SBVR::VocabularyNamespaceIsForLanguage</data>
    </node>
    <node id = 'class_SBVR::VocabularyNamespaceIsSpecificToDesignationContext'>
      <data key = 'label'>class_SBVR::VocabularyNamespaceIsSpecificToDesignationContext</data>
    </node>
    <node id = 'class_SBVR::VocabularyNamespaceIsSpecificToSubjectField'>
      <data key = 'label'>class_SBVR::VocabularyNamespaceIsSpecificToSubjectField</data>
    </node>
    <node id = 'class_SBVR::Vocabulary1IncorporatesVocabulary2'>
      <data key = 'label'>class_SBVR::Vocabulary1IncorporatesVocabulary2</data>
    </node>
    <node id = 'class_SBVR::WhetherornotFormulationHasConsequent'>
      <data key = 'label'>class_SBVR::WhetherornotFormulationHasConsequent</data>
    </node>
    <node id = 'class_SBVR::WhetherornotFormulationHasInconsequent'>
      <data key = 'label'>class_SBVR::WhetherornotFormulationHasInconsequent</data>
    </node>
    <node id = 'package_SBVR'>
      <data key = 'label'>package_SBVR</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'dataType_integer'>
      <data key = 'label'>dataType_integer</data>
    </node>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'dataType_Double'>
      <data key = 'label'>dataType_Double</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
