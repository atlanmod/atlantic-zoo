<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'UIMLGraph' edgedefault = 'undirected'>
    <edge id = 'referenceEdge_UIML2Header' source = 'class_UIML::UIML' target = 'class_UIML::Header'/>
    <node id = 'class_UIML::UIML'>
      <data key = 'label'>class_UIML::UIML</data>
    </node>
    <node id = 'class_UIML::Header'>
      <data key = 'label'>class_UIML::Header</data>
    </node>
    <node id = 'class_UIML::MetaData'>
      <data key = 'label'>class_UIML::MetaData</data>
    </node>
    <node id = 'package_UIML'>
      <data key = 'label'>package_UIML</data>
    </node>
  </graph>
  <graph id = 'InterfaceGraph' edgedefault = 'undirected'>
    <edge id = 'LocalSource_extends_Source' source = 'class_Interface::LocalSource' target = 'class_Interface::Source'/>
    <edge id = 'RemoteSource_extends_Source' source = 'class_Interface::RemoteSource' target = 'class_Interface::Source'/>
    <edge id = 'Interface_extends_ExtensibleElement' source = 'class_Interface::Interface' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'Structure_extends_ExtensibleElement' source = 'class_Interface::Structure' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'Part_extends_ExtensibleElement' source = 'class_Interface::Part' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'Style_extends_ExtensibleElement' source = 'class_Interface::Style' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'Property_extends_ExtensibleElement' source = 'class_Interface::Property' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'Content_extends_ExtensibleElement' source = 'class_Interface::Content' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'Behavior_extends_ExtensibleElement' source = 'class_Interface::Behavior' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'Constant_extends_ExtensibleElement' source = 'class_Interface::Constant' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'Rule_extends_ExtensibleElement' source = 'class_Interface::Rule' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'EventCondition_extends_Condition' source = 'class_Interface::EventCondition' target = 'class_Interface::Condition'/>
    <edge id = 'EqualCondition_extends_Condition' source = 'class_Interface::EqualCondition' target = 'class_Interface::Condition'/>
    <edge id = 'OpCondition_extends_Condition' source = 'class_Interface::OpCondition' target = 'class_Interface::Condition'/>
    <edge id = 'Action_1_extends_Action' source = 'class_Interface::Action_1' target = 'class_Interface::Action'/>
    <edge id = 'Action_2_extends_Action' source = 'class_Interface::Action_2' target = 'class_Interface::Action'/>
    <edge id = 'PropertyParameter_extends_Parameter' source = 'class_Interface::PropertyParameter' target = 'class_Interface::Parameter'/>
    <edge id = 'ReferenceParameter_extends_Parameter' source = 'class_Interface::ReferenceParameter' target = 'class_Interface::Parameter'/>
    <edge id = 'CallParameter_extends_Parameter' source = 'class_Interface::CallParameter' target = 'class_Interface::Parameter'/>
    <edge id = 'OperationParameter_extends_Parameter' source = 'class_Interface::OperationParameter' target = 'class_Interface::Parameter'/>
    <edge id = 'EventParameter_extends_Parameter' source = 'class_Interface::EventParameter' target = 'class_Interface::Parameter'/>
    <edge id = 'ConstantParameter_extends_Parameter' source = 'class_Interface::ConstantParameter' target = 'class_Interface::Parameter'/>
    <edge id = 'IteratorParameter_extends_Parameter' source = 'class_Interface::IteratorParameter' target = 'class_Interface::Parameter'/>
    <edge id = 'ConstantIterator_extends_Iterator' source = 'class_Interface::ConstantIterator' target = 'class_Interface::Iterator'/>
    <edge id = 'PropertyIterator_extends_Iterator' source = 'class_Interface::PropertyIterator' target = 'class_Interface::Iterator'/>
    <edge id = 'CallIterator_extends_Iterator' source = 'class_Interface::CallIterator' target = 'class_Interface::Iterator'/>
    <edge id = 'TextIterator_extends_Iterator' source = 'class_Interface::TextIterator' target = 'class_Interface::Iterator'/>
    <edge id = 'EqualToConstant_extends_Equal' source = 'class_Interface::EqualToConstant' target = 'class_Interface::Equal'/>
    <edge id = 'EqualToProperty_extends_Equal' source = 'class_Interface::EqualToProperty' target = 'class_Interface::Equal'/>
    <edge id = 'EqualToReference_extends_Equal' source = 'class_Interface::EqualToReference' target = 'class_Interface::Equal'/>
    <edge id = 'EqualToOperation_extends_Equal' source = 'class_Interface::EqualToOperation' target = 'class_Interface::Equal'/>
    <edge id = 'Restructure_extends_ExtensibleElement' source = 'class_Interface::Restructure' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'WhenTrue_extends_Branch' source = 'class_Interface::WhenTrue' target = 'class_Interface::Branch'/>
    <edge id = 'WhenFalse_extends_Branch' source = 'class_Interface::WhenFalse' target = 'class_Interface::Branch'/>
    <edge id = 'ByDefault_extends_Branch' source = 'class_Interface::ByDefault' target = 'class_Interface::Branch'/>
    <edge id = 'referenceEdge_LocalSource2ExtensibleElement' source = 'class_Interface::LocalSource' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'referenceEdge_Interface2Source' source = 'class_Interface::Interface' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_Structure2Source' source = 'class_Interface::Structure' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_Part2Source' source = 'class_Interface::Part' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_Style2Source' source = 'class_Interface::Style' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_Property2Part' source = 'class_Interface::Property' target = 'class_Interface::Part'/>
    <edge id = 'referenceEdge_Content2Source' source = 'class_Interface::Content' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_Behavior2Source' source = 'class_Interface::Behavior' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_Repeat2Iterator' source = 'class_Interface::Repeat' target = 'class_Interface::Iterator'/>
    <edge id = 'referenceEdge_Constant2Source' source = 'class_Interface::Constant' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_Reference2Constant' source = 'class_Interface::Reference' target = 'class_Interface::Constant'/>
    <edge id = 'referenceEdge_Rule2Source' source = 'class_Interface::Rule' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_EventCondition2Event' source = 'class_Interface::EventCondition' target = 'class_Interface::Event'/>
    <edge id = 'referenceEdge_EqualCondition2Equal' source = 'class_Interface::EqualCondition' target = 'class_Interface::Equal'/>
    <edge id = 'referenceEdge_OpCondition2Operation' source = 'class_Interface::OpCondition' target = 'class_Interface::Operation'/>
    <edge id = 'referenceEdge_Action_12Event' source = 'class_Interface::Action_1' target = 'class_Interface::Event'/>
    <edge id = 'referenceEdge_Action_22WhenTrue' source = 'class_Interface::Action_2' target = 'class_Interface::WhenTrue'/>
    <edge id = 'referenceEdge_Call2Parameter' source = 'class_Interface::Call' target = 'class_Interface::Parameter'/>
    <edge id = 'referenceEdge_PropertyParameter2Property' source = 'class_Interface::PropertyParameter' target = 'class_Interface::Property'/>
    <edge id = 'referenceEdge_ReferenceParameter2Reference' source = 'class_Interface::ReferenceParameter' target = 'class_Interface::Reference'/>
    <edge id = 'referenceEdge_CallParameter2Call' source = 'class_Interface::CallParameter' target = 'class_Interface::Call'/>
    <edge id = 'referenceEdge_OperationParameter2Operation' source = 'class_Interface::OperationParameter' target = 'class_Interface::Operation'/>
    <edge id = 'referenceEdge_EventParameter2Event' source = 'class_Interface::EventParameter' target = 'class_Interface::Event'/>
    <edge id = 'referenceEdge_ConstantParameter2Constant' source = 'class_Interface::ConstantParameter' target = 'class_Interface::Constant'/>
    <edge id = 'referenceEdge_IteratorParameter2Iterator' source = 'class_Interface::IteratorParameter' target = 'class_Interface::Iterator'/>
    <edge id = 'referenceEdge_ConstantIterator2Constant' source = 'class_Interface::ConstantIterator' target = 'class_Interface::Constant'/>
    <edge id = 'referenceEdge_PropertyIterator2Property' source = 'class_Interface::PropertyIterator' target = 'class_Interface::Property'/>
    <edge id = 'referenceEdge_CallIterator2Call' source = 'class_Interface::CallIterator' target = 'class_Interface::Call'/>
    <edge id = 'referenceEdge_EqualToConstant2Constant' source = 'class_Interface::EqualToConstant' target = 'class_Interface::Constant'/>
    <edge id = 'referenceEdge_EqualToProperty2Property' source = 'class_Interface::EqualToProperty' target = 'class_Interface::Property'/>
    <edge id = 'referenceEdge_EqualToReference2Reference' source = 'class_Interface::EqualToReference' target = 'class_Interface::Reference'/>
    <edge id = 'referenceEdge_EqualToOperation2Operation' source = 'class_Interface::EqualToOperation' target = 'class_Interface::Operation'/>
    <edge id = 'referenceEdge_Restructure2Part' source = 'class_Interface::Restructure' target = 'class_Interface::Part'/>
    <edge id = 'referenceEdge_Branch2Property' source = 'class_Interface::Branch' target = 'class_Interface::Property'/>
    <node id = 'class_Interface::ExtensibleElement'>
      <data key = 'label'>class_Interface::ExtensibleElement</data>
    </node>
    <node id = 'class_Interface::Source'>
      <data key = 'label'>class_Interface::Source</data>
    </node>
    <node id = 'class_Interface::LocalSource'>
      <data key = 'label'>class_Interface::LocalSource</data>
    </node>
    <node id = 'class_Interface::RemoteSource'>
      <data key = 'label'>class_Interface::RemoteSource</data>
    </node>
    <node id = 'class_Interface::Interface'>
      <data key = 'label'>class_Interface::Interface</data>
    </node>
    <node id = 'class_Interface::Structure'>
      <data key = 'label'>class_Interface::Structure</data>
    </node>
    <node id = 'class_Interface::Part'>
      <data key = 'label'>class_Interface::Part</data>
    </node>
    <node id = 'class_Interface::Style'>
      <data key = 'label'>class_Interface::Style</data>
    </node>
    <node id = 'class_Interface::Property'>
      <data key = 'label'>class_Interface::Property</data>
    </node>
    <node id = 'class_Interface::Content'>
      <data key = 'label'>class_Interface::Content</data>
    </node>
    <node id = 'class_Interface::Behavior'>
      <data key = 'label'>class_Interface::Behavior</data>
    </node>
    <node id = 'class_Interface::Repeat'>
      <data key = 'label'>class_Interface::Repeat</data>
    </node>
    <node id = 'class_Interface::Constant'>
      <data key = 'label'>class_Interface::Constant</data>
    </node>
    <node id = 'class_Interface::Reference'>
      <data key = 'label'>class_Interface::Reference</data>
    </node>
    <node id = 'class_Interface::Rule'>
      <data key = 'label'>class_Interface::Rule</data>
    </node>
    <node id = 'class_Interface::Condition'>
      <data key = 'label'>class_Interface::Condition</data>
    </node>
    <node id = 'class_Interface::EventCondition'>
      <data key = 'label'>class_Interface::EventCondition</data>
    </node>
    <node id = 'class_Interface::EqualCondition'>
      <data key = 'label'>class_Interface::EqualCondition</data>
    </node>
    <node id = 'class_Interface::OpCondition'>
      <data key = 'label'>class_Interface::OpCondition</data>
    </node>
    <node id = 'class_Interface::Action'>
      <data key = 'label'>class_Interface::Action</data>
    </node>
    <node id = 'class_Interface::Action_1'>
      <data key = 'label'>class_Interface::Action_1</data>
    </node>
    <node id = 'class_Interface::Action_2'>
      <data key = 'label'>class_Interface::Action_2</data>
    </node>
    <node id = 'class_Interface::Call'>
      <data key = 'label'>class_Interface::Call</data>
    </node>
    <node id = 'class_Interface::Parameter'>
      <data key = 'label'>class_Interface::Parameter</data>
    </node>
    <node id = 'class_Interface::PropertyParameter'>
      <data key = 'label'>class_Interface::PropertyParameter</data>
    </node>
    <node id = 'class_Interface::ReferenceParameter'>
      <data key = 'label'>class_Interface::ReferenceParameter</data>
    </node>
    <node id = 'class_Interface::CallParameter'>
      <data key = 'label'>class_Interface::CallParameter</data>
    </node>
    <node id = 'class_Interface::OperationParameter'>
      <data key = 'label'>class_Interface::OperationParameter</data>
    </node>
    <node id = 'class_Interface::EventParameter'>
      <data key = 'label'>class_Interface::EventParameter</data>
    </node>
    <node id = 'class_Interface::ConstantParameter'>
      <data key = 'label'>class_Interface::ConstantParameter</data>
    </node>
    <node id = 'class_Interface::IteratorParameter'>
      <data key = 'label'>class_Interface::IteratorParameter</data>
    </node>
    <node id = 'class_Interface::Iterator'>
      <data key = 'label'>class_Interface::Iterator</data>
    </node>
    <node id = 'class_Interface::ConstantIterator'>
      <data key = 'label'>class_Interface::ConstantIterator</data>
    </node>
    <node id = 'class_Interface::PropertyIterator'>
      <data key = 'label'>class_Interface::PropertyIterator</data>
    </node>
    <node id = 'class_Interface::CallIterator'>
      <data key = 'label'>class_Interface::CallIterator</data>
    </node>
    <node id = 'class_Interface::TextIterator'>
      <data key = 'label'>class_Interface::TextIterator</data>
    </node>
    <node id = 'class_Interface::Event'>
      <data key = 'label'>class_Interface::Event</data>
    </node>
    <node id = 'class_Interface::Equal'>
      <data key = 'label'>class_Interface::Equal</data>
    </node>
    <node id = 'class_Interface::EqualToConstant'>
      <data key = 'label'>class_Interface::EqualToConstant</data>
    </node>
    <node id = 'class_Interface::EqualToProperty'>
      <data key = 'label'>class_Interface::EqualToProperty</data>
    </node>
    <node id = 'class_Interface::EqualToReference'>
      <data key = 'label'>class_Interface::EqualToReference</data>
    </node>
    <node id = 'class_Interface::EqualToOperation'>
      <data key = 'label'>class_Interface::EqualToOperation</data>
    </node>
    <node id = 'class_Interface::Operation'>
      <data key = 'label'>class_Interface::Operation</data>
    </node>
    <node id = 'class_Interface::Restructure'>
      <data key = 'label'>class_Interface::Restructure</data>
    </node>
    <node id = 'class_Interface::Branch'>
      <data key = 'label'>class_Interface::Branch</data>
    </node>
    <node id = 'class_Interface::WhenTrue'>
      <data key = 'label'>class_Interface::WhenTrue</data>
    </node>
    <node id = 'class_Interface::WhenFalse'>
      <data key = 'label'>class_Interface::WhenFalse</data>
    </node>
    <node id = 'class_Interface::ByDefault'>
      <data key = 'label'>class_Interface::ByDefault</data>
    </node>
    <node id = 'enum_HowKind'>
      <data key = 'label'>enum_HowKind</data>
    </node>
    <node id = 'enum_ExportKind'>
      <data key = 'label'>enum_ExportKind</data>
    </node>
    <node id = 'enum_WhereKind'>
      <data key = 'label'>enum_WhereKind</data>
    </node>
    <node id = 'package_Interface'>
      <data key = 'label'>package_Interface</data>
    </node>
  </graph>
  <graph id = 'PeerGraph' edgedefault = 'undirected'>
    <edge id = 'Peer_extends_ExtensibleElement' source = 'class_Peer::Peer' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'Presentation_extends_ExtensibleElement' source = 'class_Peer::Presentation' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'Logic_extends_ExtensibleElement' source = 'class_Peer::Logic' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'DComponent_extends_ExtensibleElement' source = 'class_Peer::DComponent' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'DClass_extends_ExtensibleElement' source = 'class_Peer::DClass' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'DMethod_extends_ExtensibleElement' source = 'class_Peer::DMethod' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'Script_extends_ExtensibleElement' source = 'class_Peer::Script' target = 'class_Interface::ExtensibleElement'/>
    <edge id = 'referenceEdge_Peer2Source' source = 'class_Peer::Peer' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_Presentation2Source' source = 'class_Peer::Presentation' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_Logic2Source' source = 'class_Peer::Logic' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_DComponent2Source' source = 'class_Peer::DComponent' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_DClass2Source' source = 'class_Peer::DClass' target = 'class_Interface::Source'/>
    <edge id = 'referenceEdge_DProperty2DMethod' source = 'class_Peer::DProperty' target = 'class_Peer::DMethod'/>
    <node id = 'class_Peer::Peer'>
      <data key = 'label'>class_Peer::Peer</data>
    </node>
    <node id = 'class_Peer::Presentation'>
      <data key = 'label'>class_Peer::Presentation</data>
    </node>
    <node id = 'class_Peer::Logic'>
      <data key = 'label'>class_Peer::Logic</data>
    </node>
    <node id = 'class_Peer::DComponent'>
      <data key = 'label'>class_Peer::DComponent</data>
    </node>
    <node id = 'class_Peer::DClass'>
      <data key = 'label'>class_Peer::DClass</data>
    </node>
    <node id = 'class_Peer::DProperty'>
      <data key = 'label'>class_Peer::DProperty</data>
    </node>
    <node id = 'class_Peer::DMethod'>
      <data key = 'label'>class_Peer::DMethod</data>
    </node>
    <node id = 'class_Peer::DParam'>
      <data key = 'label'>class_Peer::DParam</data>
    </node>
    <node id = 'class_Peer::Script'>
      <data key = 'label'>class_Peer::Script</data>
    </node>
    <node id = 'class_Peer::Listener'>
      <data key = 'label'>class_Peer::Listener</data>
    </node>
    <node id = 'enum_UsedInTagKind'>
      <data key = 'label'>enum_UsedInTagKind</data>
    </node>
    <node id = 'enum_MapsTypeKind'>
      <data key = 'label'>enum_MapsTypeKind</data>
    </node>
    <node id = 'package_Peer'>
      <data key = 'label'>package_Peer</data>
    </node>
  </graph>
  <graph id = 'TemplateGraph' edgedefault = 'undirected'>
    <edge id = 'BehaviorTemplate_extends_Template' source = 'class_Template::BehaviorTemplate' target = 'class_Template::Template'/>
    <edge id = 'DClassTemplate_extends_Template' source = 'class_Template::DClassTemplate' target = 'class_Template::Template'/>
    <edge id = 'DComponentTemplate_extends_Template' source = 'class_Template::DComponentTemplate' target = 'class_Template::Template'/>
    <edge id = 'ConstantTemplate_extends_Template' source = 'class_Template::ConstantTemplate' target = 'class_Template::Template'/>
    <edge id = 'ContentTemplate_extends_Template' source = 'class_Template::ContentTemplate' target = 'class_Template::Template'/>
    <edge id = 'InterfaceTemplate_extends_Template' source = 'class_Template::InterfaceTemplate' target = 'class_Template::Template'/>
    <edge id = 'LogicTemplate_extends_Template' source = 'class_Template::LogicTemplate' target = 'class_Template::Template'/>
    <edge id = 'PartTemplate_extends_Template' source = 'class_Template::PartTemplate' target = 'class_Template::Template'/>
    <edge id = 'PeerTemplate_extends_Template' source = 'class_Template::PeerTemplate' target = 'class_Template::Template'/>
    <edge id = 'PresentationTemplate_extends_Template' source = 'class_Template::PresentationTemplate' target = 'class_Template::Template'/>
    <edge id = 'PropertyTemplate_extends_Template' source = 'class_Template::PropertyTemplate' target = 'class_Template::Template'/>
    <edge id = 'RestructureTemplate_extends_Template' source = 'class_Template::RestructureTemplate' target = 'class_Template::Template'/>
    <edge id = 'RuleTemplate_extends_Template' source = 'class_Template::RuleTemplate' target = 'class_Template::Template'/>
    <edge id = 'ScriptTemplate_extends_Template' source = 'class_Template::ScriptTemplate' target = 'class_Template::Template'/>
    <edge id = 'StructureTemplate_extends_Template' source = 'class_Template::StructureTemplate' target = 'class_Template::Template'/>
    <edge id = 'StyleTemplate_extends_Template' source = 'class_Template::StyleTemplate' target = 'class_Template::Template'/>
    <edge id = 'referenceEdge_BehaviorTemplate2Behavior' source = 'class_Template::BehaviorTemplate' target = 'class_Interface::Behavior'/>
    <edge id = 'referenceEdge_DClassTemplate2DClass' source = 'class_Template::DClassTemplate' target = 'class_Peer::DClass'/>
    <edge id = 'referenceEdge_DComponentTemplate2DComponent' source = 'class_Template::DComponentTemplate' target = 'class_Peer::DComponent'/>
    <edge id = 'referenceEdge_ConstantTemplate2Constant' source = 'class_Template::ConstantTemplate' target = 'class_Interface::Constant'/>
    <edge id = 'referenceEdge_ContentTemplate2Content' source = 'class_Template::ContentTemplate' target = 'class_Interface::Content'/>
    <edge id = 'referenceEdge_InterfaceTemplate2Interface' source = 'class_Template::InterfaceTemplate' target = 'class_Interface::Interface'/>
    <edge id = 'referenceEdge_LogicTemplate2Logic' source = 'class_Template::LogicTemplate' target = 'class_Peer::Logic'/>
    <edge id = 'referenceEdge_PartTemplate2Part' source = 'class_Template::PartTemplate' target = 'class_Interface::Part'/>
    <edge id = 'referenceEdge_PeerTemplate2Peer' source = 'class_Template::PeerTemplate' target = 'class_Peer::Peer'/>
    <edge id = 'referenceEdge_PresentationTemplate2Presentation' source = 'class_Template::PresentationTemplate' target = 'class_Peer::Presentation'/>
    <edge id = 'referenceEdge_PropertyTemplate2Property' source = 'class_Template::PropertyTemplate' target = 'class_Interface::Property'/>
    <edge id = 'referenceEdge_RestructureTemplate2Restructure' source = 'class_Template::RestructureTemplate' target = 'class_Interface::Restructure'/>
    <edge id = 'referenceEdge_RuleTemplate2Rule' source = 'class_Template::RuleTemplate' target = 'class_Interface::Rule'/>
    <edge id = 'referenceEdge_ScriptTemplate2Script' source = 'class_Template::ScriptTemplate' target = 'class_Peer::Script'/>
    <edge id = 'referenceEdge_StructureTemplate2Structure' source = 'class_Template::StructureTemplate' target = 'class_Interface::Structure'/>
    <edge id = 'referenceEdge_StyleTemplate2Style' source = 'class_Template::StyleTemplate' target = 'class_Interface::Style'/>
    <node id = 'class_Template::Template'>
      <data key = 'label'>class_Template::Template</data>
    </node>
    <node id = 'class_Template::BehaviorTemplate'>
      <data key = 'label'>class_Template::BehaviorTemplate</data>
    </node>
    <node id = 'class_Template::DClassTemplate'>
      <data key = 'label'>class_Template::DClassTemplate</data>
    </node>
    <node id = 'class_Template::DComponentTemplate'>
      <data key = 'label'>class_Template::DComponentTemplate</data>
    </node>
    <node id = 'class_Template::ConstantTemplate'>
      <data key = 'label'>class_Template::ConstantTemplate</data>
    </node>
    <node id = 'class_Template::ContentTemplate'>
      <data key = 'label'>class_Template::ContentTemplate</data>
    </node>
    <node id = 'class_Template::InterfaceTemplate'>
      <data key = 'label'>class_Template::InterfaceTemplate</data>
    </node>
    <node id = 'class_Template::LogicTemplate'>
      <data key = 'label'>class_Template::LogicTemplate</data>
    </node>
    <node id = 'class_Template::PartTemplate'>
      <data key = 'label'>class_Template::PartTemplate</data>
    </node>
    <node id = 'class_Template::PeerTemplate'>
      <data key = 'label'>class_Template::PeerTemplate</data>
    </node>
    <node id = 'class_Template::PresentationTemplate'>
      <data key = 'label'>class_Template::PresentationTemplate</data>
    </node>
    <node id = 'class_Template::PropertyTemplate'>
      <data key = 'label'>class_Template::PropertyTemplate</data>
    </node>
    <node id = 'class_Template::RestructureTemplate'>
      <data key = 'label'>class_Template::RestructureTemplate</data>
    </node>
    <node id = 'class_Template::RuleTemplate'>
      <data key = 'label'>class_Template::RuleTemplate</data>
    </node>
    <node id = 'class_Template::ScriptTemplate'>
      <data key = 'label'>class_Template::ScriptTemplate</data>
    </node>
    <node id = 'class_Template::StructureTemplate'>
      <data key = 'label'>class_Template::StructureTemplate</data>
    </node>
    <node id = 'class_Template::StyleTemplate'>
      <data key = 'label'>class_Template::StyleTemplate</data>
    </node>
    <node id = 'package_Template'>
      <data key = 'label'>package_Template</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'dataType_Integer'>
      <data key = 'label'>dataType_Integer</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
