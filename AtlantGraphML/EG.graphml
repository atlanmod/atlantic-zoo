<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'EG_MOFGraph' edgedefault = 'undirected'>
    <edge id = 'Start_extends_Node' source = 'class_EG_MOF::Start' target = 'class_EG_MOF::Node'/>
    <edge id = 'End_extends_Node' source = 'class_EG_MOF::End' target = 'class_EG_MOF::Node'/>
    <edge id = 'Control_extends_Node' source = 'class_EG_MOF::Control' target = 'class_EG_MOF::Node'/>
    <edge id = 'Basic_extends_Node' source = 'class_EG_MOF::Basic' target = 'class_EG_MOF::Node'/>
    <edge id = 'Branch_extends_Control' source = 'class_EG_MOF::Branch' target = 'class_EG_MOF::Control'/>
    <edge id = 'Loop_extends_Control' source = 'class_EG_MOF::Loop' target = 'class_EG_MOF::Control'/>
    <edge id = 'Fork_extends_Control' source = 'class_EG_MOF::Fork' target = 'class_EG_MOF::Control'/>
    <edge id = 'Join_extends_Control' source = 'class_EG_MOF::Join' target = 'class_EG_MOF::Control'/>
    <edge id = 'Acquire_extends_Control' source = 'class_EG_MOF::Acquire' target = 'class_EG_MOF::Control'/>
    <edge id = 'Release_extends_Control' source = 'class_EG_MOF::Release' target = 'class_EG_MOF::Control'/>
    <edge id = 'Split_extends_Control' source = 'class_EG_MOF::Split' target = 'class_EG_MOF::Control'/>
    <edge id = 'referenceEdge_ExecutionGraph2Node' source = 'class_EG_MOF::ExecutionGraph' target = 'class_EG_MOF::Node'/>
    <node id = 'class_EG_MOF::ExecutionGraph'>
      <data key = 'label'>class_EG_MOF::ExecutionGraph</data>
    </node>
    <node id = 'class_EG_MOF::Node'>
      <data key = 'label'>class_EG_MOF::Node</data>
    </node>
    <node id = 'class_EG_MOF::Start'>
      <data key = 'label'>class_EG_MOF::Start</data>
    </node>
    <node id = 'class_EG_MOF::End'>
      <data key = 'label'>class_EG_MOF::End</data>
    </node>
    <node id = 'class_EG_MOF::Control'>
      <data key = 'label'>class_EG_MOF::Control</data>
    </node>
    <node id = 'class_EG_MOF::Basic'>
      <data key = 'label'>class_EG_MOF::Basic</data>
    </node>
    <node id = 'class_EG_MOF::Branch'>
      <data key = 'label'>class_EG_MOF::Branch</data>
    </node>
    <node id = 'class_EG_MOF::Loop'>
      <data key = 'label'>class_EG_MOF::Loop</data>
    </node>
    <node id = 'class_EG_MOF::Fork'>
      <data key = 'label'>class_EG_MOF::Fork</data>
    </node>
    <node id = 'class_EG_MOF::Join'>
      <data key = 'label'>class_EG_MOF::Join</data>
    </node>
    <node id = 'class_EG_MOF::Acquire'>
      <data key = 'label'>class_EG_MOF::Acquire</data>
    </node>
    <node id = 'class_EG_MOF::Release'>
      <data key = 'label'>class_EG_MOF::Release</data>
    </node>
    <node id = 'class_EG_MOF::Split'>
      <data key = 'label'>class_EG_MOF::Split</data>
    </node>
    <node id = 'package_EG_MOF'>
      <data key = 'label'>package_EG_MOF</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'dataType_Integer'>
      <data key = 'label'>dataType_Integer</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
