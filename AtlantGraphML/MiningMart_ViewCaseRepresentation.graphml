<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'SimplfiedMiningMartGraph' edgedefault = 'undirected'>
    <edge id = 'Classifier_extends_ModelElement' source = 'class_SimplfiedMiningMart::Classifier' target = 'class_SimplfiedMiningMart::ModelElement'/>
    <edge id = 'StructuralFeature_extends_ModelElement' source = 'class_SimplfiedMiningMart::StructuralFeature' target = 'class_SimplfiedMiningMart::ModelElement'/>
    <edge id = 'Class_extends_Classifier' source = 'class_SimplfiedMiningMart::Class' target = 'class_SimplfiedMiningMart::Classifier'/>
    <edge id = 'DataType_extends_Classifier' source = 'class_SimplfiedMiningMart::DataType' target = 'class_SimplfiedMiningMart::Classifier'/>
    <edge id = 'Attribute_extends_StructuralFeature' source = 'class_SimplfiedMiningMart::Attribute' target = 'class_SimplfiedMiningMart::StructuralFeature'/>
    <edge id = 'referenceEdge_Class2Attribute' source = 'class_SimplfiedMiningMart::Class' target = 'class_SimplfiedMiningMart::Attribute'/>
    <edge id = 'referenceEdge_DataType2Attribute' source = 'class_SimplfiedMiningMart::DataType' target = 'class_SimplfiedMiningMart::Attribute'/>
    <node id = 'class_SimplfiedMiningMart::ModelElement'>
      <data key = 'label'>class_SimplfiedMiningMart::ModelElement</data>
    </node>
    <node id = 'class_SimplfiedMiningMart::Classifier'>
      <data key = 'label'>class_SimplfiedMiningMart::Classifier</data>
    </node>
    <node id = 'class_SimplfiedMiningMart::StructuralFeature'>
      <data key = 'label'>class_SimplfiedMiningMart::StructuralFeature</data>
    </node>
    <node id = 'class_SimplfiedMiningMart::Class'>
      <data key = 'label'>class_SimplfiedMiningMart::Class</data>
    </node>
    <node id = 'class_SimplfiedMiningMart::DataType'>
      <data key = 'label'>class_SimplfiedMiningMart::DataType</data>
    </node>
    <node id = 'class_SimplfiedMiningMart::Attribute'>
      <data key = 'label'>class_SimplfiedMiningMart::Attribute</data>
    </node>
    <node id = 'package_SimplfiedMiningMart'>
      <data key = 'label'>package_SimplfiedMiningMart</data>
    </node>
  </graph>
  <graph id = 'CaseRepresentationGraph' edgedefault = 'undirected'>
    <edge id = 'Case_extends_ModelElement' source = 'class_CaseRepresentation::Case' target = 'class_SimplfiedMiningMart::ModelElement'/>
    <edge id = 'Step_extends_ModelElement' source = 'class_CaseRepresentation::Step' target = 'class_SimplfiedMiningMart::ModelElement'/>
    <edge id = 'LoopStep_extends_Step' source = 'class_CaseRepresentation::LoopStep' target = 'class_CaseRepresentation::Step'/>
    <edge id = 'MultiStep_extends_Step' source = 'class_CaseRepresentation::MultiStep' target = 'class_CaseRepresentation::Step'/>
    <edge id = 'Operator_extends_ModelElement' source = 'class_CaseRepresentation::Operator' target = 'class_SimplfiedMiningMart::ModelElement'/>
    <edge id = 'FeatureConstruction_extends_Operator' source = 'class_CaseRepresentation::FeatureConstruction' target = 'class_CaseRepresentation::Operator'/>
    <edge id = 'DataMinStep_extends_Operator' source = 'class_CaseRepresentation::DataMinStep' target = 'class_CaseRepresentation::Operator'/>
    <edge id = 'TimeOperator_extends_Operator' source = 'class_CaseRepresentation::TimeOperator' target = 'class_CaseRepresentation::Operator'/>
    <edge id = 'FeatureSelection_extends_Operator' source = 'class_CaseRepresentation::FeatureSelection' target = 'class_CaseRepresentation::Operator'/>
    <edge id = 'MultiRelFeatureConstr_extends_Operator' source = 'class_CaseRepresentation::MultiRelFeatureConstr' target = 'class_CaseRepresentation::Operator'/>
    <edge id = 'RowSelection_extends_Operator' source = 'class_CaseRepresentation::RowSelection' target = 'class_CaseRepresentation::Operator'/>
    <edge id = 'Agregation_extends_MultiRelFeatureConstr' source = 'class_CaseRepresentation::Agregation' target = 'class_CaseRepresentation::MultiRelFeatureConstr'/>
    <edge id = 'Scaling_extends_FeatureConstruction' source = 'class_CaseRepresentation::Scaling' target = 'class_CaseRepresentation::FeatureConstruction'/>
    <edge id = 'Discretization_extends_FeatureConstruction' source = 'class_CaseRepresentation::Discretization' target = 'class_CaseRepresentation::FeatureConstruction'/>
    <edge id = 'Segmentation_extends_RowSelection' source = 'class_CaseRepresentation::Segmentation' target = 'class_CaseRepresentation::RowSelection'/>
    <edge id = 'Sampling_extends_RowSelection' source = 'class_CaseRepresentation::Sampling' target = 'class_CaseRepresentation::RowSelection'/>
    <edge id = 'MSL-Tool_extends_ExecutionElement' source = 'class_CaseRepresentation::MSL-Tool' target = 'class_CaseRepresentation::ExecutionElement'/>
    <edge id = 'TransformationGroup_extends_ExecutionElement' source = 'class_CaseRepresentation::TransformationGroup' target = 'class_CaseRepresentation::ExecutionElement'/>
    <edge id = 'Transformation_extends_ExecutionElement' source = 'class_CaseRepresentation::Transformation' target = 'class_CaseRepresentation::ExecutionElement'/>
    <edge id = 'Function_extends_Transformation' source = 'class_CaseRepresentation::Function' target = 'class_CaseRepresentation::Transformation'/>
    <edge id = 'StoredProcedure_extends_Transformation' source = 'class_CaseRepresentation::StoredProcedure' target = 'class_CaseRepresentation::Transformation'/>
    <edge id = 'SQLQuery_extends_Transformation' source = 'class_CaseRepresentation::SQLQuery' target = 'class_CaseRepresentation::Transformation'/>
    <edge id = 'referenceEdge_Case2Parameter' source = 'class_CaseRepresentation::Case' target = 'class_CaseRepresentation::Parameter'/>
    <edge id = 'referenceEdge_Step2Case' source = 'class_CaseRepresentation::Step' target = 'class_CaseRepresentation::Case'/>
    <edge id = 'referenceEdge_Operator2Parameter' source = 'class_CaseRepresentation::Operator' target = 'class_CaseRepresentation::Parameter'/>
    <edge id = 'referenceEdge_ExecutionElement2DataObject' source = 'class_CaseRepresentation::ExecutionElement' target = 'class_CaseRepresentation::DataObject'/>
    <edge id = 'referenceEdge_TransformationGroup2Transformation' source = 'class_CaseRepresentation::TransformationGroup' target = 'class_CaseRepresentation::Transformation'/>
    <node id = 'class_CaseRepresentation::Case'>
      <data key = 'label'>class_CaseRepresentation::Case</data>
    </node>
    <node id = 'class_CaseRepresentation::Step'>
      <data key = 'label'>class_CaseRepresentation::Step</data>
    </node>
    <node id = 'class_CaseRepresentation::LoopStep'>
      <data key = 'label'>class_CaseRepresentation::LoopStep</data>
    </node>
    <node id = 'class_CaseRepresentation::MultiStep'>
      <data key = 'label'>class_CaseRepresentation::MultiStep</data>
    </node>
    <node id = 'class_CaseRepresentation::Operator'>
      <data key = 'label'>class_CaseRepresentation::Operator</data>
    </node>
    <node id = 'class_CaseRepresentation::Parameter'>
      <data key = 'label'>class_CaseRepresentation::Parameter</data>
    </node>
    <node id = 'enum_ParameterType'>
      <data key = 'label'>enum_ParameterType</data>
    </node>
    <node id = 'class_CaseRepresentation::FeatureConstruction'>
      <data key = 'label'>class_CaseRepresentation::FeatureConstruction</data>
    </node>
    <node id = 'class_CaseRepresentation::DataMinStep'>
      <data key = 'label'>class_CaseRepresentation::DataMinStep</data>
    </node>
    <node id = 'class_CaseRepresentation::TimeOperator'>
      <data key = 'label'>class_CaseRepresentation::TimeOperator</data>
    </node>
    <node id = 'class_CaseRepresentation::FeatureSelection'>
      <data key = 'label'>class_CaseRepresentation::FeatureSelection</data>
    </node>
    <node id = 'class_CaseRepresentation::MultiRelFeatureConstr'>
      <data key = 'label'>class_CaseRepresentation::MultiRelFeatureConstr</data>
    </node>
    <node id = 'class_CaseRepresentation::RowSelection'>
      <data key = 'label'>class_CaseRepresentation::RowSelection</data>
    </node>
    <node id = 'class_CaseRepresentation::Agregation'>
      <data key = 'label'>class_CaseRepresentation::Agregation</data>
    </node>
    <node id = 'class_CaseRepresentation::Scaling'>
      <data key = 'label'>class_CaseRepresentation::Scaling</data>
    </node>
    <node id = 'class_CaseRepresentation::Discretization'>
      <data key = 'label'>class_CaseRepresentation::Discretization</data>
    </node>
    <node id = 'class_CaseRepresentation::Segmentation'>
      <data key = 'label'>class_CaseRepresentation::Segmentation</data>
    </node>
    <node id = 'class_CaseRepresentation::Sampling'>
      <data key = 'label'>class_CaseRepresentation::Sampling</data>
    </node>
    <node id = 'class_CaseRepresentation::ExecutionElement'>
      <data key = 'label'>class_CaseRepresentation::ExecutionElement</data>
    </node>
    <node id = 'class_CaseRepresentation::DataObject'>
      <data key = 'label'>class_CaseRepresentation::DataObject</data>
    </node>
    <node id = 'class_CaseRepresentation::MSL-Tool'>
      <data key = 'label'>class_CaseRepresentation::MSL-Tool</data>
    </node>
    <node id = 'class_CaseRepresentation::TransformationGroup'>
      <data key = 'label'>class_CaseRepresentation::TransformationGroup</data>
    </node>
    <node id = 'class_CaseRepresentation::Transformation'>
      <data key = 'label'>class_CaseRepresentation::Transformation</data>
    </node>
    <node id = 'class_CaseRepresentation::Function'>
      <data key = 'label'>class_CaseRepresentation::Function</data>
    </node>
    <node id = 'class_CaseRepresentation::StoredProcedure'>
      <data key = 'label'>class_CaseRepresentation::StoredProcedure</data>
    </node>
    <node id = 'class_CaseRepresentation::SQLQuery'>
      <data key = 'label'>class_CaseRepresentation::SQLQuery</data>
    </node>
    <node id = 'package_CaseRepresentation'>
      <data key = 'label'>package_CaseRepresentation</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'dataType_Integer'>
      <data key = 'label'>dataType_Integer</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
