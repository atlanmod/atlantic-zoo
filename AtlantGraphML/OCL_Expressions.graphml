<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'OCLExpressionsGraph' edgedefault = 'undirected'>
    <edge id = 'SelfExp_extends_OclExpression' source = 'class_OCLExpressions::SelfExp' target = 'class_OCLExpressions::OclExpression'/>
    <edge id = 'ResultExp_extends_OclExpression' source = 'class_OCLExpressions::ResultExp' target = 'class_OCLExpressions::OclExpression'/>
    <edge id = 'VariableExp_extends_OclExpression' source = 'class_OCLExpressions::VariableExp' target = 'class_OCLExpressions::OclExpression'/>
    <edge id = 'OperationExp_extends_OclExpression' source = 'class_OCLExpressions::OperationExp' target = 'class_OCLExpressions::OclExpression'/>
    <edge id = 'QueryExp_extends_OclExpression' source = 'class_OCLExpressions::QueryExp' target = 'class_OCLExpressions::OclExpression'/>
    <edge id = 'referenceEdge_OclExpression2QueryExp' source = 'class_OCLExpressions::OclExpression' target = 'class_OCLExpressions::QueryExp'/>
    <edge id = 'referenceEdge_Type2OclExpression' source = 'class_OCLExpressions::Type' target = 'class_OCLExpressions::OclExpression'/>
    <edge id = 'referenceEdge_VariableDeclaration2Type' source = 'class_OCLExpressions::VariableDeclaration' target = 'class_OCLExpressions::Type'/>
    <edge id = 'referenceEdge_VariableInitialisation2OclExpression' source = 'class_OCLExpressions::VariableInitialisation' target = 'class_OCLExpressions::OclExpression'/>
    <edge id = 'referenceEdge_IterateExp2VariableInitialisation' source = 'class_OCLExpressions::IterateExp' target = 'class_OCLExpressions::VariableInitialisation'/>
    <node id = 'class_OCLExpressions::OclExpression'>
      <data key = 'label'>class_OCLExpressions::OclExpression</data>
    </node>
    <node id = 'class_OCLExpressions::SelfExp'>
      <data key = 'label'>class_OCLExpressions::SelfExp</data>
    </node>
    <node id = 'class_OCLExpressions::ResultExp'>
      <data key = 'label'>class_OCLExpressions::ResultExp</data>
    </node>
    <node id = 'class_OCLExpressions::VariableExp'>
      <data key = 'label'>class_OCLExpressions::VariableExp</data>
    </node>
    <node id = 'class_OCLExpressions::OperationExp'>
      <data key = 'label'>class_OCLExpressions::OperationExp</data>
    </node>
    <node id = 'class_OCLExpressions::QueryExp'>
      <data key = 'label'>class_OCLExpressions::QueryExp</data>
    </node>
    <node id = 'class_OCLExpressions::Type'>
      <data key = 'label'>class_OCLExpressions::Type</data>
    </node>
    <node id = 'class_OCLExpressions::VariableDeclaration'>
      <data key = 'label'>class_OCLExpressions::VariableDeclaration</data>
    </node>
    <node id = 'class_OCLExpressions::VariableInitialisation'>
      <data key = 'label'>class_OCLExpressions::VariableInitialisation</data>
    </node>
    <node id = 'class_OCLExpressions::ForAllExp'>
      <data key = 'label'>class_OCLExpressions::ForAllExp</data>
    </node>
    <node id = 'class_OCLExpressions::ExistsExp'>
      <data key = 'label'>class_OCLExpressions::ExistsExp</data>
    </node>
    <node id = 'class_OCLExpressions::SelectExp'>
      <data key = 'label'>class_OCLExpressions::SelectExp</data>
    </node>
    <node id = 'class_OCLExpressions::RejectExp'>
      <data key = 'label'>class_OCLExpressions::RejectExp</data>
    </node>
    <node id = 'class_OCLExpressions::CollectExp'>
      <data key = 'label'>class_OCLExpressions::CollectExp</data>
    </node>
    <node id = 'class_OCLExpressions::IterateExp'>
      <data key = 'label'>class_OCLExpressions::IterateExp</data>
    </node>
    <node id = 'package_OCLExpressions'>
      <data key = 'label'>package_OCLExpressions</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'dataType_Integer'>
      <data key = 'label'>dataType_Integer</data>
    </node>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
