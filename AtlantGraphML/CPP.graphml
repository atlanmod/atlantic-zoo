<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'CPPGraph' edgedefault = 'undirected'>
    <edge id = 'CFunction_extends_CBehavorialFeature' source = 'class_CPP::CFunction' target = 'class_CPP::CBehavorialFeature'/>
    <edge id = 'CPPReference_extends_CDerived' source = 'class_CPP::CPPReference' target = 'class_CPP::CDerived'/>
    <edge id = 'CPPExtern_extends_CDerived' source = 'class_CPP::CPPExtern' target = 'class_CPP::CDerived'/>
    <edge id = 'CPPConst_extends_CDerived' source = 'class_CPP::CPPConst' target = 'class_CPP::CDerived'/>
    <edge id = 'CPPTemplate_extends_CDerived' source = 'class_CPP::CPPTemplate' target = 'class_CPP::CDerived'/>
    <edge id = 'CPPClass_extends_CStructured' source = 'class_CPP::CPPClass' target = 'class_CPP::CStructured'/>
    <edge id = 'CPPOperation_extends_CFunction' source = 'class_CPP::CPPOperation' target = 'class_CPP::CFunction'/>
    <edge id = 'CPPOperator_extends_CStructureContents' source = 'class_CPP::CPPOperator' target = 'class_CPP::CStructureContents'/>
    <edge id = 'referenceEdge_CPPTemplate2CPPClass' source = 'class_CPP::CPPTemplate' target = 'class_CPP::CPPClass'/>
    <edge id = 'referenceEdge_CPPGeneralization2CPPClass' source = 'class_CPP::CPPGeneralization' target = 'class_CPP::CPPClass'/>
    <edge id = 'referenceEdge_CPPOperation2CPPClass' source = 'class_CPP::CPPOperation' target = 'class_CPP::CPPClass'/>
    <node id = 'class_CPP::CDerived'>
      <data key = 'label'>class_CPP::CDerived</data>
    </node>
    <node id = 'class_CPP::CStructured'>
      <data key = 'label'>class_CPP::CStructured</data>
    </node>
    <node id = 'class_CPP::CBehavorialFeature'>
      <data key = 'label'>class_CPP::CBehavorialFeature</data>
    </node>
    <node id = 'class_CPP::CFunction'>
      <data key = 'label'>class_CPP::CFunction</data>
    </node>
    <node id = 'class_CPP::CStructureContents'>
      <data key = 'label'>class_CPP::CStructureContents</data>
    </node>
    <node id = 'class_CPP::CField'>
      <data key = 'label'>class_CPP::CField</data>
    </node>
    <node id = 'class_CPP::CDerivableType'>
      <data key = 'label'>class_CPP::CDerivableType</data>
    </node>
    <node id = 'enum_VisibilityKind'>
      <data key = 'label'>enum_VisibilityKind</data>
    </node>
    <node id = 'class_CPP::CPPReference'>
      <data key = 'label'>class_CPP::CPPReference</data>
    </node>
    <node id = 'class_CPP::CPPExtern'>
      <data key = 'label'>class_CPP::CPPExtern</data>
    </node>
    <node id = 'class_CPP::CPPConst'>
      <data key = 'label'>class_CPP::CPPConst</data>
    </node>
    <node id = 'class_CPP::CPPTemplate'>
      <data key = 'label'>class_CPP::CPPTemplate</data>
    </node>
    <node id = 'class_CPP::CPPClass'>
      <data key = 'label'>class_CPP::CPPClass</data>
    </node>
    <node id = 'class_CPP::CPPGeneralization'>
      <data key = 'label'>class_CPP::CPPGeneralization</data>
    </node>
    <node id = 'class_CPP::CPPOperation'>
      <data key = 'label'>class_CPP::CPPOperation</data>
    </node>
    <node id = 'class_CPP::CPPOperator'>
      <data key = 'label'>class_CPP::CPPOperator</data>
    </node>
    <node id = 'class_CPP::CPPMember'>
      <data key = 'label'>class_CPP::CPPMember</data>
    </node>
    <node id = 'package_CPP'>
      <data key = 'label'>package_CPP</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_Integer'>
      <data key = 'label'>dataType_Integer</data>
    </node>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'dataType_Double'>
      <data key = 'label'>dataType_Double</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
