<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'ATLGraph' edgedefault = 'undirected'>
    <edge id = 'Unit_extends_LocatedElement' source = 'class_ATL::Unit' target = 'class_ATL::LocatedElement'/>
    <edge id = 'Library_extends_Unit' source = 'class_ATL::Library' target = 'class_ATL::Unit'/>
    <edge id = 'Query_extends_Unit' source = 'class_ATL::Query' target = 'class_ATL::Unit'/>
    <edge id = 'Module_extends_Unit' source = 'class_ATL::Module' target = 'class_ATL::Unit'/>
    <edge id = 'ModuleElement_extends_LocatedElement' source = 'class_ATL::ModuleElement' target = 'class_ATL::LocatedElement'/>
    <edge id = 'Helper_extends_ModuleElement' source = 'class_ATL::Helper' target = 'class_ATL::ModuleElement'/>
    <edge id = 'Rule_extends_ModuleElement' source = 'class_ATL::Rule' target = 'class_ATL::ModuleElement'/>
    <edge id = 'MatchedRule_extends_Rule' source = 'class_ATL::MatchedRule' target = 'class_ATL::Rule'/>
    <edge id = 'LazyMatchedRule_extends_MatchedRule' source = 'class_ATL::LazyMatchedRule' target = 'class_ATL::MatchedRule'/>
    <edge id = 'CalledRule_extends_Rule' source = 'class_ATL::CalledRule' target = 'class_ATL::Rule'/>
    <edge id = 'InPattern_extends_LocatedElement' source = 'class_ATL::InPattern' target = 'class_ATL::LocatedElement'/>
    <edge id = 'OutPattern_extends_LocatedElement' source = 'class_ATL::OutPattern' target = 'class_ATL::LocatedElement'/>
    <edge id = 'PatternElement_extends_VariableDeclaration' source = 'class_ATL::PatternElement' target = 'class_OCL::VariableDeclaration'/>
    <edge id = 'InPatternElement_extends_PatternElement' source = 'class_ATL::InPatternElement' target = 'class_ATL::PatternElement'/>
    <edge id = 'SimpleInPatternElement_extends_InPatternElement' source = 'class_ATL::SimpleInPatternElement' target = 'class_ATL::InPatternElement'/>
    <edge id = 'OutPatternElement_extends_PatternElement' source = 'class_ATL::OutPatternElement' target = 'class_ATL::PatternElement'/>
    <edge id = 'SimpleOutPatternElement_extends_OutPatternElement' source = 'class_ATL::SimpleOutPatternElement' target = 'class_ATL::OutPatternElement'/>
    <edge id = 'ForEachOutPatternElement_extends_OutPatternElement' source = 'class_ATL::ForEachOutPatternElement' target = 'class_ATL::OutPatternElement'/>
    <edge id = 'Binding_extends_LocatedElement' source = 'class_ATL::Binding' target = 'class_ATL::LocatedElement'/>
    <edge id = 'RuleVariableDeclaration_extends_VariableDeclaration' source = 'class_ATL::RuleVariableDeclaration' target = 'class_OCL::VariableDeclaration'/>
    <edge id = 'LibraryRef_extends_LocatedElement' source = 'class_ATL::LibraryRef' target = 'class_ATL::LocatedElement'/>
    <edge id = 'ActionBlock_extends_LocatedElement' source = 'class_ATL::ActionBlock' target = 'class_ATL::LocatedElement'/>
    <edge id = 'Statement_extends_LocatedElement' source = 'class_ATL::Statement' target = 'class_ATL::LocatedElement'/>
    <edge id = 'ExpressionStat_extends_Statement' source = 'class_ATL::ExpressionStat' target = 'class_ATL::Statement'/>
    <edge id = 'BindingStat_extends_Statement' source = 'class_ATL::BindingStat' target = 'class_ATL::Statement'/>
    <edge id = 'IfStat_extends_Statement' source = 'class_ATL::IfStat' target = 'class_ATL::Statement'/>
    <edge id = 'ForStat_extends_Statement' source = 'class_ATL::ForStat' target = 'class_ATL::Statement'/>
    <edge id = 'referenceEdge_Unit2LibraryRef' source = 'class_ATL::Unit' target = 'class_ATL::LibraryRef'/>
    <edge id = 'referenceEdge_Library2Helper' source = 'class_ATL::Library' target = 'class_ATL::Helper'/>
    <edge id = 'referenceEdge_Query2OclExpression' source = 'class_ATL::Query' target = 'class_OCL::OclExpression'/>
    <edge id = 'referenceEdge_Module2OclModel' source = 'class_ATL::Module' target = 'class_OCL::OclModel'/>
    <edge id = 'referenceEdge_ModuleElement2Module' source = 'class_ATL::ModuleElement' target = 'class_ATL::Module'/>
    <edge id = 'referenceEdge_Rule2OutPattern' source = 'class_ATL::Rule' target = 'class_ATL::OutPattern'/>
    <edge id = 'referenceEdge_MatchedRule2InPattern' source = 'class_ATL::MatchedRule' target = 'class_ATL::InPattern'/>
    <edge id = 'referenceEdge_InPatternElement2OutPatternElement' source = 'class_ATL::InPatternElement' target = 'class_ATL::OutPatternElement'/>
    <edge id = 'referenceEdge_SimpleOutPatternElement2OclExpression' source = 'class_ATL::SimpleOutPatternElement' target = 'class_OCL::OclExpression'/>
    <edge id = 'referenceEdge_ForEachOutPatternElement2OclExpression' source = 'class_ATL::ForEachOutPatternElement' target = 'class_OCL::OclExpression'/>
    <edge id = 'referenceEdge_Binding2OclExpression' source = 'class_ATL::Binding' target = 'class_OCL::OclExpression'/>
    <edge id = 'referenceEdge_RuleVariableDeclaration2Rule' source = 'class_ATL::RuleVariableDeclaration' target = 'class_ATL::Rule'/>
    <edge id = 'referenceEdge_ActionBlock2Rule' source = 'class_ATL::ActionBlock' target = 'class_ATL::Rule'/>
    <edge id = 'referenceEdge_ExpressionStat2OclExpression' source = 'class_ATL::ExpressionStat' target = 'class_OCL::OclExpression'/>
    <edge id = 'referenceEdge_BindingStat2OclExpression' source = 'class_ATL::BindingStat' target = 'class_OCL::OclExpression'/>
    <node id = 'class_ATL::LocatedElement'>
      <data key = 'label'>class_ATL::LocatedElement</data>
    </node>
    <node id = 'class_ATL::Unit'>
      <data key = 'label'>class_ATL::Unit</data>
    </node>
    <node id = 'class_ATL::Library'>
      <data key = 'label'>class_ATL::Library</data>
    </node>
    <node id = 'class_ATL::Query'>
      <data key = 'label'>class_ATL::Query</data>
    </node>
    <node id = 'class_ATL::Module'>
      <data key = 'label'>class_ATL::Module</data>
    </node>
    <node id = 'class_ATL::ModuleElement'>
      <data key = 'label'>class_ATL::ModuleElement</data>
    </node>
    <node id = 'class_ATL::Helper'>
      <data key = 'label'>class_ATL::Helper</data>
    </node>
    <node id = 'class_ATL::Rule'>
      <data key = 'label'>class_ATL::Rule</data>
    </node>
    <node id = 'class_ATL::MatchedRule'>
      <data key = 'label'>class_ATL::MatchedRule</data>
    </node>
    <node id = 'class_ATL::LazyMatchedRule'>
      <data key = 'label'>class_ATL::LazyMatchedRule</data>
    </node>
    <node id = 'class_ATL::CalledRule'>
      <data key = 'label'>class_ATL::CalledRule</data>
    </node>
    <node id = 'class_ATL::InPattern'>
      <data key = 'label'>class_ATL::InPattern</data>
    </node>
    <node id = 'class_ATL::OutPattern'>
      <data key = 'label'>class_ATL::OutPattern</data>
    </node>
    <node id = 'class_ATL::PatternElement'>
      <data key = 'label'>class_ATL::PatternElement</data>
    </node>
    <node id = 'class_ATL::InPatternElement'>
      <data key = 'label'>class_ATL::InPatternElement</data>
    </node>
    <node id = 'class_ATL::SimpleInPatternElement'>
      <data key = 'label'>class_ATL::SimpleInPatternElement</data>
    </node>
    <node id = 'class_ATL::OutPatternElement'>
      <data key = 'label'>class_ATL::OutPatternElement</data>
    </node>
    <node id = 'class_ATL::SimpleOutPatternElement'>
      <data key = 'label'>class_ATL::SimpleOutPatternElement</data>
    </node>
    <node id = 'class_ATL::ForEachOutPatternElement'>
      <data key = 'label'>class_ATL::ForEachOutPatternElement</data>
    </node>
    <node id = 'class_ATL::Binding'>
      <data key = 'label'>class_ATL::Binding</data>
    </node>
    <node id = 'class_ATL::RuleVariableDeclaration'>
      <data key = 'label'>class_ATL::RuleVariableDeclaration</data>
    </node>
    <node id = 'class_ATL::LibraryRef'>
      <data key = 'label'>class_ATL::LibraryRef</data>
    </node>
    <node id = 'class_ATL::ActionBlock'>
      <data key = 'label'>class_ATL::ActionBlock</data>
    </node>
    <node id = 'class_ATL::Statement'>
      <data key = 'label'>class_ATL::Statement</data>
    </node>
    <node id = 'class_ATL::ExpressionStat'>
      <data key = 'label'>class_ATL::ExpressionStat</data>
    </node>
    <node id = 'class_ATL::BindingStat'>
      <data key = 'label'>class_ATL::BindingStat</data>
    </node>
    <node id = 'class_ATL::IfStat'>
      <data key = 'label'>class_ATL::IfStat</data>
    </node>
    <node id = 'class_ATL::ForStat'>
      <data key = 'label'>class_ATL::ForStat</data>
    </node>
    <node id = 'package_ATL'>
      <data key = 'label'>package_ATL</data>
    </node>
  </graph>
  <graph id = 'OCLGraph' edgedefault = 'undirected'>
    <edge id = 'OclExpression_extends_LocatedElement' source = 'class_OCL::OclExpression' target = 'class_ATL::LocatedElement'/>
    <edge id = 'VariableExp_extends_OclExpression' source = 'class_OCL::VariableExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'SuperExp_extends_OclExpression' source = 'class_OCL::SuperExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'PrimitiveExp_extends_OclExpression' source = 'class_OCL::PrimitiveExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'StringExp_extends_PrimitiveExp' source = 'class_OCL::StringExp' target = 'class_OCL::PrimitiveExp'/>
    <edge id = 'BooleanExp_extends_PrimitiveExp' source = 'class_OCL::BooleanExp' target = 'class_OCL::PrimitiveExp'/>
    <edge id = 'NumericExp_extends_PrimitiveExp' source = 'class_OCL::NumericExp' target = 'class_OCL::PrimitiveExp'/>
    <edge id = 'RealExp_extends_NumericExp' source = 'class_OCL::RealExp' target = 'class_OCL::NumericExp'/>
    <edge id = 'IntegerExp_extends_NumericExp' source = 'class_OCL::IntegerExp' target = 'class_OCL::NumericExp'/>
    <edge id = 'CollectionExp_extends_OclExpression' source = 'class_OCL::CollectionExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'BagExp_extends_CollectionExp' source = 'class_OCL::BagExp' target = 'class_OCL::CollectionExp'/>
    <edge id = 'OrderedSetExp_extends_CollectionExp' source = 'class_OCL::OrderedSetExp' target = 'class_OCL::CollectionExp'/>
    <edge id = 'SequenceExp_extends_CollectionExp' source = 'class_OCL::SequenceExp' target = 'class_OCL::CollectionExp'/>
    <edge id = 'SetExp_extends_CollectionExp' source = 'class_OCL::SetExp' target = 'class_OCL::CollectionExp'/>
    <edge id = 'TupleExp_extends_OclExpression' source = 'class_OCL::TupleExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'TuplePart_extends_VariableDeclaration' source = 'class_OCL::TuplePart' target = 'class_OCL::VariableDeclaration'/>
    <edge id = 'MapExp_extends_OclExpression' source = 'class_OCL::MapExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'MapElement_extends_LocatedElement' source = 'class_OCL::MapElement' target = 'class_ATL::LocatedElement'/>
    <edge id = 'EnumLiteralExp_extends_OclExpression' source = 'class_OCL::EnumLiteralExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'OclUndefinedExp_extends_OclExpression' source = 'class_OCL::OclUndefinedExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'PropertyCallExp_extends_OclExpression' source = 'class_OCL::PropertyCallExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'NavigationOrAttributeCallExp_extends_PropertyCallExp' source = 'class_OCL::NavigationOrAttributeCallExp' target = 'class_OCL::PropertyCallExp'/>
    <edge id = 'OperationCallExp_extends_PropertyCallExp' source = 'class_OCL::OperationCallExp' target = 'class_OCL::PropertyCallExp'/>
    <edge id = 'OperatorCallExp_extends_OperationCallExp' source = 'class_OCL::OperatorCallExp' target = 'class_OCL::OperationCallExp'/>
    <edge id = 'CollectionOperationCallExp_extends_OperationCallExp' source = 'class_OCL::CollectionOperationCallExp' target = 'class_OCL::OperationCallExp'/>
    <edge id = 'LoopExp_extends_PropertyCallExp' source = 'class_OCL::LoopExp' target = 'class_OCL::PropertyCallExp'/>
    <edge id = 'IterateExp_extends_LoopExp' source = 'class_OCL::IterateExp' target = 'class_OCL::LoopExp'/>
    <edge id = 'IteratorExp_extends_LoopExp' source = 'class_OCL::IteratorExp' target = 'class_OCL::LoopExp'/>
    <edge id = 'LetExp_extends_OclExpression' source = 'class_OCL::LetExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'IfExp_extends_OclExpression' source = 'class_OCL::IfExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'Iterator_extends_VariableDeclaration' source = 'class_OCL::Iterator' target = 'class_OCL::VariableDeclaration'/>
    <edge id = 'Parameter_extends_VariableDeclaration' source = 'class_OCL::Parameter' target = 'class_OCL::VariableDeclaration'/>
    <edge id = 'CollectionType_extends_OclType' source = 'class_OCL::CollectionType' target = 'class_OCL::OclType'/>
    <edge id = 'Primitive_extends_OclType' source = 'class_OCL::Primitive' target = 'class_OCL::OclType'/>
    <edge id = 'StringType_extends_Primitive' source = 'class_OCL::StringType' target = 'class_OCL::Primitive'/>
    <edge id = 'BooleanType_extends_Primitive' source = 'class_OCL::BooleanType' target = 'class_OCL::Primitive'/>
    <edge id = 'NumericType_extends_Primitive' source = 'class_OCL::NumericType' target = 'class_OCL::Primitive'/>
    <edge id = 'IntegerType_extends_NumericType' source = 'class_OCL::IntegerType' target = 'class_OCL::NumericType'/>
    <edge id = 'RealType_extends_NumericType' source = 'class_OCL::RealType' target = 'class_OCL::NumericType'/>
    <edge id = 'BagType_extends_CollectionType' source = 'class_OCL::BagType' target = 'class_OCL::CollectionType'/>
    <edge id = 'OrderedSetType_extends_CollectionType' source = 'class_OCL::OrderedSetType' target = 'class_OCL::CollectionType'/>
    <edge id = 'SequenceType_extends_CollectionType' source = 'class_OCL::SequenceType' target = 'class_OCL::CollectionType'/>
    <edge id = 'SetType_extends_CollectionType' source = 'class_OCL::SetType' target = 'class_OCL::CollectionType'/>
    <edge id = 'OclAnyType_extends_OclType' source = 'class_OCL::OclAnyType' target = 'class_OCL::OclType'/>
    <edge id = 'TupleType_extends_OclType' source = 'class_OCL::TupleType' target = 'class_OCL::OclType'/>
    <edge id = 'TupleTypeAttribute_extends_LocatedElement' source = 'class_OCL::TupleTypeAttribute' target = 'class_ATL::LocatedElement'/>
    <edge id = 'OclModelElement_extends_OclType' source = 'class_OCL::OclModelElement' target = 'class_OCL::OclType'/>
    <edge id = 'MapType_extends_OclType' source = 'class_OCL::MapType' target = 'class_OCL::OclType'/>
    <edge id = 'OclFeatureDefinition_extends_LocatedElement' source = 'class_OCL::OclFeatureDefinition' target = 'class_ATL::LocatedElement'/>
    <edge id = 'OclContextDefinition_extends_LocatedElement' source = 'class_OCL::OclContextDefinition' target = 'class_ATL::LocatedElement'/>
    <edge id = 'OclFeature_extends_LocatedElement' source = 'class_OCL::OclFeature' target = 'class_ATL::LocatedElement'/>
    <edge id = 'Attribute_extends_OclFeature' source = 'class_OCL::Attribute' target = 'class_OCL::OclFeature'/>
    <edge id = 'Operation_extends_OclFeature' source = 'class_OCL::Operation' target = 'class_OCL::OclFeature'/>
    <edge id = 'OclModel_extends_LocatedElement' source = 'class_OCL::OclModel' target = 'class_ATL::LocatedElement'/>
    <edge id = 'referenceEdge_IfStat2OclExpression' source = 'class_ATL::IfStat' target = 'class_OCL::OclExpression'/>
    <edge id = 'referenceEdge_VariableExp2VariableDeclaration' source = 'class_OCL::VariableExp' target = 'class_OCL::VariableDeclaration'/>
    <edge id = 'referenceEdge_CollectionExp2OclExpression' source = 'class_OCL::CollectionExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'referenceEdge_TupleExp2TuplePart' source = 'class_OCL::TupleExp' target = 'class_OCL::TuplePart'/>
    <edge id = 'referenceEdge_MapExp2MapElement' source = 'class_OCL::MapExp' target = 'class_OCL::MapElement'/>
    <edge id = 'referenceEdge_PropertyCallExp2OclExpression' source = 'class_OCL::PropertyCallExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'referenceEdge_OperationCallExp2OclExpression' source = 'class_OCL::OperationCallExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'referenceEdge_LoopExp2OclExpression' source = 'class_OCL::LoopExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'referenceEdge_IterateExp2VariableDeclaration' source = 'class_OCL::IterateExp' target = 'class_OCL::VariableDeclaration'/>
    <edge id = 'referenceEdge_LetExp2VariableDeclaration' source = 'class_OCL::LetExp' target = 'class_OCL::VariableDeclaration'/>
    <edge id = 'referenceEdge_IfExp2OclExpression' source = 'class_OCL::IfExp' target = 'class_OCL::OclExpression'/>
    <edge id = 'referenceEdge_ForStat2Iterator' source = 'class_ATL::ForStat' target = 'class_OCL::Iterator'/>
    <edge id = 'referenceEdge_CalledRule2Parameter' source = 'class_ATL::CalledRule' target = 'class_OCL::Parameter'/>
    <edge id = 'referenceEdge_CollectionType2OclType' source = 'class_OCL::CollectionType' target = 'class_OCL::OclType'/>
    <edge id = 'referenceEdge_TupleType2TupleTypeAttribute' source = 'class_OCL::TupleType' target = 'class_OCL::TupleTypeAttribute'/>
    <edge id = 'referenceEdge_OclModelElement2OclModel' source = 'class_OCL::OclModelElement' target = 'class_OCL::OclModel'/>
    <edge id = 'referenceEdge_MapType2OclType' source = 'class_OCL::MapType' target = 'class_OCL::OclType'/>
    <edge id = 'referenceEdge_OclFeatureDefinition2OclFeature' source = 'class_OCL::OclFeatureDefinition' target = 'class_OCL::OclFeature'/>
    <edge id = 'referenceEdge_OclContextDefinition2OclFeatureDefinition' source = 'class_OCL::OclContextDefinition' target = 'class_OCL::OclFeatureDefinition'/>
    <edge id = 'referenceEdge_Attribute2OclExpression' source = 'class_OCL::Attribute' target = 'class_OCL::OclExpression'/>
    <edge id = 'referenceEdge_Operation2Parameter' source = 'class_OCL::Operation' target = 'class_OCL::Parameter'/>
    <node id = 'class_OCL::OclExpression'>
      <data key = 'label'>class_OCL::OclExpression</data>
    </node>
    <node id = 'class_OCL::VariableExp'>
      <data key = 'label'>class_OCL::VariableExp</data>
    </node>
    <node id = 'class_OCL::SuperExp'>
      <data key = 'label'>class_OCL::SuperExp</data>
    </node>
    <node id = 'class_OCL::PrimitiveExp'>
      <data key = 'label'>class_OCL::PrimitiveExp</data>
    </node>
    <node id = 'class_OCL::StringExp'>
      <data key = 'label'>class_OCL::StringExp</data>
    </node>
    <node id = 'class_OCL::BooleanExp'>
      <data key = 'label'>class_OCL::BooleanExp</data>
    </node>
    <node id = 'class_OCL::NumericExp'>
      <data key = 'label'>class_OCL::NumericExp</data>
    </node>
    <node id = 'class_OCL::RealExp'>
      <data key = 'label'>class_OCL::RealExp</data>
    </node>
    <node id = 'class_OCL::IntegerExp'>
      <data key = 'label'>class_OCL::IntegerExp</data>
    </node>
    <node id = 'class_OCL::CollectionExp'>
      <data key = 'label'>class_OCL::CollectionExp</data>
    </node>
    <node id = 'class_OCL::BagExp'>
      <data key = 'label'>class_OCL::BagExp</data>
    </node>
    <node id = 'class_OCL::OrderedSetExp'>
      <data key = 'label'>class_OCL::OrderedSetExp</data>
    </node>
    <node id = 'class_OCL::SequenceExp'>
      <data key = 'label'>class_OCL::SequenceExp</data>
    </node>
    <node id = 'class_OCL::SetExp'>
      <data key = 'label'>class_OCL::SetExp</data>
    </node>
    <node id = 'class_OCL::TupleExp'>
      <data key = 'label'>class_OCL::TupleExp</data>
    </node>
    <node id = 'class_OCL::TuplePart'>
      <data key = 'label'>class_OCL::TuplePart</data>
    </node>
    <node id = 'class_OCL::MapExp'>
      <data key = 'label'>class_OCL::MapExp</data>
    </node>
    <node id = 'class_OCL::MapElement'>
      <data key = 'label'>class_OCL::MapElement</data>
    </node>
    <node id = 'class_OCL::EnumLiteralExp'>
      <data key = 'label'>class_OCL::EnumLiteralExp</data>
    </node>
    <node id = 'class_OCL::OclUndefinedExp'>
      <data key = 'label'>class_OCL::OclUndefinedExp</data>
    </node>
    <node id = 'class_OCL::PropertyCallExp'>
      <data key = 'label'>class_OCL::PropertyCallExp</data>
    </node>
    <node id = 'class_OCL::NavigationOrAttributeCallExp'>
      <data key = 'label'>class_OCL::NavigationOrAttributeCallExp</data>
    </node>
    <node id = 'class_OCL::OperationCallExp'>
      <data key = 'label'>class_OCL::OperationCallExp</data>
    </node>
    <node id = 'class_OCL::OperatorCallExp'>
      <data key = 'label'>class_OCL::OperatorCallExp</data>
    </node>
    <node id = 'class_OCL::CollectionOperationCallExp'>
      <data key = 'label'>class_OCL::CollectionOperationCallExp</data>
    </node>
    <node id = 'class_OCL::LoopExp'>
      <data key = 'label'>class_OCL::LoopExp</data>
    </node>
    <node id = 'class_OCL::IterateExp'>
      <data key = 'label'>class_OCL::IterateExp</data>
    </node>
    <node id = 'class_OCL::IteratorExp'>
      <data key = 'label'>class_OCL::IteratorExp</data>
    </node>
    <node id = 'class_OCL::LetExp'>
      <data key = 'label'>class_OCL::LetExp</data>
    </node>
    <node id = 'class_OCL::IfExp'>
      <data key = 'label'>class_OCL::IfExp</data>
    </node>
    <node id = 'class_OCL::VariableDeclaration'>
      <data key = 'label'>class_OCL::VariableDeclaration</data>
    </node>
    <node id = 'class_OCL::Iterator'>
      <data key = 'label'>class_OCL::Iterator</data>
    </node>
    <node id = 'class_OCL::Parameter'>
      <data key = 'label'>class_OCL::Parameter</data>
    </node>
    <node id = 'class_OCL::CollectionType'>
      <data key = 'label'>class_OCL::CollectionType</data>
    </node>
    <node id = 'class_OCL::OclType'>
      <data key = 'label'>class_OCL::OclType</data>
    </node>
    <node id = 'class_OCL::Primitive'>
      <data key = 'label'>class_OCL::Primitive</data>
    </node>
    <node id = 'class_OCL::StringType'>
      <data key = 'label'>class_OCL::StringType</data>
    </node>
    <node id = 'class_OCL::BooleanType'>
      <data key = 'label'>class_OCL::BooleanType</data>
    </node>
    <node id = 'class_OCL::NumericType'>
      <data key = 'label'>class_OCL::NumericType</data>
    </node>
    <node id = 'class_OCL::IntegerType'>
      <data key = 'label'>class_OCL::IntegerType</data>
    </node>
    <node id = 'class_OCL::RealType'>
      <data key = 'label'>class_OCL::RealType</data>
    </node>
    <node id = 'class_OCL::BagType'>
      <data key = 'label'>class_OCL::BagType</data>
    </node>
    <node id = 'class_OCL::OrderedSetType'>
      <data key = 'label'>class_OCL::OrderedSetType</data>
    </node>
    <node id = 'class_OCL::SequenceType'>
      <data key = 'label'>class_OCL::SequenceType</data>
    </node>
    <node id = 'class_OCL::SetType'>
      <data key = 'label'>class_OCL::SetType</data>
    </node>
    <node id = 'class_OCL::OclAnyType'>
      <data key = 'label'>class_OCL::OclAnyType</data>
    </node>
    <node id = 'class_OCL::TupleType'>
      <data key = 'label'>class_OCL::TupleType</data>
    </node>
    <node id = 'class_OCL::TupleTypeAttribute'>
      <data key = 'label'>class_OCL::TupleTypeAttribute</data>
    </node>
    <node id = 'class_OCL::OclModelElement'>
      <data key = 'label'>class_OCL::OclModelElement</data>
    </node>
    <node id = 'class_OCL::MapType'>
      <data key = 'label'>class_OCL::MapType</data>
    </node>
    <node id = 'class_OCL::OclFeatureDefinition'>
      <data key = 'label'>class_OCL::OclFeatureDefinition</data>
    </node>
    <node id = 'class_OCL::OclContextDefinition'>
      <data key = 'label'>class_OCL::OclContextDefinition</data>
    </node>
    <node id = 'class_OCL::OclFeature'>
      <data key = 'label'>class_OCL::OclFeature</data>
    </node>
    <node id = 'class_OCL::Attribute'>
      <data key = 'label'>class_OCL::Attribute</data>
    </node>
    <node id = 'class_OCL::Operation'>
      <data key = 'label'>class_OCL::Operation</data>
    </node>
    <node id = 'class_OCL::OclModel'>
      <data key = 'label'>class_OCL::OclModel</data>
    </node>
    <node id = 'package_OCL'>
      <data key = 'label'>package_OCL</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'dataType_Double'>
      <data key = 'label'>dataType_Double</data>
    </node>
    <node id = 'dataType_Integer'>
      <data key = 'label'>dataType_Integer</data>
    </node>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
