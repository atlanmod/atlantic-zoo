<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'UMLGraph' edgedefault = 'undirected'>
    <node id = 'package_UML'>
      <data key = 'label'>package_UML</data>
    </node>
  </graph>
  <graph id = 'Common_BehaviorGraph' edgedefault = 'undirected'>
    <edge id = 'Instance_extends_ModelElement' source = 'class_Common_Behavior::Instance' target = 'class_Core::ModelElement'/>
    <edge id = 'Action_extends_ModelElement' source = 'class_Common_Behavior::Action' target = 'class_Core::ModelElement'/>
    <edge id = 'CreateAction_extends_Action' source = 'class_Common_Behavior::CreateAction' target = 'class_Common_Behavior::Action'/>
    <edge id = 'DestroyAction_extends_Action' source = 'class_Common_Behavior::DestroyAction' target = 'class_Common_Behavior::Action'/>
    <edge id = 'UninterpretedAction_extends_Action' source = 'class_Common_Behavior::UninterpretedAction' target = 'class_Common_Behavior::Action'/>
    <edge id = 'AttributeLink_extends_ModelElement' source = 'class_Common_Behavior::AttributeLink' target = 'class_Core::ModelElement'/>
    <edge id = 'Object_extends_Instance' source = 'class_Common_Behavior::Object' target = 'class_Common_Behavior::Instance'/>
    <edge id = 'Link_extends_ModelElement' source = 'class_Common_Behavior::Link' target = 'class_Core::ModelElement'/>
    <edge id = 'LinkObject_extends_Object' source = 'class_Common_Behavior::LinkObject' target = 'class_Common_Behavior::Object'/>
    <edge id = 'DataValue_extends_Instance' source = 'class_Common_Behavior::DataValue' target = 'class_Common_Behavior::Instance'/>
    <edge id = 'CallAction_extends_Action' source = 'class_Common_Behavior::CallAction' target = 'class_Common_Behavior::Action'/>
    <edge id = 'SendAction_extends_Action' source = 'class_Common_Behavior::SendAction' target = 'class_Common_Behavior::Action'/>
    <edge id = 'ActionSequence_extends_Action' source = 'class_Common_Behavior::ActionSequence' target = 'class_Common_Behavior::Action'/>
    <edge id = 'Argument_extends_ModelElement' source = 'class_Common_Behavior::Argument' target = 'class_Core::ModelElement'/>
    <edge id = 'LinkEnd_extends_ModelElement' source = 'class_Common_Behavior::LinkEnd' target = 'class_Core::ModelElement'/>
    <edge id = 'ReturnAction_extends_Action' source = 'class_Common_Behavior::ReturnAction' target = 'class_Common_Behavior::Action'/>
    <edge id = 'TerminateAction_extends_Action' source = 'class_Common_Behavior::TerminateAction' target = 'class_Common_Behavior::Action'/>
    <edge id = 'Exception_extends_Signal' source = 'class_Common_Behavior::Exception' target = 'class_Common_Behavior::Signal'/>
    <edge id = 'ComponentInstance_extends_Instance' source = 'class_Common_Behavior::ComponentInstance' target = 'class_Common_Behavior::Instance'/>
    <edge id = 'NodeInstance_extends_Instance' source = 'class_Common_Behavior::NodeInstance' target = 'class_Common_Behavior::Instance'/>
    <edge id = 'SubsystemInstance_extends_Instance' source = 'class_Common_Behavior::SubsystemInstance' target = 'class_Common_Behavior::Instance'/>
    <edge id = 'referenceEdge_Instance2Instance' source = 'class_Common_Behavior::Instance' target = 'class_Common_Behavior::Instance'/>
    <edge id = 'referenceEdge_Action2Argument' source = 'class_Common_Behavior::Action' target = 'class_Common_Behavior::Argument'/>
    <edge id = 'referenceEdge_AttributeLink2Instance' source = 'class_Common_Behavior::AttributeLink' target = 'class_Common_Behavior::Instance'/>
    <edge id = 'referenceEdge_Link2Association' source = 'class_Common_Behavior::Link' target = 'class_Core::Association'/>
    <edge id = 'referenceEdge_CallAction2Operation' source = 'class_Common_Behavior::CallAction' target = 'class_Core::Operation'/>
    <edge id = 'referenceEdge_SendAction2Signal' source = 'class_Common_Behavior::SendAction' target = 'class_Common_Behavior::Signal'/>
    <edge id = 'referenceEdge_ActionSequence2Action' source = 'class_Common_Behavior::ActionSequence' target = 'class_Common_Behavior::Action'/>
    <edge id = 'referenceEdge_Reception2Signal' source = 'class_Common_Behavior::Reception' target = 'class_Common_Behavior::Signal'/>
    <edge id = 'referenceEdge_LinkEnd2Link' source = 'class_Common_Behavior::LinkEnd' target = 'class_Common_Behavior::Link'/>
    <edge id = 'referenceEdge_Stimulus2Instance' source = 'class_Common_Behavior::Stimulus' target = 'class_Common_Behavior::Instance'/>
    <edge id = 'referenceEdge_ComponentInstance2Instance' source = 'class_Common_Behavior::ComponentInstance' target = 'class_Common_Behavior::Instance'/>
    <edge id = 'referenceEdge_NodeInstance2ComponentInstance' source = 'class_Common_Behavior::NodeInstance' target = 'class_Common_Behavior::ComponentInstance'/>
    <node id = 'class_Common_Behavior::Instance'>
      <data key = 'label'>class_Common_Behavior::Instance</data>
    </node>
    <node id = 'class_Common_Behavior::Signal'>
      <data key = 'label'>class_Common_Behavior::Signal</data>
    </node>
    <node id = 'class_Common_Behavior::Action'>
      <data key = 'label'>class_Common_Behavior::Action</data>
    </node>
    <node id = 'class_Common_Behavior::CreateAction'>
      <data key = 'label'>class_Common_Behavior::CreateAction</data>
    </node>
    <node id = 'class_Common_Behavior::DestroyAction'>
      <data key = 'label'>class_Common_Behavior::DestroyAction</data>
    </node>
    <node id = 'class_Common_Behavior::UninterpretedAction'>
      <data key = 'label'>class_Common_Behavior::UninterpretedAction</data>
    </node>
    <node id = 'class_Common_Behavior::AttributeLink'>
      <data key = 'label'>class_Common_Behavior::AttributeLink</data>
    </node>
    <node id = 'class_Common_Behavior::Object'>
      <data key = 'label'>class_Common_Behavior::Object</data>
    </node>
    <node id = 'class_Common_Behavior::Link'>
      <data key = 'label'>class_Common_Behavior::Link</data>
    </node>
    <node id = 'class_Common_Behavior::LinkObject'>
      <data key = 'label'>class_Common_Behavior::LinkObject</data>
    </node>
    <node id = 'class_Common_Behavior::DataValue'>
      <data key = 'label'>class_Common_Behavior::DataValue</data>
    </node>
    <node id = 'class_Common_Behavior::CallAction'>
      <data key = 'label'>class_Common_Behavior::CallAction</data>
    </node>
    <node id = 'class_Common_Behavior::SendAction'>
      <data key = 'label'>class_Common_Behavior::SendAction</data>
    </node>
    <node id = 'class_Common_Behavior::ActionSequence'>
      <data key = 'label'>class_Common_Behavior::ActionSequence</data>
    </node>
    <node id = 'class_Common_Behavior::Argument'>
      <data key = 'label'>class_Common_Behavior::Argument</data>
    </node>
    <node id = 'class_Common_Behavior::Reception'>
      <data key = 'label'>class_Common_Behavior::Reception</data>
    </node>
    <node id = 'class_Common_Behavior::LinkEnd'>
      <data key = 'label'>class_Common_Behavior::LinkEnd</data>
    </node>
    <node id = 'class_Common_Behavior::ReturnAction'>
      <data key = 'label'>class_Common_Behavior::ReturnAction</data>
    </node>
    <node id = 'class_Common_Behavior::TerminateAction'>
      <data key = 'label'>class_Common_Behavior::TerminateAction</data>
    </node>
    <node id = 'class_Common_Behavior::Stimulus'>
      <data key = 'label'>class_Common_Behavior::Stimulus</data>
    </node>
    <node id = 'class_Common_Behavior::Exception'>
      <data key = 'label'>class_Common_Behavior::Exception</data>
    </node>
    <node id = 'class_Common_Behavior::ComponentInstance'>
      <data key = 'label'>class_Common_Behavior::ComponentInstance</data>
    </node>
    <node id = 'class_Common_Behavior::NodeInstance'>
      <data key = 'label'>class_Common_Behavior::NodeInstance</data>
    </node>
    <node id = 'class_Common_Behavior::SubsystemInstance'>
      <data key = 'label'>class_Common_Behavior::SubsystemInstance</data>
    </node>
    <node id = 'package_Common_Behavior'>
      <data key = 'label'>package_Common_Behavior</data>
    </node>
  </graph>
  <graph id = 'Data_TypesGraph' edgedefault = 'undirected'>
    <edge id = 'BooleanExpression_extends_Expression' source = 'class_Data_Types::BooleanExpression' target = 'class_Data_Types::Expression'/>
    <edge id = 'TypeExpression_extends_Expression' source = 'class_Data_Types::TypeExpression' target = 'class_Data_Types::Expression'/>
    <edge id = 'MappingExpression_extends_Expression' source = 'class_Data_Types::MappingExpression' target = 'class_Data_Types::Expression'/>
    <edge id = 'ProcedureExpression_extends_Expression' source = 'class_Data_Types::ProcedureExpression' target = 'class_Data_Types::Expression'/>
    <edge id = 'ObjectSetExpression_extends_Expression' source = 'class_Data_Types::ObjectSetExpression' target = 'class_Data_Types::Expression'/>
    <edge id = 'ActionExpression_extends_Expression' source = 'class_Data_Types::ActionExpression' target = 'class_Data_Types::Expression'/>
    <edge id = 'IterationExpression_extends_Expression' source = 'class_Data_Types::IterationExpression' target = 'class_Data_Types::Expression'/>
    <edge id = 'TimeExpression_extends_Expression' source = 'class_Data_Types::TimeExpression' target = 'class_Data_Types::Expression'/>
    <edge id = 'ArgListsExpression_extends_Expression' source = 'class_Data_Types::ArgListsExpression' target = 'class_Data_Types::Expression'/>
    <edge id = 'referenceEdge_Multiplicity2MultiplicityRange' source = 'class_Data_Types::Multiplicity' target = 'class_Data_Types::MultiplicityRange'/>
    <node id = 'enum_AggregationKind'>
      <data key = 'label'>enum_AggregationKind</data>
    </node>
    <node id = 'enum_CallConcurrencyKind'>
      <data key = 'label'>enum_CallConcurrencyKind</data>
    </node>
    <node id = 'enum_ChangeableKind'>
      <data key = 'label'>enum_ChangeableKind</data>
    </node>
    <node id = 'enum_OrderingKind'>
      <data key = 'label'>enum_OrderingKind</data>
    </node>
    <node id = 'enum_ParameterDirectionKind'>
      <data key = 'label'>enum_ParameterDirectionKind</data>
    </node>
    <node id = 'enum_ScopeKind'>
      <data key = 'label'>enum_ScopeKind</data>
    </node>
    <node id = 'enum_VisibilityKind'>
      <data key = 'label'>enum_VisibilityKind</data>
    </node>
    <node id = 'class_Data_Types::Multiplicity'>
      <data key = 'label'>class_Data_Types::Multiplicity</data>
    </node>
    <node id = 'class_Data_Types::MultiplicityRange'>
      <data key = 'label'>class_Data_Types::MultiplicityRange</data>
    </node>
    <node id = 'class_Data_Types::Expression'>
      <data key = 'label'>class_Data_Types::Expression</data>
    </node>
    <node id = 'class_Data_Types::BooleanExpression'>
      <data key = 'label'>class_Data_Types::BooleanExpression</data>
    </node>
    <node id = 'class_Data_Types::TypeExpression'>
      <data key = 'label'>class_Data_Types::TypeExpression</data>
    </node>
    <node id = 'class_Data_Types::MappingExpression'>
      <data key = 'label'>class_Data_Types::MappingExpression</data>
    </node>
    <node id = 'class_Data_Types::ProcedureExpression'>
      <data key = 'label'>class_Data_Types::ProcedureExpression</data>
    </node>
    <node id = 'class_Data_Types::ObjectSetExpression'>
      <data key = 'label'>class_Data_Types::ObjectSetExpression</data>
    </node>
    <node id = 'class_Data_Types::ActionExpression'>
      <data key = 'label'>class_Data_Types::ActionExpression</data>
    </node>
    <node id = 'class_Data_Types::IterationExpression'>
      <data key = 'label'>class_Data_Types::IterationExpression</data>
    </node>
    <node id = 'class_Data_Types::TimeExpression'>
      <data key = 'label'>class_Data_Types::TimeExpression</data>
    </node>
    <node id = 'class_Data_Types::ArgListsExpression'>
      <data key = 'label'>class_Data_Types::ArgListsExpression</data>
    </node>
    <node id = 'enum_PseudostateKind'>
      <data key = 'label'>enum_PseudostateKind</data>
    </node>
    <node id = 'package_Data_Types'>
      <data key = 'label'>package_Data_Types</data>
    </node>
  </graph>
  <graph id = 'Model_ManagementGraph' edgedefault = 'undirected'>
    <edge id = 'Model_extends_Package' source = 'class_Model_Management::Model' target = 'class_Model_Management::Package'/>
    <edge id = 'Subsystem_extends_Package' source = 'class_Model_Management::Subsystem' target = 'class_Model_Management::Package'/>
    <edge id = 'referenceEdge_Package2ElementImport' source = 'class_Model_Management::Package' target = 'class_Model_Management::ElementImport'/>
    <node id = 'class_Model_Management::Package'>
      <data key = 'label'>class_Model_Management::Package</data>
    </node>
    <node id = 'class_Model_Management::Model'>
      <data key = 'label'>class_Model_Management::Model</data>
    </node>
    <node id = 'class_Model_Management::Subsystem'>
      <data key = 'label'>class_Model_Management::Subsystem</data>
    </node>
    <node id = 'class_Model_Management::ElementImport'>
      <data key = 'label'>class_Model_Management::ElementImport</data>
    </node>
    <node id = 'package_Model_Management'>
      <data key = 'label'>package_Model_Management</data>
    </node>
  </graph>
  <graph id = 'CoreGraph' edgedefault = 'undirected'>
    <edge id = 'Stimulus_extends_ModelElement' source = 'class_Common_Behavior::Stimulus' target = 'class_Core::ModelElement'/>
    <edge id = 'Package_extends_GeneralizableElement' source = 'class_Model_Management::Package' target = 'class_Core::GeneralizableElement'/>
    <edge id = 'Namespace_extends_ModelElement' source = 'class_Core::Namespace' target = 'class_Core::ModelElement'/>
    <edge id = 'Signal_extends_Classifier' source = 'class_Common_Behavior::Signal' target = 'class_Core::Classifier'/>
    <edge id = 'Class_extends_Classifier' source = 'class_Core::Class' target = 'class_Core::Classifier'/>
    <edge id = 'DataType_extends_Classifier' source = 'class_Core::DataType' target = 'class_Core::Classifier'/>
    <edge id = 'Feature_extends_ModelElement' source = 'class_Core::Feature' target = 'class_Core::ModelElement'/>
    <edge id = 'StructuralFeature_extends_Feature' source = 'class_Core::StructuralFeature' target = 'class_Core::Feature'/>
    <edge id = 'AssociationEnd_extends_ModelElement' source = 'class_Core::AssociationEnd' target = 'class_Core::ModelElement'/>
    <edge id = 'Interface_extends_Classifier' source = 'class_Core::Interface' target = 'class_Core::Classifier'/>
    <edge id = 'Constraint_extends_ModelElement' source = 'class_Core::Constraint' target = 'class_Core::ModelElement'/>
    <edge id = 'Relationship_extends_ModelElement' source = 'class_Core::Relationship' target = 'class_Core::ModelElement'/>
    <edge id = 'Association_extends_GeneralizableElement' source = 'class_Core::Association' target = 'class_Core::GeneralizableElement'/>
    <edge id = 'Attribute_extends_StructuralFeature' source = 'class_Core::Attribute' target = 'class_Core::StructuralFeature'/>
    <edge id = 'Reception_extends_BehavioralFeature' source = 'class_Common_Behavior::Reception' target = 'class_Core::BehavioralFeature'/>
    <edge id = 'Operation_extends_BehavioralFeature' source = 'class_Core::Operation' target = 'class_Core::BehavioralFeature'/>
    <edge id = 'Parameter_extends_ModelElement' source = 'class_Core::Parameter' target = 'class_Core::ModelElement'/>
    <edge id = 'Method_extends_BehavioralFeature' source = 'class_Core::Method' target = 'class_Core::BehavioralFeature'/>
    <edge id = 'Generalization_extends_Relationship' source = 'class_Core::Generalization' target = 'class_Core::Relationship'/>
    <edge id = 'AssociationClass_extends_Association' source = 'class_Core::AssociationClass' target = 'class_Core::Association'/>
    <edge id = 'Dependency_extends_Relationship' source = 'class_Core::Dependency' target = 'class_Core::Relationship'/>
    <edge id = 'Abstraction_extends_Dependency' source = 'class_Core::Abstraction' target = 'class_Core::Dependency'/>
    <edge id = 'PresentationElement_extends_Element' source = 'class_Core::PresentationElement' target = 'class_Core::Element'/>
    <edge id = 'Usage_extends_Dependency' source = 'class_Core::Usage' target = 'class_Core::Dependency'/>
    <edge id = 'Binding_extends_Dependency' source = 'class_Core::Binding' target = 'class_Core::Dependency'/>
    <edge id = 'Component_extends_Classifier' source = 'class_Core::Component' target = 'class_Core::Classifier'/>
    <edge id = 'Node_extends_Classifier' source = 'class_Core::Node' target = 'class_Core::Classifier'/>
    <edge id = 'Permission_extends_Dependency' source = 'class_Core::Permission' target = 'class_Core::Dependency'/>
    <edge id = 'Comment_extends_ModelElement' source = 'class_Core::Comment' target = 'class_Core::ModelElement'/>
    <edge id = 'Flow_extends_Relationship' source = 'class_Core::Flow' target = 'class_Core::Relationship'/>
    <edge id = 'Primitive_extends_DataType' source = 'class_Core::Primitive' target = 'class_Core::DataType'/>
    <edge id = 'Enumeration_extends_DataType' source = 'class_Core::Enumeration' target = 'class_Core::DataType'/>
    <edge id = 'EnumerationLiteral_extends_ModelElement' source = 'class_Core::EnumerationLiteral' target = 'class_Core::ModelElement'/>
    <edge id = 'Stereotype_extends_GeneralizableElement' source = 'class_Core::Stereotype' target = 'class_Core::GeneralizableElement'/>
    <edge id = 'TagDefinition_extends_ModelElement' source = 'class_Core::TagDefinition' target = 'class_Core::ModelElement'/>
    <edge id = 'TaggedValue_extends_ModelElement' source = 'class_Core::TaggedValue' target = 'class_Core::ModelElement'/>
    <edge id = 'ProgrammingLanguageDataType_extends_DataType' source = 'class_Core::ProgrammingLanguageDataType' target = 'class_Core::DataType'/>
    <edge id = 'Artifact_extends_Classifier' source = 'class_Core::Artifact' target = 'class_Core::Classifier'/>
    <edge id = 'referenceEdge_ModelElement2TaggedValue' source = 'class_Core::ModelElement' target = 'class_Core::TaggedValue'/>
    <edge id = 'referenceEdge_GeneralizableElement2Generalization' source = 'class_Core::GeneralizableElement' target = 'class_Core::Generalization'/>
    <edge id = 'referenceEdge_Namespace2ModelElement' source = 'class_Core::Namespace' target = 'class_Core::ModelElement'/>
    <edge id = 'referenceEdge_CreateAction2Classifier' source = 'class_Common_Behavior::CreateAction' target = 'class_Core::Classifier'/>
    <edge id = 'referenceEdge_Feature2Classifier' source = 'class_Core::Feature' target = 'class_Core::Classifier'/>
    <edge id = 'referenceEdge_StructuralFeature2Classifier' source = 'class_Core::StructuralFeature' target = 'class_Core::Classifier'/>
    <edge id = 'referenceEdge_AssociationEnd2Association' source = 'class_Core::AssociationEnd' target = 'class_Core::Association'/>
    <edge id = 'referenceEdge_Constraint2ModelElement' source = 'class_Core::Constraint' target = 'class_Core::ModelElement'/>
    <edge id = 'referenceEdge_Attribute2AssociationEnd' source = 'class_Core::Attribute' target = 'class_Core::AssociationEnd'/>
    <edge id = 'referenceEdge_BehavioralFeature2Parameter' source = 'class_Core::BehavioralFeature' target = 'class_Core::Parameter'/>
    <edge id = 'referenceEdge_Method2Operation' source = 'class_Core::Method' target = 'class_Core::Operation'/>
    <edge id = 'referenceEdge_Dependency2ModelElement' source = 'class_Core::Dependency' target = 'class_Core::ModelElement'/>
    <edge id = 'referenceEdge_Abstraction2MappingExpression' source = 'class_Core::Abstraction' target = 'class_Data_Types::MappingExpression'/>
    <edge id = 'referenceEdge_PresentationElement2ModelElement' source = 'class_Core::PresentationElement' target = 'class_Core::ModelElement'/>
    <edge id = 'referenceEdge_Binding2TemplateArgument' source = 'class_Core::Binding' target = 'class_Core::TemplateArgument'/>
    <edge id = 'referenceEdge_Component2Node' source = 'class_Core::Component' target = 'class_Core::Node'/>
    <edge id = 'referenceEdge_Comment2ModelElement' source = 'class_Core::Comment' target = 'class_Core::ModelElement'/>
    <edge id = 'referenceEdge_Flow2ModelElement' source = 'class_Core::Flow' target = 'class_Core::ModelElement'/>
    <edge id = 'referenceEdge_ElementResidence2Component' source = 'class_Core::ElementResidence' target = 'class_Core::Component'/>
    <edge id = 'referenceEdge_TemplateParameter2ModelElement' source = 'class_Core::TemplateParameter' target = 'class_Core::ModelElement'/>
    <edge id = 'referenceEdge_Enumeration2EnumerationLiteral' source = 'class_Core::Enumeration' target = 'class_Core::EnumerationLiteral'/>
    <edge id = 'referenceEdge_Stereotype2Constraint' source = 'class_Core::Stereotype' target = 'class_Core::Constraint'/>
    <edge id = 'referenceEdge_TagDefinition2Stereotype' source = 'class_Core::TagDefinition' target = 'class_Core::Stereotype'/>
    <edge id = 'referenceEdge_ProgrammingLanguageDataType2TypeExpression' source = 'class_Core::ProgrammingLanguageDataType' target = 'class_Data_Types::TypeExpression'/>
    <node id = 'class_Core::Element'>
      <data key = 'label'>class_Core::Element</data>
    </node>
    <node id = 'class_Core::ModelElement'>
      <data key = 'label'>class_Core::ModelElement</data>
    </node>
    <node id = 'class_Core::GeneralizableElement'>
      <data key = 'label'>class_Core::GeneralizableElement</data>
    </node>
    <node id = 'class_Core::Namespace'>
      <data key = 'label'>class_Core::Namespace</data>
    </node>
    <node id = 'class_Core::Classifier'>
      <data key = 'label'>class_Core::Classifier</data>
    </node>
    <node id = 'class_Core::Class'>
      <data key = 'label'>class_Core::Class</data>
    </node>
    <node id = 'class_Core::DataType'>
      <data key = 'label'>class_Core::DataType</data>
    </node>
    <node id = 'class_Core::Feature'>
      <data key = 'label'>class_Core::Feature</data>
    </node>
    <node id = 'class_Core::StructuralFeature'>
      <data key = 'label'>class_Core::StructuralFeature</data>
    </node>
    <node id = 'class_Core::AssociationEnd'>
      <data key = 'label'>class_Core::AssociationEnd</data>
    </node>
    <node id = 'class_Core::Interface'>
      <data key = 'label'>class_Core::Interface</data>
    </node>
    <node id = 'class_Core::Constraint'>
      <data key = 'label'>class_Core::Constraint</data>
    </node>
    <node id = 'class_Core::Relationship'>
      <data key = 'label'>class_Core::Relationship</data>
    </node>
    <node id = 'class_Core::Association'>
      <data key = 'label'>class_Core::Association</data>
    </node>
    <node id = 'class_Core::Attribute'>
      <data key = 'label'>class_Core::Attribute</data>
    </node>
    <node id = 'class_Core::BehavioralFeature'>
      <data key = 'label'>class_Core::BehavioralFeature</data>
    </node>
    <node id = 'class_Core::Operation'>
      <data key = 'label'>class_Core::Operation</data>
    </node>
    <node id = 'class_Core::Parameter'>
      <data key = 'label'>class_Core::Parameter</data>
    </node>
    <node id = 'class_Core::Method'>
      <data key = 'label'>class_Core::Method</data>
    </node>
    <node id = 'class_Core::Generalization'>
      <data key = 'label'>class_Core::Generalization</data>
    </node>
    <node id = 'class_Core::AssociationClass'>
      <data key = 'label'>class_Core::AssociationClass</data>
    </node>
    <node id = 'class_Core::Dependency'>
      <data key = 'label'>class_Core::Dependency</data>
    </node>
    <node id = 'class_Core::Abstraction'>
      <data key = 'label'>class_Core::Abstraction</data>
    </node>
    <node id = 'class_Core::PresentationElement'>
      <data key = 'label'>class_Core::PresentationElement</data>
    </node>
    <node id = 'class_Core::Usage'>
      <data key = 'label'>class_Core::Usage</data>
    </node>
    <node id = 'class_Core::Binding'>
      <data key = 'label'>class_Core::Binding</data>
    </node>
    <node id = 'class_Core::Component'>
      <data key = 'label'>class_Core::Component</data>
    </node>
    <node id = 'class_Core::Node'>
      <data key = 'label'>class_Core::Node</data>
    </node>
    <node id = 'class_Core::Permission'>
      <data key = 'label'>class_Core::Permission</data>
    </node>
    <node id = 'class_Core::Comment'>
      <data key = 'label'>class_Core::Comment</data>
    </node>
    <node id = 'class_Core::Flow'>
      <data key = 'label'>class_Core::Flow</data>
    </node>
    <node id = 'class_Core::ElementResidence'>
      <data key = 'label'>class_Core::ElementResidence</data>
    </node>
    <node id = 'class_Core::TemplateParameter'>
      <data key = 'label'>class_Core::TemplateParameter</data>
    </node>
    <node id = 'class_Core::Primitive'>
      <data key = 'label'>class_Core::Primitive</data>
    </node>
    <node id = 'class_Core::Enumeration'>
      <data key = 'label'>class_Core::Enumeration</data>
    </node>
    <node id = 'class_Core::EnumerationLiteral'>
      <data key = 'label'>class_Core::EnumerationLiteral</data>
    </node>
    <node id = 'class_Core::Stereotype'>
      <data key = 'label'>class_Core::Stereotype</data>
    </node>
    <node id = 'class_Core::TagDefinition'>
      <data key = 'label'>class_Core::TagDefinition</data>
    </node>
    <node id = 'class_Core::TaggedValue'>
      <data key = 'label'>class_Core::TaggedValue</data>
    </node>
    <node id = 'class_Core::ProgrammingLanguageDataType'>
      <data key = 'label'>class_Core::ProgrammingLanguageDataType</data>
    </node>
    <node id = 'class_Core::Artifact'>
      <data key = 'label'>class_Core::Artifact</data>
    </node>
    <node id = 'class_Core::TemplateArgument'>
      <data key = 'label'>class_Core::TemplateArgument</data>
    </node>
    <node id = 'package_Core'>
      <data key = 'label'>package_Core</data>
    </node>
  </graph>
  <graph id = 'CollaborationsGraph' edgedefault = 'undirected'>
    <edge id = 'Collaboration_extends_GeneralizableElement' source = 'class_Collaborations::Collaboration' target = 'class_Core::GeneralizableElement'/>
    <edge id = 'ClassifierRole_extends_Classifier' source = 'class_Collaborations::ClassifierRole' target = 'class_Core::Classifier'/>
    <edge id = 'AssociationRole_extends_Association' source = 'class_Collaborations::AssociationRole' target = 'class_Core::Association'/>
    <edge id = 'AssociationEndRole_extends_AssociationEnd' source = 'class_Collaborations::AssociationEndRole' target = 'class_Core::AssociationEnd'/>
    <edge id = 'Message_extends_ModelElement' source = 'class_Collaborations::Message' target = 'class_Core::ModelElement'/>
    <edge id = 'Interaction_extends_ModelElement' source = 'class_Collaborations::Interaction' target = 'class_Core::ModelElement'/>
    <edge id = 'InteractionInstanceSet_extends_ModelElement' source = 'class_Collaborations::InteractionInstanceSet' target = 'class_Core::ModelElement'/>
    <edge id = 'CollaborationInstanceSet_extends_ModelElement' source = 'class_Collaborations::CollaborationInstanceSet' target = 'class_Core::ModelElement'/>
    <edge id = 'referenceEdge_Collaboration2Collaboration' source = 'class_Collaborations::Collaboration' target = 'class_Collaborations::Collaboration'/>
    <edge id = 'referenceEdge_ClassifierRole2ModelElement' source = 'class_Collaborations::ClassifierRole' target = 'class_Core::ModelElement'/>
    <edge id = 'referenceEdge_AssociationRole2Association' source = 'class_Collaborations::AssociationRole' target = 'class_Core::Association'/>
    <edge id = 'referenceEdge_AssociationEndRole2AssociationEnd' source = 'class_Collaborations::AssociationEndRole' target = 'class_Core::AssociationEnd'/>
    <edge id = 'referenceEdge_Message2Interaction' source = 'class_Collaborations::Message' target = 'class_Collaborations::Interaction'/>
    <edge id = 'referenceEdge_InteractionInstanceSet2Interaction' source = 'class_Collaborations::InteractionInstanceSet' target = 'class_Collaborations::Interaction'/>
    <edge id = 'referenceEdge_CollaborationInstanceSet2Collaboration' source = 'class_Collaborations::CollaborationInstanceSet' target = 'class_Collaborations::Collaboration'/>
    <node id = 'class_Collaborations::Collaboration'>
      <data key = 'label'>class_Collaborations::Collaboration</data>
    </node>
    <node id = 'class_Collaborations::ClassifierRole'>
      <data key = 'label'>class_Collaborations::ClassifierRole</data>
    </node>
    <node id = 'class_Collaborations::AssociationRole'>
      <data key = 'label'>class_Collaborations::AssociationRole</data>
    </node>
    <node id = 'class_Collaborations::AssociationEndRole'>
      <data key = 'label'>class_Collaborations::AssociationEndRole</data>
    </node>
    <node id = 'class_Collaborations::Message'>
      <data key = 'label'>class_Collaborations::Message</data>
    </node>
    <node id = 'class_Collaborations::Interaction'>
      <data key = 'label'>class_Collaborations::Interaction</data>
    </node>
    <node id = 'class_Collaborations::InteractionInstanceSet'>
      <data key = 'label'>class_Collaborations::InteractionInstanceSet</data>
    </node>
    <node id = 'class_Collaborations::CollaborationInstanceSet'>
      <data key = 'label'>class_Collaborations::CollaborationInstanceSet</data>
    </node>
    <node id = 'package_Collaborations'>
      <data key = 'label'>package_Collaborations</data>
    </node>
  </graph>
  <graph id = 'State_MachinesGraph' edgedefault = 'undirected'>
    <edge id = 'StateMachine_extends_ModelElement' source = 'class_State_Machines::StateMachine' target = 'class_Core::ModelElement'/>
    <edge id = 'Event_extends_ModelElement' source = 'class_State_Machines::Event' target = 'class_Core::ModelElement'/>
    <edge id = 'StateVertex_extends_ModelElement' source = 'class_State_Machines::StateVertex' target = 'class_Core::ModelElement'/>
    <edge id = 'State_extends_StateVertex' source = 'class_State_Machines::State' target = 'class_State_Machines::StateVertex'/>
    <edge id = 'TimeEvent_extends_Event' source = 'class_State_Machines::TimeEvent' target = 'class_State_Machines::Event'/>
    <edge id = 'CallEvent_extends_Event' source = 'class_State_Machines::CallEvent' target = 'class_State_Machines::Event'/>
    <edge id = 'SignalEvent_extends_Event' source = 'class_State_Machines::SignalEvent' target = 'class_State_Machines::Event'/>
    <edge id = 'Transition_extends_ModelElement' source = 'class_State_Machines::Transition' target = 'class_Core::ModelElement'/>
    <edge id = 'CompositeState_extends_State' source = 'class_State_Machines::CompositeState' target = 'class_State_Machines::State'/>
    <edge id = 'ChangeEvent_extends_Event' source = 'class_State_Machines::ChangeEvent' target = 'class_State_Machines::Event'/>
    <edge id = 'Guard_extends_ModelElement' source = 'class_State_Machines::Guard' target = 'class_Core::ModelElement'/>
    <edge id = 'Pseudostate_extends_StateVertex' source = 'class_State_Machines::Pseudostate' target = 'class_State_Machines::StateVertex'/>
    <edge id = 'SimpleState_extends_State' source = 'class_State_Machines::SimpleState' target = 'class_State_Machines::State'/>
    <edge id = 'SubmachineState_extends_CompositeState' source = 'class_State_Machines::SubmachineState' target = 'class_State_Machines::CompositeState'/>
    <edge id = 'SynchState_extends_StateVertex' source = 'class_State_Machines::SynchState' target = 'class_State_Machines::StateVertex'/>
    <edge id = 'StubState_extends_StateVertex' source = 'class_State_Machines::StubState' target = 'class_State_Machines::StateVertex'/>
    <edge id = 'FinalState_extends_State' source = 'class_State_Machines::FinalState' target = 'class_State_Machines::State'/>
    <edge id = 'referenceEdge_StateMachine2ModelElement' source = 'class_State_Machines::StateMachine' target = 'class_Core::ModelElement'/>
    <edge id = 'referenceEdge_Event2Parameter' source = 'class_State_Machines::Event' target = 'class_Core::Parameter'/>
    <edge id = 'referenceEdge_StateVertex2CompositeState' source = 'class_State_Machines::StateVertex' target = 'class_State_Machines::CompositeState'/>
    <edge id = 'referenceEdge_State2Event' source = 'class_State_Machines::State' target = 'class_State_Machines::Event'/>
    <edge id = 'referenceEdge_TimeEvent2TimeExpression' source = 'class_State_Machines::TimeEvent' target = 'class_Data_Types::TimeExpression'/>
    <edge id = 'referenceEdge_CallEvent2Operation' source = 'class_State_Machines::CallEvent' target = 'class_Core::Operation'/>
    <edge id = 'referenceEdge_SignalEvent2Signal' source = 'class_State_Machines::SignalEvent' target = 'class_Common_Behavior::Signal'/>
    <edge id = 'referenceEdge_Transition2StateVertex' source = 'class_State_Machines::Transition' target = 'class_State_Machines::StateVertex'/>
    <edge id = 'referenceEdge_ChangeEvent2BooleanExpression' source = 'class_State_Machines::ChangeEvent' target = 'class_Data_Types::BooleanExpression'/>
    <edge id = 'referenceEdge_Guard2Transition' source = 'class_State_Machines::Guard' target = 'class_State_Machines::Transition'/>
    <edge id = 'referenceEdge_SubmachineState2StateMachine' source = 'class_State_Machines::SubmachineState' target = 'class_State_Machines::StateMachine'/>
    <node id = 'class_State_Machines::StateMachine'>
      <data key = 'label'>class_State_Machines::StateMachine</data>
    </node>
    <node id = 'class_State_Machines::Event'>
      <data key = 'label'>class_State_Machines::Event</data>
    </node>
    <node id = 'class_State_Machines::StateVertex'>
      <data key = 'label'>class_State_Machines::StateVertex</data>
    </node>
    <node id = 'class_State_Machines::State'>
      <data key = 'label'>class_State_Machines::State</data>
    </node>
    <node id = 'class_State_Machines::TimeEvent'>
      <data key = 'label'>class_State_Machines::TimeEvent</data>
    </node>
    <node id = 'class_State_Machines::CallEvent'>
      <data key = 'label'>class_State_Machines::CallEvent</data>
    </node>
    <node id = 'class_State_Machines::SignalEvent'>
      <data key = 'label'>class_State_Machines::SignalEvent</data>
    </node>
    <node id = 'class_State_Machines::Transition'>
      <data key = 'label'>class_State_Machines::Transition</data>
    </node>
    <node id = 'class_State_Machines::CompositeState'>
      <data key = 'label'>class_State_Machines::CompositeState</data>
    </node>
    <node id = 'class_State_Machines::ChangeEvent'>
      <data key = 'label'>class_State_Machines::ChangeEvent</data>
    </node>
    <node id = 'class_State_Machines::Guard'>
      <data key = 'label'>class_State_Machines::Guard</data>
    </node>
    <node id = 'class_State_Machines::Pseudostate'>
      <data key = 'label'>class_State_Machines::Pseudostate</data>
    </node>
    <node id = 'class_State_Machines::SimpleState'>
      <data key = 'label'>class_State_Machines::SimpleState</data>
    </node>
    <node id = 'class_State_Machines::SubmachineState'>
      <data key = 'label'>class_State_Machines::SubmachineState</data>
    </node>
    <node id = 'class_State_Machines::SynchState'>
      <data key = 'label'>class_State_Machines::SynchState</data>
    </node>
    <node id = 'class_State_Machines::StubState'>
      <data key = 'label'>class_State_Machines::StubState</data>
    </node>
    <node id = 'class_State_Machines::FinalState'>
      <data key = 'label'>class_State_Machines::FinalState</data>
    </node>
    <node id = 'package_State_Machines'>
      <data key = 'label'>package_State_Machines</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'dataType_Float'>
      <data key = 'label'>dataType_Float</data>
    </node>
    <node id = 'dataType_Integer'>
      <data key = 'label'>dataType_Integer</data>
    </node>
    <node id = 'dataType_Long'>
      <data key = 'label'>dataType_Long</data>
    </node>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'dataType_Double'>
      <data key = 'label'>dataType_Double</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
  <graph id = 'Diagram_InterchangeGraph' edgedefault = 'undirected'>
    <edge id = 'GraphElement_extends_DiagramElement' source = 'class_Diagram_Interchange::GraphElement' target = 'class_Diagram_Interchange::DiagramElement'/>
    <edge id = 'GraphEdge_extends_GraphElement' source = 'class_Diagram_Interchange::GraphEdge' target = 'class_Diagram_Interchange::GraphElement'/>
    <edge id = 'GraphNode_extends_GraphElement' source = 'class_Diagram_Interchange::GraphNode' target = 'class_Diagram_Interchange::GraphElement'/>
    <edge id = 'LeafElement_extends_DiagramElement' source = 'class_Diagram_Interchange::LeafElement' target = 'class_Diagram_Interchange::DiagramElement'/>
    <edge id = 'Reference_extends_DiagramElement' source = 'class_Diagram_Interchange::Reference' target = 'class_Diagram_Interchange::DiagramElement'/>
    <edge id = 'TextElement_extends_LeafElement' source = 'class_Diagram_Interchange::TextElement' target = 'class_Diagram_Interchange::LeafElement'/>
    <edge id = 'GraphicPrimitive_extends_LeafElement' source = 'class_Diagram_Interchange::GraphicPrimitive' target = 'class_Diagram_Interchange::LeafElement'/>
    <edge id = 'Polyline_extends_GraphicPrimitive' source = 'class_Diagram_Interchange::Polyline' target = 'class_Diagram_Interchange::GraphicPrimitive'/>
    <edge id = 'Ellipse_extends_GraphicPrimitive' source = 'class_Diagram_Interchange::Ellipse' target = 'class_Diagram_Interchange::GraphicPrimitive'/>
    <edge id = 'Image_extends_LeafElement' source = 'class_Diagram_Interchange::Image' target = 'class_Diagram_Interchange::LeafElement'/>
    <edge id = 'SimpleSemanticModelElement_extends_SemanticModelBridge' source = 'class_Diagram_Interchange::SimpleSemanticModelElement' target = 'class_Diagram_Interchange::SemanticModelBridge'/>
    <edge id = 'Uml1SemanticModelBridge_extends_SemanticModelBridge' source = 'class_Diagram_Interchange::Uml1SemanticModelBridge' target = 'class_Diagram_Interchange::SemanticModelBridge'/>
    <edge id = 'CoreSemanticModelBridge_extends_SemanticModelBridge' source = 'class_Diagram_Interchange::CoreSemanticModelBridge' target = 'class_Diagram_Interchange::SemanticModelBridge'/>
    <edge id = 'Diagram_extends_GraphNode' source = 'class_Diagram_Interchange::Diagram' target = 'class_Diagram_Interchange::GraphNode'/>
    <edge id = 'referenceEdge_BezierPoint2Point' source = 'class_Diagram_Interchange::BezierPoint' target = 'class_Diagram_Interchange::Point'/>
    <edge id = 'referenceEdge_DiagramElement2GraphElement' source = 'class_Diagram_Interchange::DiagramElement' target = 'class_Diagram_Interchange::GraphElement'/>
    <edge id = 'referenceEdge_SemanticModelBridge2Diagram' source = 'class_Diagram_Interchange::SemanticModelBridge' target = 'class_Diagram_Interchange::Diagram'/>
    <edge id = 'referenceEdge_GraphEdge2GraphConnector' source = 'class_Diagram_Interchange::GraphEdge' target = 'class_Diagram_Interchange::GraphConnector'/>
    <edge id = 'referenceEdge_GraphNode2Dimension' source = 'class_Diagram_Interchange::GraphNode' target = 'class_Diagram_Interchange::Dimension'/>
    <edge id = 'referenceEdge_Reference2DiagramElement' source = 'class_Diagram_Interchange::Reference' target = 'class_Diagram_Interchange::DiagramElement'/>
    <edge id = 'referenceEdge_Polyline2BezierPoint' source = 'class_Diagram_Interchange::Polyline' target = 'class_Diagram_Interchange::BezierPoint'/>
    <edge id = 'referenceEdge_Ellipse2Point' source = 'class_Diagram_Interchange::Ellipse' target = 'class_Diagram_Interchange::Point'/>
    <edge id = 'referenceEdge_Uml1SemanticModelBridge2Element' source = 'class_Diagram_Interchange::Uml1SemanticModelBridge' target = 'class_Core::Element'/>
    <edge id = 'referenceEdge_DiagramLink2GraphElement' source = 'class_Diagram_Interchange::DiagramLink' target = 'class_Diagram_Interchange::GraphElement'/>
    <node id = 'class_Diagram_Interchange::Point'>
      <data key = 'label'>class_Diagram_Interchange::Point</data>
    </node>
    <node id = 'class_Diagram_Interchange::Dimension'>
      <data key = 'label'>class_Diagram_Interchange::Dimension</data>
    </node>
    <node id = 'class_Diagram_Interchange::BezierPoint'>
      <data key = 'label'>class_Diagram_Interchange::BezierPoint</data>
    </node>
    <node id = 'class_Diagram_Interchange::DiagramElement'>
      <data key = 'label'>class_Diagram_Interchange::DiagramElement</data>
    </node>
    <node id = 'class_Diagram_Interchange::GraphElement'>
      <data key = 'label'>class_Diagram_Interchange::GraphElement</data>
    </node>
    <node id = 'class_Diagram_Interchange::SemanticModelBridge'>
      <data key = 'label'>class_Diagram_Interchange::SemanticModelBridge</data>
    </node>
    <node id = 'class_Diagram_Interchange::GraphEdge'>
      <data key = 'label'>class_Diagram_Interchange::GraphEdge</data>
    </node>
    <node id = 'class_Diagram_Interchange::GraphNode'>
      <data key = 'label'>class_Diagram_Interchange::GraphNode</data>
    </node>
    <node id = 'class_Diagram_Interchange::GraphConnector'>
      <data key = 'label'>class_Diagram_Interchange::GraphConnector</data>
    </node>
    <node id = 'class_Diagram_Interchange::LeafElement'>
      <data key = 'label'>class_Diagram_Interchange::LeafElement</data>
    </node>
    <node id = 'class_Diagram_Interchange::Reference'>
      <data key = 'label'>class_Diagram_Interchange::Reference</data>
    </node>
    <node id = 'class_Diagram_Interchange::TextElement'>
      <data key = 'label'>class_Diagram_Interchange::TextElement</data>
    </node>
    <node id = 'class_Diagram_Interchange::GraphicPrimitive'>
      <data key = 'label'>class_Diagram_Interchange::GraphicPrimitive</data>
    </node>
    <node id = 'class_Diagram_Interchange::Polyline'>
      <data key = 'label'>class_Diagram_Interchange::Polyline</data>
    </node>
    <node id = 'class_Diagram_Interchange::Ellipse'>
      <data key = 'label'>class_Diagram_Interchange::Ellipse</data>
    </node>
    <node id = 'class_Diagram_Interchange::Image'>
      <data key = 'label'>class_Diagram_Interchange::Image</data>
    </node>
    <node id = 'class_Diagram_Interchange::Property'>
      <data key = 'label'>class_Diagram_Interchange::Property</data>
    </node>
    <node id = 'class_Diagram_Interchange::SimpleSemanticModelElement'>
      <data key = 'label'>class_Diagram_Interchange::SimpleSemanticModelElement</data>
    </node>
    <node id = 'class_Diagram_Interchange::Uml1SemanticModelBridge'>
      <data key = 'label'>class_Diagram_Interchange::Uml1SemanticModelBridge</data>
    </node>
    <node id = 'class_Diagram_Interchange::CoreSemanticModelBridge'>
      <data key = 'label'>class_Diagram_Interchange::CoreSemanticModelBridge</data>
    </node>
    <node id = 'class_Diagram_Interchange::DiagramLink'>
      <data key = 'label'>class_Diagram_Interchange::DiagramLink</data>
    </node>
    <node id = 'class_Diagram_Interchange::Diagram'>
      <data key = 'label'>class_Diagram_Interchange::Diagram</data>
    </node>
    <node id = 'package_Diagram_Interchange'>
      <data key = 'label'>package_Diagram_Interchange</data>
    </node>
  </graph>
  <graph id = 'Activity_GraphsGraph' edgedefault = 'undirected'>
    <edge id = 'ActivityGraph_extends_StateMachine' source = 'class_Activity_Graphs::ActivityGraph' target = 'class_State_Machines::StateMachine'/>
    <edge id = 'Partition_extends_ModelElement' source = 'class_Activity_Graphs::Partition' target = 'class_Core::ModelElement'/>
    <edge id = 'SubactivityState_extends_SubmachineState' source = 'class_Activity_Graphs::SubactivityState' target = 'class_State_Machines::SubmachineState'/>
    <edge id = 'ActionState_extends_SimpleState' source = 'class_Activity_Graphs::ActionState' target = 'class_State_Machines::SimpleState'/>
    <edge id = 'CallState_extends_ActionState' source = 'class_Activity_Graphs::CallState' target = 'class_Activity_Graphs::ActionState'/>
    <edge id = 'ObjectFlowState_extends_SimpleState' source = 'class_Activity_Graphs::ObjectFlowState' target = 'class_State_Machines::SimpleState'/>
    <edge id = 'ClassifierInState_extends_Classifier' source = 'class_Activity_Graphs::ClassifierInState' target = 'class_Core::Classifier'/>
    <edge id = 'referenceEdge_ActivityGraph2Partition' source = 'class_Activity_Graphs::ActivityGraph' target = 'class_Activity_Graphs::Partition'/>
    <edge id = 'referenceEdge_SubactivityState2ArgListsExpression' source = 'class_Activity_Graphs::SubactivityState' target = 'class_Data_Types::ArgListsExpression'/>
    <edge id = 'referenceEdge_ActionState2ArgListsExpression' source = 'class_Activity_Graphs::ActionState' target = 'class_Data_Types::ArgListsExpression'/>
    <edge id = 'referenceEdge_ObjectFlowState2Classifier' source = 'class_Activity_Graphs::ObjectFlowState' target = 'class_Core::Classifier'/>
    <edge id = 'referenceEdge_ClassifierInState2State' source = 'class_Activity_Graphs::ClassifierInState' target = 'class_State_Machines::State'/>
    <node id = 'class_Activity_Graphs::ActivityGraph'>
      <data key = 'label'>class_Activity_Graphs::ActivityGraph</data>
    </node>
    <node id = 'class_Activity_Graphs::Partition'>
      <data key = 'label'>class_Activity_Graphs::Partition</data>
    </node>
    <node id = 'class_Activity_Graphs::SubactivityState'>
      <data key = 'label'>class_Activity_Graphs::SubactivityState</data>
    </node>
    <node id = 'class_Activity_Graphs::ActionState'>
      <data key = 'label'>class_Activity_Graphs::ActionState</data>
    </node>
    <node id = 'class_Activity_Graphs::CallState'>
      <data key = 'label'>class_Activity_Graphs::CallState</data>
    </node>
    <node id = 'class_Activity_Graphs::ObjectFlowState'>
      <data key = 'label'>class_Activity_Graphs::ObjectFlowState</data>
    </node>
    <node id = 'class_Activity_Graphs::ClassifierInState'>
      <data key = 'label'>class_Activity_Graphs::ClassifierInState</data>
    </node>
    <node id = 'package_Activity_Graphs'>
      <data key = 'label'>package_Activity_Graphs</data>
    </node>
  </graph>
  <graph id = 'Use_CasesGraph' edgedefault = 'undirected'>
    <edge id = 'UseCase_extends_Classifier' source = 'class_Use_Cases::UseCase' target = 'class_Core::Classifier'/>
    <edge id = 'Actor_extends_Classifier' source = 'class_Use_Cases::Actor' target = 'class_Core::Classifier'/>
    <edge id = 'UseCaseInstance_extends_Instance' source = 'class_Use_Cases::UseCaseInstance' target = 'class_Common_Behavior::Instance'/>
    <edge id = 'Extend_extends_Relationship' source = 'class_Use_Cases::Extend' target = 'class_Core::Relationship'/>
    <edge id = 'Include_extends_Relationship' source = 'class_Use_Cases::Include' target = 'class_Core::Relationship'/>
    <edge id = 'ExtensionPoint_extends_ModelElement' source = 'class_Use_Cases::ExtensionPoint' target = 'class_Core::ModelElement'/>
    <edge id = 'referenceEdge_UseCase2Include' source = 'class_Use_Cases::UseCase' target = 'class_Use_Cases::Include'/>
    <edge id = 'referenceEdge_Extend2ExtensionPoint' source = 'class_Use_Cases::Extend' target = 'class_Use_Cases::ExtensionPoint'/>
    <node id = 'class_Use_Cases::UseCase'>
      <data key = 'label'>class_Use_Cases::UseCase</data>
    </node>
    <node id = 'class_Use_Cases::Actor'>
      <data key = 'label'>class_Use_Cases::Actor</data>
    </node>
    <node id = 'class_Use_Cases::UseCaseInstance'>
      <data key = 'label'>class_Use_Cases::UseCaseInstance</data>
    </node>
    <node id = 'class_Use_Cases::Extend'>
      <data key = 'label'>class_Use_Cases::Extend</data>
    </node>
    <node id = 'class_Use_Cases::Include'>
      <data key = 'label'>class_Use_Cases::Include</data>
    </node>
    <node id = 'class_Use_Cases::ExtensionPoint'>
      <data key = 'label'>class_Use_Cases::ExtensionPoint</data>
    </node>
    <node id = 'package_Use_Cases'>
      <data key = 'label'>package_Use_Cases</data>
    </node>
  </graph>
</graphml>
