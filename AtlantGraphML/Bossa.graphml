<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<graphml xmlns:xsi = 'http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation = 'http://graphml.graphdrawing.org/xmlnshttp://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd'>
  <key id = 'label' for = 'node' attr.name = 'label' attr.type = 'string'/>
  <graph id = 'BossaGraph' edgedefault = 'undirected'>
    <edge id = 'NormalScheduler_extends_Scheduler' source = 'class_Bossa::NormalScheduler' target = 'class_Bossa::Scheduler'/>
    <edge id = 'VirtualScheduler_extends_Scheduler' source = 'class_Bossa::VirtualScheduler' target = 'class_Bossa::Scheduler'/>
    <edge id = 'SchedulerDecl_extends_AbstractSchedulerDecl' source = 'class_Bossa::SchedulerDecl' target = 'class_Bossa::AbstractSchedulerDecl'/>
    <edge id = 'VSchdulerDecl_extends_AbstractSchedulerDecl' source = 'class_Bossa::VSchdulerDecl' target = 'class_Bossa::AbstractSchedulerDecl'/>
    <edge id = 'Timer_ProcessVarDecl_extends_ProcessVarDecl' source = 'class_Bossa::Timer_ProcessVarDecl' target = 'class_Bossa::ProcessVarDecl'/>
    <edge id = 'System_ProcessVarDecl_extends_ProcessVarDecl' source = 'class_Bossa::System_ProcessVarDecl' target = 'class_Bossa::ProcessVarDecl'/>
    <edge id = 'Normal_ProcessVarDecl_extends_ProcessVarDecl' source = 'class_Bossa::Normal_ProcessVarDecl' target = 'class_Bossa::ProcessVarDecl'/>
    <edge id = 'Integer_Expression_extends_Expression' source = 'class_Bossa::Integer_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'Id_Expression_extends_Expression' source = 'class_Bossa::Id_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'State_Expression_extends_Expression' source = 'class_Bossa::State_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'True_Expression_extends_Expression' source = 'class_Bossa::True_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'False_Expression_extends_Expression' source = 'class_Bossa::False_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'Unop_Expression_extends_Expression' source = 'class_Bossa::Unop_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'Etoile_Expression_extends_Expression' source = 'class_Bossa::Etoile_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'ExpId_Expression_extends_Expression' source = 'class_Bossa::ExpId_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'Select_Expression_extends_Expression' source = 'class_Bossa::Select_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'FnName_Expression_extends_Expression' source = 'class_Bossa::FnName_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'Empty_Expression_extends_Expression' source = 'class_Bossa::Empty_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'SRCOnSched_Expression_extends_Expression' source = 'class_Bossa::SRCOnSched_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'SchedulerOf_Expression_extends_Expression' source = 'class_Bossa::SchedulerOf_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'In_Expression_extends_Expression' source = 'class_Bossa::In_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'Parenthese_Expression_extends_Expression' source = 'class_Bossa::Parenthese_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'Binop_Expression_extends_Expression' source = 'class_Bossa::Binop_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'Normal_ValDecl_extends_ValDecl' source = 'class_Bossa::Normal_ValDecl' target = 'class_Bossa::ValDecl'/>
    <edge id = 'System_ValDecl_extends_ValDecl' source = 'class_Bossa::System_ValDecl' target = 'class_Bossa::ValDecl'/>
    <edge id = 'Timer_ValDecl_extends_ValDecl' source = 'class_Bossa::Timer_ValDecl' target = 'class_Bossa::ValDecl'/>
    <edge id = 'Process_Storage_extends_Storage' source = 'class_Bossa::Process_Storage' target = 'class_Bossa::Storage'/>
    <edge id = 'Scheduler_Storage_extends_Storage' source = 'class_Bossa::Scheduler_Storage' target = 'class_Bossa::Storage'/>
    <edge id = 'Queue_Storage_extends_Storage' source = 'class_Bossa::Queue_Storage' target = 'class_Bossa::Storage'/>
    <edge id = 'CritDeclWhithId_extends_CritDecl' source = 'class_Bossa::CritDeclWhithId' target = 'class_Bossa::CritDecl'/>
    <edge id = 'CritDeclWhithoutId_extends_CritDecl' source = 'class_Bossa::CritDeclWhithoutId' target = 'class_Bossa::CritDecl'/>
    <edge id = 'IfStmt_extends_Statment' source = 'class_Bossa::IfStmt' target = 'class_Bossa::Statment'/>
    <edge id = 'ForStmt_extends_Statment' source = 'class_Bossa::ForStmt' target = 'class_Bossa::Statment'/>
    <edge id = 'ForeachForStmt_extends_ForStmt' source = 'class_Bossa::ForeachForStmt' target = 'class_Bossa::ForStmt'/>
    <edge id = 'ForEachIncreasingForStmt_extends_ForStmt' source = 'class_Bossa::ForEachIncreasingForStmt' target = 'class_Bossa::ForStmt'/>
    <edge id = 'ForEachDecreasingForStmt_extends_ForStmt' source = 'class_Bossa::ForEachDecreasingForStmt' target = 'class_Bossa::ForStmt'/>
    <edge id = 'ReturnStmt_extends_Statment' source = 'class_Bossa::ReturnStmt' target = 'class_Bossa::Statment'/>
    <edge id = 'SwitchStmt_extends_Statment' source = 'class_Bossa::SwitchStmt' target = 'class_Bossa::Statment'/>
    <edge id = 'AssignStmt_extends_Statment' source = 'class_Bossa::AssignStmt' target = 'class_Bossa::Statment'/>
    <edge id = 'MoveStmt_extends_Statment' source = 'class_Bossa::MoveStmt' target = 'class_Bossa::Statment'/>
    <edge id = 'NormalMoveStmt_extends_MoveStmt' source = 'class_Bossa::NormalMoveStmt' target = 'class_Bossa::MoveStmt'/>
    <edge id = 'ForwardMoveStmt_extends_MoveStmt' source = 'class_Bossa::ForwardMoveStmt' target = 'class_Bossa::MoveStmt'/>
    <edge id = 'DeferStmt_extends_Statment' source = 'class_Bossa::DeferStmt' target = 'class_Bossa::Statment'/>
    <edge id = 'PrimStmt_extends_Statment' source = 'class_Bossa::PrimStmt' target = 'class_Bossa::Statment'/>
    <edge id = 'ErrorStmt_extends_Statment' source = 'class_Bossa::ErrorStmt' target = 'class_Bossa::Statment'/>
    <edge id = 'BreakStmt_extends_Statment' source = 'class_Bossa::BreakStmt' target = 'class_Bossa::Statment'/>
    <edge id = 'Select_MoveExpr_extends_MoveExpr' source = 'class_Bossa::Select_MoveExpr' target = 'class_Bossa::MoveExpr'/>
    <edge id = 'SatateName_MoveExpr_extends_MoveExpr' source = 'class_Bossa::SatateName_MoveExpr' target = 'class_Bossa::MoveExpr'/>
    <edge id = 'ID_MoveExpr_extends_MoveExpr' source = 'class_Bossa::ID_MoveExpr' target = 'class_Bossa::MoveExpr'/>
    <edge id = 'IDSource_MoveExpr_extends_MoveExpr' source = 'class_Bossa::IDSource_MoveExpr' target = 'class_Bossa::MoveExpr'/>
    <edge id = 'IDTarget_MoveExpr_extends_MoveExpr' source = 'class_Bossa::IDTarget_MoveExpr' target = 'class_Bossa::MoveExpr'/>
    <edge id = 'Normal_QueueType_extends_QueueType' source = 'class_Bossa::Normal_QueueType' target = 'class_Bossa::QueueType'/>
    <edge id = 'Fifo_QueueType_extends_QueueType' source = 'class_Bossa::Fifo_QueueType' target = 'class_Bossa::QueueType'/>
    <edge id = 'Lifo_QueueType_extends_QueueType' source = 'class_Bossa::Lifo_QueueType' target = 'class_Bossa::QueueType'/>
    <edge id = 'referenceEdge_BossaProgramm2Scheduler' source = 'class_Bossa::BossaProgramm' target = 'class_Bossa::Scheduler'/>
    <edge id = 'referenceEdge_NormalScheduler2SchedulerDecl' source = 'class_Bossa::NormalScheduler' target = 'class_Bossa::SchedulerDecl'/>
    <edge id = 'referenceEdge_VirtualScheduler2VSchdulerDecl' source = 'class_Bossa::VirtualScheduler' target = 'class_Bossa::VSchdulerDecl'/>
    <edge id = 'referenceEdge_AbstractSchedulerDecl2ConstDef' source = 'class_Bossa::AbstractSchedulerDecl' target = 'class_Bossa::ConstDef'/>
    <edge id = 'referenceEdge_TypeDef2EnumRange' source = 'class_Bossa::TypeDef' target = 'class_Bossa::EnumRange'/>
    <edge id = 'referenceEdge_RangeDef2Expression' source = 'class_Bossa::RangeDef' target = 'class_Bossa::Expression'/>
    <edge id = 'referenceEdge_ProcessDef2ProcessVarDecl' source = 'class_Bossa::ProcessDef' target = 'class_Bossa::ProcessVarDecl'/>
    <edge id = 'referenceEdge_SchedulerDef2ProcessVarDecl' source = 'class_Bossa::SchedulerDef' target = 'class_Bossa::ProcessVarDecl'/>
    <edge id = 'referenceEdge_System_ProcessVarDecl2TypeExpr' source = 'class_Bossa::System_ProcessVarDecl' target = 'class_Bossa::TypeExpr'/>
    <edge id = 'referenceEdge_Normal_ProcessVarDecl2TypeExpr' source = 'class_Bossa::Normal_ProcessVarDecl' target = 'class_Bossa::TypeExpr'/>
    <edge id = 'referenceEdge_HandlerDef2Scheduler' source = 'class_Bossa::HandlerDef' target = 'class_Bossa::Scheduler'/>
    <edge id = 'referenceEdge_InterfaceDef2ComposantOfInterFunc' source = 'class_Bossa::InterfaceDef' target = 'class_Bossa::ComposantOfInterFunc'/>
    <edge id = 'referenceEdge_FunctionDef2ComposantOfInterFunc' source = 'class_Bossa::FunctionDef' target = 'class_Bossa::ComposantOfInterFunc'/>
    <edge id = 'referenceEdge_Unop_Expression2Unop' source = 'class_Bossa::Unop_Expression' target = 'class_Bossa::Unop'/>
    <edge id = 'referenceEdge_Etoile_Expression2Expression' source = 'class_Bossa::Etoile_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'referenceEdge_ExpId_Expression2Expression' source = 'class_Bossa::ExpId_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'referenceEdge_FnName_Expression2Expression' source = 'class_Bossa::FnName_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'referenceEdge_Empty_Expression2ClassState' source = 'class_Bossa::Empty_Expression' target = 'class_Bossa::ClassState'/>
    <edge id = 'referenceEdge_SchedulerOf_Expression2Expression' source = 'class_Bossa::SchedulerOf_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'referenceEdge_In_Expression2Expression' source = 'class_Bossa::In_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'referenceEdge_Parenthese_Expression2Expression' source = 'class_Bossa::Parenthese_Expression' target = 'class_Bossa::Expression'/>
    <edge id = 'referenceEdge_Binop_Expression2Id_Expression' source = 'class_Bossa::Binop_Expression' target = 'class_Bossa::Id_Expression'/>
    <edge id = 'referenceEdge_Compo_Binop_Expression2Binop' source = 'class_Bossa::Compo_Binop_Expression' target = 'class_Bossa::Binop'/>
    <edge id = 'referenceEdge_ValDecl2AbstractSchedulerDecl' source = 'class_Bossa::ValDecl' target = 'class_Bossa::AbstractSchedulerDecl'/>
    <edge id = 'referenceEdge_Normal_ValDecl2NonProcType' source = 'class_Bossa::Normal_ValDecl' target = 'class_Bossa::NonProcType'/>
    <edge id = 'referenceEdge_System_ValDecl2NonProcType' source = 'class_Bossa::System_ValDecl' target = 'class_Bossa::NonProcType'/>
    <edge id = 'referenceEdge_FunDecl2ParameterType' source = 'class_Bossa::FunDecl' target = 'class_Bossa::ParameterType'/>
    <edge id = 'referenceEdge_StateDef2ClassNameStorage' source = 'class_Bossa::StateDef' target = 'class_Bossa::ClassNameStorage'/>
    <edge id = 'referenceEdge_OrderDef2KeyCritDecls' source = 'class_Bossa::OrderDef' target = 'class_Bossa::KeyCritDecls'/>
    <edge id = 'referenceEdge_AdmissionDef2ValDef' source = 'class_Bossa::AdmissionDef' target = 'class_Bossa::ValDef'/>
    <edge id = 'referenceEdge_TraceDef2TraceEvent' source = 'class_Bossa::TraceDef' target = 'class_Bossa::TraceEvent'/>
    <edge id = 'referenceEdge_TypeOrVoid2TypeExpr' source = 'class_Bossa::TypeOrVoid' target = 'class_Bossa::TypeExpr'/>
    <edge id = 'referenceEdge_Scheduler_Storage2StateVisibility' source = 'class_Bossa::Scheduler_Storage' target = 'class_Bossa::StateVisibility'/>
    <edge id = 'referenceEdge_Queue_Storage2StateVisibility' source = 'class_Bossa::Queue_Storage' target = 'class_Bossa::StateVisibility'/>
    <edge id = 'referenceEdge_CompoKeyCritDecls2CritDecl' source = 'class_Bossa::CompoKeyCritDecls' target = 'class_Bossa::CritDecl'/>
    <edge id = 'referenceEdge_CritDecls2CritDecl' source = 'class_Bossa::CritDecls' target = 'class_Bossa::CritDecl'/>
    <edge id = 'referenceEdge_CritDeclWhithoutId2Expression' source = 'class_Bossa::CritDeclWhithoutId' target = 'class_Bossa::Expression'/>
    <edge id = 'referenceEdge_AdmCrit2ParamVarDecl' source = 'class_Bossa::AdmCrit' target = 'class_Bossa::ParamVarDecl'/>
    <edge id = 'referenceEdge_AttachDetach2ProcParam' source = 'class_Bossa::AttachDetach' target = 'class_Bossa::ProcParam'/>
    <edge id = 'referenceEdge_SeqStmt2ValDef' source = 'class_Bossa::SeqStmt' target = 'class_Bossa::ValDef'/>
    <edge id = 'referenceEdge_TraceTest2Expression' source = 'class_Bossa::TraceTest' target = 'class_Bossa::Expression'/>
    <edge id = 'referenceEdge_IfStmt2Expression' source = 'class_Bossa::IfStmt' target = 'class_Bossa::Expression'/>
    <edge id = 'referenceEdge_ForeachForStmt2ClassState' source = 'class_Bossa::ForeachForStmt' target = 'class_Bossa::ClassState'/>
    <edge id = 'referenceEdge_ForEachIncreasingForStmt2SeqStmt' source = 'class_Bossa::ForEachIncreasingForStmt' target = 'class_Bossa::SeqStmt'/>
    <edge id = 'referenceEdge_ForEachDecreasingForStmt2SeqStmt' source = 'class_Bossa::ForEachDecreasingForStmt' target = 'class_Bossa::SeqStmt'/>
    <edge id = 'referenceEdge_ReturnStmt2Expression' source = 'class_Bossa::ReturnStmt' target = 'class_Bossa::Expression'/>
    <edge id = 'referenceEdge_SwitchStmt2LocExpr' source = 'class_Bossa::SwitchStmt' target = 'class_Bossa::LocExpr'/>
    <edge id = 'referenceEdge_AssignStmt2LocExpr' source = 'class_Bossa::AssignStmt' target = 'class_Bossa::LocExpr'/>
    <edge id = 'referenceEdge_MoveStmt2MoveExpr' source = 'class_Bossa::MoveStmt' target = 'class_Bossa::MoveExpr'/>
    <edge id = 'referenceEdge_NormalMoveStmt2StateRef' source = 'class_Bossa::NormalMoveStmt' target = 'class_Bossa::StateRef'/>
    <edge id = 'referenceEdge_PrimStmt2Expression' source = 'class_Bossa::PrimStmt' target = 'class_Bossa::Expression'/>
    <edge id = 'referenceEdge_OnHandlerDef2EventName' source = 'class_Bossa::OnHandlerDef' target = 'class_Bossa::EventName'/>
    <edge id = 'referenceEdge_ComposantOfSwitchStmt2ClassState' source = 'class_Bossa::ComposantOfSwitchStmt' target = 'class_Bossa::ClassState'/>
    <node id = 'class_Bossa::BossaProgramm'>
      <data key = 'label'>class_Bossa::BossaProgramm</data>
    </node>
    <node id = 'class_Bossa::Scheduler'>
      <data key = 'label'>class_Bossa::Scheduler</data>
    </node>
    <node id = 'class_Bossa::NormalScheduler'>
      <data key = 'label'>class_Bossa::NormalScheduler</data>
    </node>
    <node id = 'class_Bossa::VirtualScheduler'>
      <data key = 'label'>class_Bossa::VirtualScheduler</data>
    </node>
    <node id = 'class_Bossa::AbstractSchedulerDecl'>
      <data key = 'label'>class_Bossa::AbstractSchedulerDecl</data>
    </node>
    <node id = 'class_Bossa::SchedulerDecl'>
      <data key = 'label'>class_Bossa::SchedulerDecl</data>
    </node>
    <node id = 'class_Bossa::VSchdulerDecl'>
      <data key = 'label'>class_Bossa::VSchdulerDecl</data>
    </node>
    <node id = 'class_Bossa::ConstDef'>
      <data key = 'label'>class_Bossa::ConstDef</data>
    </node>
    <node id = 'class_Bossa::TypeDef'>
      <data key = 'label'>class_Bossa::TypeDef</data>
    </node>
    <node id = 'class_Bossa::EnumRange'>
      <data key = 'label'>class_Bossa::EnumRange</data>
    </node>
    <node id = 'class_Bossa::EnumDef'>
      <data key = 'label'>class_Bossa::EnumDef</data>
    </node>
    <node id = 'class_Bossa::BagId'>
      <data key = 'label'>class_Bossa::BagId</data>
    </node>
    <node id = 'class_Bossa::RangeDef'>
      <data key = 'label'>class_Bossa::RangeDef</data>
    </node>
    <node id = 'class_Bossa::ProcessDef'>
      <data key = 'label'>class_Bossa::ProcessDef</data>
    </node>
    <node id = 'class_Bossa::SchedulerDef'>
      <data key = 'label'>class_Bossa::SchedulerDef</data>
    </node>
    <node id = 'class_Bossa::ProcessVarDecl'>
      <data key = 'label'>class_Bossa::ProcessVarDecl</data>
    </node>
    <node id = 'class_Bossa::Timer_ProcessVarDecl'>
      <data key = 'label'>class_Bossa::Timer_ProcessVarDecl</data>
    </node>
    <node id = 'class_Bossa::System_ProcessVarDecl'>
      <data key = 'label'>class_Bossa::System_ProcessVarDecl</data>
    </node>
    <node id = 'class_Bossa::Normal_ProcessVarDecl'>
      <data key = 'label'>class_Bossa::Normal_ProcessVarDecl</data>
    </node>
    <node id = 'class_Bossa::HandlerDef'>
      <data key = 'label'>class_Bossa::HandlerDef</data>
    </node>
    <node id = 'class_Bossa::InterfaceDef'>
      <data key = 'label'>class_Bossa::InterfaceDef</data>
    </node>
    <node id = 'class_Bossa::FunctionDef'>
      <data key = 'label'>class_Bossa::FunctionDef</data>
    </node>
    <node id = 'class_Bossa::Expression'>
      <data key = 'label'>class_Bossa::Expression</data>
    </node>
    <node id = 'class_Bossa::Integer_Expression'>
      <data key = 'label'>class_Bossa::Integer_Expression</data>
    </node>
    <node id = 'class_Bossa::Id_Expression'>
      <data key = 'label'>class_Bossa::Id_Expression</data>
    </node>
    <node id = 'class_Bossa::State_Expression'>
      <data key = 'label'>class_Bossa::State_Expression</data>
    </node>
    <node id = 'class_Bossa::True_Expression'>
      <data key = 'label'>class_Bossa::True_Expression</data>
    </node>
    <node id = 'class_Bossa::False_Expression'>
      <data key = 'label'>class_Bossa::False_Expression</data>
    </node>
    <node id = 'class_Bossa::Unop_Expression'>
      <data key = 'label'>class_Bossa::Unop_Expression</data>
    </node>
    <node id = 'class_Bossa::Etoile_Expression'>
      <data key = 'label'>class_Bossa::Etoile_Expression</data>
    </node>
    <node id = 'class_Bossa::ExpId_Expression'>
      <data key = 'label'>class_Bossa::ExpId_Expression</data>
    </node>
    <node id = 'class_Bossa::Select_Expression'>
      <data key = 'label'>class_Bossa::Select_Expression</data>
    </node>
    <node id = 'class_Bossa::FnName_Expression'>
      <data key = 'label'>class_Bossa::FnName_Expression</data>
    </node>
    <node id = 'class_Bossa::Empty_Expression'>
      <data key = 'label'>class_Bossa::Empty_Expression</data>
    </node>
    <node id = 'class_Bossa::SRCOnSched_Expression'>
      <data key = 'label'>class_Bossa::SRCOnSched_Expression</data>
    </node>
    <node id = 'class_Bossa::SchedulerOf_Expression'>
      <data key = 'label'>class_Bossa::SchedulerOf_Expression</data>
    </node>
    <node id = 'class_Bossa::In_Expression'>
      <data key = 'label'>class_Bossa::In_Expression</data>
    </node>
    <node id = 'class_Bossa::Parenthese_Expression'>
      <data key = 'label'>class_Bossa::Parenthese_Expression</data>
    </node>
    <node id = 'class_Bossa::Binop_Expression'>
      <data key = 'label'>class_Bossa::Binop_Expression</data>
    </node>
    <node id = 'class_Bossa::Compo_Binop_Expression'>
      <data key = 'label'>class_Bossa::Compo_Binop_Expression</data>
    </node>
    <node id = 'class_Bossa::ValDecl'>
      <data key = 'label'>class_Bossa::ValDecl</data>
    </node>
    <node id = 'class_Bossa::Normal_ValDecl'>
      <data key = 'label'>class_Bossa::Normal_ValDecl</data>
    </node>
    <node id = 'class_Bossa::System_ValDecl'>
      <data key = 'label'>class_Bossa::System_ValDecl</data>
    </node>
    <node id = 'class_Bossa::Timer_ValDecl'>
      <data key = 'label'>class_Bossa::Timer_ValDecl</data>
    </node>
    <node id = 'class_Bossa::FunDecl'>
      <data key = 'label'>class_Bossa::FunDecl</data>
    </node>
    <node id = 'class_Bossa::StateDef'>
      <data key = 'label'>class_Bossa::StateDef</data>
    </node>
    <node id = 'class_Bossa::ClassNameStorage'>
      <data key = 'label'>class_Bossa::ClassNameStorage</data>
    </node>
    <node id = 'class_Bossa::OrderDef'>
      <data key = 'label'>class_Bossa::OrderDef</data>
    </node>
    <node id = 'class_Bossa::AdmissionDef'>
      <data key = 'label'>class_Bossa::AdmissionDef</data>
    </node>
    <node id = 'class_Bossa::TraceDef'>
      <data key = 'label'>class_Bossa::TraceDef</data>
    </node>
    <node id = 'class_Bossa::TypeExpr'>
      <data key = 'label'>class_Bossa::TypeExpr</data>
    </node>
    <node id = 'class_Bossa::TypeOrVoid'>
      <data key = 'label'>class_Bossa::TypeOrVoid</data>
    </node>
    <node id = 'class_Bossa::ParameterType'>
      <data key = 'label'>class_Bossa::ParameterType</data>
    </node>
    <node id = 'class_Bossa::Storage'>
      <data key = 'label'>class_Bossa::Storage</data>
    </node>
    <node id = 'class_Bossa::Process_Storage'>
      <data key = 'label'>class_Bossa::Process_Storage</data>
    </node>
    <node id = 'class_Bossa::Scheduler_Storage'>
      <data key = 'label'>class_Bossa::Scheduler_Storage</data>
    </node>
    <node id = 'class_Bossa::Queue_Storage'>
      <data key = 'label'>class_Bossa::Queue_Storage</data>
    </node>
    <node id = 'class_Bossa::KeyCritDecls'>
      <data key = 'label'>class_Bossa::KeyCritDecls</data>
    </node>
    <node id = 'class_Bossa::CompoKeyCritDecls'>
      <data key = 'label'>class_Bossa::CompoKeyCritDecls</data>
    </node>
    <node id = 'class_Bossa::CritDecls'>
      <data key = 'label'>class_Bossa::CritDecls</data>
    </node>
    <node id = 'class_Bossa::CritDecl'>
      <data key = 'label'>class_Bossa::CritDecl</data>
    </node>
    <node id = 'class_Bossa::CritDeclWhithId'>
      <data key = 'label'>class_Bossa::CritDeclWhithId</data>
    </node>
    <node id = 'class_Bossa::CritDeclWhithoutId'>
      <data key = 'label'>class_Bossa::CritDeclWhithoutId</data>
    </node>
    <node id = 'class_Bossa::ValDef'>
      <data key = 'label'>class_Bossa::ValDef</data>
    </node>
    <node id = 'class_Bossa::AdmCrit'>
      <data key = 'label'>class_Bossa::AdmCrit</data>
    </node>
    <node id = 'class_Bossa::AttachDetach'>
      <data key = 'label'>class_Bossa::AttachDetach</data>
    </node>
    <node id = 'class_Bossa::ParamVarDecl'>
      <data key = 'label'>class_Bossa::ParamVarDecl</data>
    </node>
    <node id = 'class_Bossa::SeqStmt'>
      <data key = 'label'>class_Bossa::SeqStmt</data>
    </node>
    <node id = 'class_Bossa::TraceEvent'>
      <data key = 'label'>class_Bossa::TraceEvent</data>
    </node>
    <node id = 'class_Bossa::TraceExpr'>
      <data key = 'label'>class_Bossa::TraceExpr</data>
    </node>
    <node id = 'class_Bossa::TraceTest'>
      <data key = 'label'>class_Bossa::TraceTest</data>
    </node>
    <node id = 'class_Bossa::ProcParam'>
      <data key = 'label'>class_Bossa::ProcParam</data>
    </node>
    <node id = 'class_Bossa::Statment'>
      <data key = 'label'>class_Bossa::Statment</data>
    </node>
    <node id = 'class_Bossa::IfStmt'>
      <data key = 'label'>class_Bossa::IfStmt</data>
    </node>
    <node id = 'class_Bossa::ForStmt'>
      <data key = 'label'>class_Bossa::ForStmt</data>
    </node>
    <node id = 'class_Bossa::ForeachForStmt'>
      <data key = 'label'>class_Bossa::ForeachForStmt</data>
    </node>
    <node id = 'class_Bossa::ForEachIncreasingForStmt'>
      <data key = 'label'>class_Bossa::ForEachIncreasingForStmt</data>
    </node>
    <node id = 'class_Bossa::ForEachDecreasingForStmt'>
      <data key = 'label'>class_Bossa::ForEachDecreasingForStmt</data>
    </node>
    <node id = 'class_Bossa::ReturnStmt'>
      <data key = 'label'>class_Bossa::ReturnStmt</data>
    </node>
    <node id = 'class_Bossa::SwitchStmt'>
      <data key = 'label'>class_Bossa::SwitchStmt</data>
    </node>
    <node id = 'class_Bossa::AssignStmt'>
      <data key = 'label'>class_Bossa::AssignStmt</data>
    </node>
    <node id = 'class_Bossa::MoveStmt'>
      <data key = 'label'>class_Bossa::MoveStmt</data>
    </node>
    <node id = 'class_Bossa::NormalMoveStmt'>
      <data key = 'label'>class_Bossa::NormalMoveStmt</data>
    </node>
    <node id = 'class_Bossa::ForwardMoveStmt'>
      <data key = 'label'>class_Bossa::ForwardMoveStmt</data>
    </node>
    <node id = 'class_Bossa::StateRef'>
      <data key = 'label'>class_Bossa::StateRef</data>
    </node>
    <node id = 'class_Bossa::DeferStmt'>
      <data key = 'label'>class_Bossa::DeferStmt</data>
    </node>
    <node id = 'class_Bossa::PrimStmt'>
      <data key = 'label'>class_Bossa::PrimStmt</data>
    </node>
    <node id = 'class_Bossa::ErrorStmt'>
      <data key = 'label'>class_Bossa::ErrorStmt</data>
    </node>
    <node id = 'class_Bossa::BreakStmt'>
      <data key = 'label'>class_Bossa::BreakStmt</data>
    </node>
    <node id = 'class_Bossa::LocExpr'>
      <data key = 'label'>class_Bossa::LocExpr</data>
    </node>
    <node id = 'class_Bossa::MoveExpr'>
      <data key = 'label'>class_Bossa::MoveExpr</data>
    </node>
    <node id = 'class_Bossa::Select_MoveExpr'>
      <data key = 'label'>class_Bossa::Select_MoveExpr</data>
    </node>
    <node id = 'class_Bossa::SatateName_MoveExpr'>
      <data key = 'label'>class_Bossa::SatateName_MoveExpr</data>
    </node>
    <node id = 'class_Bossa::ID_MoveExpr'>
      <data key = 'label'>class_Bossa::ID_MoveExpr</data>
    </node>
    <node id = 'class_Bossa::IDSource_MoveExpr'>
      <data key = 'label'>class_Bossa::IDSource_MoveExpr</data>
    </node>
    <node id = 'class_Bossa::IDTarget_MoveExpr'>
      <data key = 'label'>class_Bossa::IDTarget_MoveExpr</data>
    </node>
    <node id = 'class_Bossa::ClassState'>
      <data key = 'label'>class_Bossa::ClassState</data>
    </node>
    <node id = 'class_Bossa::OnHandlerDef'>
      <data key = 'label'>class_Bossa::OnHandlerDef</data>
    </node>
    <node id = 'class_Bossa::EventName'>
      <data key = 'label'>class_Bossa::EventName</data>
    </node>
    <node id = 'class_Bossa::ComposantOfSwitchStmt'>
      <data key = 'label'>class_Bossa::ComposantOfSwitchStmt</data>
    </node>
    <node id = 'class_Bossa::ComposantOfInterFunc'>
      <data key = 'label'>class_Bossa::ComposantOfInterFunc</data>
    </node>
    <node id = 'class_Bossa::BossaTypeExpr'>
      <data key = 'label'>class_Bossa::BossaTypeExpr</data>
    </node>
    <node id = 'class_Bossa::QueueType'>
      <data key = 'label'>class_Bossa::QueueType</data>
    </node>
    <node id = 'class_Bossa::Normal_QueueType'>
      <data key = 'label'>class_Bossa::Normal_QueueType</data>
    </node>
    <node id = 'class_Bossa::Fifo_QueueType'>
      <data key = 'label'>class_Bossa::Fifo_QueueType</data>
    </node>
    <node id = 'class_Bossa::Lifo_QueueType'>
      <data key = 'label'>class_Bossa::Lifo_QueueType</data>
    </node>
    <node id = 'class_Bossa::Critop'>
      <data key = 'label'>class_Bossa::Critop</data>
    </node>
    <node id = 'class_Bossa::StateVisibility'>
      <data key = 'label'>class_Bossa::StateVisibility</data>
    </node>
    <node id = 'class_Bossa::ClassName'>
      <data key = 'label'>class_Bossa::ClassName</data>
    </node>
    <node id = 'class_Bossa::NonProcType'>
      <data key = 'label'>class_Bossa::NonProcType</data>
    </node>
    <node id = 'class_Bossa::Unop'>
      <data key = 'label'>class_Bossa::Unop</data>
    </node>
    <node id = 'class_Bossa::Binop'>
      <data key = 'label'>class_Bossa::Binop</data>
    </node>
    <node id = 'class_Bossa::AssignUnop'>
      <data key = 'label'>class_Bossa::AssignUnop</data>
    </node>
    <node id = 'class_Bossa::AssignBinop'>
      <data key = 'label'>class_Bossa::AssignBinop</data>
    </node>
    <node id = 'package_Bossa'>
      <data key = 'label'>package_Bossa</data>
    </node>
  </graph>
  <graph id = 'PrimitiveTypesGraph' edgedefault = 'undirected'>
    <node id = 'dataType_String'>
      <data key = 'label'>dataType_String</data>
    </node>
    <node id = 'dataType_Boolean'>
      <data key = 'label'>dataType_Boolean</data>
    </node>
    <node id = 'dataType_Integer'>
      <data key = 'label'>dataType_Integer</data>
    </node>
    <node id = 'package_PrimitiveTypes'>
      <data key = 'label'>package_PrimitiveTypes</data>
    </node>
  </graph>
</graphml>
