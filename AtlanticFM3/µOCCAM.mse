(
	(FM3.Package(id: 1) (name 'Perceptory') (classes
		(FM3.Class(id: 2) (name 'Process') (abstract true) (superclass(ref: Object)))
		(FM3.Class(id: 3) (name 'StopProcess') (superclass(ref: 2)))
		(FM3.Class(id: 4) (name 'SkipProcess') (superclass(ref: 2)))
		(FM3.Class(id: 5) (name 'Action') (abstract true) (superclass(ref: 2)))
		(FM3.Class(id: 6) (name 'Construction') (superclass(ref: 2)))
		(FM3.Class(id: 7) (name 'Instance') (superclass(ref: 2)) (attributes
			(FM3.Property(id: 8) (name 'name') (multivalued true) (type (ref: String)))
		))
		(FM3.Class(id: 9) (name 'Assignment') (superclass(ref: 5)) (attributes
			(FM3.Property(id: 10) (name 'variable') (multivalued true) (type (ref: 75)))
			(FM3.Property(id: 11) (name 'expression') (multivalued true) (type (ref: 83)))
		))
		(FM3.Class(id: 12) (name 'Input') (superclass(ref: 5)) (attributes
			(FM3.Property(id: 13) (name 'channel') (multivalued true) (type (ref: 77)))
			(FM3.Property(id: 14) (name 'variable') (multivalued true) (type (ref: 75)))
		))
		(FM3.Class(id: 15) (name 'Output') (superclass(ref: 5)) (attributes
			(FM3.Property(id: 16) (name 'channel') (multivalued true) (type (ref: 77)))
			(FM3.Property(id: 17) (name 'expression') (multivalued true) (type (ref: 83)))
		))
		(FM3.Class(id: 18) (name 'Sequence') (abstract true) (superclass(ref: 6)) (attributes
			(FM3.Property(id: 19) (name 'process') (multivalued true) (type (ref: 2)))
		))
		(FM3.Class(id: 20) (name 'NormalSequence') (superclass(ref: 18)))
		(FM3.Class(id: 21) (name 'ReplicatorSequence') (superclass(ref: 18)) (attributes
			(FM3.Property(id: 22) (name 'replicator') (multivalued true) (type (ref: 54)))
		))
		(FM3.Class(id: 23) (name 'Conditional') (abstract true) (superclass(ref: 6)) (attributes
			(FM3.Property(id: 24) (name 'choice') (multivalued true) (type (ref: 41)))
		))
		(FM3.Class(id: 25) (name 'NormalConditional') (superclass(ref: 23)))
		(FM3.Class(id: 26) (name 'ReplicatorConditional') (superclass(ref: 23)) (attributes
			(FM3.Property(id: 27) (name 'replicator') (multivalued true) (type (ref: 54)))
		))
		(FM3.Class(id: 28) (name 'Loop') (superclass(ref: 6)) (attributes
			(FM3.Property(id: 29) (name 'boolean') (multivalued true) (type (ref: 44)))
			(FM3.Property(id: 30) (name 'process') (multivalued true) (type (ref: 2)))
		))
		(FM3.Class(id: 31) (name 'Parallel') (abstract true) (superclass(ref: 6)) (attributes
			(FM3.Property(id: 32) (name 'process') (multivalued true) (type (ref: 2)))
		))
		(FM3.Class(id: 33) (name 'NormalParallel') (superclass(ref: 31)))
		(FM3.Class(id: 34) (name 'ReplicatorParallel') (superclass(ref: 31)) (attributes
			(FM3.Property(id: 35) (name 'replicator') (multivalued true) (type (ref: 54)))
		))
		(FM3.Class(id: 36) (name 'Alternation') (superclass(ref: 6)) (attributes
			(FM3.Property(id: 37) (name 'alternative') (multivalued true) (type (ref: 46)))
		))
		(FM3.Class(id: 38) (name 'NormalAlternation') (superclass(ref: 31)))
		(FM3.Class(id: 39) (name 'ReplicatorAlternation') (superclass(ref: 31)) (attributes
			(FM3.Property(id: 40) (name 'replicator') (multivalued true) (type (ref: 54)))
		))
		(FM3.Class(id: 41) (name 'Choice') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 42) (name 'boolean') (multivalued true) (type (ref: 44)))
			(FM3.Property(id: 43) (name 'process') (multivalued true) (type (ref: 2)))
		))
		(FM3.Class(id: 44) (name 'BooleanRef') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 45) (name 'expression') (multivalued true) (type (ref: 83)))
		))
		(FM3.Class(id: 46) (name 'Alternative') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 47) (name 'guard') (multivalued true) (type (ref: 49)))
			(FM3.Property(id: 48) (name 'process') (multivalued true) (type (ref: 2)))
		))
		(FM3.Class(id: 49) (name 'Guard') (abstract true) (superclass(ref: Object)) (attributes
			(FM3.Property(id: 50) (name 'input') (multivalued true) (type (ref: 12)))
		))
		(FM3.Class(id: 51) (name 'InputGuard') (superclass(ref: 49)))
		(FM3.Class(id: 52) (name 'BooleanGuard') (superclass(ref: 49)) (attributes
			(FM3.Property(id: 53) (name 'boolean') (multivalued true) (type (ref: 44)))
		))
		(FM3.Class(id: 54) (name 'Replicator') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 55) (name 'name') (multivalued true) (type (ref: String)))
			(FM3.Property(id: 56) (name 'base') (multivalued true) (type (ref: 58)))
			(FM3.Property(id: 57) (name 'count') (multivalued true) (type (ref: 60)))
		))
		(FM3.Class(id: 58) (name 'Base') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 59) (name 'expression') (multivalued true) (type (ref: 83)))
		))
		(FM3.Class(id: 60) (name 'Count') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 61) (name 'expression') (multivalued true) (type (ref: 83)))
		))
		(FM3.Class(id: 62) (name 'Type') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 63) (name 'primitiveType') (multivalued true) (type (ref: 65)))
			(FM3.Property(id: 64) (name 'expression') (multivalued true) (type (ref: 83)))
		))
		(FM3.Class(id: 65) (name 'PrimitiveType') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 66) (name 'isInt') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 67) (name 'isChan') (multivalued true) (type (ref: Boolean)))
		))
		(FM3.Class(id: 68) (name 'Literal') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 69) (name 'integer') (multivalued true) (type (ref: Number)))
		))
		(FM3.Class(id: 70) (name 'Element') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 71) (name 'name') (multivalued true) (type (ref: String)))
			(FM3.Property(id: 72) (name 'subscript') (multivalued true) (type (ref: 73)))
		))
		(FM3.Class(id: 73) (name 'Subscript') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 74) (name 'expression') (multivalued true) (type (ref: 83)))
		))
		(FM3.Class(id: 75) (name 'Variable') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 76) (name 'element') (multivalued true) (type (ref: 70)))
		))
		(FM3.Class(id: 77) (name 'Channel') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 78) (name 'element') (multivalued true) (type (ref: 70)))
		))
		(FM3.Class(id: 79) (name 'Operand') (abstract true) (superclass(ref: Object)))
		(FM3.Class(id: 80) (name 'VariableOPerand') (superclass(ref: 75)))
		(FM3.Class(id: 81) (name 'LiteralOperand') (superclass(ref: 68)))
		(FM3.Class(id: 82) (name 'ExpressionOperand') (superclass(ref: 83)))
		(FM3.Class(id: 83) (name 'Expression') (abstract true) (superclass(ref: Object)) (attributes
			(FM3.Property(id: 84) (name 'operand') (multivalued true) (type (ref: 79)))
		))
		(FM3.Class(id: 85) (name 'MonadicExpression') (superclass(ref: 83)) (attributes
			(FM3.Property(id: 86) (name 'monadicOperator') (multivalued true) (type (ref: 112)))
		))
		(FM3.Class(id: 87) (name 'DyadicExpression') (superclass(ref: 83)) (attributes
			(FM3.Property(id: 88) (name 'operandRight') (multivalued true) (type (ref: 79)))
			(FM3.Property(id: 89) (name 'dyadicOperator') (multivalued true) (type (ref: 115)))
		))
		(FM3.Class(id: 90) (name 'SimpleExpression') (superclass(ref: 83)))
		(FM3.Class(id: 91) (name 'Specification') (abstract true) (superclass(ref: 2)))
		(FM3.Class(id: 92) (name 'Declaration') (abstract true) (superclass(ref: 91)))
		(FM3.Class(id: 93) (name 'TypeDeclaration') (superclass(ref: 92)) (attributes
			(FM3.Property(id: 94) (name 'type') (multivalued true) (type (ref: 62)))
		))
		(FM3.Class(id: 95) (name 'IntDeclaration') (superclass(ref: 92)) (attributes
			(FM3.Property(id: 96) (name 'name') (multivalued true) (type (ref: String)))
			(FM3.Property(id: 97) (name 'expression') (multivalued true) (type (ref: 83)))
		))
		(FM3.Class(id: 98) (name 'ValDeclaration') (superclass(ref: 92)) (attributes
			(FM3.Property(id: 99) (name 'name') (multivalued true) (type (ref: String)))
			(FM3.Property(id: 100) (name 'expression') (multivalued true) (type (ref: 83)))
		))
		(FM3.Class(id: 101) (name 'Definition') (superclass(ref: 91)) (attributes
			(FM3.Property(id: 102) (name 'name') (multivalued true) (type (ref: String)))
			(FM3.Property(id: 103) (name 'procedureBody') (multivalued true) (type (ref: 107)))
		))
		(FM3.Class(id: 104) (name 'Formal') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 105) (name 'name') (multivalued true) (type (ref: String)))
			(FM3.Property(id: 106) (name 'primitiveType') (multivalued true) (type (ref: 65)))
		))
		(FM3.Class(id: 107) (name 'ProcedureBody') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 108) (name 'name') (multivalued true) (type (ref: String)))
			(FM3.Property(id: 109) (name 'process') (multivalued true) (type (ref: 2)))
		))
		(FM3.Class(id: 110) (name 'Actual') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 111) (name 'element') (multivalued true) (type (ref: 70)))
		))
		(FM3.Class(id: 112) (name 'MonadicOperator') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 113) (name 'minus') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 114) (name 'not') (multivalued true) (type (ref: Boolean)))
		))
		(FM3.Class(id: 115) (name 'DyadicOperator') (superclass(ref: Object)) (attributes
			(FM3.Property(id: 116) (name 'plus') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 117) (name 'minus') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 118) (name 'star') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 119) (name 'slash') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 120) (name 'or') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 121) (name 'inverseSlash') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 122) (name 'and') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 123) (name 'eq') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 124) (name 'ne') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 125) (name 'lt') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 126) (name 'gt') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 127) (name 'le') (multivalued true) (type (ref: Boolean)))
			(FM3.Property(id: 128) (name 'ge') (multivalued true) (type (ref: Boolean)))
		))
	))
)