<!-- How to configure this ant script:
	Run as->Ant Build...
		Set:
			- Base directory
			- Run in same JRE
			- Refresh

			- ANTLR jar (?)
			- ant contrib jar
-->
<project name="atlantUML" default="transformAll">

	<property name="sourcePath" value="../../New metamodels/km3/"/>
	<property name="targetPath" value="C:/Workspaces/MetamodelZoo_wkspace/New metamodels/UML2/"/>
	<property name="projectPath" value="" />

	<taskdef resource="net/sf/antcontrib/antlib.xml">
	</taskdef>
	
	<target name="transformAll" depends="loadModels">
		<!--<antcall target="transformOne" inheritall="true" inheritrefs="true">
			<param name="sample" value="../../org.eclipse.am3.zoos.atlantic/ATOM"/>
		</antcall>
		-->
		<!-- loop over all km3 models -->
		
		<for param="e">
		  <path>
		    <fileset dir="C:\Workspaces\MetamodelZoo_wkspace\New metamodels\km3" includes="*.km3"/>
		    
		  </path>
		  <sequential>
			<antcall target="condition" inheritall="true" inheritrefs="true">
				<param name="sample" value="@{e}"/>
			</antcall>
		  </sequential>
		</for>		
		
	</target>

	<target name="condition">
	  	<basename property="name" file="${sample}" suffix=".km3"/>
		<property name="sourceModel" value="${sourcePath}${name}.km3"/>
		<property name="targetModel" value="${targetPath}${name}.uml"/>
		
		<uptodate property="isUpToDate" srcfile="${sourceModel}" targetfile="${targetModel}"/>
		
	  	<if>
	  	 <not>
			 <equals arg1="${isUpToDate}" arg2="true" />
		 </not>
		 <then>
			<antcall target="transformOne" inheritall="true" inheritrefs="true">
				<param name="name" value="${name}"/>
				<param name="sourceModel" value="${sourceModel}"/>
				<param name="targetModel" value="${targetModel}"/>
			</antcall>
		 </then>
		</if>

	</target>
	
	<!-- parameters: sample -->
	<target name="transformOne">

		<echo message="Transforming ${name}"/>

		<!-- Inject KM3 model -->
		<echo message="Injecting ${sourceModel}" />
		<am3.loadModel modelHandler="EMF" name="${sample}" metamodel="KM3" path="${sourceModel}.xmi">
			<!--injector name="ebnf">
				<param name="name" value="KM3"/>
				<classpath>
					<pathelement location="/org.eclipse.am3.zoos.atlantUML/build/KM3-parser.jar"/>
				</classpath>
			</injector-->
		</am3.loadModel>		
		
		
		<!-- Transform KM3 metamodel into UML model -->
		<echo message="Transforming ${name}.km3 into ${name}.uml" />
		<am3.atl path="/org.eclipse.am3.zoos.atlantUML/build/KM32UML.asm" vm="EMF-specific VM">
			<!-- sqlModel : SQLDDL from km3Model : KM3; -->
			<inModel name="IN" model="${sample}"/>
			<inModel name="KM3" model="KM3"/>
			<inModel name="UML" model="UML"/>
			<outModel name="OUT" model="target" metamodel="UML" path="foo.uml"/>
		</am3.atl>
		
		<echo message="Saving ${targetModel}" />
		<!-- Save target model -->
		<am3.saveModel model="target" path="${targetModel}" />

	</target>

	<target name="loadModels">
		<!-- Load KM3 metamodel -->
		<am3.loadModel modelHandler="EMF" name="KM3" metamodel="MOF" nsUri="http://www.eclipse.org/gmt/2005/KM3" />
		<!-- Load UML metamodel-->
		<am3.loadModel modelHandler="EMF" name="UML" metamodel="MOF" nsUri="http://www.eclipse.org/uml2/2.1.0/UML" />
	</target>	
</project>
