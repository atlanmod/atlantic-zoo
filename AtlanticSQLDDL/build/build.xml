<!-- How to configure this ant script:
	Run as->Ant Build...
		Set:
			- Base directory
			- Run in same JRE
			- Refresh

			- ANTLR jar (?)
			- ant contrib jar
-->
<project name="atlanticSQLDDL" default="transformAll">

	<property name="sourcePath" value="../../org.eclipse.am3.zoos.atlantic/"/>
	<property name="targetPath" value="../../org.eclipse.am3.zoos.atlanticSQLDDL/"/>
	<property name="projectPath" value="" />

	<taskdef resource="net/sf/antcontrib/antlib.xml">
	</taskdef>
	
	<target name="transformAll" depends="loadModels">
		<!--<antcall target="transformOne" inheritall="true" inheritrefs="true">
			<param name="sample" value="../../org.eclipse.am3.zoos.atlantic/ATOM"/>
		</antcall>
		-->
		<!-- loop over all km3 models -->
		
		<for param="e">
		  <path>
		    <fileset dir="${projectPath}../../org.eclipse.am3.zoos.atlantic" includes="*.km3"/>
		    
		  </path>
		  <sequential>
			<antcall target="condition" inheritall="true" inheritrefs="true">
				<param name="sample" value="@{e}"/>
			</antcall>
		  </sequential>
		</for>		
		
	</target>

	<target name="condition">
	  	<basename property="name" file="${sample}" suffix=".km3"/>
		<property name="sourceModel" value="${sourcePath}${name}.km3"/>
		<property name="targetModel" value="${targetPath}${name}.sql"/>
		
		<uptodate property="isUpToDate" srcfile="${sourceModel}" targetfile="${targetModel}"/>
		
	  	<if>
	  	 <not>
			 <equals arg1="${isUpToDate}" arg2="true" />
		 </not>
		 <then>
			<antcall target="transformOne" inheritall="true" inheritrefs="true">
				<param name="name" value="${name}"/>
				<param name="sourceModel" value="${sourceModel}"/>
				<param name="targetModel" value="${targetModel}"/>
			</antcall>
		 </then>
		</if>

	</target>
	
	<!-- parameters: sample -->
	<target name="transformOne">

		<echo message="Transforming ${name}"/>

		<!-- Inject KM3 model -->
		<am3.loadModel modelHandler="EMF" name="${sample}" metamodel="KM3" path="${sourceModel}">
			<injector name="ebnf">
				<param name="name" value="KM3"/>
			</injector>
		</am3.loadModel>		
		
		<!-- Transform KM3 metamodel into SQLDDL model -->
		<am3.atl path="${targetPath}build/AtlKM32SQL.asm">
			<!-- sqlModel : SQLDDL from km3Model : KM3; -->
			<inModel name="km3Model" model="${sample}"/>
			<inModel name="KM3" model="KM3"/>
			<inModel name="SQLDDL" model="SQLDDL"/>
			<outModel name="sqlModel" model="target" metamodel="SQLDDL"/>
		</am3.atl>

		<!-- Extract and save SQLDDL model -->
		<am3.saveModel model="target" path="${targetModel}">
			<extractor name="ebnf">
				<param name="format" value="SQLDDL-TCS.ecore"/> 
				<param name="indentString" value="&#9;"/> 
				<param name="kwCheckIgnoreCase" value="true"/> 
			</extractor>
		</am3.saveModel>

	</target>

	<target name="loadModels">
		<!-- Load KM3 metamodel -->
		<am3.loadModel modelHandler="EMF" name="KM3" metamodel="MOF" nsUri="http://www.eclipse.org/gmt/2005/KM3" />
		
		<!-- Load SQLDDL metamodel-->
		<am3.loadModel modelHandler="EMF" name="SQLDDL" metamodel="MOF" path="${targetPath}build/SQLDDL.ecore" />
		
		<!-- Load TCS metamodel-->
		<am3.loadModel modelHandler="EMF" name="TCS" metamodel="MOF" path="${targetPath}build/TCS.ecore" />
		
		<!-- Load SQLDDL-TCS model-->
		<am3.loadModel modelHandler="EMF" name="SQLDDL-TCS.ecore" metamodel="TCS" path="${targetPath}build/SQLDDL-TCS.ecore">
		</am3.loadModel>
		

	</target>	
</project>
